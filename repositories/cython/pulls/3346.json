{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3346/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3346/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3346"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3346"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3346/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3346"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "COLLABORATOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1043,
            "forks_count": 1043,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 849,
            "open_issues_count": 849,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2020-06-28T09:31:10Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 59776,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 5282,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2020-06-28T09:31:14Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 5282,
            "watchers_count": 5282
        },
        "sha": "a0e10cf604e62b6a08ba26c87e76d735a58988af",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "_See also https://github.com/cython/cython/pull/3377 and https://github.com/cython/cython/pull/3375 which add support code useful to this PR, but which might be sensible to review independently (and first)_\r\n\r\nThis turns `*args` and/or `**kwds` into a special fastcalltuple\r\nor fastcalldict type, which may be possible to use more\r\nefficiently (but are more limited in their usage).\r\n\r\nThey're enabled by an `@cython.fastcall_args(\"*\"/\"**\"/\"both\")`\r\ndecorator on the relevant function.\r\n\r\nCurrently `*a` is generally a performance win. `**` is\r\nless convincing, but often better. Iterating over `kwds.items()`\r\nis a notable regression.\r\n\r\n~The main missing optimization at the moment would be being able\r\nto to use these types to call into other functions efficiently.~",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r376765664"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/376765664"
                }
            },
            "author_association": "MEMBER",
            "body": "Interesting.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-02-09T08:45:40Z",
            "diff_hunk": "@@ -2157,7 +2157,7 @@ def put_xdecref_set(self, cname, rhs_cname):\n \n     def put_var_decref(self, entry):\n         if entry.type.is_pyobject:\n-            self.putln(\"__Pyx_XDECREF(%s);\" % self.entry_as_pyobject(entry))\n+            self.putln(\"__Pyx_DECREF(%s);\" % self.entry_as_pyobject(entry))",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r376765664",
            "id": 376765664,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NTY2NA==",
            "original_commit_id": "1eba73b286e1da130cdea8018b5fa7bad15792e9",
            "original_line": 2160,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 355592046,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/376765664",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r376766124"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/376766124"
                }
            },
            "author_association": "MEMBER",
            "body": "Looks like you already found `//@requires: …` – what was the problem here?",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-02-09T08:53:11Z",
            "diff_hunk": "@@ -461,3 +461,583 @@ static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyO\n     return NULL;  // not found (no exception set)\n }\n #endif\n+\n+/////////////// fastcall_tuple.proto ///////////////\n+// A struct which can be created cheaply without needing to construct a Python object\n+\n+#if CYTHON_COMPILING_IN_CPYTHON\n+typedef struct {\n+    PyObject *const *args;\n+    Py_ssize_t nargs;\n+} __Pyx_FastcallTuple_obj;\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_New(PyObject *const *args, Py_ssize_t nargs);\n+#else\n+typedef struct {\n+    PyObject* referenced_tuple;  // not owned by this struct\n+    // The two indices are relative to \"referenced_tuple\"\n+    Py_ssize_t start_idx;\n+    Py_ssize_t end_idx;\n+} __Pyx_FastcallTuple_obj;\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_New(PyObject *rt, Py_ssize_t start_idx, Py_ssize_t end_idx);\n+#endif\n+\n+static CYTHON_INLINE Py_ssize_t __Pyx_FastcallTuple_Len(__Pyx_FastcallTuple_obj o);\n+static CYTHON_INLINE PyObject *__Pyx_FastcallTuple_ToTuple(__Pyx_FastcallTuple_obj o);\n+\n+#if CYTHON_METH_FASTCALL\n+    static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_FASTCALL_struct(PyObject *const *args, Py_ssize_t start, Py_ssize_t stop);\n+#else\n+    static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_FASTCALL_struct(PyObject *args, Py_ssize_t start, Py_ssize_t stop);\n+#endif\n+\n+// no type-checking - used for conversion in function call\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_FromTuple(PyObject* o);\n+\n+/////////////// fastcall_tuple ///////////////\n+//@requires: ObjectHandling.c::PyVectorcallNargs\n+\n+#if CYTHON_COMPILING_IN_CPYTHON\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_New(PyObject *const *args, Py_ssize_t nargs) {\n+    __Pyx_FastcallTuple_obj out = { args, nargs };\n+    return out;\n+}\n+#else\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_New(PyObject *rt, Py_ssize_t start_idx, Py_ssize_t end_idx) {\n+    __Pyx_FastcallTuple_obj out = { rt, start_idx, end_idx };\n+    return out;\n+}\n+#endif\n+\n+static CYTHON_INLINE Py_ssize_t __Pyx_FastcallTuple_Len(__Pyx_FastcallTuple_obj o) {\n+#if CYTHON_COMPILING_IN_CPYTHON\n+    return __Pyx_PyVectorcall_NARGS(o.nargs);\n+#else\n+    return o.end_idx - o.start_idx;\n+#endif\n+}\n+\n+static CYTHON_INLINE PyObject *__Pyx_FastcallTuple_ToTuple(__Pyx_FastcallTuple_obj o) {\n+#if CYTHON_COMPILING_IN_CPYTHON\n+    return __Pyx_PyTuple_FromArray(o.args, __Pyx_FastcallTuple_Len(o));\n+#else\n+    return PySequence_GetSlice(o.referenced_tuple, o.start_idx, os.stop_idx);\n+#endif\n+}\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_FASTCALL_struct(PyObject *const *args, Py_ssize_t start, Py_ssize_t stop) {\n+    Py_ssize_t nargs = (stop - start);\n+#if CYTHON_VECTORCALL\n+    if (start > 0) {\n+        nargs |= PY_VECTORCALL_ARGUMENTS_OFFSET; // we know there's at least one space in front\n+    }\n+#endif\n+    return __Pyx_FastcallTuple_New(args+start, nargs);\n+}\n+#else // CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_FASTCALL_struct(PyObject *args, Py_ssize_t start, Py_ssize_t stop) {\n+    __Pyx_FastcallTuple_obj out = __Pyx_FastcallTuple_FromTuple(args);\n+#if CYTHON_COMPILING_IN_CPYTHON\n+    out.args += start;\n+    out.nargs = stop-start;\n+#else\n+    out.start_idx = start;\n+    out.end_idx = stop;\n+#endif\n+    return out;\n+    }\n+#endif\n+\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_FromTuple(PyObject* o) {\n+#if !CYTHON_COMPILING_IN_CPYTHON\n+    return __Pyx_FastcallTuple_New(o, 0, PyTuple_Size(0));\n+#else\n+    return __Pyx_FastcallTuple_New(&PyTuple_GET_ITEM(o,0), PyTuple_GET_SIZE(o));\n+#endif\n+}\n+\n+/////////////// fastcall_tuple_indexing.proto ///////////////\n+//@requires: fastcall_tuple\n+\n+// based on ObjectHandling.c\n+#define __Pyx_GetItemInt_FastcallTuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \\\n+    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \\\n+    __Pyx_GetItemInt_FastcallTuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) : \\\n+    (PyErr_SetString(PyExc_IndexError, \"tuple index out of range\"), (PyObject*)NULL))\n+static CYTHON_INLINE PyObject *__Pyx_GetItemInt_FastcallTuple_Fast(__Pyx_FastcallTuple_obj o, Py_ssize_t i,\n+                                                              int wraparound, int boundscheck);\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_SliceIndex(__Pyx_FastcallTuple_obj in,\n+                                                            Py_ssize_t start, Py_ssize_t stop, int wraparound);\n+\n+/////////////// fastcall_tuple_indexing ///////////////\n+\n+static CYTHON_INLINE PyObject *__Pyx_GetItemInt_FastcallTuple_Fast(__Pyx_FastcallTuple_obj o, Py_ssize_t i,\n+                                                              int wraparound, int boundscheck) {\n+    Py_ssize_t len = __Pyx_FastcallTuple_Len(o);\n+    if (wraparound) {\n+        if (i < 0) {\n+            i = len + i;\n+        }\n+    }\n+    if (boundscheck) {\n+        if ((i < 0) || (i >= len)) {\n+            PyErr_SetString(PyExc_IndexError, \"tuple index out of range\");\n+            return NULL;\n+        }\n+    }\n+\n+#if CYTHON_COMPILING_IN_CPYTHON\n+    PyObject* result = o.args[i];\n+    Py_INCREF(result);\n+    return result;\n+#else\n+    Py_ssize_t i_actual = i+o.start_idx;\n+    return PyTuple_GetItem(o.referenced_tuple, i_actual); // TODO ideally use __Pyx_GetItemInt_Tuple_Fast\n+                                                   // but need to work out how to include it reliably",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r376766124",
            "id": 376766124,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NjEyNA==",
            "original_commit_id": "1eba73b286e1da130cdea8018b5fa7bad15792e9",
            "original_line": 596,
            "original_position": 136,
            "original_start_line": 595,
            "path": "Cython/Utility/FunctionArguments.c",
            "position": null,
            "pull_request_review_id": 355592046,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/376766124",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r376766473"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/376766473"
                }
            },
            "author_association": "MEMBER",
            "body": "Cython's code generation has always used `%` formatting. If we ever switch to something else, it's probably going to be f-strings, once we drop support for (running Cython in) Py3.5 and earlier. Please don't add `\"\".format()` to the Ways To Do It.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-02-09T08:58:48Z",
            "diff_hunk": "@@ -4118,6 +4127,141 @@ def same_as_resolved_type(self, other_type):\n     def error_condition(self, result_code):\n         return \"dummy\"\n \n+class FastcallTupleType(PyrexType):\n+    \"\"\"Represents an optimized tuple-like type for \"*args\"\n+\n+    Eliminates the need for an actual tuple to be created, but\n+    only supports the limited range of operations that can\n+    be carried out efficiently\n+    \"\"\"\n+\n+    is_fastcall_tuple = 1\n+    declaration_value = \"{}\"\n+\n+    def __init__(self):\n+        super(FastcallTupleType, self).__init__()\n+        self.coercion_count = 0\n+\n+    def create_declaration_utility_code(self, env):\n+        env.use_utility_code(UtilityCode.load_cached('fastcall_tuple', 'FunctionArguments.c'))\n+\n+    def declaration_code(self, entity_code,\n+            for_display = 0, dll_linkage = None, pyrex = 0):\n+        return \"__Pyx_FastcallTuple_obj {0}\".format(entity_code)\n+\n+    def create_to_py_utility_code(self, env):\n+        # code is in declaration code\n+        return True\n+\n+    def create_from_py_utility_code(self, env):\n+        return False\n+\n+    def to_py_call_code(self, source_code, result_code, result_type, to_py_function=None):\n+        # TODO maybe something cleverer with result_type\n+        from .Builtin import tuple_type\n+        if result_type is not tuple_type:\n+            # this is an explicit conversion so don't generate warnings\n+            self.coercion_count += 1\n+        return \"{0} = __Pyx_FastcallTuple_ToTuple({1})\".format(result_code, source_code)\n+\n+    def literal_code(self, value):\n+        assert value in (\"0\", \"{}\")  # only know how to handle empty literals\n+        return self.declaration_value\n+\n+    # different instances are created just to hold a different \"coercion_count\" for each\n+    # function. However, it's useful for looking up the type if they compare equal\n+    # (apart from the count there's no useful difference between instances)\n+    def __hash__(self):\n+        return hash(type(self))\n+    def __eq__(self, rhs):\n+        return type(self) == type(rhs)\n+\n+class FastcallDictType(PyrexType):\n+    \"\"\"Represents an optimized dict-like type for \"**kwds\"\n+\n+    Eliminates the need for an actual dict to be created,\n+    (in some cases) but\n+    only supports the limited range of operations that can\n+    be carried out efficiently\n+    \"\"\"\n+\n+    is_fastcall_dict = 1\n+    #is_builtin_type = 1\n+    has_attributes = 1\n+    name = \"fastcalldict\"\n+    exception_check = None\n+\n+    declaration_value = \"__Pyx_FastcallDict_New()\"\n+\n+    # set temporarily when generating the definition in the\n+    # function wrapper to create a value and not a pointer\n+    as_value = False\n+\n+    @classmethod\n+    def _get_methods(self):\n+        from .Builtin import BuiltinMethod\n+        uc = UtilityCode.load_cached(\"fastcall_dict_iter\", \"FunctionArguments.c\")\n+        return [\n+            BuiltinMethod(\"keys\", \"T\", \"O\", \"__Pyx_FastcallDict_Keys\",\n+                utility_code=uc),\n+            BuiltinMethod(\"values\", \"T\", \"O\", \"__Pyx_FastcallDict_Values\",\n+                utility_code=uc),\n+            BuiltinMethod(\"items\", \"T\", \"O\", \"__Pyx_FastcallDict_Items\",\n+                utility_code=uc),\n+        ]\n+\n+    def __init__(self):\n+        from .Symtab import CClassScope\n+        super(FastcallDictType, self).__init__()\n+        self.scope = CClassScope(\"fastcalldicttype\", None, \"extern\")\n+        self.scope.parent_type = self\n+        self.scope.directives = {}\n+        self.coercion_count = 0\n+\n+        for m in self._get_methods():\n+            m.declare_in_type(self)\n+\n+    def attributes_known(self):\n+        return True\n+\n+    def create_declaration_utility_code(self, env):\n+        env.use_utility_code(UtilityCode.load_cached('fastcall_dict', 'FunctionArguments.c'))\n+\n+    def declaration_code(self, entity_code,\n+            for_display = 0, dll_linkage = None, pyrex = 0):\n+        if not self.as_value:\n+            return \"__Pyx_FastcallDict_obj* {0}\".format(entity_code)",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r376766473",
            "id": 376766473,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NjQ3Mw==",
            "original_commit_id": "1eba73b286e1da130cdea8018b5fa7bad15792e9",
            "original_line": 4233,
            "original_position": 137,
            "original_start_line": null,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": null,
            "pull_request_review_id": 355592046,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/376766473",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r376767024"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/376767024"
                }
            },
            "author_association": "MEMBER",
            "body": "This can fail and needs error handling.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-02-09T09:07:43Z",
            "diff_hunk": "@@ -754,6 +753,14 @@ static CYTHON_INLINE void __Pyx_copy_object_array(PyObject *const *CYTHON_RESTRI\n         Py_INCREF(v);\n     }\n }\n+#else\n+static CYTHON_INLINE void __Pyx_fill_sequence_from_array(PyObject *const *src, PyObject* dest, Py_ssize_t length) {\n+    Py_ssize_t i;\n+    for (i = 0; i < length; i++) {\n+        PySequence_SetItem(dest, i, src[i]);",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r376767024",
            "id": 376767024,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2NzAyNA==",
            "original_commit_id": "1eba73b286e1da130cdea8018b5fa7bad15792e9",
            "original_line": 760,
            "original_position": 20,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 355592046,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/376767024",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r376769616"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/376769616"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "It's a \"tempita\" requires - requiring it from here doesn't do the template substitution so the C code tries to define `__Pyx_GetItemInt_{{ type }}_Fast` in. Maybe this is something I should try to fix (but probably separately)",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-02-09T09:50:26Z",
            "diff_hunk": "@@ -461,3 +461,583 @@ static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyO\n     return NULL;  // not found (no exception set)\n }\n #endif\n+\n+/////////////// fastcall_tuple.proto ///////////////\n+// A struct which can be created cheaply without needing to construct a Python object\n+\n+#if CYTHON_COMPILING_IN_CPYTHON\n+typedef struct {\n+    PyObject *const *args;\n+    Py_ssize_t nargs;\n+} __Pyx_FastcallTuple_obj;\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_New(PyObject *const *args, Py_ssize_t nargs);\n+#else\n+typedef struct {\n+    PyObject* referenced_tuple;  // not owned by this struct\n+    // The two indices are relative to \"referenced_tuple\"\n+    Py_ssize_t start_idx;\n+    Py_ssize_t end_idx;\n+} __Pyx_FastcallTuple_obj;\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_New(PyObject *rt, Py_ssize_t start_idx, Py_ssize_t end_idx);\n+#endif\n+\n+static CYTHON_INLINE Py_ssize_t __Pyx_FastcallTuple_Len(__Pyx_FastcallTuple_obj o);\n+static CYTHON_INLINE PyObject *__Pyx_FastcallTuple_ToTuple(__Pyx_FastcallTuple_obj o);\n+\n+#if CYTHON_METH_FASTCALL\n+    static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_FASTCALL_struct(PyObject *const *args, Py_ssize_t start, Py_ssize_t stop);\n+#else\n+    static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_FASTCALL_struct(PyObject *args, Py_ssize_t start, Py_ssize_t stop);\n+#endif\n+\n+// no type-checking - used for conversion in function call\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_FromTuple(PyObject* o);\n+\n+/////////////// fastcall_tuple ///////////////\n+//@requires: ObjectHandling.c::PyVectorcallNargs\n+\n+#if CYTHON_COMPILING_IN_CPYTHON\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_New(PyObject *const *args, Py_ssize_t nargs) {\n+    __Pyx_FastcallTuple_obj out = { args, nargs };\n+    return out;\n+}\n+#else\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_New(PyObject *rt, Py_ssize_t start_idx, Py_ssize_t end_idx) {\n+    __Pyx_FastcallTuple_obj out = { rt, start_idx, end_idx };\n+    return out;\n+}\n+#endif\n+\n+static CYTHON_INLINE Py_ssize_t __Pyx_FastcallTuple_Len(__Pyx_FastcallTuple_obj o) {\n+#if CYTHON_COMPILING_IN_CPYTHON\n+    return __Pyx_PyVectorcall_NARGS(o.nargs);\n+#else\n+    return o.end_idx - o.start_idx;\n+#endif\n+}\n+\n+static CYTHON_INLINE PyObject *__Pyx_FastcallTuple_ToTuple(__Pyx_FastcallTuple_obj o) {\n+#if CYTHON_COMPILING_IN_CPYTHON\n+    return __Pyx_PyTuple_FromArray(o.args, __Pyx_FastcallTuple_Len(o));\n+#else\n+    return PySequence_GetSlice(o.referenced_tuple, o.start_idx, os.stop_idx);\n+#endif\n+}\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_FASTCALL_struct(PyObject *const *args, Py_ssize_t start, Py_ssize_t stop) {\n+    Py_ssize_t nargs = (stop - start);\n+#if CYTHON_VECTORCALL\n+    if (start > 0) {\n+        nargs |= PY_VECTORCALL_ARGUMENTS_OFFSET; // we know there's at least one space in front\n+    }\n+#endif\n+    return __Pyx_FastcallTuple_New(args+start, nargs);\n+}\n+#else // CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_FASTCALL_struct(PyObject *args, Py_ssize_t start, Py_ssize_t stop) {\n+    __Pyx_FastcallTuple_obj out = __Pyx_FastcallTuple_FromTuple(args);\n+#if CYTHON_COMPILING_IN_CPYTHON\n+    out.args += start;\n+    out.nargs = stop-start;\n+#else\n+    out.start_idx = start;\n+    out.end_idx = stop;\n+#endif\n+    return out;\n+    }\n+#endif\n+\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_FromTuple(PyObject* o) {\n+#if !CYTHON_COMPILING_IN_CPYTHON\n+    return __Pyx_FastcallTuple_New(o, 0, PyTuple_Size(0));\n+#else\n+    return __Pyx_FastcallTuple_New(&PyTuple_GET_ITEM(o,0), PyTuple_GET_SIZE(o));\n+#endif\n+}\n+\n+/////////////// fastcall_tuple_indexing.proto ///////////////\n+//@requires: fastcall_tuple\n+\n+// based on ObjectHandling.c\n+#define __Pyx_GetItemInt_FastcallTuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \\\n+    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \\\n+    __Pyx_GetItemInt_FastcallTuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) : \\\n+    (PyErr_SetString(PyExc_IndexError, \"tuple index out of range\"), (PyObject*)NULL))\n+static CYTHON_INLINE PyObject *__Pyx_GetItemInt_FastcallTuple_Fast(__Pyx_FastcallTuple_obj o, Py_ssize_t i,\n+                                                              int wraparound, int boundscheck);\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_SliceIndex(__Pyx_FastcallTuple_obj in,\n+                                                            Py_ssize_t start, Py_ssize_t stop, int wraparound);\n+\n+/////////////// fastcall_tuple_indexing ///////////////\n+\n+static CYTHON_INLINE PyObject *__Pyx_GetItemInt_FastcallTuple_Fast(__Pyx_FastcallTuple_obj o, Py_ssize_t i,\n+                                                              int wraparound, int boundscheck) {\n+    Py_ssize_t len = __Pyx_FastcallTuple_Len(o);\n+    if (wraparound) {\n+        if (i < 0) {\n+            i = len + i;\n+        }\n+    }\n+    if (boundscheck) {\n+        if ((i < 0) || (i >= len)) {\n+            PyErr_SetString(PyExc_IndexError, \"tuple index out of range\");\n+            return NULL;\n+        }\n+    }\n+\n+#if CYTHON_COMPILING_IN_CPYTHON\n+    PyObject* result = o.args[i];\n+    Py_INCREF(result);\n+    return result;\n+#else\n+    Py_ssize_t i_actual = i+o.start_idx;\n+    return PyTuple_GetItem(o.referenced_tuple, i_actual); // TODO ideally use __Pyx_GetItemInt_Tuple_Fast\n+                                                   // but need to work out how to include it reliably",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r376769616",
            "id": 376769616,
            "in_reply_to_id": 376766124,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2OTYxNg==",
            "original_commit_id": "1eba73b286e1da130cdea8018b5fa7bad15792e9",
            "original_line": 596,
            "original_position": 136,
            "original_start_line": 595,
            "path": "Cython/Utility/FunctionArguments.c",
            "position": null,
            "pull_request_review_id": 355595249,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/376769616",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r376769753"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/376769753"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "This wasn't completely related to the change (and maybe I should take it out into a separate small pull request)... Given that `put_var_xdecref` also exists, it makes sense to me that `put_var_decref` should do actually do what it says. It did require me to replace `put_var_decref` in a couple of other places.\r\n\r\nI think it makes sense, but likely not as part of this PR.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-02-09T09:52:47Z",
            "diff_hunk": "@@ -2157,7 +2157,7 @@ def put_xdecref_set(self, cname, rhs_cname):\n \n     def put_var_decref(self, entry):\n         if entry.type.is_pyobject:\n-            self.putln(\"__Pyx_XDECREF(%s);\" % self.entry_as_pyobject(entry))\n+            self.putln(\"__Pyx_DECREF(%s);\" % self.entry_as_pyobject(entry))",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r376769753",
            "id": 376769753,
            "in_reply_to_id": 376765664,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2OTc1Mw==",
            "original_commit_id": "1eba73b286e1da130cdea8018b5fa7bad15792e9",
            "original_line": 2160,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 355595352,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/376769753",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r382097536"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/382097536"
                }
            },
            "author_association": "MEMBER",
            "body": "Careful. I'd rather not let `Code.py` know about types or expressions. (I know there's a bit of code in there using types already, but that's not ideal.)\r\n\r\nRather, I think an `ExprNode` can know how to generate a giveref/gotref/etc. for itself given a `code` generator object, i.e. `def generate_gotref(self, code): …` etc.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-02-20T16:04:29Z",
            "diff_hunk": "@@ -2060,131 +2062,136 @@ def entry_as_pyobject(self, entry):\n         type = entry.type\n         if (not entry.is_self_arg and not entry.type.is_complete()\n             or entry.type.is_extension_type):\n-            return \"(PyObject *)\" + entry.cname\n+            return \"(PyObject *)\" + entry.cname # FIXME need to implement this\n         else:\n             return entry.cname\n \n     def as_pyobject(self, cname, type):\n         from .PyrexTypes import py_object_type, typecast\n         return typecast(py_object_type, type, cname)\n \n-    def put_gotref(self, cname):\n-        self.putln(\"__Pyx_GOTREF(%s);\" % cname)\n+    def put_gotref(self, cname, type):\n+        self.putln(type.generate_gotref(cname))\n+\n+    def put_exprnode_gotref(self, node):\n+        if node.is_temp and node.type.is_pyobject:\n+            # temp py_objects are always just py_object_type\n+            # not an special type\n+            from .PyrexTypes import py_object_type as type",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r382097536",
            "id": 382097536,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA5NzUzNg==",
            "original_commit_id": "a665f442c3ae2dffa08c70e31f66b76952e7d4e4",
            "original_line": 2080,
            "original_position": 31,
            "original_start_line": 2076,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 362028323,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/382097536",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r382099252"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/382099252"
                }
            },
            "author_association": "MEMBER",
            "body": "To clarify: something like `type.do_something()` is fine, a typecast is limit, processing nodes is way over the line. Nodes use a code writer, not the other way round.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-02-20T16:07:14Z",
            "diff_hunk": "@@ -2060,131 +2062,136 @@ def entry_as_pyobject(self, entry):\n         type = entry.type\n         if (not entry.is_self_arg and not entry.type.is_complete()\n             or entry.type.is_extension_type):\n-            return \"(PyObject *)\" + entry.cname\n+            return \"(PyObject *)\" + entry.cname # FIXME need to implement this\n         else:\n             return entry.cname\n \n     def as_pyobject(self, cname, type):\n         from .PyrexTypes import py_object_type, typecast\n         return typecast(py_object_type, type, cname)\n \n-    def put_gotref(self, cname):\n-        self.putln(\"__Pyx_GOTREF(%s);\" % cname)\n+    def put_gotref(self, cname, type):\n+        self.putln(type.generate_gotref(cname))\n+\n+    def put_exprnode_gotref(self, node):\n+        if node.is_temp and node.type.is_pyobject:\n+            # temp py_objects are always just py_object_type\n+            # not an special type\n+            from .PyrexTypes import py_object_type as type",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r382099252",
            "id": 382099252,
            "in_reply_to_id": 382097536,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA5OTI1Mg==",
            "original_commit_id": "a665f442c3ae2dffa08c70e31f66b76952e7d4e4",
            "original_line": 2080,
            "original_position": 31,
            "original_start_line": 2076,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 362030569,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/382099252",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r382102034"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/382102034"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "Yes, that does make more sense.\r\n\r\nI'm keeping a separate branch with the reference counting changes which I'll put in it's own pull request when this+it is complete.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-02-20T16:11:53Z",
            "diff_hunk": "@@ -2060,131 +2062,136 @@ def entry_as_pyobject(self, entry):\n         type = entry.type\n         if (not entry.is_self_arg and not entry.type.is_complete()\n             or entry.type.is_extension_type):\n-            return \"(PyObject *)\" + entry.cname\n+            return \"(PyObject *)\" + entry.cname # FIXME need to implement this\n         else:\n             return entry.cname\n \n     def as_pyobject(self, cname, type):\n         from .PyrexTypes import py_object_type, typecast\n         return typecast(py_object_type, type, cname)\n \n-    def put_gotref(self, cname):\n-        self.putln(\"__Pyx_GOTREF(%s);\" % cname)\n+    def put_gotref(self, cname, type):\n+        self.putln(type.generate_gotref(cname))\n+\n+    def put_exprnode_gotref(self, node):\n+        if node.is_temp and node.type.is_pyobject:\n+            # temp py_objects are always just py_object_type\n+            # not an special type\n+            from .PyrexTypes import py_object_type as type",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r382102034",
            "id": 382102034,
            "in_reply_to_id": 382097536,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEwMjAzNA==",
            "original_commit_id": "a665f442c3ae2dffa08c70e31f66b76952e7d4e4",
            "original_line": 2080,
            "original_position": 31,
            "original_start_line": 2076,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 362034325,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/382102034",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r382102828"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/382102828"
                }
            },
            "author_association": "MEMBER",
            "body": "Yeah, you probably just noticed here that `//` comments only get discarded at the beginning of the line, not in arbitrary later places (and `/* … */` only if it's within one line). That's (half) intentional. Most comments should normally get discarded, but a few are intended to stay in.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-02-20T16:13:07Z",
            "diff_hunk": "@@ -612,15 +624,15 @@ static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_SliceIndex(__Py\n     Py_ssize_t out_len = stop - start;\n     if (out_len < 0) out_len = 0;\n \n-#if CYTHON_COMPILING_IN_CPYTHON\n+#if CYTHON_METH_FASTCALL\n #if CYTHON_VECTORCALL\n     if ((start > 0) || (in.nargs & PY_VECTORCALL_ARGUMENTS_OFFSET)) {\n         out_len |= PY_VECTORCALL_ARGUMENTS_OFFSET;\n     }\n-#endif // CYTHON_VECTORCALL\n+#endif /* CYTHON_VECTORCALL */",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r382102828",
            "id": 382102828,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEwMjgyOA==",
            "original_commit_id": "a665f442c3ae2dffa08c70e31f66b76952e7d4e4",
            "original_line": 632,
            "original_position": 167,
            "original_start_line": 620,
            "path": "Cython/Utility/FunctionArguments.c",
            "position": null,
            "pull_request_review_id": 362035378,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/382102828",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399249898"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399249898"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            # These can always be coerced to a PyObject as a fallback option.\r\n            # It may not be efficient but they're only intended to cover a\r\n            # limited number of cases efficiently.\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:06:58Z",
            "diff_hunk": "@@ -992,6 +991,13 @@ def coerce_to(self, dst_type, env):\n               and src_type != dst_type\n               and dst_type.assignable_from(src_type)):\n             src = CoerceToComplexNode(src, dst_type, env)\n+        elif (src.type.is_fastcall_type\n+                and src_type != dst_type):\n+            # These can always be coerced to a PyObject as a fallback option\n+            # It may not be efficient but they're only intended to cover a\n+            # limited number of cases efficiently",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399249898",
            "id": 399249898,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI0OTg5OA==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 998,
            "original_position": 25,
            "original_start_line": 996,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 382838765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399249898",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399250855"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399250855"
                }
            },
            "author_association": "MEMBER",
            "body": "Does `src.coerce_to_pyobject(env)` work here? (Probably still followed by a `.coerce_to(dst_type, env)`.)",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:08:37Z",
            "diff_hunk": "@@ -992,6 +991,13 @@ def coerce_to(self, dst_type, env):\n               and src_type != dst_type\n               and dst_type.assignable_from(src_type)):\n             src = CoerceToComplexNode(src, dst_type, env)\n+        elif (src.type.is_fastcall_type\n+                and src_type != dst_type):\n+            # These can always be coerced to a PyObject as a fallback option\n+            # It may not be efficient but they're only intended to cover a\n+            # limited number of cases efficiently\n+            src = CoerceToPyTypeNode(src, env)\n+            src = src.coerce_to(dst_type, env)",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399250855",
            "id": 399250855,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI1MDg1NQ==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 1000,
            "original_position": 27,
            "original_start_line": 999,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 382838765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399250855",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399252604"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399252604"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:11:37Z",
            "diff_hunk": "@@ -3862,6 +3880,32 @@ def analyse_as_buffer_operation(self, env, getting):\n             replacement_node = replacement_node.analyse_types(env, getting)\n         return replacement_node\n \n+    def analyse_as_fastcall_tuple(self, env, is_slice, getting, setting):\n+        cant_handle = False\n+        if setting or is_slice:\n+            cant_handle = True\n+        if cant_handle:\n+            self.base = self.base.coerce_to_pyobject(env)\n+            return self.analyse_as_pyobject(env, is_slice, getting, setting)\n+        if self.index.type.is_pyobject:\n+            self.index = self.index.coerce_to(PyrexTypes.c_py_ssize_t_type, env)\n+        elif not self.index.type.is_int:\n+            error(self.pos, \"Invalid index type '%s'\" % self.index.type)\n+        self.type = PyrexTypes.py_object_type\n+        self.is_temp = True\n+        return self\n+\n+    def analyse_as_fastcall_dict(self, env, is_slice, getting, setting):\n+        if setting:\n+            self.base = self.base.coerce_to_pyobject(env)\n+            return self.analyse_as_pyobject(env, is_slice, getting, setting)\n+        if not self.index.type.is_pyobject:\n+            self.index = self.index.coere_to_pyobject(env)\n+        self.type = PyrexTypes.py_object_type\n+        self.is_temp = True\n+        return self\n+\n+",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399252604",
            "id": 399252604,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI1MjYwNA==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 3908,
            "original_position": 113,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 382838765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399252604",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399254147"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399254147"
                }
            },
            "author_association": "MEMBER",
            "body": "Unrelated change?\r\n```suggestion\r\n        if self.base.type.is_buffer or self.base.type.is_pythran_expr or self.base.type.is_memoryviewslice:\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:13:59Z",
            "diff_hunk": "@@ -4849,7 +4902,8 @@ def analyse_target_types(self, env):\n     def analyse_types(self, env, getting=True):\n         self.base = self.base.analyse_types(env)\n \n-        if self.base.type.is_buffer or self.base.type.is_pythran_expr or self.base.type.is_memoryviewslice:\n+        if (self.base.type.is_buffer or self.base.type.is_pythran_expr or\n+            self.base.type.is_memoryviewslice):",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399254147",
            "id": 399254147,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI1NDE0Nw==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 4906,
            "original_position": 170,
            "original_start_line": 4905,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 382838765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399254147",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399255289"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399255289"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    fastcallable_with_types = False  # can use fastcall_dict and/or fastcall_tuple to call\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:15:48Z",
            "diff_hunk": "@@ -6306,6 +6368,8 @@ class GeneralCallNode(CallNode):\n     #  keyword_args     ExprNode or None  Dict of keyword arguments\n \n     type = py_object_type\n+    fastcallable_with_types = False  # can use fastcall_dict and/or\n+            # fastcall_tuple to call",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399255289",
            "id": 399255289,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI1NTI4OQ==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 6372,
            "original_position": 229,
            "original_start_line": 6371,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 382838765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399255289",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399256133"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399256133"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            if ((pos_is_fastcall or pos_is_empty) and\r\n                    (kwds_is_fastcall or kwds_is_none)):\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:17:10Z",
            "diff_hunk": "@@ -6350,11 +6414,35 @@ def analyse_types(self, env):\n                     pass\n             else:\n                 self.function = self.function.coerce_to_pyobject(env)\n+\n         if self.keyword_args:\n             self.keyword_args = self.keyword_args.analyse_types(env)\n         self.positional_args = self.positional_args.analyse_types(env)\n-        self.positional_args = \\\n-            self.positional_args.coerce_to_pyobject(env)\n+\n+        pos_is_fastcall = (isinstance(self.positional_args, CoerceToPyTypeNode) and\n+                            self.positional_args.arg.type.is_fastcall_tuple)\n+        pos_is_empty = (isinstance(self.positional_args, TupleNode) and\n+                            len(self.positional_args.args) == 0)\n+        kwds_is_fastcall = (self.keyword_args and\n+                                (isinstance(self.keyword_args, CoerceToPyTypeNode) and\n+                                self.keyword_args.arg.type.is_fastcall_dict))\n+        kwds_is_none = self.keyword_args is None\n+\n+        if pos_is_fastcall or kwds_is_fastcall:\n+            # worth a go at converting to a fastcall call\n+            if ((pos_is_fastcall or pos_is_empty) and\n+                (kwds_is_fastcall or kwds_is_none)):",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399256133",
            "id": 399256133,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI1NjEzMw==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 6434,
            "original_position": 256,
            "original_start_line": 6433,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 382838765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399256133",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399257468"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399257468"
                }
            },
            "author_association": "MEMBER",
            "body": "This is a completely separate code path that seems worth being extracted into a new method.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:19:24Z",
            "diff_hunk": "@@ -6499,6 +6587,43 @@ def map_to_simple_call_node(self):\n \n     def generate_result_code(self, code):\n         if self.type.is_error: return\n+        if self.fastcallable_with_types:",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399257468",
            "id": 399257468,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI1NzQ2OA==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 6590,
            "original_position": 275,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 382838765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399257468",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399258214"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399258214"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        if (self.obj is not original_obj\r\n                and self.obj.type is not PyrexTypes.py_object_type):\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:20:41Z",
            "diff_hunk": "@@ -7046,7 +7175,14 @@ def analyse_attribute(self, env, obj_type = None):\n         # type, or it is an extension type and the attribute is either not\n         # declared or is declared as a Python method. Treat it as a Python\n         # attribute reference.\n+        original_obj = self.obj\n         self.analyse_as_python_attribute(env, obj_type, immutable_obj)\n+        if (self.obj is not original_obj\n+            and self.obj.type is not PyrexTypes.py_object_type):",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399258214",
            "id": 399258214,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI1ODIxNA==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 7181,
            "original_position": 333,
            "original_start_line": 7180,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 382838765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399258214",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399259965"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399259965"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        code.putln(\"Py_ssize_t size = __Pyx_FastcallTuple_Len(%s);\" % result)\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:23:31Z",
            "diff_hunk": "@@ -7701,6 +7849,27 @@ def generate_special_parallel_unpacking_code(self, code, rhs, use_loop):\n                 code, rhs, self.unpacked_items, use_loop=use_loop)\n             code.putln(\"}\")\n \n+    def generate_fastcall_tuple_parallel_unpacking_code(self, code, rhs):\n+        result = rhs.result()\n+        code.putln(\"{\")\n+        code.putln(\"Py_ssize_t size = __Pyx_FastcallTuple_Len({0});\".format(result))",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399259965",
            "id": 399259965,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI1OTk2NQ==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 7855,
            "original_position": 383,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 382838765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399259965",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399261169"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399261169"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                self.special_bool_cmp_utility_code = UtilityCode.load_cached(\r\n                    \"FastcallTupleContains\", \"ObjectHandling.c\")\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:25:24Z",
            "diff_hunk": "@@ -12393,6 +12562,14 @@ def find_special_bool_compare_function(self, env, operand1, result_is_bool=False\n                 self.special_bool_cmp_utility_code = UtilityCode.load_cached(\"PyUnicodeContains\", \"StringTools.c\")\n                 self.special_bool_cmp_function = \"__Pyx_PyUnicode_ContainsTF\"\n                 return True\n+            elif self.operand2.type.is_fastcall_tuple:\n+                self.special_bool_cmp_utility_code = UtilityCode.load_cached(\"FastcallTupleContains\",\n+                                                                                \"ObjectHandling.c\")",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399261169",
            "id": 399261169,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2MTE2OQ==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 12567,
            "original_position": 410,
            "original_start_line": 12566,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 382838765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399261169",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399261420"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399261420"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                self.special_bool_cmp_utility_code = UtilityCode.load_cached(\r\n                    \"FastcallDictContains\", \"ObjectHandling.c\")\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:25:48Z",
            "diff_hunk": "@@ -12393,6 +12562,14 @@ def find_special_bool_compare_function(self, env, operand1, result_is_bool=False\n                 self.special_bool_cmp_utility_code = UtilityCode.load_cached(\"PyUnicodeContains\", \"StringTools.c\")\n                 self.special_bool_cmp_function = \"__Pyx_PyUnicode_ContainsTF\"\n                 return True\n+            elif self.operand2.type.is_fastcall_tuple:\n+                self.special_bool_cmp_utility_code = UtilityCode.load_cached(\"FastcallTupleContains\",\n+                                                                                \"ObjectHandling.c\")\n+                self.special_bool_cmp_function = \"__Pyx_FastcallTuple_ContainsTF\"\n+            elif self.operand2.type.is_fastcall_dict:\n+                self.special_bool_cmp_utility_code = UtilityCode.load_cached(\"FastcallDictContains\",\n+                                                                                \"ObjectHandling.c\")",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399261420",
            "id": 399261420,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2MTQyMA==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 12571,
            "original_position": 414,
            "original_start_line": 12570,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 382838765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399261420",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399262342"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399262342"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            # In the fastcall_tuple and _dict conversions self.target_type\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:27:18Z",
            "diff_hunk": "@@ -13171,6 +13353,13 @@ def __init__(self, arg, env, type=py_object_type):\n             elif arg.type.is_complex:\n                 self.type = Builtin.complex_type\n             self.target_type = self.type\n+            # the the fastcall_tuple and _dict conversions self.target_type",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399262342",
            "id": 399262342,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2MjM0Mg==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 13356,
            "original_position": 442,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 382838765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399262342",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399263960"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399263960"
                }
            },
            "author_association": "MEMBER",
            "body": "Can these types be kept around as constants, like other types at the end of `PyrexTypes.py`?",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:29:35Z",
            "diff_hunk": "@@ -13313,11 +13502,13 @@ class CoerceToBooleanNode(CoercionNode):\n         Builtin.bytes_type:      'PyBytes_GET_SIZE',\n         Builtin.bytearray_type:  'PyByteArray_GET_SIZE',\n         Builtin.unicode_type:    '__Pyx_PyUnicode_IS_TRUE',\n+        PyrexTypes.FastcallTupleType(): '__Pyx_FastcallTuple_Len',\n+        PyrexTypes.FastcallDictType(): '__Pyx_FastcallDict_Len'",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399263960",
            "id": 399263960,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2Mzk2MA==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 13506,
            "original_position": 466,
            "original_start_line": 13505,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 382838765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399263960",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399265363"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399265363"
                }
            },
            "author_association": "MEMBER",
            "body": "I think two separate variables would be better here than the less readable indexing below.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:31:34Z",
            "diff_hunk": "@@ -717,14 +717,42 @@ def visit_FuncDefNode(self, node):\n \n         for arg in node.args:\n             self._visit(arg)\n+\n+        fastcall_directives = node.local_scope.directives.get('fastcall_args', [None, None])",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399265363",
            "id": 399265363,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2NTM2Mw==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 721,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/FlowControl.py",
            "position": null,
            "pull_request_review_id": 382838765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399265363",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399266064"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399266064"
                }
            },
            "author_association": "MEMBER",
            "body": "`star_args_type`? The name `star_type` doesn't seem very clear to me.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:32:32Z",
            "diff_hunk": "@@ -717,14 +717,42 @@ def visit_FuncDefNode(self, node):\n \n         for arg in node.args:\n             self._visit(arg)\n+\n+        fastcall_directives = node.local_scope.directives.get('fastcall_args', [None, None])\n+        # TODO a better version would try to identify if the argument makes it into the closure,\n+        # but for now just block using the fastcall types on any function with a closure\n         if node.star_arg:\n+            # can be True, False, or None\n+            fastcall_set = fastcall_directives[0]\n+\n+            # self_in_stararg needs to build a new tuple containing self and so can't easily\n+            # be made to work\n+            star_type = (Builtin.tuple_type if (node.needs_closure or node.self_in_stararg",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399266064",
            "id": 399266064,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2NjA2NA==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 730,
            "original_position": 14,
            "original_start_line": null,
            "path": "Cython/Compiler/FlowControl.py",
            "position": null,
            "pull_request_review_id": 382838765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399266064",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399267226"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399267226"
                }
            },
            "author_association": "MEMBER",
            "body": "Örks. This helper function suggests to me that there is something wrong with the API, or with the nodes being touched here. This shouldn't be necessary.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:34:08Z",
            "diff_hunk": "@@ -2723,6 +2723,16 @@ class DecoratorNode(Node):\n     # decorator    NameNode or CallNode or AttributeNode\n     child_attrs = ['decorator']\n \n+def _get_type_attr(arg, attr):\n+    for attrs in ([\"entry\", \"type\", attr],\n+                  [\"type\", attr]):",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399267226",
            "id": 399267226,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2NzIyNg==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 2728,
            "original_position": 15,
            "original_start_line": 2726,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 382838765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399267226",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399276637"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399276637"
                }
            },
            "author_association": "MEMBER",
            "body": "Phew, code like this is really a big hack. There should be some general way to handle this. fastcall-dicts and -tuples really aren't special enough for this.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:48:30Z",
            "diff_hunk": "@@ -3899,14 +3954,21 @@ def generate_arg_assignment(self, arg, item, code):\n     def generate_stararg_init_code(self, max_positional_args, code):\n         if self.starstar_arg:\n             self.starstar_arg.entry.xdecref_cleanup = 0\n-            code.putln('%s = PyDict_New(); if (unlikely(!%s)) return %s;' % (\n-                self.starstar_arg.entry.cname,\n-                self.starstar_arg.entry.cname,\n-                self.error_value()))\n+\n+            if not _get_type_attr(self.starstar_arg, \"is_fastcall_dict\"):",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399276637",
            "id": 399276637,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI3NjYzNw==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 3958,
            "original_position": 172,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 382838765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399276637",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399279938"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399279938"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        if (function.is_attribute and not reversed and not arg_count\r\n                and not function.obj.type.is_fastcall_dict\r\n                # fastcall dicts should already have got an iterable (probably a list or tuple)\r\n                # from these attributes and currently isn't faster to just use that object.\r\n                ):\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:53:28Z",
            "diff_hunk": "@@ -242,7 +245,11 @@ def _optimise_for_loop(self, node, iterable, reversed=False):\n \n         function = iterable.function\n         # dict iteration?\n-        if function.is_attribute and not reversed and not arg_count:\n+        if (function.is_attribute and not reversed and not arg_count\n+            and not function.obj.type.is_fastcall_dict\n+            # fastcall dicts should already have got an iterable (probably a list or tuple)\n+            # from these attributes and currently isn't faster to just use that object\n+            ):",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399279938",
            "id": 399279938,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI3OTkzOA==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 252,
            "original_position": 28,
            "original_start_line": 248,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 382838765,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399279938",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399283988"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399283988"
                }
            },
            "author_association": "MEMBER",
            "body": "Is this really just an optimisation, and not a required transformation?",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T13:59:19Z",
            "diff_hunk": "@@ -2622,6 +2713,24 @@ def _handle_simple_function_len(self, node, function, pos_args):\n             new_node = ExprNodes.PythonCapiCallNode(\n                 node.pos, \"__Pyx_MemoryView_Len\", func_type,\n                 args=[arg], is_temp=node.is_temp)\n+        elif arg.type.is_fastcall_tuple:\n+            func_type = PyrexTypes.CFuncType(\n+                PyrexTypes.c_py_ssize_t_type, [\n+                    PyrexTypes.CFuncTypeArg(\"fastcalltuple\", arg.type, None)\n+                ], nogil=True)\n+            new_node = ExprNodes.PythonCapiCallNode(\n+                node.pos, \"__Pyx_FastcallTuple_Len\", func_type,",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399283988",
            "id": 399283988,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI4Mzk4OA==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 2722,
            "original_position": 180,
            "original_start_line": 2721,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 382881944,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399283988",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399284738"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399284738"
                }
            },
            "author_association": "MEMBER",
            "body": "The list value seems to have some magic meaning that suggests a comment right here.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T14:00:22Z",
            "diff_hunk": "@@ -207,6 +207,7 @@ def get_directive_defaults():\n     'old_style_globals': False,\n     'np_pythran': False,\n     'fast_gil': False,\n+    'fastcall_args': [None, None],",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399284738",
            "id": 399284738,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI4NDczOA==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 210,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Compiler/Options.py",
            "position": null,
            "pull_request_review_id": 382881944,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399284738",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399285007"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399285007"
                }
            },
            "author_association": "MEMBER",
            "body": "Accidentally deleted line?",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T14:00:45Z",
            "diff_hunk": "@@ -257,7 +258,6 @@ def validate(name, value):\n             return value\n     return validate\n \n-",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399285007",
            "id": 399285007,
            "line": 260,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI4NTAwNw==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 260,
            "original_position": 12,
            "original_start_line": null,
            "path": "Cython/Compiler/Options.py",
            "position": 27,
            "pull_request_review_id": 382881944,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399285007",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399286287"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399286287"
                }
            },
            "author_association": "MEMBER",
            "body": "Why isn't `type` some kind of conversion helper or class in this case? Why does this need a special case?",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T14:02:42Z",
            "diff_hunk": "@@ -416,6 +418,12 @@ def parse_directive_value(name, value, relaxed_bool=False):\n                 name, orig_value))\n     elif type is str:\n         return str(value)\n+    elif name==\"fastcall_args\":\n+        # FIXME - can only take single value argument in a comment\n+        if value.lower == \"none\":\n+            return [None, None]\n+        else:\n+            return [parse_directive_value(\"\", value, relaxed_bool, type=bool)]*2",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399286287",
            "id": 399286287,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI4NjI4Nw==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 426,
            "original_position": 52,
            "original_start_line": 421,
            "path": "Cython/Compiler/Options.py",
            "position": null,
            "pull_request_review_id": 382881944,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399286287",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399287624"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399287624"
                }
            },
            "author_association": "MEMBER",
            "body": "`some of`?",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T14:04:34Z",
            "diff_hunk": "@@ -2360,6 +2429,7 @@ class AdjustDefByDirectives(CythonTransform, SkipDeclarations):\n     @cython.ccall\n     @cython.inline\n     @cython.nogil\n+    @@cython.fastcall_args - some of",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399287624",
            "id": 399287624,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI4NzYyNA==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 2432,
            "original_position": 102,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 382881944,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399287624",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399373741"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399373741"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I'm currently using individual instances for `FastcallTupleType` and `FastcallDictType` for each function because they're the best place to count the number of coercions. Therefore the usual `type is PyrexTypes.singleton_instance` test won't work.\r\n\r\nI think it is worth counting the coercions - if there's too many then it becomes a pretty pointless optimization and it's better to do it once at the start of the function. However this might be something I try to revise since I don't really like the way that the fallback is done.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T16:05:08Z",
            "diff_hunk": "@@ -13313,11 +13502,13 @@ class CoerceToBooleanNode(CoercionNode):\n         Builtin.bytes_type:      'PyBytes_GET_SIZE',\n         Builtin.bytearray_type:  'PyByteArray_GET_SIZE',\n         Builtin.unicode_type:    '__Pyx_PyUnicode_IS_TRUE',\n+        PyrexTypes.FastcallTupleType(): '__Pyx_FastcallTuple_Len',\n+        PyrexTypes.FastcallDictType(): '__Pyx_FastcallDict_Len'",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399373741",
            "id": 399373741,
            "in_reply_to_id": 399263960,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3Mzc0MQ==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 13506,
            "original_position": 466,
            "original_start_line": 13505,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 382995277,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399373741",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399391637"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399391637"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "This is definitely working round an inconsistent existing interface. I'll try to clean it up (and probably submit the clean-up as as a separate small PR).",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-27T16:32:09Z",
            "diff_hunk": "@@ -2723,6 +2723,16 @@ class DecoratorNode(Node):\n     # decorator    NameNode or CallNode or AttributeNode\n     child_attrs = ['decorator']\n \n+def _get_type_attr(arg, attr):\n+    for attrs in ([\"entry\", \"type\", attr],\n+                  [\"type\", attr]):",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399391637",
            "id": 399391637,
            "in_reply_to_id": 399267226,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM5MTYzNw==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 2728,
            "original_position": 15,
            "original_start_line": 2726,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 382995277,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399391637",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399647323"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399647323"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Shouldn't this be a method call?",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-28T10:39:12Z",
            "diff_hunk": "@@ -416,6 +418,12 @@ def parse_directive_value(name, value, relaxed_bool=False):\n                 name, orig_value))\n     elif type is str:\n         return str(value)\n+    elif name==\"fastcall_args\":\n+        # FIXME - can only take single value argument in a comment\n+        if value.lower == \"none\":",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399647323",
            "id": 399647323,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY0NzMyMw==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 423,
            "original_position": 49,
            "original_start_line": null,
            "path": "Cython/Compiler/Options.py",
            "position": null,
            "pull_request_review_id": 383302117,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399647323",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/8453732?v=4",
                "events_url": "https://api.github.com/users/TeamSpen210/events{/privacy}",
                "followers_url": "https://api.github.com/users/TeamSpen210/followers",
                "following_url": "https://api.github.com/users/TeamSpen210/following{/other_user}",
                "gists_url": "https://api.github.com/users/TeamSpen210/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TeamSpen210",
                "id": 8453732,
                "login": "TeamSpen210",
                "node_id": "MDQ6VXNlcjg0NTM3MzI=",
                "organizations_url": "https://api.github.com/users/TeamSpen210/orgs",
                "received_events_url": "https://api.github.com/users/TeamSpen210/received_events",
                "repos_url": "https://api.github.com/users/TeamSpen210/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TeamSpen210/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TeamSpen210/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TeamSpen210"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399654963"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399654963"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "Yes it should thanks. I suspect this bit is getting rewritten anyway, but I'll be sure to fix it when I do.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-28T12:06:29Z",
            "diff_hunk": "@@ -416,6 +418,12 @@ def parse_directive_value(name, value, relaxed_bool=False):\n                 name, orig_value))\n     elif type is str:\n         return str(value)\n+    elif name==\"fastcall_args\":\n+        # FIXME - can only take single value argument in a comment\n+        if value.lower == \"none\":",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399654963",
            "id": 399654963,
            "in_reply_to_id": 399647323,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1NDk2Mw==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 423,
            "original_position": 49,
            "original_start_line": null,
            "path": "Cython/Compiler/Options.py",
            "position": null,
            "pull_request_review_id": 383307544,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399654963",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r399683315"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/399683315"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "The good news is the mess mostly looks to me one I've both created and worked round in this PR so no need for a separate fix.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-03-28T16:48:20Z",
            "diff_hunk": "@@ -2723,6 +2723,16 @@ class DecoratorNode(Node):\n     # decorator    NameNode or CallNode or AttributeNode\n     child_attrs = ['decorator']\n \n+def _get_type_attr(arg, attr):\n+    for attrs in ([\"entry\", \"type\", attr],\n+                  [\"type\", attr]):",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r399683315",
            "id": 399683315,
            "in_reply_to_id": 399267226,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY4MzMxNQ==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 2728,
            "original_position": 15,
            "original_start_line": 2726,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 383329033,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/399683315",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415132210"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415132210"
                }
            },
            "author_association": "MEMBER",
            "body": "You can use `.is_sequence_constructor` here instead of the type check.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T19:55:03Z",
            "diff_hunk": "@@ -6563,6 +6634,45 @@ def generate_result_code(self, code):\n                 code.error_goto_if_null(self.result(), self.pos)))\n         self.generate_gotref(code)\n \n+    def generate_fastcall_result_code(self, code):\n+        # use this path when we're mainly forwarding fastcall tuples and dicts\n+        args_empty = (isinstance(self.positional_args, TupleNode) and",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415132210",
            "id": 415132210,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzMjIxMA==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 6639,
            "original_position": 244,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415132210",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415133338"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415133338"
                }
            },
            "author_association": "MEMBER",
            "body": "`py_object_type` is explicitly imported.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T20:01:58Z",
            "diff_hunk": "@@ -7097,7 +7211,14 @@ def analyse_attribute(self, env, obj_type = None):\n         # type, or it is an extension type and the attribute is either not\n         # declared or is declared as a Python method. Treat it as a Python\n         # attribute reference.\n+        original_obj = self.obj\n         self.analyse_as_python_attribute(env, obj_type, immutable_obj)\n+        if (self.obj is not original_obj\n+                and self.obj.type is not PyrexTypes.py_object_type):",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415133338",
            "id": 415133338,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzMzMzOA==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 7217,
            "original_position": 302,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415133338",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415134612"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415134612"
                }
            },
            "author_association": "MEMBER",
            "body": "Rather than guessing here what a replacement of `self.obj` means, can't `analyse_as_python_attribute` just call `analyse_attribute()` when it considers it worth it? Or maybe even one of the appropriate submethods directly?",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T20:09:36Z",
            "diff_hunk": "@@ -7097,7 +7211,14 @@ def analyse_attribute(self, env, obj_type = None):\n         # type, or it is an extension type and the attribute is either not\n         # declared or is declared as a Python method. Treat it as a Python\n         # attribute reference.\n+        original_obj = self.obj\n         self.analyse_as_python_attribute(env, obj_type, immutable_obj)\n+        if (self.obj is not original_obj",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415134612",
            "id": 415134612,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzNDYxMg==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 7216,
            "original_position": 301,
            "original_start_line": 7214,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415134612",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415135468"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415135468"
                }
            },
            "author_association": "MEMBER",
            "body": "What about extended unpacking like `a, b, *c = args`?",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T20:15:09Z",
            "diff_hunk": "@@ -7649,7 +7779,10 @@ def generate_parallel_assignment_code(self, rhs, code):\n                           or not rhs.type.is_builtin_type)\n         long_enough_for_a_loop = len(self.unpacked_items) > 3\n \n-        if special_unpack:\n+        if rhs.type.is_fastcall_tuple:\n+            self.generate_fastcall_tuple_parallel_unpacking_code(",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415135468",
            "id": 415135468,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzNTQ2OA==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 7783,
            "original_position": 339,
            "original_start_line": 7782,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415135468",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415136541"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415136541"
                }
            },
            "author_association": "MEMBER",
            "body": "Can't you count them in `coerce_to_pyobject()` or `coerce_to()`? It seems more that nodes should be responsible for this kind of statistics, not types. And a transform could do the counting and adaptation.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T20:21:24Z",
            "diff_hunk": "@@ -13313,11 +13502,13 @@ class CoerceToBooleanNode(CoercionNode):\n         Builtin.bytes_type:      'PyBytes_GET_SIZE',\n         Builtin.bytearray_type:  'PyByteArray_GET_SIZE',\n         Builtin.unicode_type:    '__Pyx_PyUnicode_IS_TRUE',\n+        PyrexTypes.FastcallTupleType(): '__Pyx_FastcallTuple_Len',\n+        PyrexTypes.FastcallDictType(): '__Pyx_FastcallDict_Len'",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415136541",
            "id": 415136541,
            "in_reply_to_id": 399263960,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzNjU0MQ==",
            "original_commit_id": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "original_line": 13506,
            "original_position": 466,
            "original_start_line": 13505,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415136541",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415137049"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415137049"
                }
            },
            "author_association": "MEMBER",
            "body": "typo `a`",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T20:24:45Z",
            "diff_hunk": "@@ -717,14 +717,42 @@ def visit_FuncDefNode(self, node):\n \n         for arg in node.args:\n             self._visit(arg)\n+\n+        # each can be True, False, or None\n+        use_fastcall_tuple, use_fastcall_dict = node.local_scope.directives.get('fastcall_args', [None, None])\n+        # TODO a better version would try to identify if the argument makes it into the closure,\n+        # but for now just block using the fastcall types on any function with a closure\n         if node.star_arg:\n+            # self_in_stararg needs to build a new tuple containing self and so can't easily\n+            # be made to work\n+            star_arg_type = Builtin.tuple_type\n+            # FIXME - this doesn't explicitly force it. Need to change argument overriding\n+            # rules\n+            if use_fastcall_tuple or (not node.needs_closure and not node.self_in_stararg\n+                                        and use_fastcall_tuple != False):\n+                star_arg_type = PyrexTypes.FastcallTupleType(explicitly_requested=use_fastcall_tuple)\n+            if star_arg_type.is_fastcall_tuple and not node.entry.signature.use_fastcall:\n+                # Makes it a more favourable to fall back to a tuple later if the",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415137049",
            "id": 415137049,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzNzA0OQ==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 735,
            "original_position": 19,
            "original_start_line": null,
            "path": "Cython/Compiler/FlowControl.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415137049",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415137546"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415137546"
                }
            },
            "author_association": "MEMBER",
            "body": "`degraded`?",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T20:27:40Z",
            "diff_hunk": "@@ -3096,6 +3103,15 @@ def analyse_signature(self, env):\n \n             if not uses_args_tuple:\n                 sig = self.entry.signature = sig.with_fastcall()\n+            if (not self.entry.signature.use_fastcall\n+                    and self.starstar_arg and self.starstar_arg.type\n+                    and self.starstar_arg.type.is_fastcall_dict):\n+                # it's a failure of the inference if we end up here without asking\n+                assert self.starstar_arg.type.explicitly_requested\n+                warning(self.pos, (\"Request for **{0} to be a specialized \"\n+                    \"fastcall argument is pointless since the function itself is not fastcallable \"\n+                    \"and so this will only cause degrade performance.\"",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415137546",
            "id": 415137546,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzNzU0Ng==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 3113,
            "original_position": 34,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415137546",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415138953"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415138953"
                }
            },
            "author_association": "MEMBER",
            "body": "I'd just build the complete target (LHS) code snippet from `self.starstar_arg.entry.cname` here. I'd also use a pointer dereference instead of an index here. (This is C, not Cython.)\r\n\r\nAnd finally, usages of utility function names are easier to find in Cython's code when they are spelled out literally instead of being partially constructed.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T20:35:50Z",
            "diff_hunk": "@@ -3638,29 +3666,47 @@ def generate_stararg_copy_code(self, code):\n                 bool(self.starstar_arg), self.error_value()))\n \n         if self.starstar_arg and self.starstar_arg.entry.cf_used:\n+            if self.starstar_arg.type.is_fastcall_dict:\n+                suffix = \"_fastcallstruct\"\n+                code.globalstate.use_utility_code(\n+                    UtilityCode.load_cached(\"FastcallDict_KwargsAsDict\", \"FunctionArguments.c\"))\n+                assign_index = \"[0]\"",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415138953",
            "id": 415138953,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzODk1Mw==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 3673,
            "original_position": 93,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415138953",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415139653"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415139653"
                }
            },
            "author_association": "MEMBER",
            "body": "I think a C pointer dereference would be clearer here than indexing.\r\n```suggestion\r\n                    code.putln(\"*%s = __Pyx_FastcallDict_New();\" % self.starstar_arg.entry.cname)\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T20:39:53Z",
            "diff_hunk": "@@ -3638,29 +3666,47 @@ def generate_stararg_copy_code(self, code):\n                 bool(self.starstar_arg), self.error_value()))\n \n         if self.starstar_arg and self.starstar_arg.entry.cf_used:\n+            if self.starstar_arg.type.is_fastcall_dict:\n+                suffix = \"_fastcallstruct\"\n+                code.globalstate.use_utility_code(\n+                    UtilityCode.load_cached(\"FastcallDict_KwargsAsDict\", \"FunctionArguments.c\"))\n+                assign_index = \"[0]\"\n+            else:\n+                suffix = \"\"\n+                assign_index = \"\"\n             code.putln(\"if (%s) {\" % kwarg_check)\n-            code.putln(\"%s = __Pyx_KwargsAsDict_%s(%s, %s);\" % (\n+            code.putln(\"%s%s = __Pyx_KwargsAsDict_%s%s(%s, %s);\" % (\n                 self.starstar_arg.entry.cname,\n+                assign_index,\n                 self.signature.fastvar,\n+                suffix,\n                 Naming.kwds_cname,\n                 Naming.kwvalues_cname))\n+\n             code.putln(\"if (unlikely(!%s)) return %s;\" % (\n-                self.starstar_arg.entry.cname, self.error_value()))\n-            code.put_gotref(self.starstar_arg.entry.cname, py_object_type)\n+                    self.starstar_arg.entry.type.nullcheck_string(self.starstar_arg.entry.cname),\n+                    self.error_value()))\n+            code.put_var_gotref(self.starstar_arg.entry)\n             code.putln(\"} else {\")\n             allow_null = all(ref.node.allow_null for ref in self.starstar_arg.entry.cf_references)\n             if allow_null:\n-                code.putln(\"%s = NULL;\" % (self.starstar_arg.entry.cname,))\n+                code.putln(\"%s = %s;\" % (self.starstar_arg.entry.cname,\n+                                         self.starstar_arg.entry.type.literal_code(0)))\n             else:\n-                code.putln(\"%s = PyDict_New();\" % (self.starstar_arg.entry.cname,))\n+                if self.starstar_arg.type.is_fastcall_dict:\n+                    code.putln(\"%s[0] = __Pyx_FastcallDict_New();\" % self.starstar_arg.entry.cname)",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415139653",
            "id": 415139653,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzOTY1Mw==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 3697,
            "original_position": 122,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415139653",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415141495"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415141495"
                }
            },
            "author_association": "MEMBER",
            "body": "Just spell out the full name of the function to call here.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T20:50:30Z",
            "diff_hunk": "@@ -4132,13 +4192,19 @@ def generate_keyword_unpacking_code(self, min_positional_args, max_positional_ar\n             values_array = 'values + %d' % num_pos_only_args\n         else:\n             values_array = 'values'\n+        starstar_cname = self.starstar_arg and self.starstar_arg.entry.cname or '0'\n+        if self.starstar_arg and self.starstar_arg.type.is_fastcall_dict:\n+            suffix = \"_fastcallstruct\"\n+        else:\n+            suffix = \"\"",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415141495",
            "id": 415141495,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0MTQ5NQ==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 4199,
            "original_position": 212,
            "original_start_line": 4197,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415141495",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415141706"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415141706"
                }
            },
            "author_association": "MEMBER",
            "body": "`.is_sequence_constructor` (which includes lists, but that's fine, isn't it?)",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T20:51:21Z",
            "diff_hunk": "@@ -5583,6 +5648,8 @@ def analyse_types(self, env, use_temp=0):\n                     env.use_utility_code(UtilityCode.load_cached(\"CppExceptionConversion\", \"CppSupport.cpp\"))\n             else:\n                 rhs = self.rhs.coerce_to(self.lhs.type, env)\n+        elif self.rhs.type.is_fastcall_tuple and isinstance(self.lhs, ExprNodes.TupleNode):",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415141706",
            "id": 415141706,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0MTcwNg==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 5651,
            "original_position": 239,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415141706",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415142115"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415142115"
                }
            },
            "author_association": "MEMBER",
            "body": "I find this sentence hard to read. \"have got an iterable from these attributes\"? What do you mean?",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T20:53:59Z",
            "diff_hunk": "@@ -242,7 +244,11 @@ def _optimise_for_loop(self, node, iterable, reversed=False):\n \n         function = iterable.function\n         # dict iteration?\n-        if function.is_attribute and not reversed and not arg_count:\n+        if (function.is_attribute and not reversed and not arg_count\n+                and not function.obj.type.is_fastcall_dict\n+                # fastcall dicts should already have got an iterable (probably a list or tuple)\n+                # from these attributes and currently isn't faster to just use that object.",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415142115",
            "id": 415142115,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0MjExNQ==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 250,
            "original_position": 17,
            "original_start_line": 249,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415142115",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415142887"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415142887"
                }
            },
            "author_association": "MEMBER",
            "body": "Why is the setting for tuple and dict not clear from the function signature?",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T20:58:39Z",
            "diff_hunk": "@@ -207,6 +207,8 @@ def get_directive_defaults():\n     'old_style_globals': False,\n     'np_pythran': False,\n     'fast_gil': False,\n+    'fastcall_args': [None, None],  # two values for tuple and dict. True/False sets it explicitly.",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415142887",
            "id": 415142887,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0Mjg4Nw==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 210,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Compiler/Options.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415142887",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415143113"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415143113"
                }
            },
            "author_association": "MEMBER",
            "body": "… and this code is disabled because …",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:00:14Z",
            "diff_hunk": "@@ -928,6 +928,23 @@ def try_to_parse_directive(self, optname, args, kwds, pos):\n                 raise PostParseError(\n                     pos, 'The exceptval directive takes 0 or 1 positional arguments and the boolean keyword \"check\"')\n             return ('exceptval', (args[0] if args else None, check))\n+        elif False and optname == \"fastcall_args\":",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415143113",
            "id": 415143113,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0MzExMw==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 931,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415143113",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415143571"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415143571"
                }
            },
            "author_association": "MEMBER",
            "body": "see `self.current_directives`",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:02:59Z",
            "diff_hunk": "@@ -1921,6 +1941,18 @@ def visit_FuncDefNode(self, node):\n \n     def visit_DefNode(self, node):\n         node = self.visit_FuncDefNode(node)\n+\n+        local_scope = getattr(node, 'local_scope', None)  # fused function nodes don't have this\n+        fastcall_args = local_scope.directives.get('fastcall_args', None) if local_scope else None",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415143571",
            "id": 415143571,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0MzU3MQ==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 1946,
            "original_position": 49,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415143571",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415143969"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415143969"
                }
            },
            "author_association": "MEMBER",
            "body": "Why can't this be done in `DefNode.analyse_declarations()`?",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:05:12Z",
            "diff_hunk": "@@ -1921,6 +1941,18 @@ def visit_FuncDefNode(self, node):\n \n     def visit_DefNode(self, node):\n         node = self.visit_FuncDefNode(node)\n+\n+        local_scope = getattr(node, 'local_scope', None)  # fused function nodes don't have this\n+        fastcall_args = local_scope.directives.get('fastcall_args', None) if local_scope else None\n+        if fastcall_args:\n+            if fastcall_args[0] and node.star_arg:\n+                if node.self_in_stararg:\n+                    error(node.pos, \"Cannot use 'fastcall_args(\\\"*\\\")' on a function where the\"\n+                          \" self argument is included in *args\")\n+                node.star_arg.entry.type = PyrexTypes.FastcallTupleType(explicitly_requested=True)\n+            if fastcall_args[1] and node.starstar_arg:\n+                node.starstar_arg.entry.type = PyrexTypes.FastcallDictType(explicitly_requested=True)",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415143969",
            "id": 415143969,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0Mzk2OQ==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 1954,
            "original_position": 57,
            "original_start_line": 1948,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415143969",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415144264"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415144264"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\r\n\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:06:30Z",
            "diff_hunk": "@@ -2221,9 +2253,41 @@ def visit_ClassDefNode(self, node):\n         self.qualified_name = orig_qualified_name\n         return node\n \n+def _star_arg_maybe_fastcall_tuple(node):\n+    star_arg = getattr(node, \"star_arg\", None)\n+    if not star_arg:\n+        return False\n+    from .FlowControl import Argument\n+    for assignment in node.star_arg.entry.cf_assignments:\n+        if isinstance(assignment, Argument) and assignment.rhs.type.is_fastcall_tuple:\n+            return True\n+    return False\n+\n+def _star_arg_fastcall_coercions(node):\n+    star_arg = getattr(node, \"star_arg\", None)\n+    if not star_arg:\n+        return 0\n+    if not star_arg.entry.type.is_fastcall_tuple:\n+        return 0\n+    else:\n+        return node.star_arg.entry.type.coercion_count\n \n-class AnalyseExpressionsTransform(CythonTransform):\n+class _StripFastcallTupleTypes(CythonTransform):\n+    def visit_ExprNode(self, node):\n+        if node.type and node.type.is_fastcall_tuple:\n+            node.type = Builtin.tuple_type\n+        if getattr(getattr(node, \"inferred_type\", None), \"is_fastcall_tuple\", None):\n+            node.inferred_type = Builtin.tuple_type\n+        self.visitchildren(node)\n+        return node\n+\n+    def visit_CoerceToPyTypeNode(self, node):\n+        self.visitchildren(node)\n+        if node.arg.type.is_pyobject:\n+            node = node.arg\n+        return node\n ",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415144264",
            "id": 415144264,
            "line": 2304,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0NDI2NA==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 2289,
            "original_position": 100,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 39,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415144264",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415145817"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415145817"
                }
            },
            "author_association": "MEMBER",
            "body": "Isn't this whole counting business a bit of overengineering? I mean, both the args array and the args tuple representation are immutable. So, why not have a single tuple object reference in a fastcall function that starts off as `NULL` and is created and used at need?",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:15:50Z",
            "diff_hunk": "@@ -2232,8 +2296,28 @@ def visit_ModuleNode(self, node):\n \n     def visit_FuncDefNode(self, node):\n         node.local_scope.infer_types()\n-        node.body = node.body.analyse_expressions(node.local_scope)\n-        self.visitchildren(node)\n+        for n in range(2):\n+            # potentially have two goes - replacing a fastcall tuple star_arg\n+            # if too many coercions are generated. Check after each step",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415145817",
            "id": 415145817,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0NTgxNw==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 2301,
            "original_position": 113,
            "original_start_line": 2300,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415145817",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415146194"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415146194"
                }
            },
            "author_association": "MEMBER",
            "body": "`is_fastcall_tuple_or_dict`? To me, `is_fastcall_type` reads like it could refer to the fast-callable function or its signature. (Similar to a function pointer in C.)",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:18:01Z",
            "diff_hunk": "@@ -192,6 +192,9 @@ class PyrexType(BaseType):\n     #  is_buffer             boolean     Is buffer access type\n     #  is_pythran_expr       boolean     Is Pythran expr\n     #  is_numpy_buffer       boolean     Is Numpy array buffer\n+    #  is_fastcall_tuple     boolean     Optimized stararg\n+    #  is_fastcall_dict      boolean     Optimized starstararg\n+    #  is_fastcall_type      boolean     Either of fastcall_tuple or fastcall_dict",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415146194",
            "id": 415146194,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0NjE5NA==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 197,
            "original_position": 6,
            "original_start_line": null,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415146194",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415146635"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415146635"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't understand this comment.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:20:44Z",
            "diff_hunk": "@@ -4252,6 +4260,180 @@ def same_as_resolved_type(self, other_type):\n     def error_condition(self, result_code):\n         return \"dummy\"\n \n+class FastcallBaseType(PyrexType):\n+    # Convenience class for refcounting functions\n+    needs_refcounting = 1\n+\n+    def generate_gotref(self, code, cname):\n+        code.putln(\"__Pyx_%s_GOTREF(%s);\" % (self.name, cname))\n+    def generate_decref(self, code, cname, nanny, have_gil):\n+        # don't distinguish between decref and xdecref for fastcall types\n+        code.putln(\"__Pyx_%s_XDECREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_decref_clear(self, code, cname, clear_before_decref, nanny, have_gil):\n+        code.putln(\"__Pyx_%s_CLEAR(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_xdecref(self, code, cname, nanny, have_gil):\n+        code.putln(\"__Pyx_%s_XDECREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_incref(self, code, cname, nanny):\n+        code.putln(\"__Pyx_%s_INCREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_xincref(self, code, cname, nanny):\n+        code.putln(\"__Pyx_%s_XINCREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_decref_set(self, code, cname, rhs_cname):\n+        code.putln(\"__Pyx_%s_DECREF_SET(%s, %s);\" % (self.name, cname, rhs_cname))\n+    def generate_xdecref_set(self, code, cname, rhs_cname):\n+        code.putln(\"__Pyx_%s_XDECREF_SET(%s, %s);\" % (self.name, cname, rhs_cname))\n+    def nullcheck_string(self, cname):\n+        return \"__Pyx_%s_NULLCHECK(%s)\" % (self.name, cname)\n+\n+    # different instances are created just to hold a different \"coercion_count\" for each\n+    # function. However, it's useful for looking up the type if they compare equal\n+    # (apart from the count there's no useful difference between instances)\n+    def __hash__(self):\n+        return hash((type(self), self.is_fastcall_tuple, self.is_fastcall_dict))\n+    def __eq__(self, other):\n+        return (self.is_fastcall_tuple == other.is_fastcall_tuple\n+                and self.is_fastcall_dict == other.is_fastcall_dict\n+                and type(self) == type(other)\n+                )\n+    def __ne__(self, other):\n+        return not (self == other) # looks to be necessary for Py2\n+\n+    def literal_code(self, value):\n+        assert value in (\"0\", \"{}\"), str(value)  # only know how to handle empty literals\n+        return self.declaration_value\n+\n+class FastcallTupleType(FastcallBaseType):\n+    \"\"\"Represents an optimized tuple-like type for \"*args\"\n+\n+    Eliminates the need for an actual tuple to be created, but\n+    only supports the limited range of operations that can\n+    be carried out efficiently\n+    \"\"\"\n+\n+    is_fastcall_tuple = 1\n+    name = \"FastcallTuple\"\n+    declaration_value = \"__Pyx_FastcallTuple_Empty\"\n+\n+    @property\n+    def nearest_python_type(self):\n+        # used when infer types is turned right down",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415146635",
            "id": 415146635,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0NjYzNQ==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 4318,
            "original_position": 97,
            "original_start_line": null,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415146635",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415146917"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415146917"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\r\n\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:22:05Z",
            "diff_hunk": "@@ -4252,6 +4260,180 @@ def same_as_resolved_type(self, other_type):\n     def error_condition(self, result_code):\n         return \"dummy\"\n \n+class FastcallBaseType(PyrexType):\n+    # Convenience class for refcounting functions\n+    needs_refcounting = 1\n+\n+    def generate_gotref(self, code, cname):\n+        code.putln(\"__Pyx_%s_GOTREF(%s);\" % (self.name, cname))\n+    def generate_decref(self, code, cname, nanny, have_gil):\n+        # don't distinguish between decref and xdecref for fastcall types\n+        code.putln(\"__Pyx_%s_XDECREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_decref_clear(self, code, cname, clear_before_decref, nanny, have_gil):\n+        code.putln(\"__Pyx_%s_CLEAR(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_xdecref(self, code, cname, nanny, have_gil):\n+        code.putln(\"__Pyx_%s_XDECREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_incref(self, code, cname, nanny):\n+        code.putln(\"__Pyx_%s_INCREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_xincref(self, code, cname, nanny):\n+        code.putln(\"__Pyx_%s_XINCREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_decref_set(self, code, cname, rhs_cname):\n+        code.putln(\"__Pyx_%s_DECREF_SET(%s, %s);\" % (self.name, cname, rhs_cname))\n+    def generate_xdecref_set(self, code, cname, rhs_cname):\n+        code.putln(\"__Pyx_%s_XDECREF_SET(%s, %s);\" % (self.name, cname, rhs_cname))\n+    def nullcheck_string(self, cname):\n+        return \"__Pyx_%s_NULLCHECK(%s)\" % (self.name, cname)\n+\n+    # different instances are created just to hold a different \"coercion_count\" for each\n+    # function. However, it's useful for looking up the type if they compare equal\n+    # (apart from the count there's no useful difference between instances)\n+    def __hash__(self):\n+        return hash((type(self), self.is_fastcall_tuple, self.is_fastcall_dict))\n+    def __eq__(self, other):\n+        return (self.is_fastcall_tuple == other.is_fastcall_tuple\n+                and self.is_fastcall_dict == other.is_fastcall_dict\n+                and type(self) == type(other)\n+                )\n+    def __ne__(self, other):\n+        return not (self == other) # looks to be necessary for Py2\n+\n+    def literal_code(self, value):\n+        assert value in (\"0\", \"{}\"), str(value)  # only know how to handle empty literals\n+        return self.declaration_value\n+\n+class FastcallTupleType(FastcallBaseType):\n+    \"\"\"Represents an optimized tuple-like type for \"*args\"\n+\n+    Eliminates the need for an actual tuple to be created, but\n+    only supports the limited range of operations that can\n+    be carried out efficiently\n+    \"\"\"\n+\n+    is_fastcall_tuple = 1\n+    name = \"FastcallTuple\"\n+    declaration_value = \"__Pyx_FastcallTuple_Empty\"\n+\n+    @property\n+    def nearest_python_type(self):\n+        # used when infer types is turned right down\n+        from .Builtin import tuple_type\n+        return tuple_type\n+\n+    def __init__(self, explicitly_requested=False):\n+        super(FastcallTupleType, self).__init__()\n+        self.coercion_count = 0\n+        self.explicitly_requested = explicitly_requested\n+\n+    def create_declaration_utility_code(self, env):\n+        env.use_utility_code(UtilityCode.load_cached('FastcallTuple', 'FunctionArguments.c'))\n+\n+    def declaration_code(self, entity_code,\n+            for_display = 0, dll_linkage = None, pyrex = 0):\n+        if for_display:\n+            return \"FastcallTuple\"\n+        else:\n+            return \"__Pyx_FastcallTuple_obj %s\" % entity_code\n+\n+\n+    def create_to_py_utility_code(self, env):\n+        # code is in declaration code\n+        return True\n+\n+    def create_from_py_utility_code(self, env):\n+        return False\n+\n+    def can_coerce_to_pyobject(self, env):\n+        return True\n+\n+    def to_py_call_code(self, source_code, result_code, result_type, to_py_function=None):\n+        # TODO maybe something cleverer with result_type\n+        from .Builtin import tuple_type\n+        #if (result_type is not tuple_type) and (not self.explicitly_requested):\n+            # tuple_type indicates that the conversion was requested by the user\n+        #    self.coercion_count += 1\n+        return \"%s = __Pyx_FastcallTuple_ToTuple(%s)\" % (result_code, source_code)\n+",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415146917",
            "id": 415146917,
            "line": 4421,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0NjkxNw==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 4355,
            "original_position": 134,
            "original_start_line": null,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": 130,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415146917",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415146939"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415146939"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\r\n\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:22:15Z",
            "diff_hunk": "@@ -4252,6 +4260,180 @@ def same_as_resolved_type(self, other_type):\n     def error_condition(self, result_code):\n         return \"dummy\"\n \n+class FastcallBaseType(PyrexType):\n+    # Convenience class for refcounting functions\n+    needs_refcounting = 1\n+\n+    def generate_gotref(self, code, cname):\n+        code.putln(\"__Pyx_%s_GOTREF(%s);\" % (self.name, cname))\n+    def generate_decref(self, code, cname, nanny, have_gil):\n+        # don't distinguish between decref and xdecref for fastcall types\n+        code.putln(\"__Pyx_%s_XDECREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_decref_clear(self, code, cname, clear_before_decref, nanny, have_gil):\n+        code.putln(\"__Pyx_%s_CLEAR(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_xdecref(self, code, cname, nanny, have_gil):\n+        code.putln(\"__Pyx_%s_XDECREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_incref(self, code, cname, nanny):\n+        code.putln(\"__Pyx_%s_INCREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_xincref(self, code, cname, nanny):\n+        code.putln(\"__Pyx_%s_XINCREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_decref_set(self, code, cname, rhs_cname):\n+        code.putln(\"__Pyx_%s_DECREF_SET(%s, %s);\" % (self.name, cname, rhs_cname))\n+    def generate_xdecref_set(self, code, cname, rhs_cname):\n+        code.putln(\"__Pyx_%s_XDECREF_SET(%s, %s);\" % (self.name, cname, rhs_cname))\n+    def nullcheck_string(self, cname):\n+        return \"__Pyx_%s_NULLCHECK(%s)\" % (self.name, cname)\n+\n+    # different instances are created just to hold a different \"coercion_count\" for each\n+    # function. However, it's useful for looking up the type if they compare equal\n+    # (apart from the count there's no useful difference between instances)\n+    def __hash__(self):\n+        return hash((type(self), self.is_fastcall_tuple, self.is_fastcall_dict))\n+    def __eq__(self, other):\n+        return (self.is_fastcall_tuple == other.is_fastcall_tuple\n+                and self.is_fastcall_dict == other.is_fastcall_dict\n+                and type(self) == type(other)\n+                )\n+    def __ne__(self, other):\n+        return not (self == other) # looks to be necessary for Py2\n+\n+    def literal_code(self, value):\n+        assert value in (\"0\", \"{}\"), str(value)  # only know how to handle empty literals\n+        return self.declaration_value\n+",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415146939",
            "id": 415146939,
            "line": 4360,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0NjkzOQ==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 4303,
            "original_position": 82,
            "original_start_line": null,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": 69,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415146939",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415146962"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415146962"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\r\n\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:22:26Z",
            "diff_hunk": "@@ -4252,6 +4260,180 @@ def same_as_resolved_type(self, other_type):\n     def error_condition(self, result_code):\n         return \"dummy\"\n ",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415146962",
            "id": 415146962,
            "line": 4331,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0Njk2Mg==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 4262,
            "original_position": 41,
            "original_start_line": null,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": 40,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415146962",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415147248"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415147248"
                }
            },
            "author_association": "MEMBER",
            "body": "These conditions seem reversed and would raise an `AttributeError` when comparing the type to some other object.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:24:06Z",
            "diff_hunk": "@@ -4252,6 +4260,180 @@ def same_as_resolved_type(self, other_type):\n     def error_condition(self, result_code):\n         return \"dummy\"\n \n+class FastcallBaseType(PyrexType):\n+    # Convenience class for refcounting functions\n+    needs_refcounting = 1\n+\n+    def generate_gotref(self, code, cname):\n+        code.putln(\"__Pyx_%s_GOTREF(%s);\" % (self.name, cname))\n+    def generate_decref(self, code, cname, nanny, have_gil):\n+        # don't distinguish between decref and xdecref for fastcall types\n+        code.putln(\"__Pyx_%s_XDECREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_decref_clear(self, code, cname, clear_before_decref, nanny, have_gil):\n+        code.putln(\"__Pyx_%s_CLEAR(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_xdecref(self, code, cname, nanny, have_gil):\n+        code.putln(\"__Pyx_%s_XDECREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_incref(self, code, cname, nanny):\n+        code.putln(\"__Pyx_%s_INCREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_xincref(self, code, cname, nanny):\n+        code.putln(\"__Pyx_%s_XINCREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_decref_set(self, code, cname, rhs_cname):\n+        code.putln(\"__Pyx_%s_DECREF_SET(%s, %s);\" % (self.name, cname, rhs_cname))\n+    def generate_xdecref_set(self, code, cname, rhs_cname):\n+        code.putln(\"__Pyx_%s_XDECREF_SET(%s, %s);\" % (self.name, cname, rhs_cname))\n+    def nullcheck_string(self, cname):\n+        return \"__Pyx_%s_NULLCHECK(%s)\" % (self.name, cname)\n+\n+    # different instances are created just to hold a different \"coercion_count\" for each\n+    # function. However, it's useful for looking up the type if they compare equal\n+    # (apart from the count there's no useful difference between instances)\n+    def __hash__(self):\n+        return hash((type(self), self.is_fastcall_tuple, self.is_fastcall_dict))\n+    def __eq__(self, other):\n+        return (self.is_fastcall_tuple == other.is_fastcall_tuple\n+                and self.is_fastcall_dict == other.is_fastcall_dict\n+                and type(self) == type(other)",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415147248",
            "id": 415147248,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0NzI0OA==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 4295,
            "original_position": 74,
            "original_start_line": 4293,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415147248",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415147458"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415147458"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:25:26Z",
            "diff_hunk": "@@ -4252,6 +4260,180 @@ def same_as_resolved_type(self, other_type):\n     def error_condition(self, result_code):\n         return \"dummy\"\n \n+class FastcallBaseType(PyrexType):\n+    # Convenience class for refcounting functions\n+    needs_refcounting = 1\n+\n+    def generate_gotref(self, code, cname):\n+        code.putln(\"__Pyx_%s_GOTREF(%s);\" % (self.name, cname))\n+    def generate_decref(self, code, cname, nanny, have_gil):\n+        # don't distinguish between decref and xdecref for fastcall types\n+        code.putln(\"__Pyx_%s_XDECREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_decref_clear(self, code, cname, clear_before_decref, nanny, have_gil):\n+        code.putln(\"__Pyx_%s_CLEAR(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_xdecref(self, code, cname, nanny, have_gil):\n+        code.putln(\"__Pyx_%s_XDECREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_incref(self, code, cname, nanny):\n+        code.putln(\"__Pyx_%s_INCREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_xincref(self, code, cname, nanny):\n+        code.putln(\"__Pyx_%s_XINCREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_decref_set(self, code, cname, rhs_cname):\n+        code.putln(\"__Pyx_%s_DECREF_SET(%s, %s);\" % (self.name, cname, rhs_cname))\n+    def generate_xdecref_set(self, code, cname, rhs_cname):\n+        code.putln(\"__Pyx_%s_XDECREF_SET(%s, %s);\" % (self.name, cname, rhs_cname))\n+    def nullcheck_string(self, cname):\n+        return \"__Pyx_%s_NULLCHECK(%s)\" % (self.name, cname)\n+\n+    # different instances are created just to hold a different \"coercion_count\" for each\n+    # function. However, it's useful for looking up the type if they compare equal\n+    # (apart from the count there's no useful difference between instances)\n+    def __hash__(self):\n+        return hash((type(self), self.is_fastcall_tuple, self.is_fastcall_dict))\n+    def __eq__(self, other):\n+        return (self.is_fastcall_tuple == other.is_fastcall_tuple\n+                and self.is_fastcall_dict == other.is_fastcall_dict\n+                and type(self) == type(other)\n+                )\n+    def __ne__(self, other):\n+        return not (self == other) # looks to be necessary for Py2\n+\n+    def literal_code(self, value):\n+        assert value in (\"0\", \"{}\"), str(value)  # only know how to handle empty literals\n+        return self.declaration_value\n+\n+class FastcallTupleType(FastcallBaseType):\n+    \"\"\"Represents an optimized tuple-like type for \"*args\"\n+\n+    Eliminates the need for an actual tuple to be created, but\n+    only supports the limited range of operations that can\n+    be carried out efficiently\n+    \"\"\"\n+\n+    is_fastcall_tuple = 1\n+    name = \"FastcallTuple\"\n+    declaration_value = \"__Pyx_FastcallTuple_Empty\"\n+\n+    @property\n+    def nearest_python_type(self):\n+        # used when infer types is turned right down\n+        from .Builtin import tuple_type\n+        return tuple_type\n+\n+    def __init__(self, explicitly_requested=False):\n+        super(FastcallTupleType, self).__init__()\n+        self.coercion_count = 0\n+        self.explicitly_requested = explicitly_requested\n+\n+    def create_declaration_utility_code(self, env):\n+        env.use_utility_code(UtilityCode.load_cached('FastcallTuple', 'FunctionArguments.c'))\n+\n+    def declaration_code(self, entity_code,\n+            for_display = 0, dll_linkage = None, pyrex = 0):\n+        if for_display:\n+            return \"FastcallTuple\"\n+        else:\n+            return \"__Pyx_FastcallTuple_obj %s\" % entity_code\n+\n+",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415147458",
            "id": 415147458,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0NzQ1OA==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 4337,
            "original_position": 116,
            "original_start_line": null,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415147458",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415148842"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415148842"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm … this wasn't written to be used here, but I see that it's handy. Could be worth a separate helper function instead. Not necessarily in this PR.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:33:59Z",
            "diff_hunk": "@@ -4252,6 +4260,180 @@ def same_as_resolved_type(self, other_type):\n     def error_condition(self, result_code):\n         return \"dummy\"\n \n+class FastcallBaseType(PyrexType):\n+    # Convenience class for refcounting functions\n+    needs_refcounting = 1\n+\n+    def generate_gotref(self, code, cname):\n+        code.putln(\"__Pyx_%s_GOTREF(%s);\" % (self.name, cname))\n+    def generate_decref(self, code, cname, nanny, have_gil):\n+        # don't distinguish between decref and xdecref for fastcall types\n+        code.putln(\"__Pyx_%s_XDECREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_decref_clear(self, code, cname, clear_before_decref, nanny, have_gil):\n+        code.putln(\"__Pyx_%s_CLEAR(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_xdecref(self, code, cname, nanny, have_gil):\n+        code.putln(\"__Pyx_%s_XDECREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_incref(self, code, cname, nanny):\n+        code.putln(\"__Pyx_%s_INCREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_xincref(self, code, cname, nanny):\n+        code.putln(\"__Pyx_%s_XINCREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_decref_set(self, code, cname, rhs_cname):\n+        code.putln(\"__Pyx_%s_DECREF_SET(%s, %s);\" % (self.name, cname, rhs_cname))\n+    def generate_xdecref_set(self, code, cname, rhs_cname):\n+        code.putln(\"__Pyx_%s_XDECREF_SET(%s, %s);\" % (self.name, cname, rhs_cname))\n+    def nullcheck_string(self, cname):\n+        return \"__Pyx_%s_NULLCHECK(%s)\" % (self.name, cname)\n+\n+    # different instances are created just to hold a different \"coercion_count\" for each\n+    # function. However, it's useful for looking up the type if they compare equal\n+    # (apart from the count there's no useful difference between instances)\n+    def __hash__(self):\n+        return hash((type(self), self.is_fastcall_tuple, self.is_fastcall_dict))\n+    def __eq__(self, other):\n+        return (self.is_fastcall_tuple == other.is_fastcall_tuple\n+                and self.is_fastcall_dict == other.is_fastcall_dict\n+                and type(self) == type(other)\n+                )\n+    def __ne__(self, other):\n+        return not (self == other) # looks to be necessary for Py2\n+\n+    def literal_code(self, value):\n+        assert value in (\"0\", \"{}\"), str(value)  # only know how to handle empty literals\n+        return self.declaration_value\n+\n+class FastcallTupleType(FastcallBaseType):\n+    \"\"\"Represents an optimized tuple-like type for \"*args\"\n+\n+    Eliminates the need for an actual tuple to be created, but\n+    only supports the limited range of operations that can\n+    be carried out efficiently\n+    \"\"\"\n+\n+    is_fastcall_tuple = 1\n+    name = \"FastcallTuple\"\n+    declaration_value = \"__Pyx_FastcallTuple_Empty\"\n+\n+    @property\n+    def nearest_python_type(self):\n+        # used when infer types is turned right down\n+        from .Builtin import tuple_type\n+        return tuple_type\n+\n+    def __init__(self, explicitly_requested=False):\n+        super(FastcallTupleType, self).__init__()\n+        self.coercion_count = 0\n+        self.explicitly_requested = explicitly_requested\n+\n+    def create_declaration_utility_code(self, env):\n+        env.use_utility_code(UtilityCode.load_cached('FastcallTuple', 'FunctionArguments.c'))\n+\n+    def declaration_code(self, entity_code,\n+            for_display = 0, dll_linkage = None, pyrex = 0):\n+        if for_display:\n+            return \"FastcallTuple\"\n+        else:\n+            return \"__Pyx_FastcallTuple_obj %s\" % entity_code\n+\n+\n+    def create_to_py_utility_code(self, env):\n+        # code is in declaration code\n+        return True\n+\n+    def create_from_py_utility_code(self, env):\n+        return False\n+\n+    def can_coerce_to_pyobject(self, env):\n+        return True\n+\n+    def to_py_call_code(self, source_code, result_code, result_type, to_py_function=None):\n+        # TODO maybe something cleverer with result_type\n+        from .Builtin import tuple_type\n+        #if (result_type is not tuple_type) and (not self.explicitly_requested):\n+            # tuple_type indicates that the conversion was requested by the user\n+        #    self.coercion_count += 1\n+        return \"%s = __Pyx_FastcallTuple_ToTuple(%s)\" % (result_code, source_code)\n+\n+class FastcallDictType(FastcallBaseType):\n+    \"\"\"Represents an optimized dict-like type for \"**kwds\"\n+\n+    Eliminates the need for an actual dict to be created,\n+    (in some cases) but\n+    only supports the limited range of operations that can\n+    be carried out efficiently\n+    \"\"\"\n+\n+    is_fastcall_dict = 1\n+    has_attributes = 1\n+    name = \"FastcallDict\"\n+    exception_check = None\n+    needs_refcounting = 1\n+\n+    @property\n+    def nearest_python_type(self):\n+        # used when infer types is turned right down\n+        from .Builtin import dict_type\n+        return dict_type\n+\n+    declaration_value = \"{{}}\" # Can only be used for the array version defined in the wrapper\n+\n+    @classmethod\n+    def _get_methods(self):\n+        from .Builtin import BuiltinMethod",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415148842",
            "id": 415148842,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0ODg0Mg==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 4381,
            "original_position": 160,
            "original_start_line": null,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415148842",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415149153"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415149153"
                }
            },
            "author_association": "MEMBER",
            "body": "unused?",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:36:02Z",
            "diff_hunk": "@@ -4763,6 +4947,15 @@ def bases(type):\n         # Fall back to void* for now.\n         return None\n \n+def _fastcall_spanning_types(type1, type2):\n+    from .Builtin import dict_type, tuple_type",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415149153",
            "id": 415149153,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0OTE1Mw==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 4951,
            "original_position": 233,
            "original_start_line": null,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415149153",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415149276"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415149276"
                }
            },
            "author_association": "MEMBER",
            "body": "Unrelated change.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:36:32Z",
            "diff_hunk": "@@ -4783,7 +4976,7 @@ def parse_basic_type(name):\n     basic_type = simple_c_type(1, 0, name)\n     if basic_type:\n         return basic_type\n-    #\n+",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415149276",
            "id": 415149276,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0OTI3Ng==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 4979,
            "original_position": 249,
            "original_start_line": 4786,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415149276",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415149569"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415149569"
                }
            },
            "author_association": "MEMBER",
            "body": "I think there should be a `Scope.is_local_scope` and `Scope.is_struct_or_union_scope`.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:38:34Z",
            "diff_hunk": "@@ -469,6 +469,13 @@ def declare(self, name, cname, type, pos, visibility, shadow = 0, is_type = 0, c\n         # declared.\n         if type.is_buffer and not isinstance(self, LocalScope): # and not is_type:\n             error(pos, 'Buffer types only allowed as function local variables')\n+        elif (type.is_fastcall_type and\n+              not isinstance(self, (LocalScope, StructOrUnionScope))):",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415149569",
            "id": 415149569,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0OTU2OQ==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 473,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415149569",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415149759"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415149759"
                }
            },
            "author_association": "MEMBER",
            "body": "It'd better, I think.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:39:48Z",
            "diff_hunk": "@@ -189,6 +189,7 @@ def visit_FromImportStatNode(self, node):\n \n     def visit_DefNode(self, node):\n         # use fake expressions with the right result type\n+        # TODO does this need to account for fastcall args?",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415149759",
            "id": 415149759,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE0OTc1OQ==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 192,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Compiler/TypeInference.py",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415149759",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415150478"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415150478"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n#if PY_MAJOR_VERSION < 3\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:44:11Z",
            "diff_hunk": "@@ -214,6 +214,68 @@ static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject *const *kwvalues\n //\n //  This method does not check for required keyword arguments.\n \n+static CYTHON_INLINE int __Pyx_ParseOptionalKeywords_Impl_Iter(PyObject* kwds, int kwds_is_tuple,\n+                                                          PyObject *const *kwvalues,\n+                                        Py_ssize_t *pos, PyObject **key, PyObject **value) {\n+    if (kwds_is_tuple) {\n+        if (*pos >= PyTuple_GET_SIZE(kwds)) return 0;\n+            *key = PyTuple_GET_ITEM(kwds, *pos);\n+            *value = kwvalues[*pos];\n+            (*pos)++;\n+    } else {\n+        if (!PyDict_Next(kwds, pos, key, value)) return 0;\n+    }\n+    return 1;\n+}\n+\n+typedef int (*__Pyx_ParseOptionalKeywords_Impl_CmpFunc)(PyObject*, PyObject*);\n+\n+static CYTHON_INLINE int __Pyx_ParseOptionalKeywords_Impl_BasicCheck(PyObject* rhs, PyObject* lhs) {\n+    return lhs != rhs;\n+}\n+\n+static CYTHON_INLINE PyObject*** __Pyx_ParseOptionalKeywords_Impl_MatchName(PyObject* key,\n+                                            PyObject **name_start[], PyObject ***name_end,\n+                                            const char* function_name) {\n+    // note that an error can be set on return from this function\n+\n+    PyObject ***name = name_start;\n+    #if PY_MAJOR_VERSION < 3",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415150478",
            "id": 415150478,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE1MDQ3OA==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 243,
            "original_position": 30,
            "original_start_line": null,
            "path": "Cython/Utility/FunctionArguments.c",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415150478",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415151162"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415151162"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nstatic CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_FASTCALL_struct(PyObject *const *args, Py_ssize_t start, Py_ssize_t stop);\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:48:09Z",
            "diff_hunk": "@@ -462,3 +465,352 @@ static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyO\n     return NULL;  // not found (no exception set)\n }\n #endif\n+\n+/////////////// FastcallTuple.proto ///////////////\n+//@substitute: naming\n+// A struct which can be created cheaply without needing to construct a Python object\n+\n+#if CYTHON_METH_FASTCALL\n+typedef struct {\n+    PyObject *const *args;\n+    Py_ssize_t nargs;\n+} __Pyx_FastcallTuple_obj;\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_New(PyObject *const *args, Py_ssize_t nargs);\n+// BorrowedEmpty useful when calling a function with only fastcall keyword arguments\n+#define __Pyx_FastcallTuple_BorrowedEmpty(args) __Pyx_FastcallTuple_New(args, 0)\n+#define __Pyx_FastcallTuple_Empty {}\n+// reference counting is all a no-op\n+#define __Pyx_FastcallTuple_GOTREF(x)\n+#define __Pyx_FastcallTuple_CLEAR(x, nanny)\n+#define __Pyx_FastcallTuple_XINCREF(x, nanny)\n+#define __Pyx_FastcallTuple_INCREF(x, nanny)\n+#define __Pyx_FastcallTuple_XDECREF(x, nanny)\n+#define __Pyx_FastcallTuple_DECREF_SET(lhs, rhs) do { lhs = rhs } while(0);\n+#define __Pyx_FastcallTuple_XDECREF_SET(lhs, rhs) do { lhs = rhs } while(0);\n+#define __Pyx_FastcallTuple_NULLCHECK(x) x.args\n+static CYTHON_INLINE Py_ssize_t __Pyx_FastcallTuple_Len(__Pyx_FastcallTuple_obj o); /* proto */\n+#else\n+typedef PyObject* __Pyx_FastcallTuple_obj;\n+#define __Pyx_FastcallTuple_Empty 0\n+#define __Pyx_FastcallTuple_New PyTuple_GetSlice\n+#define __Pyx_FastcallTuple_BorrowedEmpty(ignore) $empty_tuple\n+#define __Pyx_FastcallTuple_GOTREF(x) __Pyx_GOTREF(x)\n+#define __Pyx_FastcallTuple_CLEAR(x, nanny) if (nanny) { __Pyx_CLEAR(x); } else { Py_CLEAR(x); }\n+#define __Pyx_FastcallTuple_XINCREF(x, nanny)  if (nanny) { __Pyx_XINCREF(x); } else { Py_XINCREF(x); }\n+#define __Pyx_FastcallTuple_INCREF(x, nanny) if (nanny) { __Pyx_INCREF(x); } else { Py_INCREF(x); }\n+#define __Pyx_FastcallTuple_XDECREF(x, nanny) if (nanny) { __Pyx_XDECREF(x); } else { Py_XDECREF(x); }\n+#define __Pyx_FastcallTuple_DECREF_SET(lhs, rhs) __Pyx_DECREF_SET(lhs, rhs)\n+#define __Pyx_FastcallTuple_XDECREF_SET(lhs, rhs) __Pyx_XDECREF_SET(lhs, rhs)\n+#define __Pyx_FastcallTuple_NULLCHECK(x) x\n+#define __Pyx_FastcallTuple_Len PyTuple_GET_SIZE\n+#endif\n+\n+static CYTHON_INLINE PyObject *__Pyx_FastcallTuple_ToTuple(__Pyx_FastcallTuple_obj o);  /* proto */\n+\n+#if CYTHON_METH_FASTCALL\n+    static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_FASTCALL_struct(PyObject *const *args, Py_ssize_t start, Py_ssize_t stop);",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415151162",
            "id": 415151162,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE1MTE2Mg==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 511,
            "original_position": 227,
            "original_start_line": null,
            "path": "Cython/Utility/FunctionArguments.c",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415151162",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415151637"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415151637"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    if (stop < start) nargs = 0;\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T21:50:56Z",
            "diff_hunk": "@@ -462,3 +465,352 @@ static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyO\n     return NULL;  // not found (no exception set)\n }\n #endif\n+\n+/////////////// FastcallTuple.proto ///////////////\n+//@substitute: naming\n+// A struct which can be created cheaply without needing to construct a Python object\n+\n+#if CYTHON_METH_FASTCALL\n+typedef struct {\n+    PyObject *const *args;\n+    Py_ssize_t nargs;\n+} __Pyx_FastcallTuple_obj;\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_New(PyObject *const *args, Py_ssize_t nargs);\n+// BorrowedEmpty useful when calling a function with only fastcall keyword arguments\n+#define __Pyx_FastcallTuple_BorrowedEmpty(args) __Pyx_FastcallTuple_New(args, 0)\n+#define __Pyx_FastcallTuple_Empty {}\n+// reference counting is all a no-op\n+#define __Pyx_FastcallTuple_GOTREF(x)\n+#define __Pyx_FastcallTuple_CLEAR(x, nanny)\n+#define __Pyx_FastcallTuple_XINCREF(x, nanny)\n+#define __Pyx_FastcallTuple_INCREF(x, nanny)\n+#define __Pyx_FastcallTuple_XDECREF(x, nanny)\n+#define __Pyx_FastcallTuple_DECREF_SET(lhs, rhs) do { lhs = rhs } while(0);\n+#define __Pyx_FastcallTuple_XDECREF_SET(lhs, rhs) do { lhs = rhs } while(0);\n+#define __Pyx_FastcallTuple_NULLCHECK(x) x.args\n+static CYTHON_INLINE Py_ssize_t __Pyx_FastcallTuple_Len(__Pyx_FastcallTuple_obj o); /* proto */\n+#else\n+typedef PyObject* __Pyx_FastcallTuple_obj;\n+#define __Pyx_FastcallTuple_Empty 0\n+#define __Pyx_FastcallTuple_New PyTuple_GetSlice\n+#define __Pyx_FastcallTuple_BorrowedEmpty(ignore) $empty_tuple\n+#define __Pyx_FastcallTuple_GOTREF(x) __Pyx_GOTREF(x)\n+#define __Pyx_FastcallTuple_CLEAR(x, nanny) if (nanny) { __Pyx_CLEAR(x); } else { Py_CLEAR(x); }\n+#define __Pyx_FastcallTuple_XINCREF(x, nanny)  if (nanny) { __Pyx_XINCREF(x); } else { Py_XINCREF(x); }\n+#define __Pyx_FastcallTuple_INCREF(x, nanny) if (nanny) { __Pyx_INCREF(x); } else { Py_INCREF(x); }\n+#define __Pyx_FastcallTuple_XDECREF(x, nanny) if (nanny) { __Pyx_XDECREF(x); } else { Py_XDECREF(x); }\n+#define __Pyx_FastcallTuple_DECREF_SET(lhs, rhs) __Pyx_DECREF_SET(lhs, rhs)\n+#define __Pyx_FastcallTuple_XDECREF_SET(lhs, rhs) __Pyx_XDECREF_SET(lhs, rhs)\n+#define __Pyx_FastcallTuple_NULLCHECK(x) x\n+#define __Pyx_FastcallTuple_Len PyTuple_GET_SIZE\n+#endif\n+\n+static CYTHON_INLINE PyObject *__Pyx_FastcallTuple_ToTuple(__Pyx_FastcallTuple_obj o);  /* proto */\n+\n+#if CYTHON_METH_FASTCALL\n+    static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_FASTCALL_struct(PyObject *const *args, Py_ssize_t start, Py_ssize_t stop);\n+#else\n+#define __Pyx_ArgsSlice_FASTCALL_struct(args, start, stop) __Pyx_ArgsSlice_VARARGS_struct(args, start, stop)\n+#endif\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_VARARGS_struct(PyObject *args, Py_ssize_t start, Py_ssize_t stop);\n+\n+// no type-checking - used for conversion in function call\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_FromTuple(PyObject* o);\n+\n+/////////////// FastcallTuple ///////////////\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_New(PyObject *const *args, Py_ssize_t nargs) {\n+    __Pyx_FastcallTuple_obj out = { args, nargs };\n+    return out;\n+}\n+\n+static CYTHON_INLINE Py_ssize_t __Pyx_FastcallTuple_Len(__Pyx_FastcallTuple_obj o) {\n+    return __Pyx_PyVectorcall_NARGS(o.nargs);\n+}\n+#endif\n+\n+static CYTHON_INLINE PyObject *__Pyx_FastcallTuple_ToTuple(__Pyx_FastcallTuple_obj o) {\n+#if CYTHON_METH_FASTCALL\n+    return __Pyx_PyTuple_FromArray(o.args, __Pyx_FastcallTuple_Len(o));\n+#else\n+    Py_INCREF(o);\n+    return o;\n+#endif\n+}\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_FASTCALL_struct(PyObject *const *args, Py_ssize_t start, Py_ssize_t stop) {\n+    Py_ssize_t nargs = (stop - start);\n+    if (nargs < 0) nargs = 0;",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415151637",
            "id": 415151637,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE1MTYzNw==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 545,
            "original_position": 261,
            "original_start_line": null,
            "path": "Cython/Utility/FunctionArguments.c",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415151637",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415153261"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415153261"
                }
            },
            "author_association": "MEMBER",
            "body": "We need to return the expected type here, both in Py2 (list) and Py3 (view).",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T22:00:58Z",
            "diff_hunk": "@@ -462,3 +465,352 @@ static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyO\n     return NULL;  // not found (no exception set)\n }\n #endif\n+\n+/////////////// FastcallTuple.proto ///////////////\n+//@substitute: naming\n+// A struct which can be created cheaply without needing to construct a Python object\n+\n+#if CYTHON_METH_FASTCALL\n+typedef struct {\n+    PyObject *const *args;\n+    Py_ssize_t nargs;\n+} __Pyx_FastcallTuple_obj;\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_New(PyObject *const *args, Py_ssize_t nargs);\n+// BorrowedEmpty useful when calling a function with only fastcall keyword arguments\n+#define __Pyx_FastcallTuple_BorrowedEmpty(args) __Pyx_FastcallTuple_New(args, 0)\n+#define __Pyx_FastcallTuple_Empty {}\n+// reference counting is all a no-op\n+#define __Pyx_FastcallTuple_GOTREF(x)\n+#define __Pyx_FastcallTuple_CLEAR(x, nanny)\n+#define __Pyx_FastcallTuple_XINCREF(x, nanny)\n+#define __Pyx_FastcallTuple_INCREF(x, nanny)\n+#define __Pyx_FastcallTuple_XDECREF(x, nanny)\n+#define __Pyx_FastcallTuple_DECREF_SET(lhs, rhs) do { lhs = rhs } while(0);\n+#define __Pyx_FastcallTuple_XDECREF_SET(lhs, rhs) do { lhs = rhs } while(0);\n+#define __Pyx_FastcallTuple_NULLCHECK(x) x.args\n+static CYTHON_INLINE Py_ssize_t __Pyx_FastcallTuple_Len(__Pyx_FastcallTuple_obj o); /* proto */\n+#else\n+typedef PyObject* __Pyx_FastcallTuple_obj;\n+#define __Pyx_FastcallTuple_Empty 0\n+#define __Pyx_FastcallTuple_New PyTuple_GetSlice\n+#define __Pyx_FastcallTuple_BorrowedEmpty(ignore) $empty_tuple\n+#define __Pyx_FastcallTuple_GOTREF(x) __Pyx_GOTREF(x)\n+#define __Pyx_FastcallTuple_CLEAR(x, nanny) if (nanny) { __Pyx_CLEAR(x); } else { Py_CLEAR(x); }\n+#define __Pyx_FastcallTuple_XINCREF(x, nanny)  if (nanny) { __Pyx_XINCREF(x); } else { Py_XINCREF(x); }\n+#define __Pyx_FastcallTuple_INCREF(x, nanny) if (nanny) { __Pyx_INCREF(x); } else { Py_INCREF(x); }\n+#define __Pyx_FastcallTuple_XDECREF(x, nanny) if (nanny) { __Pyx_XDECREF(x); } else { Py_XDECREF(x); }\n+#define __Pyx_FastcallTuple_DECREF_SET(lhs, rhs) __Pyx_DECREF_SET(lhs, rhs)\n+#define __Pyx_FastcallTuple_XDECREF_SET(lhs, rhs) __Pyx_XDECREF_SET(lhs, rhs)\n+#define __Pyx_FastcallTuple_NULLCHECK(x) x\n+#define __Pyx_FastcallTuple_Len PyTuple_GET_SIZE\n+#endif\n+\n+static CYTHON_INLINE PyObject *__Pyx_FastcallTuple_ToTuple(__Pyx_FastcallTuple_obj o);  /* proto */\n+\n+#if CYTHON_METH_FASTCALL\n+    static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_FASTCALL_struct(PyObject *const *args, Py_ssize_t start, Py_ssize_t stop);\n+#else\n+#define __Pyx_ArgsSlice_FASTCALL_struct(args, start, stop) __Pyx_ArgsSlice_VARARGS_struct(args, start, stop)\n+#endif\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_VARARGS_struct(PyObject *args, Py_ssize_t start, Py_ssize_t stop);\n+\n+// no type-checking - used for conversion in function call\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_FromTuple(PyObject* o);\n+\n+/////////////// FastcallTuple ///////////////\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_New(PyObject *const *args, Py_ssize_t nargs) {\n+    __Pyx_FastcallTuple_obj out = { args, nargs };\n+    return out;\n+}\n+\n+static CYTHON_INLINE Py_ssize_t __Pyx_FastcallTuple_Len(__Pyx_FastcallTuple_obj o) {\n+    return __Pyx_PyVectorcall_NARGS(o.nargs);\n+}\n+#endif\n+\n+static CYTHON_INLINE PyObject *__Pyx_FastcallTuple_ToTuple(__Pyx_FastcallTuple_obj o) {\n+#if CYTHON_METH_FASTCALL\n+    return __Pyx_PyTuple_FromArray(o.args, __Pyx_FastcallTuple_Len(o));\n+#else\n+    Py_INCREF(o);\n+    return o;\n+#endif\n+}\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_FASTCALL_struct(PyObject *const *args, Py_ssize_t start, Py_ssize_t stop) {\n+    Py_ssize_t nargs = (stop - start);\n+    if (nargs < 0) nargs = 0;\n+#if CYTHON_VECTORCALL\n+    if (start > 0) {\n+        nargs |= PY_VECTORCALL_ARGUMENTS_OFFSET; // we know there's at least one space in front\n+    }\n+#endif\n+    return __Pyx_FastcallTuple_New(args+start, nargs);\n+}\n+#endif // CYTHON_METH_FASTCALL\n+\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_VARARGS_struct(PyObject *args, Py_ssize_t start, Py_ssize_t stop) {\n+#if CYTHON_METH_FASTCALL\n+    __Pyx_FastcallTuple_obj out = __Pyx_FastcallTuple_FromTuple(args);\n+    out.args += start;\n+    out.nargs = stop-start;\n+    return out;\n+#else\n+    return PyTuple_GetSlice(args, start, stop);\n+#endif\n+}\n+\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_FromTuple(PyObject* o) {\n+#if CYTHON_METH_FASTCALL\n+    return __Pyx_FastcallTuple_New(&PyTuple_GET_ITEM(o,0), PyTuple_GET_SIZE(o));\n+#else\n+    Py_INCREF(o);\n+    return o;\n+#endif\n+}\n+\n+/////////////////// FastcallDict.proto /////////////////////////\n+\n+typedef struct {\n+    PyObject *const *args; // start of the keyword args values\n+    PyObject *object;      // either a dict, a tuple or NULL\n+} __Pyx_FastcallDict_obj;\n+// exists in one of three (ish) states:\n+// * args is NULL, \"object\" is NULL, meaning no keyword arguments\n+// * args is NULL, in which case \"object\" is actually a dict, and this just defers to the dict methods\n+// * args is non-null, object is a tuple\n+// * args is non-null, object is NULL - used to signify an invalid state (but only really checked on creation)\n+// Defaults to \"object\" being a dict unless one of the quicker options can be easily created\n+\n+// just a constant pointer to use for the \"args is non-null object NULL\" invalid state case\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_ErrorArgs[0];\n+\n+static CYTHON_UNUSED Py_ssize_t __Pyx_FastcallDict_Len(__Pyx_FastcallDict_obj *o); /* proto */\n+static CYTHON_UNUSED __Pyx_FastcallDict_obj __Pyx_FastcallDict_New(void); /* proto */\n+\n+// reference counting - for these always use \"X\" functions since object==NULL is a valid state\n+// It's difficult to do refnanny sensibly on these at the moment since it's valid for\n+// x->object to be swapped out in the middle of a function if it's coerced to Python.\n+// Therefore, disable it (FIXME!?)\n+#define __Pyx_FastcallDict_GOTREF(x)\n+#define __Pyx_FastcallDict_CLEAR(x, nanny) do { Py_CLEAR(x->object); x->args = NULL; } while(0)\n+#define __Pyx_FastcallDict_XDECREF(x, nanny) Py_XDECREF(x->object)\n+#define __Pyx_FastcallDict_INCREF __Pyx_FastcallDict_XINCREF\n+#define __Pyx_FastcallDict_XINCREF(x, nanny) Py_XINCREF(x->object)\n+#define __Pyx_FastcallDict_DECREF_SET __Pyx_FastcallDict_XDECREF_SET\n+#define __Pyx_FastcallDict_XDECREF_SET(lhs, rhs) do { \\\n+        __PyxFastcallDict_obj *temp = lhs; \\\n+        lhs = rhs; \\\n+        Py_XDECREF(temp->object); \\\n+    } while(0)\n+#define __Pyx_FastcallDict_NULLCHECK(x) !(x->args!=NULL && x->object==NULL)\n+\n+/////////////////// FastcallDict //////////////////////\n+\n+static CYTHON_UNUSED Py_ssize_t __Pyx_FastcallDict_Len(__Pyx_FastcallDict_obj *o) {\n+    if (o->object == NULL) {\n+        return 0;\n+    } else if (o->args) {\n+        return PyTuple_GET_SIZE(o->object);\n+    } else {\n+        return PyDict_Size(o->object);\n+    }\n+}\n+\n+static CYTHON_UNUSED __Pyx_FastcallDict_obj __Pyx_FastcallDict_New(void) {\n+    __Pyx_FastcallDict_obj out = {};\n+    return out;\n+}\n+\n+/////////////////// FastcallDictConvert.proto //////////////////////\n+\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_ToDict(__Pyx_FastcallDict_obj *o); /* proto */\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_ToDict_Explicit(__Pyx_FastcallDict_obj *o); /* proto */\n+\n+/////////////////// FastcallDictConvert //////////////////////\n+//@requires: fastcall\n+\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_ToDict(__Pyx_FastcallDict_obj *o){\n+    // when implicitly converted to dict change o.object so that modifications\n+    // to the dict propagate\n+    PyObject* dict = __Pyx_FastcallDict_ToDict_Explicit(o);\n+    if (!dict) return NULL;\n+    o->args = NULL;\n+    Py_CLEAR(o->object);\n+    o->object = dict;\n+    Py_INCREF(dict);\n+    return dict;\n+}\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_ToDict_Explicit(__Pyx_FastcallDict_obj* o) {\n+    if (o->object == NULL) {\n+        return PyDict_New();\n+    } else if (o->args) {\n+        return __Pyx_KwargsAsDict_FASTCALL(o->object, o->args);\n+    } else { // already a dict\n+        Py_INCREF(o->object);\n+        return o->object;\n+    }\n+}\n+\n+/////////////////// FastcallDictIter.proto //////////////////////\n+\n+// These methods behaves slightly differently from the regular dict methods\n+// in that they just return a list rather than an iterator. For most of them\n+// an iterator would be dangerous since it might outlive the __Pyx_FastcallDict_obj\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_Keys(__Pyx_FastcallDict_obj* o); /* proto */\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_Values(__Pyx_FastcallDict_obj* o); /* proto */\n+// Items is excluded since it's more complicated and performance wasn't great\n+\n+/////////////////// FastcallDictIter //////////////////////\n+//@requires:ObjectHandling.c::TupleAndListFromArray\n+\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_Keys(__Pyx_FastcallDict_obj *o) {",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415153261",
            "id": 415153261,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE1MzI2MQ==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 670,
            "original_position": 386,
            "original_start_line": null,
            "path": "Cython/Utility/FunctionArguments.c",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415153261",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415153850"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415153850"
                }
            },
            "author_association": "MEMBER",
            "body": "Probably not a tuple. ;-)",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T22:04:30Z",
            "diff_hunk": "@@ -462,3 +465,352 @@ static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyO\n     return NULL;  // not found (no exception set)\n }\n #endif\n+\n+/////////////// FastcallTuple.proto ///////////////\n+//@substitute: naming\n+// A struct which can be created cheaply without needing to construct a Python object\n+\n+#if CYTHON_METH_FASTCALL\n+typedef struct {\n+    PyObject *const *args;\n+    Py_ssize_t nargs;\n+} __Pyx_FastcallTuple_obj;\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_New(PyObject *const *args, Py_ssize_t nargs);\n+// BorrowedEmpty useful when calling a function with only fastcall keyword arguments\n+#define __Pyx_FastcallTuple_BorrowedEmpty(args) __Pyx_FastcallTuple_New(args, 0)\n+#define __Pyx_FastcallTuple_Empty {}\n+// reference counting is all a no-op\n+#define __Pyx_FastcallTuple_GOTREF(x)\n+#define __Pyx_FastcallTuple_CLEAR(x, nanny)\n+#define __Pyx_FastcallTuple_XINCREF(x, nanny)\n+#define __Pyx_FastcallTuple_INCREF(x, nanny)\n+#define __Pyx_FastcallTuple_XDECREF(x, nanny)\n+#define __Pyx_FastcallTuple_DECREF_SET(lhs, rhs) do { lhs = rhs } while(0);\n+#define __Pyx_FastcallTuple_XDECREF_SET(lhs, rhs) do { lhs = rhs } while(0);\n+#define __Pyx_FastcallTuple_NULLCHECK(x) x.args\n+static CYTHON_INLINE Py_ssize_t __Pyx_FastcallTuple_Len(__Pyx_FastcallTuple_obj o); /* proto */\n+#else\n+typedef PyObject* __Pyx_FastcallTuple_obj;\n+#define __Pyx_FastcallTuple_Empty 0\n+#define __Pyx_FastcallTuple_New PyTuple_GetSlice\n+#define __Pyx_FastcallTuple_BorrowedEmpty(ignore) $empty_tuple\n+#define __Pyx_FastcallTuple_GOTREF(x) __Pyx_GOTREF(x)\n+#define __Pyx_FastcallTuple_CLEAR(x, nanny) if (nanny) { __Pyx_CLEAR(x); } else { Py_CLEAR(x); }\n+#define __Pyx_FastcallTuple_XINCREF(x, nanny)  if (nanny) { __Pyx_XINCREF(x); } else { Py_XINCREF(x); }\n+#define __Pyx_FastcallTuple_INCREF(x, nanny) if (nanny) { __Pyx_INCREF(x); } else { Py_INCREF(x); }\n+#define __Pyx_FastcallTuple_XDECREF(x, nanny) if (nanny) { __Pyx_XDECREF(x); } else { Py_XDECREF(x); }\n+#define __Pyx_FastcallTuple_DECREF_SET(lhs, rhs) __Pyx_DECREF_SET(lhs, rhs)\n+#define __Pyx_FastcallTuple_XDECREF_SET(lhs, rhs) __Pyx_XDECREF_SET(lhs, rhs)\n+#define __Pyx_FastcallTuple_NULLCHECK(x) x\n+#define __Pyx_FastcallTuple_Len PyTuple_GET_SIZE\n+#endif\n+\n+static CYTHON_INLINE PyObject *__Pyx_FastcallTuple_ToTuple(__Pyx_FastcallTuple_obj o);  /* proto */\n+\n+#if CYTHON_METH_FASTCALL\n+    static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_FASTCALL_struct(PyObject *const *args, Py_ssize_t start, Py_ssize_t stop);\n+#else\n+#define __Pyx_ArgsSlice_FASTCALL_struct(args, start, stop) __Pyx_ArgsSlice_VARARGS_struct(args, start, stop)\n+#endif\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_VARARGS_struct(PyObject *args, Py_ssize_t start, Py_ssize_t stop);\n+\n+// no type-checking - used for conversion in function call\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_FromTuple(PyObject* o);\n+\n+/////////////// FastcallTuple ///////////////\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_New(PyObject *const *args, Py_ssize_t nargs) {\n+    __Pyx_FastcallTuple_obj out = { args, nargs };\n+    return out;\n+}\n+\n+static CYTHON_INLINE Py_ssize_t __Pyx_FastcallTuple_Len(__Pyx_FastcallTuple_obj o) {\n+    return __Pyx_PyVectorcall_NARGS(o.nargs);\n+}\n+#endif\n+\n+static CYTHON_INLINE PyObject *__Pyx_FastcallTuple_ToTuple(__Pyx_FastcallTuple_obj o) {\n+#if CYTHON_METH_FASTCALL\n+    return __Pyx_PyTuple_FromArray(o.args, __Pyx_FastcallTuple_Len(o));\n+#else\n+    Py_INCREF(o);\n+    return o;\n+#endif\n+}\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_FASTCALL_struct(PyObject *const *args, Py_ssize_t start, Py_ssize_t stop) {\n+    Py_ssize_t nargs = (stop - start);\n+    if (nargs < 0) nargs = 0;\n+#if CYTHON_VECTORCALL\n+    if (start > 0) {\n+        nargs |= PY_VECTORCALL_ARGUMENTS_OFFSET; // we know there's at least one space in front\n+    }\n+#endif\n+    return __Pyx_FastcallTuple_New(args+start, nargs);\n+}\n+#endif // CYTHON_METH_FASTCALL\n+\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_VARARGS_struct(PyObject *args, Py_ssize_t start, Py_ssize_t stop) {\n+#if CYTHON_METH_FASTCALL\n+    __Pyx_FastcallTuple_obj out = __Pyx_FastcallTuple_FromTuple(args);\n+    out.args += start;\n+    out.nargs = stop-start;\n+    return out;\n+#else\n+    return PyTuple_GetSlice(args, start, stop);\n+#endif\n+}\n+\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_FromTuple(PyObject* o) {\n+#if CYTHON_METH_FASTCALL\n+    return __Pyx_FastcallTuple_New(&PyTuple_GET_ITEM(o,0), PyTuple_GET_SIZE(o));\n+#else\n+    Py_INCREF(o);\n+    return o;\n+#endif\n+}\n+\n+/////////////////// FastcallDict.proto /////////////////////////\n+\n+typedef struct {\n+    PyObject *const *args; // start of the keyword args values\n+    PyObject *object;      // either a dict, a tuple or NULL\n+} __Pyx_FastcallDict_obj;\n+// exists in one of three (ish) states:\n+// * args is NULL, \"object\" is NULL, meaning no keyword arguments\n+// * args is NULL, in which case \"object\" is actually a dict, and this just defers to the dict methods\n+// * args is non-null, object is a tuple\n+// * args is non-null, object is NULL - used to signify an invalid state (but only really checked on creation)\n+// Defaults to \"object\" being a dict unless one of the quicker options can be easily created\n+\n+// just a constant pointer to use for the \"args is non-null object NULL\" invalid state case\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_ErrorArgs[0];\n+\n+static CYTHON_UNUSED Py_ssize_t __Pyx_FastcallDict_Len(__Pyx_FastcallDict_obj *o); /* proto */\n+static CYTHON_UNUSED __Pyx_FastcallDict_obj __Pyx_FastcallDict_New(void); /* proto */\n+\n+// reference counting - for these always use \"X\" functions since object==NULL is a valid state\n+// It's difficult to do refnanny sensibly on these at the moment since it's valid for\n+// x->object to be swapped out in the middle of a function if it's coerced to Python.\n+// Therefore, disable it (FIXME!?)\n+#define __Pyx_FastcallDict_GOTREF(x)\n+#define __Pyx_FastcallDict_CLEAR(x, nanny) do { Py_CLEAR(x->object); x->args = NULL; } while(0)\n+#define __Pyx_FastcallDict_XDECREF(x, nanny) Py_XDECREF(x->object)\n+#define __Pyx_FastcallDict_INCREF __Pyx_FastcallDict_XINCREF\n+#define __Pyx_FastcallDict_XINCREF(x, nanny) Py_XINCREF(x->object)\n+#define __Pyx_FastcallDict_DECREF_SET __Pyx_FastcallDict_XDECREF_SET\n+#define __Pyx_FastcallDict_XDECREF_SET(lhs, rhs) do { \\\n+        __PyxFastcallDict_obj *temp = lhs; \\\n+        lhs = rhs; \\\n+        Py_XDECREF(temp->object); \\\n+    } while(0)\n+#define __Pyx_FastcallDict_NULLCHECK(x) !(x->args!=NULL && x->object==NULL)\n+\n+/////////////////// FastcallDict //////////////////////\n+\n+static CYTHON_UNUSED Py_ssize_t __Pyx_FastcallDict_Len(__Pyx_FastcallDict_obj *o) {\n+    if (o->object == NULL) {\n+        return 0;\n+    } else if (o->args) {\n+        return PyTuple_GET_SIZE(o->object);\n+    } else {\n+        return PyDict_Size(o->object);\n+    }\n+}\n+\n+static CYTHON_UNUSED __Pyx_FastcallDict_obj __Pyx_FastcallDict_New(void) {\n+    __Pyx_FastcallDict_obj out = {};\n+    return out;\n+}\n+\n+/////////////////// FastcallDictConvert.proto //////////////////////\n+\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_ToDict(__Pyx_FastcallDict_obj *o); /* proto */\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_ToDict_Explicit(__Pyx_FastcallDict_obj *o); /* proto */\n+\n+/////////////////// FastcallDictConvert //////////////////////\n+//@requires: fastcall\n+\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_ToDict(__Pyx_FastcallDict_obj *o){\n+    // when implicitly converted to dict change o.object so that modifications\n+    // to the dict propagate\n+    PyObject* dict = __Pyx_FastcallDict_ToDict_Explicit(o);\n+    if (!dict) return NULL;\n+    o->args = NULL;\n+    Py_CLEAR(o->object);\n+    o->object = dict;\n+    Py_INCREF(dict);\n+    return dict;\n+}\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_ToDict_Explicit(__Pyx_FastcallDict_obj* o) {\n+    if (o->object == NULL) {\n+        return PyDict_New();\n+    } else if (o->args) {\n+        return __Pyx_KwargsAsDict_FASTCALL(o->object, o->args);\n+    } else { // already a dict\n+        Py_INCREF(o->object);\n+        return o->object;\n+    }\n+}\n+\n+/////////////////// FastcallDictIter.proto //////////////////////\n+\n+// These methods behaves slightly differently from the regular dict methods\n+// in that they just return a list rather than an iterator. For most of them\n+// an iterator would be dangerous since it might outlive the __Pyx_FastcallDict_obj\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_Keys(__Pyx_FastcallDict_obj* o); /* proto */\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_Values(__Pyx_FastcallDict_obj* o); /* proto */\n+// Items is excluded since it's more complicated and performance wasn't great\n+\n+/////////////////// FastcallDictIter //////////////////////\n+//@requires:ObjectHandling.c::TupleAndListFromArray\n+\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_Keys(__Pyx_FastcallDict_obj *o) {\n+    if (o->object == NULL) {\n+        return PyList_New(0);\n+    } else if (o->args) {\n+        Py_INCREF(o->object);\n+        return o->object;  // a tuple\n+    } else {\n+        return PyDict_Keys(o->object);\n+    }\n+}\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_Values(__Pyx_FastcallDict_obj *o) {\n+    if (o->object == NULL) {\n+        return PyList_New(0);\n+    } else if (o->args) {\n+        return __Pyx_PyList_FromArray(o->args, __Pyx_FastcallDict_Len(o));  // a tuple",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415153850",
            "id": 415153850,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE1Mzg1MA==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 684,
            "original_position": 400,
            "original_start_line": null,
            "path": "Cython/Utility/FunctionArguments.c",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415153850",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415154078"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415154078"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        if (unlikely(PySequence_SetItem(dest, i, src[i]) != 0)) {\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T22:05:59Z",
            "diff_hunk": "@@ -774,6 +813,17 @@ static CYTHON_INLINE void __Pyx_copy_object_array(PyObject *const *CYTHON_RESTRI\n         Py_INCREF(v);\n     }\n }\n+#else\n+static CYTHON_INLINE int __Pyx_fill_sequence_from_array(PyObject *const *src, PyObject* dest, Py_ssize_t length) {\n+    Py_ssize_t i;\n+    for (i = 0; i < length; i++) {\n+        if (PySequence_SetItem(dest, i, src[i]) != 0) {",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415154078",
            "id": 415154078,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE1NDA3OA==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 820,
            "original_position": 67,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415154078",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415154250"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415154250"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        if (unlikely((i < 0) || (i >= len))) {\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T22:06:55Z",
            "diff_hunk": "@@ -373,6 +373,46 @@ static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {\n }\n #endif\n \n+/////////////// FastcallTupleGetItemInt.proto ///////////////\n+//@requires: FunctionArguments.c::FastcallTuple\n+//@requires: GetItemInt\n+\n+// based on the list and tuple versions\n+#define __Pyx_GetItemInt_FastcallTuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \\\n+    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \\\n+    __Pyx_GetItemInt_FastcallTuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) : \\\n+    (PyErr_SetString(PyExc_IndexError, \"tuple index out of range\"), (PyObject*)NULL))\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE PyObject *__Pyx_GetItemInt_FastcallTuple_Fast(__Pyx_FastcallTuple_obj o, Py_ssize_t i,\n+                                                              int wraparound, int boundscheck);\n+#else\n+#define __Pyx_GetItemInt_FastcallTuple_Fast __Pyx_GetItemInt_Tuple_Fast\n+#endif\n+\n+/////////////// FastcallTupleGetItemInt ///////////////\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE PyObject *__Pyx_GetItemInt_FastcallTuple_Fast(__Pyx_FastcallTuple_obj o, Py_ssize_t i,\n+                                                              int wraparound, int boundscheck) {\n+    Py_ssize_t len = __Pyx_FastcallTuple_Len(o);\n+    if (wraparound) {\n+        if (i < 0) {\n+            i = len + i;\n+        }\n+    }\n+    if (boundscheck) {\n+        if ((i < 0) || (i >= len)) {",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415154250",
            "id": 415154250,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE1NDI1MA==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 404,
            "original_position": 32,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415154250",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415154310"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415154310"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    if (unlikely(__Pyx_fill_sequence_from_array(src, res, n) != 0)) {\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T22:07:30Z",
            "diff_hunk": "@@ -785,7 +835,13 @@ __Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n)\n     }\n     res = PyTuple_New(n);\n     if (unlikely(res == NULL)) return NULL;\n+#if CYTHON_COMPILING_IN_CPYTHON\n     __Pyx_copy_object_array(src, ((PyTupleObject*)res)->ob_item, n);\n+#else\n+    if (__Pyx_fill_sequence_from_array(src, res, n) != 0) {",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415154310",
            "id": 415154310,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE1NDMxMA==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 841,
            "original_position": 84,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415154310",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415154426"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415154426"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    if (unlikely(__Pyx_fill_sequence_from_array(src, res, n) != 0)) {\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T22:08:06Z",
            "diff_hunk": "@@ -798,10 +854,15 @@ __Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n)\n     }\n     res = PyList_New(n);\n     if (unlikely(res == NULL)) return NULL;\n+#if CYTHON_COMPILING_IN_CPYTHON\n     __Pyx_copy_object_array(src, ((PyListObject*)res)->ob_item, n);\n+#else\n+    if (__Pyx_fill_sequence_from_array(src, res, n) != 0) {",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415154426",
            "id": 415154426,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE1NDQyNg==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 860,
            "original_position": 98,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415154426",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415154773"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415154773"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    if (stop < start) out_len = 0;\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T22:10:22Z",
            "diff_hunk": "@@ -847,6 +908,46 @@ static CYTHON_INLINE PyObject* __Pyx_Py{{type}}_GetSlice(\n {{endfor}}\n #endif\n \n+/////////////// FastcallTupleSlice.proto ///////////////\n+//@requires:SliceTupleAndList\n+//@requires:FunctionArguments.c::FastcallTuple\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_GetSlice(__Pyx_FastcallTuple_obj in,\n+                                                            Py_ssize_t start, Py_ssize_t stop); /* proto */\n+#else\n+#define __Pyx_FastcallTuple_GetSlice __Pyx_PyTuple_GetSlice\n+#endif\n+\n+/////////////// FastcallTupleSlice ///////////////\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_GetSlice(__Pyx_FastcallTuple_obj in, Py_ssize_t start, Py_ssize_t stop) {\n+    const int wraparound = 1;\n+    if (stop < start) {\n+        return in;\n+    }\n+    Py_ssize_t len_in = __Pyx_FastcallTuple_Len(in);\n+    if (wraparound) {\n+        if (start < 0) start = len_in + start;\n+        if (stop < 0) stop = len_in + stop;\n+    }\n+    if (start < 0) start = 0;\n+    if (stop < 0) stop = 0;\n+    if (stop > len_in) stop = len_in;\n+    Py_ssize_t out_len = stop - start;\n+    if (out_len < 0) out_len = 0;",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415154773",
            "id": 415154773,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE1NDc3Mw==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 939,
            "original_position": 140,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415154773",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415154791"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415154791"
                }
            },
            "author_association": "MEMBER",
            "body": "C89",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T22:10:31Z",
            "diff_hunk": "@@ -847,6 +908,46 @@ static CYTHON_INLINE PyObject* __Pyx_Py{{type}}_GetSlice(\n {{endfor}}\n #endif\n \n+/////////////// FastcallTupleSlice.proto ///////////////\n+//@requires:SliceTupleAndList\n+//@requires:FunctionArguments.c::FastcallTuple\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_GetSlice(__Pyx_FastcallTuple_obj in,\n+                                                            Py_ssize_t start, Py_ssize_t stop); /* proto */\n+#else\n+#define __Pyx_FastcallTuple_GetSlice __Pyx_PyTuple_GetSlice\n+#endif\n+\n+/////////////// FastcallTupleSlice ///////////////\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_GetSlice(__Pyx_FastcallTuple_obj in, Py_ssize_t start, Py_ssize_t stop) {\n+    const int wraparound = 1;\n+    if (stop < start) {\n+        return in;\n+    }\n+    Py_ssize_t len_in = __Pyx_FastcallTuple_Len(in);\n+    if (wraparound) {\n+        if (start < 0) start = len_in + start;\n+        if (stop < 0) stop = len_in + stop;\n+    }\n+    if (start < 0) start = 0;\n+    if (stop < 0) stop = 0;\n+    if (stop > len_in) stop = len_in;\n+    Py_ssize_t out_len = stop - start;",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415154791",
            "id": 415154791,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE1NDc5MQ==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 938,
            "original_position": 139,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415154791",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415155105"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415155105"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    if ((start > 0) || __Pyx_PyVectorcall_NARGS(in.nargs)) {\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T22:12:07Z",
            "diff_hunk": "@@ -847,6 +908,46 @@ static CYTHON_INLINE PyObject* __Pyx_Py{{type}}_GetSlice(\n {{endfor}}\n #endif\n \n+/////////////// FastcallTupleSlice.proto ///////////////\n+//@requires:SliceTupleAndList\n+//@requires:FunctionArguments.c::FastcallTuple\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_GetSlice(__Pyx_FastcallTuple_obj in,\n+                                                            Py_ssize_t start, Py_ssize_t stop); /* proto */\n+#else\n+#define __Pyx_FastcallTuple_GetSlice __Pyx_PyTuple_GetSlice\n+#endif\n+\n+/////////////// FastcallTupleSlice ///////////////\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_GetSlice(__Pyx_FastcallTuple_obj in, Py_ssize_t start, Py_ssize_t stop) {\n+    const int wraparound = 1;\n+    if (stop < start) {\n+        return in;\n+    }\n+    Py_ssize_t len_in = __Pyx_FastcallTuple_Len(in);\n+    if (wraparound) {\n+        if (start < 0) start = len_in + start;\n+        if (stop < 0) stop = len_in + stop;\n+    }\n+    if (start < 0) start = 0;\n+    if (stop < 0) stop = 0;\n+    if (stop > len_in) stop = len_in;\n+    Py_ssize_t out_len = stop - start;\n+    if (out_len < 0) out_len = 0;\n+\n+#if CYTHON_VECTORCALL\n+    if ((start > 0) || (in.nargs & PY_VECTORCALL_ARGUMENTS_OFFSET)) {",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415155105",
            "id": 415155105,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE1NTEwNQ==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 942,
            "original_position": 143,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415155105",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415155148"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415155148"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n#if CYTHON_VECTORCALL || CYTHON_BACKPORT_VECTORCALL\r\n```",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T22:12:37Z",
            "diff_hunk": "@@ -847,6 +908,46 @@ static CYTHON_INLINE PyObject* __Pyx_Py{{type}}_GetSlice(\n {{endfor}}\n #endif\n \n+/////////////// FastcallTupleSlice.proto ///////////////\n+//@requires:SliceTupleAndList\n+//@requires:FunctionArguments.c::FastcallTuple\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_GetSlice(__Pyx_FastcallTuple_obj in,\n+                                                            Py_ssize_t start, Py_ssize_t stop); /* proto */\n+#else\n+#define __Pyx_FastcallTuple_GetSlice __Pyx_PyTuple_GetSlice\n+#endif\n+\n+/////////////// FastcallTupleSlice ///////////////\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_GetSlice(__Pyx_FastcallTuple_obj in, Py_ssize_t start, Py_ssize_t stop) {\n+    const int wraparound = 1;\n+    if (stop < start) {\n+        return in;\n+    }\n+    Py_ssize_t len_in = __Pyx_FastcallTuple_Len(in);\n+    if (wraparound) {\n+        if (start < 0) start = len_in + start;\n+        if (stop < 0) stop = len_in + stop;\n+    }\n+    if (start < 0) start = 0;\n+    if (stop < 0) stop = 0;\n+    if (stop > len_in) stop = len_in;\n+    Py_ssize_t out_len = stop - start;\n+    if (out_len < 0) out_len = 0;\n+\n+#if CYTHON_VECTORCALL",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415155148",
            "id": 415155148,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE1NTE0OA==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 941,
            "original_position": 142,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415155148",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415156574"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415156574"
                }
            },
            "author_association": "MEMBER",
            "body": "C89",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T22:21:19Z",
            "diff_hunk": "@@ -2128,44 +2248,131 @@ static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObj\n     #if PY_VERSION_HEX < 0x030800B1\n     #if CYTHON_FAST_PYCCALL\n     if (PyCFunction_Check(func)) {\n-        if (kwargs) {\n-            return _PyCFunction_FastCallDict(func, args, nargs, kwargs);\n+        if (kwds) {\n+            if (kwds_in_dict) {\n+                return _PyCFunction_FastCallDict(func, args, nargs, kwds);\n+            } else {\n+                return _PyCFunction_FastCallKeywords(func, args, nargs, kwds);\n+            }\n         } else {\n             return _PyCFunction_FastCallKeywords(func, args, nargs, NULL);\n         }\n     }\n     #if PY_VERSION_HEX >= 0x030700A1\n-    if (!kwargs && __Pyx_IS_TYPE(func, &PyMethodDescr_Type)) {\n+    if (!kwds && __Pyx_IS_TYPE(func, &PyMethodDescr_Type)) {\n         return _PyMethodDescr_FastCallKeywords(func, args, nargs, NULL);\n     }\n     #endif\n     #endif\n     #if CYTHON_FAST_PYCALL\n-    if (PyFunction_Check(func)) {\n-        return __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs);\n+    if (PyFunction_Check(func) && kwds_in_dict) {\n+        return __Pyx_PyFunction_FastCallDict(func, args, nargs, kwds);\n     }\n     #endif\n     #endif\n \n-    #if CYTHON_VECTORCALL\n-    vectorcallfunc f = _PyVectorcall_Function(func);\n-    if (f) {\n-        return f(func, args, nargs, kwargs);\n+    if (!kwds_in_dict || kwds == NULL) {\n+        #if CYTHON_VECTORCALL\n+        vectorcallfunc f = _PyVectorcall_Function(func);\n+        if (f) {\n+            return f(func, args, _nargs, kwds);\n+        }\n+        #elif __Pyx_CyFunction_USED && CYTHON_BACKPORT_VECTORCALL\n+        // exclude fused functions for now\n+        if (__Pyx_IS_TYPE(func, __pyx_CyFunctionType)) {\n+            __pyx_vectorcallfunc f = __Pyx_CyFunction_func_vectorcall(func);\n+            if (f) return f(func, args, nargs, kwds);\n+        }\n+        #endif\n     }\n-    #elif __Pyx_CyFunction_USED && CYTHON_BACKPORT_VECTORCALL\n-    // exclude fused functions for now\n-    if (__Pyx_IS_TYPE(func, __pyx_CyFunctionType)) {\n-        __pyx_vectorcallfunc f = __Pyx_CyFunction_func_vectorcall(func);\n-        if (f) return f(func, args, nargs, kwargs);\n+\n+    if (nargs == 0 && kwds_in_dict) {\n+        return __Pyx_PyObject_Call(func, $empty_tuple, kwds);\n     }\n-    #endif\n+    return __Pyx_PyObject_FastCallKwds_fallback(func, args, nargs, kwds, kwds_in_dict);\n+}\n+\n+/////////////// PyObjectFastCall__Args_OptimizedStructs.proto ///////////////\n+//@requires: FunctionArguments.c::FastcallTuple\n+\n+static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallArgs_structs(PyObject* callable, __Pyx_FastcallTuple_obj args); /* proto */\n \n-    if (nargs == 0) {\n-        return __Pyx_PyObject_Call(func, $empty_tuple, kwargs);\n+/////////////// PyObjectFastCall__Args_OptimizedStructs ///////////////\n+//@requires:PyObjectFastCall\n+//@requires:PyObjectCall\n+\n+static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallArgs_structs(PyObject* callable, __Pyx_FastcallTuple_obj args) {\n+#if CYTHON_METH_FASTCALL\n+    return __Pyx_PyObject_FastCall(callable, (PyObject**)args.args, args.nargs);\n+#else\n+    PyObject* tpl = __Pyx_FastcallTuple_ToTuple(args);\n+    if (!tpl) return NULL;\n+    PyObject* result = __Pyx_PyObject_Call(callable, tpl, NULL);\n+    Py_DECREF(tpl);\n+    return result;\n+#endif\n+}\n+\n+/////////////// PyObjectFastCall__ArgsKwds_OptimizedStructs.proto ///////////////\n+//@requires: FunctionArguments.c::FastcallTuple\n+//@requires: FunctionArguments.c::FastcallDict\n+\n+static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallArgsKwds_structs(PyObject* callable, __Pyx_FastcallTuple_obj args, __Pyx_FastcallDict_obj* kwds); /* proto */\n+static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallArgsDict_structs(PyObject* callable, __Pyx_FastcallTuple_obj args, PyObject* kwds); /* proto */\n+\n+/////////////// PyObjectFastCall__ArgsKwds_OptimizedStructs.proto ///////////////\n+//@requires:PyObjectCall\n+//@requires:FunctionArguments.c::FastcallDictConvert\n+//@requires:PyObjectFastCall\n+\n+static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallArgsKwds_structs(PyObject* callable, __Pyx_FastcallTuple_obj args, __Pyx_FastcallDict_obj* kwds) {\n+    #if CYTHON_METH_FASTCALL\n+    if (kwds->object == NULL) {\n+        // no keywords\n+        return __Pyx_PyObject_FastCall(callable, (PyObject**)args.args, args.nargs);\n+    } else if (!kwds->args) {\n+        // kwds->object is a dict - may be some optimization available\n+        return __Pyx_PyObject_FastCallDict(callable, (PyObject**)args.args, args.nargs, kwds->object);\n+    } else {\n+        // kwds->object is a tuple\n+        if (kwds->args != args.args + __Pyx_FastcallTuple_Len(args)) {\n+            // the memory for the two bits isn't contiguous\n+            // Might be better going straight to fallback, possibly?\n+            PyObject* kwds_as_dict = __Pyx_FastcallDict_ToDict_Explicit(kwds);\n+            if (!kwds_as_dict) return NULL;\n+            PyObject* result = __Pyx_PyObject_FastCallDict(callable, (PyObject**)args.args, args.nargs, kwds_as_dict);",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415156574",
            "id": 415156574,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE1NjU3NA==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 2343,
            "original_position": 346,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415156574",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415156625"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415156625"
                }
            },
            "author_association": "MEMBER",
            "body": "C89",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-25T22:21:34Z",
            "diff_hunk": "@@ -2128,44 +2248,131 @@ static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObj\n     #if PY_VERSION_HEX < 0x030800B1\n     #if CYTHON_FAST_PYCCALL\n     if (PyCFunction_Check(func)) {\n-        if (kwargs) {\n-            return _PyCFunction_FastCallDict(func, args, nargs, kwargs);\n+        if (kwds) {\n+            if (kwds_in_dict) {\n+                return _PyCFunction_FastCallDict(func, args, nargs, kwds);\n+            } else {\n+                return _PyCFunction_FastCallKeywords(func, args, nargs, kwds);\n+            }\n         } else {\n             return _PyCFunction_FastCallKeywords(func, args, nargs, NULL);\n         }\n     }\n     #if PY_VERSION_HEX >= 0x030700A1\n-    if (!kwargs && __Pyx_IS_TYPE(func, &PyMethodDescr_Type)) {\n+    if (!kwds && __Pyx_IS_TYPE(func, &PyMethodDescr_Type)) {\n         return _PyMethodDescr_FastCallKeywords(func, args, nargs, NULL);\n     }\n     #endif\n     #endif\n     #if CYTHON_FAST_PYCALL\n-    if (PyFunction_Check(func)) {\n-        return __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs);\n+    if (PyFunction_Check(func) && kwds_in_dict) {\n+        return __Pyx_PyFunction_FastCallDict(func, args, nargs, kwds);\n     }\n     #endif\n     #endif\n \n-    #if CYTHON_VECTORCALL\n-    vectorcallfunc f = _PyVectorcall_Function(func);\n-    if (f) {\n-        return f(func, args, nargs, kwargs);\n+    if (!kwds_in_dict || kwds == NULL) {\n+        #if CYTHON_VECTORCALL\n+        vectorcallfunc f = _PyVectorcall_Function(func);\n+        if (f) {\n+            return f(func, args, _nargs, kwds);\n+        }\n+        #elif __Pyx_CyFunction_USED && CYTHON_BACKPORT_VECTORCALL\n+        // exclude fused functions for now\n+        if (__Pyx_IS_TYPE(func, __pyx_CyFunctionType)) {\n+            __pyx_vectorcallfunc f = __Pyx_CyFunction_func_vectorcall(func);\n+            if (f) return f(func, args, nargs, kwds);\n+        }\n+        #endif\n     }\n-    #elif __Pyx_CyFunction_USED && CYTHON_BACKPORT_VECTORCALL\n-    // exclude fused functions for now\n-    if (__Pyx_IS_TYPE(func, __pyx_CyFunctionType)) {\n-        __pyx_vectorcallfunc f = __Pyx_CyFunction_func_vectorcall(func);\n-        if (f) return f(func, args, nargs, kwargs);\n+\n+    if (nargs == 0 && kwds_in_dict) {\n+        return __Pyx_PyObject_Call(func, $empty_tuple, kwds);\n     }\n-    #endif\n+    return __Pyx_PyObject_FastCallKwds_fallback(func, args, nargs, kwds, kwds_in_dict);\n+}\n+\n+/////////////// PyObjectFastCall__Args_OptimizedStructs.proto ///////////////\n+//@requires: FunctionArguments.c::FastcallTuple\n+\n+static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallArgs_structs(PyObject* callable, __Pyx_FastcallTuple_obj args); /* proto */\n \n-    if (nargs == 0) {\n-        return __Pyx_PyObject_Call(func, $empty_tuple, kwargs);\n+/////////////// PyObjectFastCall__Args_OptimizedStructs ///////////////\n+//@requires:PyObjectFastCall\n+//@requires:PyObjectCall\n+\n+static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallArgs_structs(PyObject* callable, __Pyx_FastcallTuple_obj args) {\n+#if CYTHON_METH_FASTCALL\n+    return __Pyx_PyObject_FastCall(callable, (PyObject**)args.args, args.nargs);\n+#else\n+    PyObject* tpl = __Pyx_FastcallTuple_ToTuple(args);\n+    if (!tpl) return NULL;\n+    PyObject* result = __Pyx_PyObject_Call(callable, tpl, NULL);\n+    Py_DECREF(tpl);\n+    return result;\n+#endif\n+}\n+\n+/////////////// PyObjectFastCall__ArgsKwds_OptimizedStructs.proto ///////////////\n+//@requires: FunctionArguments.c::FastcallTuple\n+//@requires: FunctionArguments.c::FastcallDict\n+\n+static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallArgsKwds_structs(PyObject* callable, __Pyx_FastcallTuple_obj args, __Pyx_FastcallDict_obj* kwds); /* proto */\n+static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallArgsDict_structs(PyObject* callable, __Pyx_FastcallTuple_obj args, PyObject* kwds); /* proto */\n+\n+/////////////// PyObjectFastCall__ArgsKwds_OptimizedStructs.proto ///////////////\n+//@requires:PyObjectCall\n+//@requires:FunctionArguments.c::FastcallDictConvert\n+//@requires:PyObjectFastCall\n+\n+static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallArgsKwds_structs(PyObject* callable, __Pyx_FastcallTuple_obj args, __Pyx_FastcallDict_obj* kwds) {\n+    #if CYTHON_METH_FASTCALL\n+    if (kwds->object == NULL) {\n+        // no keywords\n+        return __Pyx_PyObject_FastCall(callable, (PyObject**)args.args, args.nargs);\n+    } else if (!kwds->args) {\n+        // kwds->object is a dict - may be some optimization available\n+        return __Pyx_PyObject_FastCallDict(callable, (PyObject**)args.args, args.nargs, kwds->object);\n+    } else {\n+        // kwds->object is a tuple\n+        if (kwds->args != args.args + __Pyx_FastcallTuple_Len(args)) {\n+            // the memory for the two bits isn't contiguous\n+            // Might be better going straight to fallback, possibly?\n+            PyObject* kwds_as_dict = __Pyx_FastcallDict_ToDict_Explicit(kwds);\n+            if (!kwds_as_dict) return NULL;\n+            PyObject* result = __Pyx_PyObject_FastCallDict(callable, (PyObject**)args.args, args.nargs, kwds_as_dict);\n+            Py_DECREF(kwds_as_dict);\n+            return result;\n+        }\n+        // all is good to call through the optimized path\n+        return __Pyx_PyObject_FastCallKwds(callable, (PyObject**)args.args, args.nargs, kwds->object);\n+    }\n+    #else\n+    PyObject* result = NULL;\n+    PyObject* tpl = __Pyx_FastcallTuple_ToTuple(args);\n+    if (!tpl) return NULL;\n+    PyObject* dict = __Pyx_FastcallDict_ToDict_Explicit(kwds);",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415156625",
            "id": 415156625,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE1NjYyNQ==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 2354,
            "original_position": 357,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 400426280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415156625",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415268394"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415268394"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "Good point. This looks like another case where it's probably better to fall back to coercion rather than reimplement everything since it doesn't really help the core \"pass *args efficiently to another function\" benefit.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-26T09:47:07Z",
            "diff_hunk": "@@ -7649,7 +7779,10 @@ def generate_parallel_assignment_code(self, rhs, code):\n                           or not rhs.type.is_builtin_type)\n         long_enough_for_a_loop = len(self.unpacked_items) > 3\n \n-        if special_unpack:\n+        if rhs.type.is_fastcall_tuple:\n+            self.generate_fastcall_tuple_parallel_unpacking_code(",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415268394",
            "id": 415268394,
            "in_reply_to_id": 415135468,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI2ODM5NA==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 7783,
            "original_position": 339,
            "original_start_line": 7782,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 400483344,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415268394",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415288191"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415288191"
                }
            },
            "author_association": "MEMBER",
            "body": ":)",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-26T11:32:17Z",
            "diff_hunk": "@@ -1800,6 +1800,8 @@ def getvalue(self):\n     def write(self, s):\n         # also put invalid markers (lineno 0), to indicate that those lines\n         # have no Cython source code correspondence\n+        if s.find(\"__pyx_t_2 = PyObject_GetIter(((PyObject *)__pyx_v_args));\") != -1:\n+            import pdb; pdb.set_trace()",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415288191",
            "id": 415288191,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI4ODE5MQ==",
            "original_commit_id": "f774c788a8b47f628d5afe78dc626ce2c695fa15",
            "original_line": 1804,
            "original_position": 5,
            "original_start_line": 1803,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 400493221,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415288191",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415288542"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415288542"
                }
            },
            "author_association": "MEMBER",
            "body": "I think `is_sequence_constructor` is nicer to the eyes here, too.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-26T11:34:14Z",
            "diff_hunk": "@@ -6616,7 +6617,10 @@ def map_to_simple_call_node(self):\n \n     def generate_result_code(self, code):\n         if self.type.is_error: return\n-        if self.fastcallable_with_types:\n+        pos_is_empty = (isinstance(self.positional_args, TupleNode) and",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415288542",
            "id": 415288542,
            "line": 6629,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI4ODU0Mg==",
            "original_commit_id": "f774c788a8b47f628d5afe78dc626ce2c695fa15",
            "original_line": 6620,
            "original_position": 36,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 224,
            "pull_request_review_id": 400493221,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415288542",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415289683"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415289683"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "Maybe. The problem with a _single_ tuple object is that there can be more than one fastcall tuple in a function since slices create new fastcall tuple objects, and I think that's useful.\r\n\r\nIt might be better to try what I've done with fastcall dict, where it can have two states (a coerced and non-coerced state). It'd make the objects themselves a little less lightweight to use, but it'd avoid the coercion counting.\r\n\r\nI'll look if this could work.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-26T11:40:33Z",
            "diff_hunk": "@@ -2232,8 +2296,28 @@ def visit_ModuleNode(self, node):\n \n     def visit_FuncDefNode(self, node):\n         node.local_scope.infer_types()\n-        node.body = node.body.analyse_expressions(node.local_scope)\n-        self.visitchildren(node)\n+        for n in range(2):\n+            # potentially have two goes - replacing a fastcall tuple star_arg\n+            # if too many coercions are generated. Check after each step",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415289683",
            "id": 415289683,
            "in_reply_to_id": 415145817,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI4OTY4Mw==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 2301,
            "original_position": 113,
            "original_start_line": 2300,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 400493968,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415289683",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r415290634"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/415290634"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "This suggests to me that both `keys` and `values` should probably just lead to a coercion to a Python dict instead. Anything that emulates a view is going to need a lot of implementing.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-04-26T11:45:56Z",
            "diff_hunk": "@@ -462,3 +465,352 @@ static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyO\n     return NULL;  // not found (no exception set)\n }\n #endif\n+\n+/////////////// FastcallTuple.proto ///////////////\n+//@substitute: naming\n+// A struct which can be created cheaply without needing to construct a Python object\n+\n+#if CYTHON_METH_FASTCALL\n+typedef struct {\n+    PyObject *const *args;\n+    Py_ssize_t nargs;\n+} __Pyx_FastcallTuple_obj;\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_New(PyObject *const *args, Py_ssize_t nargs);\n+// BorrowedEmpty useful when calling a function with only fastcall keyword arguments\n+#define __Pyx_FastcallTuple_BorrowedEmpty(args) __Pyx_FastcallTuple_New(args, 0)\n+#define __Pyx_FastcallTuple_Empty {}\n+// reference counting is all a no-op\n+#define __Pyx_FastcallTuple_GOTREF(x)\n+#define __Pyx_FastcallTuple_CLEAR(x, nanny)\n+#define __Pyx_FastcallTuple_XINCREF(x, nanny)\n+#define __Pyx_FastcallTuple_INCREF(x, nanny)\n+#define __Pyx_FastcallTuple_XDECREF(x, nanny)\n+#define __Pyx_FastcallTuple_DECREF_SET(lhs, rhs) do { lhs = rhs } while(0);\n+#define __Pyx_FastcallTuple_XDECREF_SET(lhs, rhs) do { lhs = rhs } while(0);\n+#define __Pyx_FastcallTuple_NULLCHECK(x) x.args\n+static CYTHON_INLINE Py_ssize_t __Pyx_FastcallTuple_Len(__Pyx_FastcallTuple_obj o); /* proto */\n+#else\n+typedef PyObject* __Pyx_FastcallTuple_obj;\n+#define __Pyx_FastcallTuple_Empty 0\n+#define __Pyx_FastcallTuple_New PyTuple_GetSlice\n+#define __Pyx_FastcallTuple_BorrowedEmpty(ignore) $empty_tuple\n+#define __Pyx_FastcallTuple_GOTREF(x) __Pyx_GOTREF(x)\n+#define __Pyx_FastcallTuple_CLEAR(x, nanny) if (nanny) { __Pyx_CLEAR(x); } else { Py_CLEAR(x); }\n+#define __Pyx_FastcallTuple_XINCREF(x, nanny)  if (nanny) { __Pyx_XINCREF(x); } else { Py_XINCREF(x); }\n+#define __Pyx_FastcallTuple_INCREF(x, nanny) if (nanny) { __Pyx_INCREF(x); } else { Py_INCREF(x); }\n+#define __Pyx_FastcallTuple_XDECREF(x, nanny) if (nanny) { __Pyx_XDECREF(x); } else { Py_XDECREF(x); }\n+#define __Pyx_FastcallTuple_DECREF_SET(lhs, rhs) __Pyx_DECREF_SET(lhs, rhs)\n+#define __Pyx_FastcallTuple_XDECREF_SET(lhs, rhs) __Pyx_XDECREF_SET(lhs, rhs)\n+#define __Pyx_FastcallTuple_NULLCHECK(x) x\n+#define __Pyx_FastcallTuple_Len PyTuple_GET_SIZE\n+#endif\n+\n+static CYTHON_INLINE PyObject *__Pyx_FastcallTuple_ToTuple(__Pyx_FastcallTuple_obj o);  /* proto */\n+\n+#if CYTHON_METH_FASTCALL\n+    static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_FASTCALL_struct(PyObject *const *args, Py_ssize_t start, Py_ssize_t stop);\n+#else\n+#define __Pyx_ArgsSlice_FASTCALL_struct(args, start, stop) __Pyx_ArgsSlice_VARARGS_struct(args, start, stop)\n+#endif\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_VARARGS_struct(PyObject *args, Py_ssize_t start, Py_ssize_t stop);\n+\n+// no type-checking - used for conversion in function call\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_FromTuple(PyObject* o);\n+\n+/////////////// FastcallTuple ///////////////\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_New(PyObject *const *args, Py_ssize_t nargs) {\n+    __Pyx_FastcallTuple_obj out = { args, nargs };\n+    return out;\n+}\n+\n+static CYTHON_INLINE Py_ssize_t __Pyx_FastcallTuple_Len(__Pyx_FastcallTuple_obj o) {\n+    return __Pyx_PyVectorcall_NARGS(o.nargs);\n+}\n+#endif\n+\n+static CYTHON_INLINE PyObject *__Pyx_FastcallTuple_ToTuple(__Pyx_FastcallTuple_obj o) {\n+#if CYTHON_METH_FASTCALL\n+    return __Pyx_PyTuple_FromArray(o.args, __Pyx_FastcallTuple_Len(o));\n+#else\n+    Py_INCREF(o);\n+    return o;\n+#endif\n+}\n+\n+#if CYTHON_METH_FASTCALL\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_FASTCALL_struct(PyObject *const *args, Py_ssize_t start, Py_ssize_t stop) {\n+    Py_ssize_t nargs = (stop - start);\n+    if (nargs < 0) nargs = 0;\n+#if CYTHON_VECTORCALL\n+    if (start > 0) {\n+        nargs |= PY_VECTORCALL_ARGUMENTS_OFFSET; // we know there's at least one space in front\n+    }\n+#endif\n+    return __Pyx_FastcallTuple_New(args+start, nargs);\n+}\n+#endif // CYTHON_METH_FASTCALL\n+\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_ArgsSlice_VARARGS_struct(PyObject *args, Py_ssize_t start, Py_ssize_t stop) {\n+#if CYTHON_METH_FASTCALL\n+    __Pyx_FastcallTuple_obj out = __Pyx_FastcallTuple_FromTuple(args);\n+    out.args += start;\n+    out.nargs = stop-start;\n+    return out;\n+#else\n+    return PyTuple_GetSlice(args, start, stop);\n+#endif\n+}\n+\n+static CYTHON_INLINE __Pyx_FastcallTuple_obj __Pyx_FastcallTuple_FromTuple(PyObject* o) {\n+#if CYTHON_METH_FASTCALL\n+    return __Pyx_FastcallTuple_New(&PyTuple_GET_ITEM(o,0), PyTuple_GET_SIZE(o));\n+#else\n+    Py_INCREF(o);\n+    return o;\n+#endif\n+}\n+\n+/////////////////// FastcallDict.proto /////////////////////////\n+\n+typedef struct {\n+    PyObject *const *args; // start of the keyword args values\n+    PyObject *object;      // either a dict, a tuple or NULL\n+} __Pyx_FastcallDict_obj;\n+// exists in one of three (ish) states:\n+// * args is NULL, \"object\" is NULL, meaning no keyword arguments\n+// * args is NULL, in which case \"object\" is actually a dict, and this just defers to the dict methods\n+// * args is non-null, object is a tuple\n+// * args is non-null, object is NULL - used to signify an invalid state (but only really checked on creation)\n+// Defaults to \"object\" being a dict unless one of the quicker options can be easily created\n+\n+// just a constant pointer to use for the \"args is non-null object NULL\" invalid state case\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_ErrorArgs[0];\n+\n+static CYTHON_UNUSED Py_ssize_t __Pyx_FastcallDict_Len(__Pyx_FastcallDict_obj *o); /* proto */\n+static CYTHON_UNUSED __Pyx_FastcallDict_obj __Pyx_FastcallDict_New(void); /* proto */\n+\n+// reference counting - for these always use \"X\" functions since object==NULL is a valid state\n+// It's difficult to do refnanny sensibly on these at the moment since it's valid for\n+// x->object to be swapped out in the middle of a function if it's coerced to Python.\n+// Therefore, disable it (FIXME!?)\n+#define __Pyx_FastcallDict_GOTREF(x)\n+#define __Pyx_FastcallDict_CLEAR(x, nanny) do { Py_CLEAR(x->object); x->args = NULL; } while(0)\n+#define __Pyx_FastcallDict_XDECREF(x, nanny) Py_XDECREF(x->object)\n+#define __Pyx_FastcallDict_INCREF __Pyx_FastcallDict_XINCREF\n+#define __Pyx_FastcallDict_XINCREF(x, nanny) Py_XINCREF(x->object)\n+#define __Pyx_FastcallDict_DECREF_SET __Pyx_FastcallDict_XDECREF_SET\n+#define __Pyx_FastcallDict_XDECREF_SET(lhs, rhs) do { \\\n+        __PyxFastcallDict_obj *temp = lhs; \\\n+        lhs = rhs; \\\n+        Py_XDECREF(temp->object); \\\n+    } while(0)\n+#define __Pyx_FastcallDict_NULLCHECK(x) !(x->args!=NULL && x->object==NULL)\n+\n+/////////////////// FastcallDict //////////////////////\n+\n+static CYTHON_UNUSED Py_ssize_t __Pyx_FastcallDict_Len(__Pyx_FastcallDict_obj *o) {\n+    if (o->object == NULL) {\n+        return 0;\n+    } else if (o->args) {\n+        return PyTuple_GET_SIZE(o->object);\n+    } else {\n+        return PyDict_Size(o->object);\n+    }\n+}\n+\n+static CYTHON_UNUSED __Pyx_FastcallDict_obj __Pyx_FastcallDict_New(void) {\n+    __Pyx_FastcallDict_obj out = {};\n+    return out;\n+}\n+\n+/////////////////// FastcallDictConvert.proto //////////////////////\n+\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_ToDict(__Pyx_FastcallDict_obj *o); /* proto */\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_ToDict_Explicit(__Pyx_FastcallDict_obj *o); /* proto */\n+\n+/////////////////// FastcallDictConvert //////////////////////\n+//@requires: fastcall\n+\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_ToDict(__Pyx_FastcallDict_obj *o){\n+    // when implicitly converted to dict change o.object so that modifications\n+    // to the dict propagate\n+    PyObject* dict = __Pyx_FastcallDict_ToDict_Explicit(o);\n+    if (!dict) return NULL;\n+    o->args = NULL;\n+    Py_CLEAR(o->object);\n+    o->object = dict;\n+    Py_INCREF(dict);\n+    return dict;\n+}\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_ToDict_Explicit(__Pyx_FastcallDict_obj* o) {\n+    if (o->object == NULL) {\n+        return PyDict_New();\n+    } else if (o->args) {\n+        return __Pyx_KwargsAsDict_FASTCALL(o->object, o->args);\n+    } else { // already a dict\n+        Py_INCREF(o->object);\n+        return o->object;\n+    }\n+}\n+\n+/////////////////// FastcallDictIter.proto //////////////////////\n+\n+// These methods behaves slightly differently from the regular dict methods\n+// in that they just return a list rather than an iterator. For most of them\n+// an iterator would be dangerous since it might outlive the __Pyx_FastcallDict_obj\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_Keys(__Pyx_FastcallDict_obj* o); /* proto */\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_Values(__Pyx_FastcallDict_obj* o); /* proto */\n+// Items is excluded since it's more complicated and performance wasn't great\n+\n+/////////////////// FastcallDictIter //////////////////////\n+//@requires:ObjectHandling.c::TupleAndListFromArray\n+\n+static CYTHON_UNUSED PyObject* __Pyx_FastcallDict_Keys(__Pyx_FastcallDict_obj *o) {",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r415290634",
            "id": 415290634,
            "in_reply_to_id": 415153261,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI5MDYzNA==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 670,
            "original_position": 386,
            "original_start_line": null,
            "path": "Cython/Utility/FunctionArguments.c",
            "position": null,
            "pull_request_review_id": 400493968,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/415290634",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r432927685"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/432927685"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "Because stararg.entry doesn't seem to be set at that point",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-05-31T09:29:13Z",
            "diff_hunk": "@@ -1921,6 +1941,18 @@ def visit_FuncDefNode(self, node):\n \n     def visit_DefNode(self, node):\n         node = self.visit_FuncDefNode(node)\n+\n+        local_scope = getattr(node, 'local_scope', None)  # fused function nodes don't have this\n+        fastcall_args = local_scope.directives.get('fastcall_args', None) if local_scope else None\n+        if fastcall_args:\n+            if fastcall_args[0] and node.star_arg:\n+                if node.self_in_stararg:\n+                    error(node.pos, \"Cannot use 'fastcall_args(\\\"*\\\")' on a function where the\"\n+                          \" self argument is included in *args\")\n+                node.star_arg.entry.type = PyrexTypes.FastcallTupleType(explicitly_requested=True)\n+            if fastcall_args[1] and node.starstar_arg:\n+                node.starstar_arg.entry.type = PyrexTypes.FastcallDictType(explicitly_requested=True)",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r432927685",
            "id": 432927685,
            "in_reply_to_id": 415143969,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyNzY4NQ==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 1954,
            "original_position": 57,
            "original_start_line": 1948,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 421476956,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/432927685",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r432927810"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/432927810"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "OK, although the previous code already had the names being constructed, so I've taken it back to that.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-05-31T09:30:48Z",
            "diff_hunk": "@@ -3638,29 +3666,47 @@ def generate_stararg_copy_code(self, code):\n                 bool(self.starstar_arg), self.error_value()))\n \n         if self.starstar_arg and self.starstar_arg.entry.cf_used:\n+            if self.starstar_arg.type.is_fastcall_dict:\n+                suffix = \"_fastcallstruct\"\n+                code.globalstate.use_utility_code(\n+                    UtilityCode.load_cached(\"FastcallDict_KwargsAsDict\", \"FunctionArguments.c\"))\n+                assign_index = \"[0]\"",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r432927810",
            "id": 432927810,
            "in_reply_to_id": 415138953,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyNzgxMA==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 3673,
            "original_position": 93,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 421476956,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/432927810",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r432927847"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/432927847"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "The behaviour it was describing has changed now so I've removed the comment and the test. It was trying to say `.keys()`, `.values()`, `.items()` from fastcall dicts just return a tuple/list and it's faster to iterate over that than to special-case it here.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-05-31T09:31:16Z",
            "diff_hunk": "@@ -242,7 +244,11 @@ def _optimise_for_loop(self, node, iterable, reversed=False):\n \n         function = iterable.function\n         # dict iteration?\n-        if function.is_attribute and not reversed and not arg_count:\n+        if (function.is_attribute and not reversed and not arg_count\n+                and not function.obj.type.is_fastcall_dict\n+                # fastcall dicts should already have got an iterable (probably a list or tuple)\n+                # from these attributes and currently isn't faster to just use that object.",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r432927847",
            "id": 432927847,
            "in_reply_to_id": 415142115,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyNzg0Nw==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 250,
            "original_position": 17,
            "original_start_line": 249,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 421476956,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/432927847",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r432927867"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/432927867"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "Changed to have less special casing; should now use keyword arguments and be clearer",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-05-31T09:31:37Z",
            "diff_hunk": "@@ -207,6 +207,8 @@ def get_directive_defaults():\n     'old_style_globals': False,\n     'np_pythran': False,\n     'fast_gil': False,\n+    'fastcall_args': [None, None],  # two values for tuple and dict. True/False sets it explicitly.",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r432927867",
            "id": 432927867,
            "in_reply_to_id": 415142887,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyNzg2Nw==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 210,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Compiler/Options.py",
            "position": null,
            "pull_request_review_id": 421476956,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/432927867",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3346#discussion_r432927957"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3346"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/432927957"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I ended up deciding that I couldn't easily provide the methods (and make them behave correctly) anyway, so it's gone for now.",
            "commit_id": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "created_at": "2020-05-31T09:32:45Z",
            "diff_hunk": "@@ -4252,6 +4260,180 @@ def same_as_resolved_type(self, other_type):\n     def error_condition(self, result_code):\n         return \"dummy\"\n \n+class FastcallBaseType(PyrexType):\n+    # Convenience class for refcounting functions\n+    needs_refcounting = 1\n+\n+    def generate_gotref(self, code, cname):\n+        code.putln(\"__Pyx_%s_GOTREF(%s);\" % (self.name, cname))\n+    def generate_decref(self, code, cname, nanny, have_gil):\n+        # don't distinguish between decref and xdecref for fastcall types\n+        code.putln(\"__Pyx_%s_XDECREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_decref_clear(self, code, cname, clear_before_decref, nanny, have_gil):\n+        code.putln(\"__Pyx_%s_CLEAR(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_xdecref(self, code, cname, nanny, have_gil):\n+        code.putln(\"__Pyx_%s_XDECREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_incref(self, code, cname, nanny):\n+        code.putln(\"__Pyx_%s_INCREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_xincref(self, code, cname, nanny):\n+        code.putln(\"__Pyx_%s_XINCREF(%s, %s);\" % (self.name, cname, int(nanny)))\n+    def generate_decref_set(self, code, cname, rhs_cname):\n+        code.putln(\"__Pyx_%s_DECREF_SET(%s, %s);\" % (self.name, cname, rhs_cname))\n+    def generate_xdecref_set(self, code, cname, rhs_cname):\n+        code.putln(\"__Pyx_%s_XDECREF_SET(%s, %s);\" % (self.name, cname, rhs_cname))\n+    def nullcheck_string(self, cname):\n+        return \"__Pyx_%s_NULLCHECK(%s)\" % (self.name, cname)\n+\n+    # different instances are created just to hold a different \"coercion_count\" for each\n+    # function. However, it's useful for looking up the type if they compare equal\n+    # (apart from the count there's no useful difference between instances)\n+    def __hash__(self):\n+        return hash((type(self), self.is_fastcall_tuple, self.is_fastcall_dict))\n+    def __eq__(self, other):\n+        return (self.is_fastcall_tuple == other.is_fastcall_tuple\n+                and self.is_fastcall_dict == other.is_fastcall_dict\n+                and type(self) == type(other)\n+                )\n+    def __ne__(self, other):\n+        return not (self == other) # looks to be necessary for Py2\n+\n+    def literal_code(self, value):\n+        assert value in (\"0\", \"{}\"), str(value)  # only know how to handle empty literals\n+        return self.declaration_value\n+\n+class FastcallTupleType(FastcallBaseType):\n+    \"\"\"Represents an optimized tuple-like type for \"*args\"\n+\n+    Eliminates the need for an actual tuple to be created, but\n+    only supports the limited range of operations that can\n+    be carried out efficiently\n+    \"\"\"\n+\n+    is_fastcall_tuple = 1\n+    name = \"FastcallTuple\"\n+    declaration_value = \"__Pyx_FastcallTuple_Empty\"\n+\n+    @property\n+    def nearest_python_type(self):\n+        # used when infer types is turned right down\n+        from .Builtin import tuple_type\n+        return tuple_type\n+\n+    def __init__(self, explicitly_requested=False):\n+        super(FastcallTupleType, self).__init__()\n+        self.coercion_count = 0\n+        self.explicitly_requested = explicitly_requested\n+\n+    def create_declaration_utility_code(self, env):\n+        env.use_utility_code(UtilityCode.load_cached('FastcallTuple', 'FunctionArguments.c'))\n+\n+    def declaration_code(self, entity_code,\n+            for_display = 0, dll_linkage = None, pyrex = 0):\n+        if for_display:\n+            return \"FastcallTuple\"\n+        else:\n+            return \"__Pyx_FastcallTuple_obj %s\" % entity_code\n+\n+\n+    def create_to_py_utility_code(self, env):\n+        # code is in declaration code\n+        return True\n+\n+    def create_from_py_utility_code(self, env):\n+        return False\n+\n+    def can_coerce_to_pyobject(self, env):\n+        return True\n+\n+    def to_py_call_code(self, source_code, result_code, result_type, to_py_function=None):\n+        # TODO maybe something cleverer with result_type\n+        from .Builtin import tuple_type\n+        #if (result_type is not tuple_type) and (not self.explicitly_requested):\n+            # tuple_type indicates that the conversion was requested by the user\n+        #    self.coercion_count += 1\n+        return \"%s = __Pyx_FastcallTuple_ToTuple(%s)\" % (result_code, source_code)\n+\n+class FastcallDictType(FastcallBaseType):\n+    \"\"\"Represents an optimized dict-like type for \"**kwds\"\n+\n+    Eliminates the need for an actual dict to be created,\n+    (in some cases) but\n+    only supports the limited range of operations that can\n+    be carried out efficiently\n+    \"\"\"\n+\n+    is_fastcall_dict = 1\n+    has_attributes = 1\n+    name = \"FastcallDict\"\n+    exception_check = None\n+    needs_refcounting = 1\n+\n+    @property\n+    def nearest_python_type(self):\n+        # used when infer types is turned right down\n+        from .Builtin import dict_type\n+        return dict_type\n+\n+    declaration_value = \"{{}}\" # Can only be used for the array version defined in the wrapper\n+\n+    @classmethod\n+    def _get_methods(self):\n+        from .Builtin import BuiltinMethod",
            "html_url": "https://github.com/cython/cython/pull/3346#discussion_r432927957",
            "id": 432927957,
            "in_reply_to_id": 415148842,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyNzk1Nw==",
            "original_commit_id": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "original_line": 4381,
            "original_position": 160,
            "original_start_line": null,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": null,
            "pull_request_review_id": 421476956,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3346",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T19:01:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/432927957",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3346/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/cdfbcfd1be95745228ccdf55c30057edfd1dfdab/comments",
            "commit": {
                "author": {
                    "date": "2020-02-02T09:37:49Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-05T20:31:33Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Added fastcall_args directive\n\nThis turns *args and/or **kwds into a special fastcalltuple\nor fastcalldict type, which may be possible to use more\nefficiently (but are more limited in their usage).\n\nThey're enabled by an `@cython.fastcall_args(\"*\"/\"**\"/\"both\")\ndecorator on the relevant function.\n\nCurrently `*a` is generally a performance win. `**` is\nless convincing, but often better. Iterating over `kwds.items()`\nis a notable regression.\n\nThe main missing optimization at the moment would be being able\nto to use these types to call into other functions efficiently.",
                "tree": {
                    "sha": "1c0c81c61673fdaa654b09a3632409f48eee1ced",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1c0c81c61673fdaa654b09a3632409f48eee1ced"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/cdfbcfd1be95745228ccdf55c30057edfd1dfdab",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/cdfbcfd1be95745228ccdf55c30057edfd1dfdab",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6Y2RmYmNmZDFiZTk1NzQ1MjI4Y2NkZjU1YzMwMDU3ZWRmZDFkZmRhYg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f875f4c2a1b8e84fc3577a8dbe607d72cbd70131",
                    "sha": "f875f4c2a1b8e84fc3577a8dbe607d72cbd70131",
                    "url": "https://api.github.com/repos/cython/cython/commits/f875f4c2a1b8e84fc3577a8dbe607d72cbd70131"
                }
            ],
            "sha": "cdfbcfd1be95745228ccdf55c30057edfd1dfdab",
            "url": "https://api.github.com/repos/cython/cython/commits/cdfbcfd1be95745228ccdf55c30057edfd1dfdab"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/fb8486376c23fad59bd3a495423f5c6c3c886c95/comments",
            "commit": {
                "author": {
                    "date": "2020-02-05T21:46:40Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-05T21:46:40Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed some refcounting issues\n\nCaused by change of put_var_decref to actually put a decref\nrather than an xdecref (it seemed more honest, given that\nput_var_xdecref also exists)",
                "tree": {
                    "sha": "0c717d7e6b03c332e067a2c20ce459b9fd54ec79",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0c717d7e6b03c332e067a2c20ce459b9fd54ec79"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/fb8486376c23fad59bd3a495423f5c6c3c886c95",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/fb8486376c23fad59bd3a495423f5c6c3c886c95",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZmI4NDg2Mzc2YzIzZmFkNTliZDNhNDk1NDIzZjVjNmMzYzg4NmM5NQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/cdfbcfd1be95745228ccdf55c30057edfd1dfdab",
                    "sha": "cdfbcfd1be95745228ccdf55c30057edfd1dfdab",
                    "url": "https://api.github.com/repos/cython/cython/commits/cdfbcfd1be95745228ccdf55c30057edfd1dfdab"
                }
            ],
            "sha": "fb8486376c23fad59bd3a495423f5c6c3c886c95",
            "url": "https://api.github.com/repos/cython/cython/commits/fb8486376c23fad59bd3a495423f5c6c3c886c95"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4fe08aee328e995269f08056254e35f5f8287b9e/comments",
            "commit": {
                "author": {
                    "date": "2020-02-06T12:05:50Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-06T12:08:32Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Tests and added call forwarding\n\nFixed tests for older Python versions (mostly to do with dicts\nnot being ordered)\n\nAdd call forwarding so that the efficient fastcall arguments\ncan readily be passed onto other functions",
                "tree": {
                    "sha": "407343d09d550c17fb7f8e4b25c4123f8ae32ccd",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/407343d09d550c17fb7f8e4b25c4123f8ae32ccd"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4fe08aee328e995269f08056254e35f5f8287b9e",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/4fe08aee328e995269f08056254e35f5f8287b9e",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NGZlMDhhZWUzMjhlOTk1MjY5ZjA4MDU2MjU0ZTM1ZjVmODI4N2I5ZQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/fb8486376c23fad59bd3a495423f5c6c3c886c95",
                    "sha": "fb8486376c23fad59bd3a495423f5c6c3c886c95",
                    "url": "https://api.github.com/repos/cython/cython/commits/fb8486376c23fad59bd3a495423f5c6c3c886c95"
                }
            ],
            "sha": "4fe08aee328e995269f08056254e35f5f8287b9e",
            "url": "https://api.github.com/repos/cython/cython/commits/4fe08aee328e995269f08056254e35f5f8287b9e"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5b15969d5dfd433c1cceb1d9cf5b9330d19ac580/comments",
            "commit": {
                "author": {
                    "date": "2020-02-06T13:22:11Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-06T13:22:11Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed some Python 3.6 compile errors\n\nto do with const",
                "tree": {
                    "sha": "976f299628bb377feaf3e6fd2d775d144bef9427",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/976f299628bb377feaf3e6fd2d775d144bef9427"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5b15969d5dfd433c1cceb1d9cf5b9330d19ac580",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/5b15969d5dfd433c1cceb1d9cf5b9330d19ac580",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NWIxNTk2OWQ1ZGZkNDMzYzFjY2ViMWQ5Y2Y1YjkzMzBkMTlhYzU4MA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4fe08aee328e995269f08056254e35f5f8287b9e",
                    "sha": "4fe08aee328e995269f08056254e35f5f8287b9e",
                    "url": "https://api.github.com/repos/cython/cython/commits/4fe08aee328e995269f08056254e35f5f8287b9e"
                }
            ],
            "sha": "5b15969d5dfd433c1cceb1d9cf5b9330d19ac580",
            "url": "https://api.github.com/repos/cython/cython/commits/5b15969d5dfd433c1cceb1d9cf5b9330d19ac580"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/97e46539b7298d3e5a99ca351581111887e49196/comments",
            "commit": {
                "author": {
                    "date": "2020-02-06T21:11:26Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-06T21:11:26Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Argument scanning and forwarding\n\nMade argument scanning a bit more robust. Improved forwarding\nfastcall arguments to other functions",
                "tree": {
                    "sha": "d84ea65278b21928baf6e87e4f2e0db0620e2e24",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d84ea65278b21928baf6e87e4f2e0db0620e2e24"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/97e46539b7298d3e5a99ca351581111887e49196",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/97e46539b7298d3e5a99ca351581111887e49196",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6OTdlNDY1MzliNzI5OGQzZTVhOTljYTM1MTU4MTExMTg4N2U0OTE5Ng==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/5b15969d5dfd433c1cceb1d9cf5b9330d19ac580",
                    "sha": "5b15969d5dfd433c1cceb1d9cf5b9330d19ac580",
                    "url": "https://api.github.com/repos/cython/cython/commits/5b15969d5dfd433c1cceb1d9cf5b9330d19ac580"
                }
            ],
            "sha": "97e46539b7298d3e5a99ca351581111887e49196",
            "url": "https://api.github.com/repos/cython/cython/commits/97e46539b7298d3e5a99ca351581111887e49196"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1eba73b286e1da130cdea8018b5fa7bad15792e9/comments",
            "commit": {
                "author": {
                    "date": "2020-02-07T09:49:57Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-07T09:49:57Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed C++ compilation errors\n\n(gotos crossed variable initialization)",
                "tree": {
                    "sha": "7f581b795f19513bb9034ecb756f4918471e9bbc",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/7f581b795f19513bb9034ecb756f4918471e9bbc"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1eba73b286e1da130cdea8018b5fa7bad15792e9",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/1eba73b286e1da130cdea8018b5fa7bad15792e9",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MWViYTczYjI4NmUxZGExMzBjZGVhODAxOGI1ZmE3YmFkMTU3OTJlOQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/97e46539b7298d3e5a99ca351581111887e49196",
                    "sha": "97e46539b7298d3e5a99ca351581111887e49196",
                    "url": "https://api.github.com/repos/cython/cython/commits/97e46539b7298d3e5a99ca351581111887e49196"
                }
            ],
            "sha": "1eba73b286e1da130cdea8018b5fa7bad15792e9",
            "url": "https://api.github.com/repos/cython/cython/commits/1eba73b286e1da130cdea8018b5fa7bad15792e9"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ca53ff575f317772331dbe9f459f044fca80bca5/comments",
            "commit": {
                "author": {
                    "date": "2020-02-17T21:52:26Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-19T14:03:39Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Added forgotten test file",
                "tree": {
                    "sha": "de51031a0d343072d53f4e94fe24b6b1d90a0eab",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/de51031a0d343072d53f4e94fe24b6b1d90a0eab"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ca53ff575f317772331dbe9f459f044fca80bca5",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/ca53ff575f317772331dbe9f459f044fca80bca5",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6Y2E1M2ZmNTc1ZjMxNzc3MjMzMWRiZTlmNDU5ZjA0NGZjYTgwYmNhNQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1eba73b286e1da130cdea8018b5fa7bad15792e9",
                    "sha": "1eba73b286e1da130cdea8018b5fa7bad15792e9",
                    "url": "https://api.github.com/repos/cython/cython/commits/1eba73b286e1da130cdea8018b5fa7bad15792e9"
                }
            ],
            "sha": "ca53ff575f317772331dbe9f459f044fca80bca5",
            "url": "https://api.github.com/repos/cython/cython/commits/ca53ff575f317772331dbe9f459f044fca80bca5"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/27dba771faad6654734b3109154c2a75043f9721/comments",
            "commit": {
                "author": {
                    "date": "2020-02-19T14:05:16Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-19T14:05:16Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Added automatic inference of fastcall types\n\nShould now use the specialized fastcall types by default where\npossible, falling back to the regular types with too many\ntuple coercions or with any closure",
                "tree": {
                    "sha": "93ec1ae46ac5d6c58e129d3149ec0d0c8e6d0226",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/93ec1ae46ac5d6c58e129d3149ec0d0c8e6d0226"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/27dba771faad6654734b3109154c2a75043f9721",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/27dba771faad6654734b3109154c2a75043f9721",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MjdkYmE3NzFmYWFkNjY1NDczNGIzMTA5MTU0YzJhNzUwNDNmOTcyMQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ca53ff575f317772331dbe9f459f044fca80bca5",
                    "sha": "ca53ff575f317772331dbe9f459f044fca80bca5",
                    "url": "https://api.github.com/repos/cython/cython/commits/ca53ff575f317772331dbe9f459f044fca80bca5"
                }
            ],
            "sha": "27dba771faad6654734b3109154c2a75043f9721",
            "url": "https://api.github.com/repos/cython/cython/commits/27dba771faad6654734b3109154c2a75043f9721"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/928253231764b6a1d101f211cce59109929fed48/comments",
            "commit": {
                "author": {
                    "date": "2020-02-19T14:18:41Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-19T14:18:41Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Removed forgotten PrintTree",
                "tree": {
                    "sha": "0b445392b9904c8b434a5cf6e49af4792c2ce3eb",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0b445392b9904c8b434a5cf6e49af4792c2ce3eb"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/928253231764b6a1d101f211cce59109929fed48",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/928253231764b6a1d101f211cce59109929fed48",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6OTI4MjUzMjMxNzY0YjZhMWQxMDFmMjExY2NlNTkxMDk5MjlmZWQ0OA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/27dba771faad6654734b3109154c2a75043f9721",
                    "sha": "27dba771faad6654734b3109154c2a75043f9721",
                    "url": "https://api.github.com/repos/cython/cython/commits/27dba771faad6654734b3109154c2a75043f9721"
                }
            ],
            "sha": "928253231764b6a1d101f211cce59109929fed48",
            "url": "https://api.github.com/repos/cython/cython/commits/928253231764b6a1d101f211cce59109929fed48"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a6675815f35f423ba320e372bb3f931778212c7f/comments",
            "commit": {
                "author": {
                    "date": "2020-02-19T17:20:59Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-19T17:20:59Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed some C compile errors\n\nCaused by PyArgDeclNodes instead of CArgDeclNodes and similar\nsmall issues when the optimization was applied more generally.\n\nAlso did a few of the smaller changes from review of initial commit.\n\nMade it use fastcall dict less often.",
                "tree": {
                    "sha": "80d911a0d2a4e9df87b570a290b498aea92de414",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/80d911a0d2a4e9df87b570a290b498aea92de414"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a6675815f35f423ba320e372bb3f931778212c7f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/a6675815f35f423ba320e372bb3f931778212c7f",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YTY2NzU4MTVmMzVmNDIzYmEzMjBlMzcyYmIzZjkzMTc3ODIxMmM3Zg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/928253231764b6a1d101f211cce59109929fed48",
                    "sha": "928253231764b6a1d101f211cce59109929fed48",
                    "url": "https://api.github.com/repos/cython/cython/commits/928253231764b6a1d101f211cce59109929fed48"
                }
            ],
            "sha": "a6675815f35f423ba320e372bb3f931778212c7f",
            "url": "https://api.github.com/repos/cython/cython/commits/a6675815f35f423ba320e372bb3f931778212c7f"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c0d90a7bff732f1fb593ed09787240cab0ea9a92/comments",
            "commit": {
                "author": {
                    "date": "2020-02-19T19:38:01Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-19T19:38:01Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Unused arguments weren't having header code generated",
                "tree": {
                    "sha": "8f4056be0e46c63a4f3a3a2778db313e8f6ee530",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8f4056be0e46c63a4f3a3a2778db313e8f6ee530"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c0d90a7bff732f1fb593ed09787240cab0ea9a92",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/c0d90a7bff732f1fb593ed09787240cab0ea9a92",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YzBkOTBhN2JmZjczMmYxZmI1OTNlZDA5Nzg3MjQwY2FiMGVhOWE5Mg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a6675815f35f423ba320e372bb3f931778212c7f",
                    "sha": "a6675815f35f423ba320e372bb3f931778212c7f",
                    "url": "https://api.github.com/repos/cython/cython/commits/a6675815f35f423ba320e372bb3f931778212c7f"
                }
            ],
            "sha": "c0d90a7bff732f1fb593ed09787240cab0ea9a92",
            "url": "https://api.github.com/repos/cython/cython/commits/c0d90a7bff732f1fb593ed09787240cab0ea9a92"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/bd3eb6da38e77c1668a0755067faa93584910024/comments",
            "commit": {
                "author": {
                    "date": "2020-02-19T21:03:47Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-19T21:03:47Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Cleaned up some code duplication\n\nIn the C UtilityCode",
                "tree": {
                    "sha": "a9a5a6b07335028de6f5a796ef524ac0f1004ff7",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a9a5a6b07335028de6f5a796ef524ac0f1004ff7"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/bd3eb6da38e77c1668a0755067faa93584910024",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/bd3eb6da38e77c1668a0755067faa93584910024",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YmQzZWI2ZGEzOGU3N2MxNjY4YTA3NTUwNjdmYWE5MzU4NDkxMDAyNA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c0d90a7bff732f1fb593ed09787240cab0ea9a92",
                    "sha": "c0d90a7bff732f1fb593ed09787240cab0ea9a92",
                    "url": "https://api.github.com/repos/cython/cython/commits/c0d90a7bff732f1fb593ed09787240cab0ea9a92"
                }
            ],
            "sha": "bd3eb6da38e77c1668a0755067faa93584910024",
            "url": "https://api.github.com/repos/cython/cython/commits/bd3eb6da38e77c1668a0755067faa93584910024"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9250c61041e6cbf9826d7029269f162681f9c6b2/comments",
            "commit": {
                "author": {
                    "date": "2020-02-19T21:04:17Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-19T21:04:17Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Handled fallback from fastcall types to regular types better",
                "tree": {
                    "sha": "35d8308cfa730c24aafb29bee865c480aefda7fd",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/35d8308cfa730c24aafb29bee865c480aefda7fd"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9250c61041e6cbf9826d7029269f162681f9c6b2",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/9250c61041e6cbf9826d7029269f162681f9c6b2",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6OTI1MGM2MTA0MWU2Y2JmOTgyNmQ3MDI5MjY5ZjE2MjY4MWY5YzZiMg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/bd3eb6da38e77c1668a0755067faa93584910024",
                    "sha": "bd3eb6da38e77c1668a0755067faa93584910024",
                    "url": "https://api.github.com/repos/cython/cython/commits/bd3eb6da38e77c1668a0755067faa93584910024"
                }
            ],
            "sha": "9250c61041e6cbf9826d7029269f162681f9c6b2",
            "url": "https://api.github.com/repos/cython/cython/commits/9250c61041e6cbf9826d7029269f162681f9c6b2"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2da603bd9bc4351ca964d0c6b114cb4d864d745c/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T08:36:06Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T13:10:54Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Better resolution of spanning types\n\ndict+fastcalldict -> dict rather than object",
                "tree": {
                    "sha": "2fb0fcd0455ba3431a083b4088ae6a6cb558f746",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2fb0fcd0455ba3431a083b4088ae6a6cb558f746"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2da603bd9bc4351ca964d0c6b114cb4d864d745c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/2da603bd9bc4351ca964d0c6b114cb4d864d745c",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MmRhNjAzYmQ5YmM0MzUxY2E5NjRkMGM2YjExNGNiNGQ4NjRkNzQ1Yw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9250c61041e6cbf9826d7029269f162681f9c6b2",
                    "sha": "9250c61041e6cbf9826d7029269f162681f9c6b2",
                    "url": "https://api.github.com/repos/cython/cython/commits/9250c61041e6cbf9826d7029269f162681f9c6b2"
                }
            ],
            "sha": "2da603bd9bc4351ca964d0c6b114cb4d864d745c",
            "url": "https://api.github.com/repos/cython/cython/commits/2da603bd9bc4351ca964d0c6b114cb4d864d745c"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1a601c80ce0ef9d51514d411c24b7666d1e16554/comments",
            "commit": {
                "author": {
                    "date": "2020-02-11T16:09:00Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T13:34:47Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Moved generation of reference counting into PyrexTypes\n\nThe idea being that struct-types like memoryviews\ncan generate their own reference counting code\nusing a common interface with Python objects",
                "tree": {
                    "sha": "4b83669374985a2eda1b74c2809d8582e21b273c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/4b83669374985a2eda1b74c2809d8582e21b273c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1a601c80ce0ef9d51514d411c24b7666d1e16554",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/1a601c80ce0ef9d51514d411c24b7666d1e16554",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MWE2MDFjODBjZTBlZjlkNTE1MTRkNDExYzI0Yjc2NjZkMWUxNjU1NA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f875f4c2a1b8e84fc3577a8dbe607d72cbd70131",
                    "sha": "f875f4c2a1b8e84fc3577a8dbe607d72cbd70131",
                    "url": "https://api.github.com/repos/cython/cython/commits/f875f4c2a1b8e84fc3577a8dbe607d72cbd70131"
                }
            ],
            "sha": "1a601c80ce0ef9d51514d411c24b7666d1e16554",
            "url": "https://api.github.com/repos/cython/cython/commits/1a601c80ce0ef9d51514d411c24b7666d1e16554"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c85eb79abd0a19a08665b430cd149018b9f1d2ef/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T13:54:16Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T13:54:16Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'refcoutingreorg' into fastcall_args",
                "tree": {
                    "sha": "ed6a25effcd5b71fe798c1045b30dbb94d458d48",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ed6a25effcd5b71fe798c1045b30dbb94d458d48"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c85eb79abd0a19a08665b430cd149018b9f1d2ef",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/c85eb79abd0a19a08665b430cd149018b9f1d2ef",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6Yzg1ZWI3OWFiZDBhMTlhMDg2NjViNDMwY2QxNDkwMThiOWYxZDJlZg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2da603bd9bc4351ca964d0c6b114cb4d864d745c",
                    "sha": "2da603bd9bc4351ca964d0c6b114cb4d864d745c",
                    "url": "https://api.github.com/repos/cython/cython/commits/2da603bd9bc4351ca964d0c6b114cb4d864d745c"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/1a601c80ce0ef9d51514d411c24b7666d1e16554",
                    "sha": "1a601c80ce0ef9d51514d411c24b7666d1e16554",
                    "url": "https://api.github.com/repos/cython/cython/commits/1a601c80ce0ef9d51514d411c24b7666d1e16554"
                }
            ],
            "sha": "c85eb79abd0a19a08665b430cd149018b9f1d2ef",
            "url": "https://api.github.com/repos/cython/cython/commits/c85eb79abd0a19a08665b430cd149018b9f1d2ef"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/697ae3aef7e53e25ceec79884d10397985b73c78/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T14:06:24Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T14:06:24Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Removed no_pyobject_cast, cleaned up some putvars",
                "tree": {
                    "sha": "8c78e924733a398c6d305dc80e11ca2a5df5af9f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8c78e924733a398c6d305dc80e11ca2a5df5af9f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/697ae3aef7e53e25ceec79884d10397985b73c78",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/697ae3aef7e53e25ceec79884d10397985b73c78",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6Njk3YWUzYWVmN2U1M2UyNWNlZWM3OTg4NGQxMDM5Nzk4NWI3M2M3OA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1a601c80ce0ef9d51514d411c24b7666d1e16554",
                    "sha": "1a601c80ce0ef9d51514d411c24b7666d1e16554",
                    "url": "https://api.github.com/repos/cython/cython/commits/1a601c80ce0ef9d51514d411c24b7666d1e16554"
                }
            ],
            "sha": "697ae3aef7e53e25ceec79884d10397985b73c78",
            "url": "https://api.github.com/repos/cython/cython/commits/697ae3aef7e53e25ceec79884d10397985b73c78"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/db938fa90cbb0fa262c444e0072ced0fdcce0611/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T14:08:29Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T14:08:29Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'refcoutingreorg' into fastcall_args",
                "tree": {
                    "sha": "2a4b53c8435be366baed680478a038eb3eb29df6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2a4b53c8435be366baed680478a038eb3eb29df6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/db938fa90cbb0fa262c444e0072ced0fdcce0611",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/db938fa90cbb0fa262c444e0072ced0fdcce0611",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZGI5MzhmYTkwY2JiMGZhMjYyYzQ0NGUwMDcyY2VkMGZkY2NlMDYxMQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c85eb79abd0a19a08665b430cd149018b9f1d2ef",
                    "sha": "c85eb79abd0a19a08665b430cd149018b9f1d2ef",
                    "url": "https://api.github.com/repos/cython/cython/commits/c85eb79abd0a19a08665b430cd149018b9f1d2ef"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/697ae3aef7e53e25ceec79884d10397985b73c78",
                    "sha": "697ae3aef7e53e25ceec79884d10397985b73c78",
                    "url": "https://api.github.com/repos/cython/cython/commits/697ae3aef7e53e25ceec79884d10397985b73c78"
                }
            ],
            "sha": "db938fa90cbb0fa262c444e0072ced0fdcce0611",
            "url": "https://api.github.com/repos/cython/cython/commits/db938fa90cbb0fa262c444e0072ced0fdcce0611"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/09713de3891daee10287f9bdec1cf006ed6085e3/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T14:43:23Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T14:43:23Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Added nullcheck attribute",
                "tree": {
                    "sha": "a4993ecc2c39102b5cdc83e55f2105503f7abbb0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a4993ecc2c39102b5cdc83e55f2105503f7abbb0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/09713de3891daee10287f9bdec1cf006ed6085e3",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/09713de3891daee10287f9bdec1cf006ed6085e3",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MDk3MTNkZTM4OTFkYWVlMTAyODdmOWJkZWMxY2YwMDZlZDYwODVlMw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/697ae3aef7e53e25ceec79884d10397985b73c78",
                    "sha": "697ae3aef7e53e25ceec79884d10397985b73c78",
                    "url": "https://api.github.com/repos/cython/cython/commits/697ae3aef7e53e25ceec79884d10397985b73c78"
                }
            ],
            "sha": "09713de3891daee10287f9bdec1cf006ed6085e3",
            "url": "https://api.github.com/repos/cython/cython/commits/09713de3891daee10287f9bdec1cf006ed6085e3"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/3e4e23606d910b9d020207af8edcda0851680d4a/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T14:44:06Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T14:44:06Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'refcoutingreorg' into fastcall_args",
                "tree": {
                    "sha": "4f1d4277dcc7af6d3444587c7ccd0dfd11cd2441",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/4f1d4277dcc7af6d3444587c7ccd0dfd11cd2441"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/3e4e23606d910b9d020207af8edcda0851680d4a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/3e4e23606d910b9d020207af8edcda0851680d4a",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6M2U0ZTIzNjA2ZDkxMGI5ZDAyMDIwN2FmOGVkY2RhMDg1MTY4MGQ0YQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/db938fa90cbb0fa262c444e0072ced0fdcce0611",
                    "sha": "db938fa90cbb0fa262c444e0072ced0fdcce0611",
                    "url": "https://api.github.com/repos/cython/cython/commits/db938fa90cbb0fa262c444e0072ced0fdcce0611"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/09713de3891daee10287f9bdec1cf006ed6085e3",
                    "sha": "09713de3891daee10287f9bdec1cf006ed6085e3",
                    "url": "https://api.github.com/repos/cython/cython/commits/09713de3891daee10287f9bdec1cf006ed6085e3"
                }
            ],
            "sha": "3e4e23606d910b9d020207af8edcda0851680d4a",
            "url": "https://api.github.com/repos/cython/cython/commits/3e4e23606d910b9d020207af8edcda0851680d4a"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5f2c6f0fe95de18cb5b6ae46675a72cf9329c0e7/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T15:16:35Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T15:16:35Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Added xincref",
                "tree": {
                    "sha": "e62704a7d5fdfc79e46334b6816e177ee02649cf",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e62704a7d5fdfc79e46334b6816e177ee02649cf"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5f2c6f0fe95de18cb5b6ae46675a72cf9329c0e7",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/5f2c6f0fe95de18cb5b6ae46675a72cf9329c0e7",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NWYyYzZmMGZlOTVkZTE4Y2I1YjZhZTQ2Njc1YTcyY2Y5MzI5YzBlNw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/09713de3891daee10287f9bdec1cf006ed6085e3",
                    "sha": "09713de3891daee10287f9bdec1cf006ed6085e3",
                    "url": "https://api.github.com/repos/cython/cython/commits/09713de3891daee10287f9bdec1cf006ed6085e3"
                }
            ],
            "sha": "5f2c6f0fe95de18cb5b6ae46675a72cf9329c0e7",
            "url": "https://api.github.com/repos/cython/cython/commits/5f2c6f0fe95de18cb5b6ae46675a72cf9329c0e7"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/3168cb04ffab9999379dd3496bf4f9e0dc130654/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T15:19:42Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T15:19:42Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'refcoutingreorg' into fastcall_args",
                "tree": {
                    "sha": "b16af940c500fb8ff6304c80aea6d16b85c7bfa9",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/b16af940c500fb8ff6304c80aea6d16b85c7bfa9"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/3168cb04ffab9999379dd3496bf4f9e0dc130654",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/3168cb04ffab9999379dd3496bf4f9e0dc130654",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MzE2OGNiMDRmZmFiOTk5OTM3OWRkMzQ5NmJmNGY5ZTBkYzEzMDY1NA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3e4e23606d910b9d020207af8edcda0851680d4a",
                    "sha": "3e4e23606d910b9d020207af8edcda0851680d4a",
                    "url": "https://api.github.com/repos/cython/cython/commits/3e4e23606d910b9d020207af8edcda0851680d4a"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/5f2c6f0fe95de18cb5b6ae46675a72cf9329c0e7",
                    "sha": "5f2c6f0fe95de18cb5b6ae46675a72cf9329c0e7",
                    "url": "https://api.github.com/repos/cython/cython/commits/5f2c6f0fe95de18cb5b6ae46675a72cf9329c0e7"
                }
            ],
            "sha": "3168cb04ffab9999379dd3496bf4f9e0dc130654",
            "url": "https://api.github.com/repos/cython/cython/commits/3168cb04ffab9999379dd3496bf4f9e0dc130654"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a665f442c3ae2dffa08c70e31f66b76952e7d4e4/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T15:47:21Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T15:47:21Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Started process of making FastcallTuple \"refcounted\"\n\nImportant because the fallback option is now just\na regular Python tuple, so it does need to generate\nall the right reference counting code",
                "tree": {
                    "sha": "f5c228f24a3562b46b31344d7c3af55a0ec8bf4b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f5c228f24a3562b46b31344d7c3af55a0ec8bf4b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a665f442c3ae2dffa08c70e31f66b76952e7d4e4",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/a665f442c3ae2dffa08c70e31f66b76952e7d4e4",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YTY2NWY0NDJjM2FlMmRmZmEwOGM3MGUzMWY2NmI3Njk1MmU3ZDRlNA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3168cb04ffab9999379dd3496bf4f9e0dc130654",
                    "sha": "3168cb04ffab9999379dd3496bf4f9e0dc130654",
                    "url": "https://api.github.com/repos/cython/cython/commits/3168cb04ffab9999379dd3496bf4f9e0dc130654"
                }
            ],
            "sha": "a665f442c3ae2dffa08c70e31f66b76952e7d4e4",
            "url": "https://api.github.com/repos/cython/cython/commits/a665f442c3ae2dffa08c70e31f66b76952e7d4e4"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/fc9d9f39c1c932bc7c1aaedc731b4483da4704d4/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T17:11:22Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T17:11:22Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Allow tempita includes to be more readily @required\n\n@subsitute: tempita tag ensures that they are\nloaded in tempita utility code class",
                "tree": {
                    "sha": "7f3e1f3fbbd3b2eb5ead929e4d2a28faf053af7d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/7f3e1f3fbbd3b2eb5ead929e4d2a28faf053af7d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/fc9d9f39c1c932bc7c1aaedc731b4483da4704d4",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/fc9d9f39c1c932bc7c1aaedc731b4483da4704d4",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZmM5ZDlmMzljMWM5MzJiYzdjMWFhZWRjNzMxYjQ0ODNkYTQ3MDRkNA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a665f442c3ae2dffa08c70e31f66b76952e7d4e4",
                    "sha": "a665f442c3ae2dffa08c70e31f66b76952e7d4e4",
                    "url": "https://api.github.com/repos/cython/cython/commits/a665f442c3ae2dffa08c70e31f66b76952e7d4e4"
                }
            ],
            "sha": "fc9d9f39c1c932bc7c1aaedc731b4483da4704d4",
            "url": "https://api.github.com/repos/cython/cython/commits/fc9d9f39c1c932bc7c1aaedc731b4483da4704d4"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f5772215a1b6e0e2ebda10a93e958ba3b06ec2a7/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T17:26:52Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T17:26:52Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "More direct fallback on exisiting optimized functions",
                "tree": {
                    "sha": "5ca9a32e5197898391e1605c2fed0f59a4febd2f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/5ca9a32e5197898391e1605c2fed0f59a4febd2f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f5772215a1b6e0e2ebda10a93e958ba3b06ec2a7",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/f5772215a1b6e0e2ebda10a93e958ba3b06ec2a7",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZjU3NzIyMTVhMWI2ZTBlMmViZGExMGE5M2U5NThiYTNiMDZlYzJhNw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/fc9d9f39c1c932bc7c1aaedc731b4483da4704d4",
                    "sha": "fc9d9f39c1c932bc7c1aaedc731b4483da4704d4",
                    "url": "https://api.github.com/repos/cython/cython/commits/fc9d9f39c1c932bc7c1aaedc731b4483da4704d4"
                }
            ],
            "sha": "f5772215a1b6e0e2ebda10a93e958ba3b06ec2a7",
            "url": "https://api.github.com/repos/cython/cython/commits/f5772215a1b6e0e2ebda10a93e958ba3b06ec2a7"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/555a6064d8f60cc3bd72b7b437cd87e77871d2e3/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T15:16:35Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T18:12:18Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Added xincref",
                "tree": {
                    "sha": "95abac06f24408d9fb56eddb143caac6deca4378",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/95abac06f24408d9fb56eddb143caac6deca4378"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/555a6064d8f60cc3bd72b7b437cd87e77871d2e3",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/555a6064d8f60cc3bd72b7b437cd87e77871d2e3",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NTU1YTYwNjRkOGY2MGNjM2JkNzJiN2I0MzdjZDg3ZTc3ODcxZDJlMw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/09713de3891daee10287f9bdec1cf006ed6085e3",
                    "sha": "09713de3891daee10287f9bdec1cf006ed6085e3",
                    "url": "https://api.github.com/repos/cython/cython/commits/09713de3891daee10287f9bdec1cf006ed6085e3"
                }
            ],
            "sha": "555a6064d8f60cc3bd72b7b437cd87e77871d2e3",
            "url": "https://api.github.com/repos/cython/cython/commits/555a6064d8f60cc3bd72b7b437cd87e77871d2e3"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5a3569cda7945327b7aee397a1e3f288ab3bf00f/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T17:52:20Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T18:12:47Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Replace put_exprnode_xxxref with a function on Exprnode\n\nTo prevent Code.py having to know that nodes exist",
                "tree": {
                    "sha": "86bf9722d7b544a1fa380f950926fe5e9e0c5a9d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/86bf9722d7b544a1fa380f950926fe5e9e0c5a9d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5a3569cda7945327b7aee397a1e3f288ab3bf00f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/5a3569cda7945327b7aee397a1e3f288ab3bf00f",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NWEzNTY5Y2RhNzk0NTMyN2I3YWVlMzk3YTFlM2YyODhhYjNiZjAwZg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/555a6064d8f60cc3bd72b7b437cd87e77871d2e3",
                    "sha": "555a6064d8f60cc3bd72b7b437cd87e77871d2e3",
                    "url": "https://api.github.com/repos/cython/cython/commits/555a6064d8f60cc3bd72b7b437cd87e77871d2e3"
                }
            ],
            "sha": "5a3569cda7945327b7aee397a1e3f288ab3bf00f",
            "url": "https://api.github.com/repos/cython/cython/commits/5a3569cda7945327b7aee397a1e3f288ab3bf00f"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7e77740e75d5c0c565d9988487cac07e0131bbb5/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T18:13:01Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T18:13:01Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'master' into refcoutingreorg",
                "tree": {
                    "sha": "7702cb9d57c571779d57ca0e260fe1aac4f8630b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/7702cb9d57c571779d57ca0e260fe1aac4f8630b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7e77740e75d5c0c565d9988487cac07e0131bbb5",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/7e77740e75d5c0c565d9988487cac07e0131bbb5",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6N2U3Nzc0MGU3NWQ1YzBjNTY1ZDk5ODg0ODdjYWMwN2UwMTMxYmJiNQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/5a3569cda7945327b7aee397a1e3f288ab3bf00f",
                    "sha": "5a3569cda7945327b7aee397a1e3f288ab3bf00f",
                    "url": "https://api.github.com/repos/cython/cython/commits/5a3569cda7945327b7aee397a1e3f288ab3bf00f"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/8e35f7e282f0ec7e5dab48d7c0d31595f2b2c237",
                    "sha": "8e35f7e282f0ec7e5dab48d7c0d31595f2b2c237",
                    "url": "https://api.github.com/repos/cython/cython/commits/8e35f7e282f0ec7e5dab48d7c0d31595f2b2c237"
                }
            ],
            "sha": "7e77740e75d5c0c565d9988487cac07e0131bbb5",
            "url": "https://api.github.com/repos/cython/cython/commits/7e77740e75d5c0c565d9988487cac07e0131bbb5"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/0b9e4117906807c9c7415f7a1bf0b520976c246d/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T18:43:12Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T18:43:12Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed change in master",
                "tree": {
                    "sha": "a802192e4ab9633de1d13edb5df5228abb14df8b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a802192e4ab9633de1d13edb5df5228abb14df8b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/0b9e4117906807c9c7415f7a1bf0b520976c246d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/0b9e4117906807c9c7415f7a1bf0b520976c246d",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MGI5ZTQxMTc5MDY4MDdjOWM3NDE1ZjdhMWJmMGI1MjA5NzZjMjQ2ZA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7e77740e75d5c0c565d9988487cac07e0131bbb5",
                    "sha": "7e77740e75d5c0c565d9988487cac07e0131bbb5",
                    "url": "https://api.github.com/repos/cython/cython/commits/7e77740e75d5c0c565d9988487cac07e0131bbb5"
                }
            ],
            "sha": "0b9e4117906807c9c7415f7a1bf0b520976c246d",
            "url": "https://api.github.com/repos/cython/cython/commits/0b9e4117906807c9c7415f7a1bf0b520976c246d"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/497162ee4425f641cb4ecfe23ba8d8480957da04/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T18:44:52Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T18:44:52Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'refcoutingreorg' into fastcall_args",
                "tree": {
                    "sha": "a6549fc515d81bbd4373baf986af5f7c1b8f42b1",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a6549fc515d81bbd4373baf986af5f7c1b8f42b1"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/497162ee4425f641cb4ecfe23ba8d8480957da04",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/497162ee4425f641cb4ecfe23ba8d8480957da04",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NDk3MTYyZWU0NDI1ZjY0MWNiNGVjZmUyM2JhOGQ4NDgwOTU3ZGEwNA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f5772215a1b6e0e2ebda10a93e958ba3b06ec2a7",
                    "sha": "f5772215a1b6e0e2ebda10a93e958ba3b06ec2a7",
                    "url": "https://api.github.com/repos/cython/cython/commits/f5772215a1b6e0e2ebda10a93e958ba3b06ec2a7"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/0b9e4117906807c9c7415f7a1bf0b520976c246d",
                    "sha": "0b9e4117906807c9c7415f7a1bf0b520976c246d",
                    "url": "https://api.github.com/repos/cython/cython/commits/0b9e4117906807c9c7415f7a1bf0b520976c246d"
                }
            ],
            "sha": "497162ee4425f641cb4ecfe23ba8d8480957da04",
            "url": "https://api.github.com/repos/cython/cython/commits/497162ee4425f641cb4ecfe23ba8d8480957da04"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f10087e07ec31cb9fe93884c712472ec5c45a0e1/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T20:03:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T20:03:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed one refcounting typo",
                "tree": {
                    "sha": "8ca82c880c144de527977f8458db228ec8564527",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8ca82c880c144de527977f8458db228ec8564527"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f10087e07ec31cb9fe93884c712472ec5c45a0e1",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/f10087e07ec31cb9fe93884c712472ec5c45a0e1",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZjEwMDg3ZTA3ZWMzMWNiOWZlOTM4ODRjNzEyNDcyZWM1YzQ1YTBlMQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/0b9e4117906807c9c7415f7a1bf0b520976c246d",
                    "sha": "0b9e4117906807c9c7415f7a1bf0b520976c246d",
                    "url": "https://api.github.com/repos/cython/cython/commits/0b9e4117906807c9c7415f7a1bf0b520976c246d"
                }
            ],
            "sha": "f10087e07ec31cb9fe93884c712472ec5c45a0e1",
            "url": "https://api.github.com/repos/cython/cython/commits/f10087e07ec31cb9fe93884c712472ec5c45a0e1"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6502bf2a82412d7d3b8113d81eac0c377ad4354c/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T20:03:59Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T20:03:59Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'refcoutingreorg' into fastcall_args",
                "tree": {
                    "sha": "7ad4430494dcf14f319d1a443a6cf9ebe8c6f4ed",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/7ad4430494dcf14f319d1a443a6cf9ebe8c6f4ed"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6502bf2a82412d7d3b8113d81eac0c377ad4354c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/6502bf2a82412d7d3b8113d81eac0c377ad4354c",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NjUwMmJmMmE4MjQxMmQ3ZDNiODExM2Q4MWVhYzBjMzc3YWQ0MzU0Yw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/497162ee4425f641cb4ecfe23ba8d8480957da04",
                    "sha": "497162ee4425f641cb4ecfe23ba8d8480957da04",
                    "url": "https://api.github.com/repos/cython/cython/commits/497162ee4425f641cb4ecfe23ba8d8480957da04"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/f10087e07ec31cb9fe93884c712472ec5c45a0e1",
                    "sha": "f10087e07ec31cb9fe93884c712472ec5c45a0e1",
                    "url": "https://api.github.com/repos/cython/cython/commits/f10087e07ec31cb9fe93884c712472ec5c45a0e1"
                }
            ],
            "sha": "6502bf2a82412d7d3b8113d81eac0c377ad4354c",
            "url": "https://api.github.com/repos/cython/cython/commits/6502bf2a82412d7d3b8113d81eac0c377ad4354c"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9bbaf6b962411db363d15a9dbb5fcb3c91559dcd/comments",
            "commit": {
                "author": {
                    "date": "2020-02-21T11:20:26Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-21T11:21:44Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Changed how the fastcall_args directive can be supplied\n\n(Also a few missed `put_gotrefs)",
                "tree": {
                    "sha": "550cfb857440a66d4afc9b8ec91c56fdec14833a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/550cfb857440a66d4afc9b8ec91c56fdec14833a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9bbaf6b962411db363d15a9dbb5fcb3c91559dcd",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/9bbaf6b962411db363d15a9dbb5fcb3c91559dcd",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6OWJiYWY2Yjk2MjQxMWRiMzYzZDE1YTlkYmI1ZmNiM2M5MTU1OWRjZA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6502bf2a82412d7d3b8113d81eac0c377ad4354c",
                    "sha": "6502bf2a82412d7d3b8113d81eac0c377ad4354c",
                    "url": "https://api.github.com/repos/cython/cython/commits/6502bf2a82412d7d3b8113d81eac0c377ad4354c"
                }
            ],
            "sha": "9bbaf6b962411db363d15a9dbb5fcb3c91559dcd",
            "url": "https://api.github.com/repos/cython/cython/commits/9bbaf6b962411db363d15a9dbb5fcb3c91559dcd"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d8057144f38b72c4123dd4ed2878d92705e97edd/comments",
            "commit": {
                "author": {
                    "date": "2020-02-21T12:50:47Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-21T12:50:47Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Added FastcallArgs to refcounting scheme",
                "tree": {
                    "sha": "8a053e85ffc2d46896835f6fae010ce7041f1259",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8a053e85ffc2d46896835f6fae010ce7041f1259"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d8057144f38b72c4123dd4ed2878d92705e97edd",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/d8057144f38b72c4123dd4ed2878d92705e97edd",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZDgwNTcxNDRmMzhiNzJjNDEyM2RkNGVkMjg3OGQ5MjcwNWU5N2VkZA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9bbaf6b962411db363d15a9dbb5fcb3c91559dcd",
                    "sha": "9bbaf6b962411db363d15a9dbb5fcb3c91559dcd",
                    "url": "https://api.github.com/repos/cython/cython/commits/9bbaf6b962411db363d15a9dbb5fcb3c91559dcd"
                }
            ],
            "sha": "d8057144f38b72c4123dd4ed2878d92705e97edd",
            "url": "https://api.github.com/repos/cython/cython/commits/d8057144f38b72c4123dd4ed2878d92705e97edd"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1d76c4e78bb05e0debf50d267fda76a5a0592ea7/comments",
            "commit": {
                "author": {
                    "date": "2020-02-21T14:57:02Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-21T14:57:02Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Quite a bit of renaming\n\nAlso dropped refnanny from fastcalldict since it doesn't really\nfit",
                "tree": {
                    "sha": "1c4f4c536499e6ed5e58c87b9eccf5126963eda5",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1c4f4c536499e6ed5e58c87b9eccf5126963eda5"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1d76c4e78bb05e0debf50d267fda76a5a0592ea7",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/1d76c4e78bb05e0debf50d267fda76a5a0592ea7",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MWQ3NmM0ZTc4YmIwNWUwZGViZjUwZDI2N2ZkYTc2YTVhMDU5MmVhNw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d8057144f38b72c4123dd4ed2878d92705e97edd",
                    "sha": "d8057144f38b72c4123dd4ed2878d92705e97edd",
                    "url": "https://api.github.com/repos/cython/cython/commits/d8057144f38b72c4123dd4ed2878d92705e97edd"
                }
            ],
            "sha": "1d76c4e78bb05e0debf50d267fda76a5a0592ea7",
            "url": "https://api.github.com/repos/cython/cython/commits/1d76c4e78bb05e0debf50d267fda76a5a0592ea7"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e19703ee6ba38cece4917a603689691a035bda4e/comments",
            "commit": {
                "author": {
                    "date": "2020-02-21T16:06:26Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-21T16:06:26Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed issue where FastcallTuple slices were infinitely long",
                "tree": {
                    "sha": "c12296c640c4c25ec223b73734c0c767dbb6649f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c12296c640c4c25ec223b73734c0c767dbb6649f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e19703ee6ba38cece4917a603689691a035bda4e",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/e19703ee6ba38cece4917a603689691a035bda4e",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZTE5NzAzZWU2YmEzOGNlY2U0OTE3YTYwMzY4OTY5MWEwMzViZGE0ZQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1d76c4e78bb05e0debf50d267fda76a5a0592ea7",
                    "sha": "1d76c4e78bb05e0debf50d267fda76a5a0592ea7",
                    "url": "https://api.github.com/repos/cython/cython/commits/1d76c4e78bb05e0debf50d267fda76a5a0592ea7"
                }
            ],
            "sha": "e19703ee6ba38cece4917a603689691a035bda4e",
            "url": "https://api.github.com/repos/cython/cython/commits/e19703ee6ba38cece4917a603689691a035bda4e"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9b55888ae3398b99e1468e5e24d6e28754cc3119/comments",
            "commit": {
                "author": {
                    "date": "2020-02-21T16:23:01Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-21T16:23:01Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Removed spurious memoryview giveref",
                "tree": {
                    "sha": "12e20a564f60f3e589dc253366b28cfff62a8e0a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/12e20a564f60f3e589dc253366b28cfff62a8e0a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9b55888ae3398b99e1468e5e24d6e28754cc3119",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/9b55888ae3398b99e1468e5e24d6e28754cc3119",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6OWI1NTg4OGFlMzM5OGI5OWUxNDY4ZTVlMjRkNmUyODc1NGNjMzExOQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f10087e07ec31cb9fe93884c712472ec5c45a0e1",
                    "sha": "f10087e07ec31cb9fe93884c712472ec5c45a0e1",
                    "url": "https://api.github.com/repos/cython/cython/commits/f10087e07ec31cb9fe93884c712472ec5c45a0e1"
                }
            ],
            "sha": "9b55888ae3398b99e1468e5e24d6e28754cc3119",
            "url": "https://api.github.com/repos/cython/cython/commits/9b55888ae3398b99e1468e5e24d6e28754cc3119"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/cd9e27a12cce862e0f4098557d054f3921c4a068/comments",
            "commit": {
                "author": {
                    "date": "2020-02-21T16:23:35Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-21T16:23:35Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'refcoutingreorg' into fastcall_args",
                "tree": {
                    "sha": "92d0bcf1aed081931f165e83cc7ac936928260ee",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/92d0bcf1aed081931f165e83cc7ac936928260ee"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/cd9e27a12cce862e0f4098557d054f3921c4a068",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/cd9e27a12cce862e0f4098557d054f3921c4a068",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6Y2Q5ZTI3YTEyY2NlODYyZTBmNDA5ODU1N2QwNTRmMzkyMWM0YTA2OA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e19703ee6ba38cece4917a603689691a035bda4e",
                    "sha": "e19703ee6ba38cece4917a603689691a035bda4e",
                    "url": "https://api.github.com/repos/cython/cython/commits/e19703ee6ba38cece4917a603689691a035bda4e"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/9b55888ae3398b99e1468e5e24d6e28754cc3119",
                    "sha": "9b55888ae3398b99e1468e5e24d6e28754cc3119",
                    "url": "https://api.github.com/repos/cython/cython/commits/9b55888ae3398b99e1468e5e24d6e28754cc3119"
                }
            ],
            "sha": "cd9e27a12cce862e0f4098557d054f3921c4a068",
            "url": "https://api.github.com/repos/cython/cython/commits/cd9e27a12cce862e0f4098557d054f3921c4a068"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6fb285d5326e644a88c67ff35dbe9560f0a332bf/comments",
            "commit": {
                "author": {
                    "date": "2020-02-22T18:30:57Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-22T18:31:55Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Removed memoryview giveref\n\nIt was causing problems because no memoryviews were givereffed in\nthe old code",
                "tree": {
                    "sha": "ce901f164a0cba98ee6892ceb7c2374b2cc0a44c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ce901f164a0cba98ee6892ceb7c2374b2cc0a44c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6fb285d5326e644a88c67ff35dbe9560f0a332bf",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/6fb285d5326e644a88c67ff35dbe9560f0a332bf",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NmZiMjg1ZDUzMjZlNjQ0YTg4YzY3ZmYzNWRiZTk1NjBmMGEzMzJiZg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9b55888ae3398b99e1468e5e24d6e28754cc3119",
                    "sha": "9b55888ae3398b99e1468e5e24d6e28754cc3119",
                    "url": "https://api.github.com/repos/cython/cython/commits/9b55888ae3398b99e1468e5e24d6e28754cc3119"
                }
            ],
            "sha": "6fb285d5326e644a88c67ff35dbe9560f0a332bf",
            "url": "https://api.github.com/repos/cython/cython/commits/6fb285d5326e644a88c67ff35dbe9560f0a332bf"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/861124cea5c8daf3d1cfb930df3b87130dd6fe31/comments",
            "commit": {
                "author": {
                    "date": "2020-02-22T19:44:14Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-22T19:44:14Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'refcoutingreorg' into fastcall_args",
                "tree": {
                    "sha": "e8fbfaab63bf9c4b6e0c80c754470d385df4859a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e8fbfaab63bf9c4b6e0c80c754470d385df4859a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/861124cea5c8daf3d1cfb930df3b87130dd6fe31",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/861124cea5c8daf3d1cfb930df3b87130dd6fe31",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ODYxMTI0Y2VhNWM4ZGFmM2QxY2ZiOTMwZGYzYjg3MTMwZGQ2ZmUzMQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/cd9e27a12cce862e0f4098557d054f3921c4a068",
                    "sha": "cd9e27a12cce862e0f4098557d054f3921c4a068",
                    "url": "https://api.github.com/repos/cython/cython/commits/cd9e27a12cce862e0f4098557d054f3921c4a068"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/6fb285d5326e644a88c67ff35dbe9560f0a332bf",
                    "sha": "6fb285d5326e644a88c67ff35dbe9560f0a332bf",
                    "url": "https://api.github.com/repos/cython/cython/commits/6fb285d5326e644a88c67ff35dbe9560f0a332bf"
                }
            ],
            "sha": "861124cea5c8daf3d1cfb930df3b87130dd6fe31",
            "url": "https://api.github.com/repos/cython/cython/commits/861124cea5c8daf3d1cfb930df3b87130dd6fe31"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d1d1f17f5cb07eeeeb391356348abc90c6f76ac6/comments",
            "commit": {
                "author": {
                    "date": "2020-02-23T09:28:02Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-23T19:01:01Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Made memoryviews more separate\n\nSince they often don't want to be reference counted when\npyobjects do",
                "tree": {
                    "sha": "e99d06540e5b1b2033bb8938c5c86fe629ba02c5",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e99d06540e5b1b2033bb8938c5c86fe629ba02c5"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d1d1f17f5cb07eeeeb391356348abc90c6f76ac6",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/d1d1f17f5cb07eeeeb391356348abc90c6f76ac6",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZDFkMWYxN2Y1Y2IwN2VlZWViMzkxMzU2MzQ4YWJjOTBjNmY3NmFjNg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6fb285d5326e644a88c67ff35dbe9560f0a332bf",
                    "sha": "6fb285d5326e644a88c67ff35dbe9560f0a332bf",
                    "url": "https://api.github.com/repos/cython/cython/commits/6fb285d5326e644a88c67ff35dbe9560f0a332bf"
                }
            ],
            "sha": "d1d1f17f5cb07eeeeb391356348abc90c6f76ac6",
            "url": "https://api.github.com/repos/cython/cython/commits/d1d1f17f5cb07eeeeb391356348abc90c6f76ac6"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/84f2d9dcbc8bf217f1c391e3746297d864274504/comments",
            "commit": {
                "author": {
                    "date": "2020-02-23T20:28:10Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-23T20:28:10Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'refcoutingreorg' into fastcall_args",
                "tree": {
                    "sha": "88becd2c013119733d414f5a66586f7a4e3f5383",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/88becd2c013119733d414f5a66586f7a4e3f5383"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/84f2d9dcbc8bf217f1c391e3746297d864274504",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/84f2d9dcbc8bf217f1c391e3746297d864274504",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ODRmMmQ5ZGNiYzhiZjIxN2YxYzM5MWUzNzQ2Mjk3ZDg2NDI3NDUwNA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/861124cea5c8daf3d1cfb930df3b87130dd6fe31",
                    "sha": "861124cea5c8daf3d1cfb930df3b87130dd6fe31",
                    "url": "https://api.github.com/repos/cython/cython/commits/861124cea5c8daf3d1cfb930df3b87130dd6fe31"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/d1d1f17f5cb07eeeeb391356348abc90c6f76ac6",
                    "sha": "d1d1f17f5cb07eeeeb391356348abc90c6f76ac6",
                    "url": "https://api.github.com/repos/cython/cython/commits/d1d1f17f5cb07eeeeb391356348abc90c6f76ac6"
                }
            ],
            "sha": "84f2d9dcbc8bf217f1c391e3746297d864274504",
            "url": "https://api.github.com/repos/cython/cython/commits/84f2d9dcbc8bf217f1c391e3746297d864274504"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b8a4974d696e081060cd5f9f46d92de3045f3d48/comments",
            "commit": {
                "author": {
                    "date": "2020-02-23T21:18:58Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-23T21:18:58Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Mainly fixed failing tests",
                "tree": {
                    "sha": "31e65f78abe7aa66649f591741a63eb44065c927",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/31e65f78abe7aa66649f591741a63eb44065c927"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b8a4974d696e081060cd5f9f46d92de3045f3d48",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/b8a4974d696e081060cd5f9f46d92de3045f3d48",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YjhhNDk3NGQ2OTZlMDgxMDYwY2Q1ZjlmNDZkOTJkZTMwNDVmM2Q0OA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/84f2d9dcbc8bf217f1c391e3746297d864274504",
                    "sha": "84f2d9dcbc8bf217f1c391e3746297d864274504",
                    "url": "https://api.github.com/repos/cython/cython/commits/84f2d9dcbc8bf217f1c391e3746297d864274504"
                }
            ],
            "sha": "b8a4974d696e081060cd5f9f46d92de3045f3d48",
            "url": "https://api.github.com/repos/cython/cython/commits/b8a4974d696e081060cd5f9f46d92de3045f3d48"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c1e615dfea4799ec5d38439f06fec6fbf58fe309/comments",
            "commit": {
                "author": {
                    "date": "2020-02-24T09:51:39Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-24T09:51:39Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fix iterdict test",
                "tree": {
                    "sha": "f32b30c3e02a05d936eb06daf12382f0b64ec35e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f32b30c3e02a05d936eb06daf12382f0b64ec35e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c1e615dfea4799ec5d38439f06fec6fbf58fe309",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/c1e615dfea4799ec5d38439f06fec6fbf58fe309",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YzFlNjE1ZGZlYTQ3OTllYzVkMzg0MzlmMDZmZWM2ZmJmNThmZTMwOQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b8a4974d696e081060cd5f9f46d92de3045f3d48",
                    "sha": "b8a4974d696e081060cd5f9f46d92de3045f3d48",
                    "url": "https://api.github.com/repos/cython/cython/commits/b8a4974d696e081060cd5f9f46d92de3045f3d48"
                }
            ],
            "sha": "c1e615dfea4799ec5d38439f06fec6fbf58fe309",
            "url": "https://api.github.com/repos/cython/cython/commits/c1e615dfea4799ec5d38439f06fec6fbf58fe309"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/895dcd3011a2a9bdb335ba015c004f7a7bf0914d/comments",
            "commit": {
                "author": {
                    "date": "2020-02-24T16:15:32Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-24T16:15:32Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Mainly fixing the Py2 fallback mode",
                "tree": {
                    "sha": "e0a51be7d2f7d120f825d1df60d0af2e4dc55a18",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e0a51be7d2f7d120f825d1df60d0af2e4dc55a18"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/895dcd3011a2a9bdb335ba015c004f7a7bf0914d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/895dcd3011a2a9bdb335ba015c004f7a7bf0914d",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ODk1ZGNkMzAxMWEyYTliZGIzMzViYTAxNWMwMDRmN2E3YmYwOTE0ZA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c1e615dfea4799ec5d38439f06fec6fbf58fe309",
                    "sha": "c1e615dfea4799ec5d38439f06fec6fbf58fe309",
                    "url": "https://api.github.com/repos/cython/cython/commits/c1e615dfea4799ec5d38439f06fec6fbf58fe309"
                }
            ],
            "sha": "895dcd3011a2a9bdb335ba015c004f7a7bf0914d",
            "url": "https://api.github.com/repos/cython/cython/commits/895dcd3011a2a9bdb335ba015c004f7a7bf0914d"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/38af8de9fa6dc7bee5ecfaa7899eb8a3217a4fdc/comments",
            "commit": {
                "author": {
                    "date": "2020-02-24T20:11:43Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-24T20:11:43Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed Python 3.6 bug and added better tests",
                "tree": {
                    "sha": "81cb5388b9ebaaf85c447c5f5684198a92155264",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/81cb5388b9ebaaf85c447c5f5684198a92155264"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/38af8de9fa6dc7bee5ecfaa7899eb8a3217a4fdc",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/38af8de9fa6dc7bee5ecfaa7899eb8a3217a4fdc",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MzhhZjhkZTlmYTZkYzdiZWU1ZWNmYWE3ODk5ZWI4YTMyMTdhNGZkYw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/895dcd3011a2a9bdb335ba015c004f7a7bf0914d",
                    "sha": "895dcd3011a2a9bdb335ba015c004f7a7bf0914d",
                    "url": "https://api.github.com/repos/cython/cython/commits/895dcd3011a2a9bdb335ba015c004f7a7bf0914d"
                }
            ],
            "sha": "38af8de9fa6dc7bee5ecfaa7899eb8a3217a4fdc",
            "url": "https://api.github.com/repos/cython/cython/commits/38af8de9fa6dc7bee5ecfaa7899eb8a3217a4fdc"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/395270ac0deb6cd461ee70a2cdf39b7238a17194/comments",
            "commit": {
                "author": {
                    "date": "2020-02-24T21:10:53Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-24T21:10:53Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Removed one unneccessary line of code",
                "tree": {
                    "sha": "72ecf8464484d9da52c4a4ccdb9d1ff127cbc9ee",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/72ecf8464484d9da52c4a4ccdb9d1ff127cbc9ee"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/395270ac0deb6cd461ee70a2cdf39b7238a17194",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/395270ac0deb6cd461ee70a2cdf39b7238a17194",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6Mzk1MjcwYWMwZGViNmNkNDYxZWU3MGEyY2RmMzliNzIzOGExNzE5NA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/38af8de9fa6dc7bee5ecfaa7899eb8a3217a4fdc",
                    "sha": "38af8de9fa6dc7bee5ecfaa7899eb8a3217a4fdc",
                    "url": "https://api.github.com/repos/cython/cython/commits/38af8de9fa6dc7bee5ecfaa7899eb8a3217a4fdc"
                }
            ],
            "sha": "395270ac0deb6cd461ee70a2cdf39b7238a17194",
            "url": "https://api.github.com/repos/cython/cython/commits/395270ac0deb6cd461ee70a2cdf39b7238a17194"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6b0d6dc8dfd9b7896f3f1d390831e752be2539e7/comments",
            "commit": {
                "author": {
                    "date": "2020-02-25T09:41:11Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-25T09:41:11Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Code duplication in ParseTuple, restructure where some functions are",
                "tree": {
                    "sha": "80f50e9b8f1b6bb93096ddd3e3a94069bfae57f8",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/80f50e9b8f1b6bb93096ddd3e3a94069bfae57f8"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6b0d6dc8dfd9b7896f3f1d390831e752be2539e7",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/6b0d6dc8dfd9b7896f3f1d390831e752be2539e7",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NmIwZDZkYzhkZmQ5Yjc4OTZmM2YxZDM5MDgzMWU3NTJiZTI1MzllNw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/395270ac0deb6cd461ee70a2cdf39b7238a17194",
                    "sha": "395270ac0deb6cd461ee70a2cdf39b7238a17194",
                    "url": "https://api.github.com/repos/cython/cython/commits/395270ac0deb6cd461ee70a2cdf39b7238a17194"
                }
            ],
            "sha": "6b0d6dc8dfd9b7896f3f1d390831e752be2539e7",
            "url": "https://api.github.com/repos/cython/cython/commits/6b0d6dc8dfd9b7896f3f1d390831e752be2539e7"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a35d7b488841e861334f809d39f73362a5fa051f/comments",
            "commit": {
                "author": {
                    "date": "2020-02-25T10:27:49Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-25T10:27:49Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Removed autoloading of utility code\n\nWasn't necessary and just seemed like extra work",
                "tree": {
                    "sha": "36d9a1b2f8e145156995e4ec65d5e891933dce9b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/36d9a1b2f8e145156995e4ec65d5e891933dce9b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a35d7b488841e861334f809d39f73362a5fa051f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/a35d7b488841e861334f809d39f73362a5fa051f",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YTM1ZDdiNDg4ODQxZTg2MTMzNGY4MDlkMzlmNzMzNjJhNWZhMDUxZg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d1d1f17f5cb07eeeeb391356348abc90c6f76ac6",
                    "sha": "d1d1f17f5cb07eeeeb391356348abc90c6f76ac6",
                    "url": "https://api.github.com/repos/cython/cython/commits/d1d1f17f5cb07eeeeb391356348abc90c6f76ac6"
                }
            ],
            "sha": "a35d7b488841e861334f809d39f73362a5fa051f",
            "url": "https://api.github.com/repos/cython/cython/commits/a35d7b488841e861334f809d39f73362a5fa051f"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ba1f9ba04d266ea798c4f902570fead71ae436d2/comments",
            "commit": {
                "author": {
                    "date": "2020-02-25T10:28:19Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-25T10:28:19Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'refcoutingreorg' into fastcall_args",
                "tree": {
                    "sha": "649351c0780473de69c094b21752a2dd64e712fc",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/649351c0780473de69c094b21752a2dd64e712fc"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ba1f9ba04d266ea798c4f902570fead71ae436d2",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/ba1f9ba04d266ea798c4f902570fead71ae436d2",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YmExZjliYTA0ZDI2NmVhNzk4YzRmOTAyNTcwZmVhZDcxYWU0MzZkMg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6b0d6dc8dfd9b7896f3f1d390831e752be2539e7",
                    "sha": "6b0d6dc8dfd9b7896f3f1d390831e752be2539e7",
                    "url": "https://api.github.com/repos/cython/cython/commits/6b0d6dc8dfd9b7896f3f1d390831e752be2539e7"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/a35d7b488841e861334f809d39f73362a5fa051f",
                    "sha": "a35d7b488841e861334f809d39f73362a5fa051f",
                    "url": "https://api.github.com/repos/cython/cython/commits/a35d7b488841e861334f809d39f73362a5fa051f"
                }
            ],
            "sha": "ba1f9ba04d266ea798c4f902570fead71ae436d2",
            "url": "https://api.github.com/repos/cython/cython/commits/ba1f9ba04d266ea798c4f902570fead71ae436d2"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/0e3a90229fbca8ad53f910f61d1e233cc2a4ebf4/comments",
            "commit": {
                "author": {
                    "date": "2020-02-25T13:16:25Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-25T13:20:43Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed call_py_cy\n\nEnsured that it's tested both with and without fastcall args",
                "tree": {
                    "sha": "903cfde571c4f0fd94782ff496f9e5b9e867fcfb",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/903cfde571c4f0fd94782ff496f9e5b9e867fcfb"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/0e3a90229fbca8ad53f910f61d1e233cc2a4ebf4",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/0e3a90229fbca8ad53f910f61d1e233cc2a4ebf4",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MGUzYTkwMjI5ZmJjYThhZDUzZjkxMGY2MWQxZTIzM2NjMmE0ZWJmNA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ba1f9ba04d266ea798c4f902570fead71ae436d2",
                    "sha": "ba1f9ba04d266ea798c4f902570fead71ae436d2",
                    "url": "https://api.github.com/repos/cython/cython/commits/ba1f9ba04d266ea798c4f902570fead71ae436d2"
                }
            ],
            "sha": "0e3a90229fbca8ad53f910f61d1e233cc2a4ebf4",
            "url": "https://api.github.com/repos/cython/cython/commits/0e3a90229fbca8ad53f910f61d1e233cc2a4ebf4"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/fbae1ea2cca11bb54c2960e36e4c5c855b699d00/comments",
            "commit": {
                "author": {
                    "date": "2020-02-25T14:10:44Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-25T14:10:44Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed callargs test (fastcall dict argument parsing)\n\nAdded specialised versions to check in it\nwith and without fastcall",
                "tree": {
                    "sha": "99b1807e3e005c519595bbb4d6e04db2869eb1ec",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/99b1807e3e005c519595bbb4d6e04db2869eb1ec"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/fbae1ea2cca11bb54c2960e36e4c5c855b699d00",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/fbae1ea2cca11bb54c2960e36e4c5c855b699d00",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZmJhZTFlYTJjY2ExMWJiNTRjMjk2MGUzNmU0YzVjODU1YjY5OWQwMA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/0e3a90229fbca8ad53f910f61d1e233cc2a4ebf4",
                    "sha": "0e3a90229fbca8ad53f910f61d1e233cc2a4ebf4",
                    "url": "https://api.github.com/repos/cython/cython/commits/0e3a90229fbca8ad53f910f61d1e233cc2a4ebf4"
                }
            ],
            "sha": "fbae1ea2cca11bb54c2960e36e4c5c855b699d00",
            "url": "https://api.github.com/repos/cython/cython/commits/fbae1ea2cca11bb54c2960e36e4c5c855b699d00"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6651736ce83d662525bb1de49adb10b785a33069/comments",
            "commit": {
                "author": {
                    "date": "2020-03-26T09:31:52Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-03-26T09:48:59Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'master' into fastcall_args",
                "tree": {
                    "sha": "6f3f62995caab8dd78d0309dc65c399a20ad1b7c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/6f3f62995caab8dd78d0309dc65c399a20ad1b7c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6651736ce83d662525bb1de49adb10b785a33069",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/6651736ce83d662525bb1de49adb10b785a33069",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NjY1MTczNmNlODNkNjYyNTI1YmIxZGU0OWFkYjEwYjc4NWEzMzA2OQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/fbae1ea2cca11bb54c2960e36e4c5c855b699d00",
                    "sha": "fbae1ea2cca11bb54c2960e36e4c5c855b699d00",
                    "url": "https://api.github.com/repos/cython/cython/commits/fbae1ea2cca11bb54c2960e36e4c5c855b699d00"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/48dc1f0169f81ed20c6b374941c2498ec94e57d0",
                    "sha": "48dc1f0169f81ed20c6b374941c2498ec94e57d0",
                    "url": "https://api.github.com/repos/cython/cython/commits/48dc1f0169f81ed20c6b374941c2498ec94e57d0"
                }
            ],
            "sha": "6651736ce83d662525bb1de49adb10b785a33069",
            "url": "https://api.github.com/repos/cython/cython/commits/6651736ce83d662525bb1de49adb10b785a33069"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b553c7c26f5fd1f55e466bcfe049b995e983acc6/comments",
            "commit": {
                "author": {
                    "date": "2020-03-26T14:41:05Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-03-26T14:41:05Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed bug in PyPy\n\n(Actually a bug in all versions, but CPython tends to share identical\nstrings so it wasn't getting caught)",
                "tree": {
                    "sha": "4678dc9136dea45a6805e8518a698b7fc9214bde",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/4678dc9136dea45a6805e8518a698b7fc9214bde"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b553c7c26f5fd1f55e466bcfe049b995e983acc6",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YjU1M2M3YzI2ZjVmZDFmNTVlNDY2YmNmZTA0OWI5OTVlOTgzYWNjNg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6651736ce83d662525bb1de49adb10b785a33069",
                    "sha": "6651736ce83d662525bb1de49adb10b785a33069",
                    "url": "https://api.github.com/repos/cython/cython/commits/6651736ce83d662525bb1de49adb10b785a33069"
                }
            ],
            "sha": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
            "url": "https://api.github.com/repos/cython/cython/commits/b553c7c26f5fd1f55e466bcfe049b995e983acc6"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b0e6dcd42bf3d6450f3c7f2b3b8b21d4906d55fc/comments",
            "commit": {
                "author": {
                    "date": "2020-03-27T16:26:20Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-03-27T16:26:20Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Apply suggestions from code review\n\nCo-Authored-By: Stefan Behnel <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "6f3f2da8fc3f46065b8337349ea31006467398c6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/6f3f2da8fc3f46065b8337349ea31006467398c6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b0e6dcd42bf3d6450f3c7f2b3b8b21d4906d55fc",
                "verification": {
                    "payload": "tree 6f3f2da8fc3f46065b8337349ea31006467398c6\nparent b553c7c26f5fd1f55e466bcfe049b995e983acc6\nauthor da-woods <dw-git@d-woods.co.uk> 1585326380 +0000\ncommitter GitHub <noreply@github.com> 1585326380 +0000\n\nApply suggestions from code review\n\nCo-Authored-By: Stefan Behnel <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJefiksCRBK7hj4Ov3rIwAAdHIIAIo0K/4q7vT2yzns8HU0Fw+q\nP0iB6ZWspTWAwzDWwu10IFeI0//i7lkXpw1BCipu5ESR6+VGa7GMu5eIeQmvSiWZ\n8Lk8YFr5d2vOVdLl3znQdKfBCRGT9Pj41fCJPoomsZOV3fwM9kkeh2JFGl7HO3YX\nFBMc0y3FrB7QESsM7R40Yr5CHoN2GzCbDAIYFmm4XN3QsNV3RcSvrfgXGxXoU+o+\nkXhblsYBJ5O7gYyic5ION/hY5eGaMCD2jtzUt8Hl4faRzz6NQWCD7ss1UdKejMjl\nPgfVo61Qmw278/+Vn6gmdQ9DoK15EmqYHQ8TrgCIPcmeKLrxmWmviJCqjKy83r8=\n=nHOP\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/b0e6dcd42bf3d6450f3c7f2b3b8b21d4906d55fc",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YjBlNmRjZDQyYmYzZDY0NTBmM2M3ZjJiM2I4YjIxZDQ5MDZkNTVmYw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b553c7c26f5fd1f55e466bcfe049b995e983acc6",
                    "sha": "b553c7c26f5fd1f55e466bcfe049b995e983acc6",
                    "url": "https://api.github.com/repos/cython/cython/commits/b553c7c26f5fd1f55e466bcfe049b995e983acc6"
                }
            ],
            "sha": "b0e6dcd42bf3d6450f3c7f2b3b8b21d4906d55fc",
            "url": "https://api.github.com/repos/cython/cython/commits/b0e6dcd42bf3d6450f3c7f2b3b8b21d4906d55fc"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4227b609a30e5ddf17c3a7a542bf522049c7058c/comments",
            "commit": {
                "author": {
                    "date": "2020-03-27T16:28:49Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-03-27T16:38:51Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Easy changes from review",
                "tree": {
                    "sha": "90fde8c4b0bdecd7c5514ae0fbd6c57f28ac33a7",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/90fde8c4b0bdecd7c5514ae0fbd6c57f28ac33a7"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4227b609a30e5ddf17c3a7a542bf522049c7058c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/4227b609a30e5ddf17c3a7a542bf522049c7058c",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NDIyN2I2MDlhMzBlNWRkZjE3YzNhN2E1NDJiZjUyMjA0OWM3MDU4Yw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b0e6dcd42bf3d6450f3c7f2b3b8b21d4906d55fc",
                    "sha": "b0e6dcd42bf3d6450f3c7f2b3b8b21d4906d55fc",
                    "url": "https://api.github.com/repos/cython/cython/commits/b0e6dcd42bf3d6450f3c7f2b3b8b21d4906d55fc"
                }
            ],
            "sha": "4227b609a30e5ddf17c3a7a542bf522049c7058c",
            "url": "https://api.github.com/repos/cython/cython/commits/4227b609a30e5ddf17c3a7a542bf522049c7058c"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/df12982fa7013dfbc702590d388d42f8fdb2f08c/comments",
            "commit": {
                "author": {
                    "date": "2020-03-27T19:30:05Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-03-27T19:30:05Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Simplified _get_type_attr mess",
                "tree": {
                    "sha": "236ecfc98241fa49d88dffd5d6231b05c3694ad5",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/236ecfc98241fa49d88dffd5d6231b05c3694ad5"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/df12982fa7013dfbc702590d388d42f8fdb2f08c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/df12982fa7013dfbc702590d388d42f8fdb2f08c",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZGYxMjk4MmZhNzAxM2RmYmM3MDI1OTBkMzg4ZDQyZjhmZGIyZjA4Yw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4227b609a30e5ddf17c3a7a542bf522049c7058c",
                    "sha": "4227b609a30e5ddf17c3a7a542bf522049c7058c",
                    "url": "https://api.github.com/repos/cython/cython/commits/4227b609a30e5ddf17c3a7a542bf522049c7058c"
                }
            ],
            "sha": "df12982fa7013dfbc702590d388d42f8fdb2f08c",
            "url": "https://api.github.com/repos/cython/cython/commits/df12982fa7013dfbc702590d388d42f8fdb2f08c"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d19f32b9068a48945e03677b480179b9687b3cf7/comments",
            "commit": {
                "author": {
                    "date": "2020-03-28T17:22:03Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-03-28T17:22:03Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Relaxed callable option parsing definition\n\nThis allows callables to handle multiple arguments (but they\nhave to raise an error if the wrong number is given)",
                "tree": {
                    "sha": "32582eb1981d62401ea97e545f19ffee4a44e2b4",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/32582eb1981d62401ea97e545f19ffee4a44e2b4"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d19f32b9068a48945e03677b480179b9687b3cf7",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/d19f32b9068a48945e03677b480179b9687b3cf7",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZDE5ZjMyYjkwNjhhNDg5NDVlMDM2NzdiNDgwMTc5Yjk2ODdiM2NmNw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/df12982fa7013dfbc702590d388d42f8fdb2f08c",
                    "sha": "df12982fa7013dfbc702590d388d42f8fdb2f08c",
                    "url": "https://api.github.com/repos/cython/cython/commits/df12982fa7013dfbc702590d388d42f8fdb2f08c"
                }
            ],
            "sha": "d19f32b9068a48945e03677b480179b9687b3cf7",
            "url": "https://api.github.com/repos/cython/cython/commits/d19f32b9068a48945e03677b480179b9687b3cf7"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2905e8cd35db4ebccdbd50b93e8c74dc7a9823f6/comments",
            "commit": {
                "author": {
                    "date": "2020-04-24T11:00:40Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-04-24T11:00:40Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Taken the non-ambgious type bits",
                "tree": {
                    "sha": "0c166afd4d5e04a9f5039e389977d9be6ad87013",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0c166afd4d5e04a9f5039e389977d9be6ad87013"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2905e8cd35db4ebccdbd50b93e8c74dc7a9823f6",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/2905e8cd35db4ebccdbd50b93e8c74dc7a9823f6",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MjkwNWU4Y2QzNWRiNGViY2NkYmQ1MGI5M2U4Yzc0ZGM3YTk4MjNmNg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d19f32b9068a48945e03677b480179b9687b3cf7",
                    "sha": "d19f32b9068a48945e03677b480179b9687b3cf7",
                    "url": "https://api.github.com/repos/cython/cython/commits/d19f32b9068a48945e03677b480179b9687b3cf7"
                }
            ],
            "sha": "2905e8cd35db4ebccdbd50b93e8c74dc7a9823f6",
            "url": "https://api.github.com/repos/cython/cython/commits/2905e8cd35db4ebccdbd50b93e8c74dc7a9823f6"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/0efe97588e78f998e350bb1ce883a091df1ef9ec/comments",
            "commit": {
                "author": {
                    "date": "2020-04-24T12:48:27Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-04-24T14:19:17Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Mainly cleaned up multilevel accessor mess",
                "tree": {
                    "sha": "4c7c891fc5d6fe6898e3a01291e63c6faf0ed1df",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/4c7c891fc5d6fe6898e3a01291e63c6faf0ed1df"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/0efe97588e78f998e350bb1ce883a091df1ef9ec",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/0efe97588e78f998e350bb1ce883a091df1ef9ec",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MGVmZTk3NTg4ZTc4Zjk5OGUzNTBiYjFjZTg4M2EwOTFkZjFlZjllYw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2905e8cd35db4ebccdbd50b93e8c74dc7a9823f6",
                    "sha": "2905e8cd35db4ebccdbd50b93e8c74dc7a9823f6",
                    "url": "https://api.github.com/repos/cython/cython/commits/2905e8cd35db4ebccdbd50b93e8c74dc7a9823f6"
                }
            ],
            "sha": "0efe97588e78f998e350bb1ce883a091df1ef9ec",
            "url": "https://api.github.com/repos/cython/cython/commits/0efe97588e78f998e350bb1ce883a091df1ef9ec"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/bf688d0d20f295e75cfc86380ff6217ac17971fc/comments",
            "commit": {
                "author": {
                    "date": "2020-04-24T14:55:00Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-04-24T15:18:14Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'master' into fastcall_args",
                "tree": {
                    "sha": "0c25cf36c3b930213d5f9c240f531a29c481e842",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0c25cf36c3b930213d5f9c240f531a29c481e842"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/bf688d0d20f295e75cfc86380ff6217ac17971fc",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/bf688d0d20f295e75cfc86380ff6217ac17971fc",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YmY2ODhkMGQyMGYyOTVlNzVjZmM4NjM4MGZmNjIxN2FjMTc5NzFmYw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/0efe97588e78f998e350bb1ce883a091df1ef9ec",
                    "sha": "0efe97588e78f998e350bb1ce883a091df1ef9ec",
                    "url": "https://api.github.com/repos/cython/cython/commits/0efe97588e78f998e350bb1ce883a091df1ef9ec"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/203ec86c39165c4001aa9238268f1911db1e8728",
                    "sha": "203ec86c39165c4001aa9238268f1911db1e8728",
                    "url": "https://api.github.com/repos/cython/cython/commits/203ec86c39165c4001aa9238268f1911db1e8728"
                }
            ],
            "sha": "bf688d0d20f295e75cfc86380ff6217ac17971fc",
            "url": "https://api.github.com/repos/cython/cython/commits/bf688d0d20f295e75cfc86380ff6217ac17971fc"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/69701954af10f00904fda8a89dc803336f2324b1/comments",
            "commit": {
                "author": {
                    "date": "2020-04-24T16:41:28Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-04-24T16:41:28Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Python2 equality disaster",
                "tree": {
                    "sha": "8ec11551ac48ba94624f1aa559778649ac3f821b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8ec11551ac48ba94624f1aa559778649ac3f821b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/69701954af10f00904fda8a89dc803336f2324b1",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/69701954af10f00904fda8a89dc803336f2324b1",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6Njk3MDE5NTRhZjEwZjAwOTA0ZmRhOGE4OWRjODAzMzM2ZjIzMjRiMQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/bf688d0d20f295e75cfc86380ff6217ac17971fc",
                    "sha": "bf688d0d20f295e75cfc86380ff6217ac17971fc",
                    "url": "https://api.github.com/repos/cython/cython/commits/bf688d0d20f295e75cfc86380ff6217ac17971fc"
                }
            ],
            "sha": "69701954af10f00904fda8a89dc803336f2324b1",
            "url": "https://api.github.com/repos/cython/cython/commits/69701954af10f00904fda8a89dc803336f2324b1"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/720eec93dd6209f8994bdc6868fd3015c261a2b9/comments",
            "commit": {
                "author": {
                    "date": "2020-04-24T17:53:53Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-04-24T17:53:53Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Cleaned up GeneralMethodCall a bit",
                "tree": {
                    "sha": "497c0fac37e81ee10ca426c5a035da4d4fda9b3a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/497c0fac37e81ee10ca426c5a035da4d4fda9b3a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/720eec93dd6209f8994bdc6868fd3015c261a2b9",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/720eec93dd6209f8994bdc6868fd3015c261a2b9",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NzIwZWVjOTNkZDYyMDlmODk5NGJkYzY4NjhmZDMwMTVjMjYxYTJiOQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/69701954af10f00904fda8a89dc803336f2324b1",
                    "sha": "69701954af10f00904fda8a89dc803336f2324b1",
                    "url": "https://api.github.com/repos/cython/cython/commits/69701954af10f00904fda8a89dc803336f2324b1"
                }
            ],
            "sha": "720eec93dd6209f8994bdc6868fd3015c261a2b9",
            "url": "https://api.github.com/repos/cython/cython/commits/720eec93dd6209f8994bdc6868fd3015c261a2b9"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b73e9e514804b4ae786f8747ec4f84c58b2b73d3/comments",
            "commit": {
                "author": {
                    "date": "2020-04-24T18:12:52Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-04-24T18:15:09Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Moved where options are applied",
                "tree": {
                    "sha": "2ed83cab6c2fd4f2dfdd416a57937f4761799a87",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2ed83cab6c2fd4f2dfdd416a57937f4761799a87"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b73e9e514804b4ae786f8747ec4f84c58b2b73d3",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/b73e9e514804b4ae786f8747ec4f84c58b2b73d3",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YjczZTllNTE0ODA0YjRhZTc4NmY4NzQ3ZWM0Zjg0YzU4YjJiNzNkMw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/720eec93dd6209f8994bdc6868fd3015c261a2b9",
                    "sha": "720eec93dd6209f8994bdc6868fd3015c261a2b9",
                    "url": "https://api.github.com/repos/cython/cython/commits/720eec93dd6209f8994bdc6868fd3015c261a2b9"
                }
            ],
            "sha": "b73e9e514804b4ae786f8747ec4f84c58b2b73d3",
            "url": "https://api.github.com/repos/cython/cython/commits/b73e9e514804b4ae786f8747ec4f84c58b2b73d3"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4319ee12ade272e9114d78b888fb97ee4cb981ed/comments",
            "commit": {
                "author": {
                    "date": "2020-04-25T08:07:23Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-04-25T08:07:23Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixes based on travis tests",
                "tree": {
                    "sha": "d5e3bb3f8d743f797eadb63ea3869dbdfe6e682c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d5e3bb3f8d743f797eadb63ea3869dbdfe6e682c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4319ee12ade272e9114d78b888fb97ee4cb981ed",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/4319ee12ade272e9114d78b888fb97ee4cb981ed",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NDMxOWVlMTJhZGUyNzJlOTExNGQ3OGI4ODhmYjk3ZWU0Y2I5ODFlZA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b73e9e514804b4ae786f8747ec4f84c58b2b73d3",
                    "sha": "b73e9e514804b4ae786f8747ec4f84c58b2b73d3",
                    "url": "https://api.github.com/repos/cython/cython/commits/b73e9e514804b4ae786f8747ec4f84c58b2b73d3"
                }
            ],
            "sha": "4319ee12ade272e9114d78b888fb97ee4cb981ed",
            "url": "https://api.github.com/repos/cython/cython/commits/4319ee12ade272e9114d78b888fb97ee4cb981ed"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/bc5fae2476bb451abc2dad65e61611bb87dcab3f/comments",
            "commit": {
                "author": {
                    "date": "2020-04-25T11:08:02Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-04-25T11:08:02Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Remove a lot of functionality in favour of coercion to Python\n\nThe real advantage of fastcall types is that they can be passed\nefficiently to other functions. Trying to support every possible\noperation on them was just difficult and it was easier to\nlet them coerce to Python",
                "tree": {
                    "sha": "1d8127a851fca0b618f15a7cc734c9732bb7391c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1d8127a851fca0b618f15a7cc734c9732bb7391c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/bc5fae2476bb451abc2dad65e61611bb87dcab3f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YmM1ZmFlMjQ3NmJiNDUxYWJjMmRhZDY1ZTYxNjExYmI4N2RjYWIzZg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4319ee12ade272e9114d78b888fb97ee4cb981ed",
                    "sha": "4319ee12ade272e9114d78b888fb97ee4cb981ed",
                    "url": "https://api.github.com/repos/cython/cython/commits/4319ee12ade272e9114d78b888fb97ee4cb981ed"
                }
            ],
            "sha": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
            "url": "https://api.github.com/repos/cython/cython/commits/bc5fae2476bb451abc2dad65e61611bb87dcab3f"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ec0013caa8b211b22f01fc6ef481c9daf3e79d03/comments",
            "commit": {
                "author": {
                    "date": "2020-04-26T10:59:39Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-04-26T10:59:39Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Apply suggestions from code review\n\nCo-Authored-By: Stefan Behnel <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "81e67cf7c62719b4a863d81afeb108e40c6412e0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/81e67cf7c62719b4a863d81afeb108e40c6412e0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ec0013caa8b211b22f01fc6ef481c9daf3e79d03",
                "verification": {
                    "payload": "tree 81e67cf7c62719b4a863d81afeb108e40c6412e0\nparent bc5fae2476bb451abc2dad65e61611bb87dcab3f\nauthor da-woods <dw-git@d-woods.co.uk> 1587898779 +0100\ncommitter GitHub <noreply@github.com> 1587898779 +0100\n\nApply suggestions from code review\n\nCo-Authored-By: Stefan Behnel <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJepWmbCRBK7hj4Ov3rIwAAdHIIAFmNJq5Sq6B3XGBON5qyvoGZ\njcxiqcWMSMdj1j6qgn5Bg91cyqcQdpbEcVawPG5DU71pxA3yhxCqCHohbq9lccVc\ncdSuxCJ4IIdAM9c787shnyiILbAsXsiwMZchrwbUdB+kdBQ4mNg/OSoyV8GQz60f\nPpJpXzrQ30fnbjCAa9WjhV6XPtr+E3EbiPfO3yTejTDBmWIrBdKXyhWJNQHOmAls\nsElVcO6midmNHMjM2QkDWIfwbiL4Sl0bW0Mg2GN20BRXOyvRwOZ8ZFa5SzloIni4\nm0b6pQoldT0zPsU44Q1hG4wHMHcMLQyEmaoUmyC5w+eB6Z+N8SLNBU4BeZZAZ94=\n=5y8k\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/ec0013caa8b211b22f01fc6ef481c9daf3e79d03",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZWMwMDEzY2FhOGIyMTFiMjJmMDFmYzZlZjQ4MWM5ZGFmM2U3OWQwMw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/bc5fae2476bb451abc2dad65e61611bb87dcab3f",
                    "sha": "bc5fae2476bb451abc2dad65e61611bb87dcab3f",
                    "url": "https://api.github.com/repos/cython/cython/commits/bc5fae2476bb451abc2dad65e61611bb87dcab3f"
                }
            ],
            "sha": "ec0013caa8b211b22f01fc6ef481c9daf3e79d03",
            "url": "https://api.github.com/repos/cython/cython/commits/ec0013caa8b211b22f01fc6ef481c9daf3e79d03"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f774c788a8b47f628d5afe78dc626ce2c695fa15/comments",
            "commit": {
                "author": {
                    "date": "2020-04-26T11:01:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-04-26T11:07:29Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "More code review changes and removal of unpacking",
                "tree": {
                    "sha": "f10120099658536f2934b2fb0b1690574957bb53",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f10120099658536f2934b2fb0b1690574957bb53"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f774c788a8b47f628d5afe78dc626ce2c695fa15",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/f774c788a8b47f628d5afe78dc626ce2c695fa15",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6Zjc3NGM3ODhhOGI0N2Y2MjhkNWFmZTc4ZGM2MjZjZTJjNjk1ZmExNQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ec0013caa8b211b22f01fc6ef481c9daf3e79d03",
                    "sha": "ec0013caa8b211b22f01fc6ef481c9daf3e79d03",
                    "url": "https://api.github.com/repos/cython/cython/commits/ec0013caa8b211b22f01fc6ef481c9daf3e79d03"
                }
            ],
            "sha": "f774c788a8b47f628d5afe78dc626ce2c695fa15",
            "url": "https://api.github.com/repos/cython/cython/commits/f774c788a8b47f628d5afe78dc626ce2c695fa15"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c745f9ec14edefb5af6990fe57ceea3c17915802/comments",
            "commit": {
                "author": {
                    "date": "2020-05-30T10:38:48Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-30T10:38:48Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Simpler changes from review\n\nMost significant one was changing the syntax of setting\nfastcall args",
                "tree": {
                    "sha": "d2cd42710b05cf792d02c164f5296e95e24b2d45",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d2cd42710b05cf792d02c164f5296e95e24b2d45"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c745f9ec14edefb5af6990fe57ceea3c17915802",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/c745f9ec14edefb5af6990fe57ceea3c17915802",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6Yzc0NWY5ZWMxNGVkZWZiNWFmNjk5MGZlNTdjZWVhM2MxNzkxNTgwMg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f774c788a8b47f628d5afe78dc626ce2c695fa15",
                    "sha": "f774c788a8b47f628d5afe78dc626ce2c695fa15",
                    "url": "https://api.github.com/repos/cython/cython/commits/f774c788a8b47f628d5afe78dc626ce2c695fa15"
                }
            ],
            "sha": "c745f9ec14edefb5af6990fe57ceea3c17915802",
            "url": "https://api.github.com/repos/cython/cython/commits/c745f9ec14edefb5af6990fe57ceea3c17915802"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a13f81ad6de0e88d034d566f3d477ccf3b977be3/comments",
            "commit": {
                "author": {
                    "date": "2020-05-31T09:26:15Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-31T09:26:15Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Try using parallel variables for fastcall tuple coercions",
                "tree": {
                    "sha": "e2dd376bfe218f37407068e95f077f22c23510fa",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e2dd376bfe218f37407068e95f077f22c23510fa"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a13f81ad6de0e88d034d566f3d477ccf3b977be3",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/a13f81ad6de0e88d034d566f3d477ccf3b977be3",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YTEzZjgxYWQ2ZGUwZTg4ZDAzNGQ1NjZmM2Q0NzdjY2YzYjk3N2JlMw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c745f9ec14edefb5af6990fe57ceea3c17915802",
                    "sha": "c745f9ec14edefb5af6990fe57ceea3c17915802",
                    "url": "https://api.github.com/repos/cython/cython/commits/c745f9ec14edefb5af6990fe57ceea3c17915802"
                }
            ],
            "sha": "a13f81ad6de0e88d034d566f3d477ccf3b977be3",
            "url": "https://api.github.com/repos/cython/cython/commits/a13f81ad6de0e88d034d566f3d477ccf3b977be3"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/3a9624054a733d1061f7a895d4845f36f44e2f36/comments",
            "commit": {
                "author": {
                    "date": "2020-05-31T09:44:50Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-31T09:44:50Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed Py2",
                "tree": {
                    "sha": "4a30dc2d3bb73f211422103cc58f030b877e08eb",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/4a30dc2d3bb73f211422103cc58f030b877e08eb"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/3a9624054a733d1061f7a895d4845f36f44e2f36",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/3a9624054a733d1061f7a895d4845f36f44e2f36",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6M2E5NjI0MDU0YTczM2QxMDYxZjdhODk1ZDQ4NDVmMzZmNDRlMmYzNg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a13f81ad6de0e88d034d566f3d477ccf3b977be3",
                    "sha": "a13f81ad6de0e88d034d566f3d477ccf3b977be3",
                    "url": "https://api.github.com/repos/cython/cython/commits/a13f81ad6de0e88d034d566f3d477ccf3b977be3"
                }
            ],
            "sha": "3a9624054a733d1061f7a895d4845f36f44e2f36",
            "url": "https://api.github.com/repos/cython/cython/commits/3a9624054a733d1061f7a895d4845f36f44e2f36"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/282554e0b3a37e5ebb7e33e6f1230201076eec8e/comments",
            "commit": {
                "author": {
                    "date": "2020-05-31T09:52:12Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-31T09:52:12Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'master' into fastcall_args",
                "tree": {
                    "sha": "bb38799383ddd2715646db4c56ccd27438c304d3",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/bb38799383ddd2715646db4c56ccd27438c304d3"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/282554e0b3a37e5ebb7e33e6f1230201076eec8e",
                "verification": {
                    "payload": "tree bb38799383ddd2715646db4c56ccd27438c304d3\nparent 3a9624054a733d1061f7a895d4845f36f44e2f36\nparent 3ee066283d503d9ed494f90793ee89e6973904f8\nauthor da-woods <dw-git@d-woods.co.uk> 1590918732 +0100\ncommitter GitHub <noreply@github.com> 1590918732 +0100\n\nMerge branch 'master' into fastcall_args",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe035MCRBK7hj4Ov3rIwAAdHIIAHMLaIRh4lDacjBiMnmC692z\nSsAQigAKSHDGfA74IOKGpHfoA6ZYyVt2bYvx4dvrqKOfhsm9d8EXM+F25iMj+SGH\nsDhJWjsxfj6eH/X7p03X2awcY4yfNPSxlEPNj2dttNmUAkN7pT/kJQ1lgyrR4dmN\nH8aM5M9zFPsVEwt7F8Ujp9dvdEiO5MTkRb7MRXduf05LKnaUxlaMGQFOiA4z58aH\nMNtewwDyqGJsKqcefwtWYriko+VPsCSl+pIV3y03aRZ0bOaXwJ567E3e6FINhHHs\nmJYwss/huslWSxkP/2q3KB32V8tAkn8SQnTkPFIOuDL3Fi8QwagBmW89n3GiTOU=\n=fwfm\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/282554e0b3a37e5ebb7e33e6f1230201076eec8e",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MjgyNTU0ZTBiM2EzN2U1ZWJiN2UzM2U2ZjEyMzAyMDEwNzZlZWM4ZQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3a9624054a733d1061f7a895d4845f36f44e2f36",
                    "sha": "3a9624054a733d1061f7a895d4845f36f44e2f36",
                    "url": "https://api.github.com/repos/cython/cython/commits/3a9624054a733d1061f7a895d4845f36f44e2f36"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/3ee066283d503d9ed494f90793ee89e6973904f8",
                    "sha": "3ee066283d503d9ed494f90793ee89e6973904f8",
                    "url": "https://api.github.com/repos/cython/cython/commits/3ee066283d503d9ed494f90793ee89e6973904f8"
                }
            ],
            "sha": "282554e0b3a37e5ebb7e33e6f1230201076eec8e",
            "url": "https://api.github.com/repos/cython/cython/commits/282554e0b3a37e5ebb7e33e6f1230201076eec8e"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e851382535eef955963929c64b81915365ae54d5/comments",
            "commit": {
                "author": {
                    "date": "2020-05-31T11:02:24Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-31T11:02:24Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed compiler crash and memoryerror from invalid slice",
                "tree": {
                    "sha": "78397a478cd155f93284859c1af191e16cfdd300",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/78397a478cd155f93284859c1af191e16cfdd300"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e851382535eef955963929c64b81915365ae54d5",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/e851382535eef955963929c64b81915365ae54d5",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZTg1MTM4MjUzNWVlZjk1NTk2MzkyOWM2NGI4MTkxNTM2NWFlNTRkNQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/282554e0b3a37e5ebb7e33e6f1230201076eec8e",
                    "sha": "282554e0b3a37e5ebb7e33e6f1230201076eec8e",
                    "url": "https://api.github.com/repos/cython/cython/commits/282554e0b3a37e5ebb7e33e6f1230201076eec8e"
                }
            ],
            "sha": "e851382535eef955963929c64b81915365ae54d5",
            "url": "https://api.github.com/repos/cython/cython/commits/e851382535eef955963929c64b81915365ae54d5"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/08fc0204bfa58cfd157b832407aff95055945a06/comments",
            "commit": {
                "author": {
                    "date": "2020-06-23T17:19:38Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-23T17:19:38Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'master' into fastcall_args",
                "tree": {
                    "sha": "04182a2ffffcf4b2bb67d6f9bdf2d765afc0df1d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/04182a2ffffcf4b2bb67d6f9bdf2d765afc0df1d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/08fc0204bfa58cfd157b832407aff95055945a06",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/08fc0204bfa58cfd157b832407aff95055945a06",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MDhmYzAyMDRiZmE1OGNmZDE1N2I4MzI0MDdhZmY5NTA1NTk0NWEwNg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e851382535eef955963929c64b81915365ae54d5",
                    "sha": "e851382535eef955963929c64b81915365ae54d5",
                    "url": "https://api.github.com/repos/cython/cython/commits/e851382535eef955963929c64b81915365ae54d5"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/a0e10cf604e62b6a08ba26c87e76d735a58988af",
                    "sha": "a0e10cf604e62b6a08ba26c87e76d735a58988af",
                    "url": "https://api.github.com/repos/cython/cython/commits/a0e10cf604e62b6a08ba26c87e76d735a58988af"
                }
            ],
            "sha": "08fc0204bfa58cfd157b832407aff95055945a06",
            "url": "https://api.github.com/repos/cython/cython/commits/08fc0204bfa58cfd157b832407aff95055945a06"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b3d2a0907a3fd40ca7910ae97166ebe357d0e090/comments",
            "commit": {
                "author": {
                    "date": "2020-06-23T17:25:20Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-23T17:25:20Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Unset PY_VECTORCALL_ARGUMENTS_OFFSET",
                "tree": {
                    "sha": "9ebe8afe16c46e367b647a48c9255ad2423175f0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/9ebe8afe16c46e367b647a48c9255ad2423175f0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b3d2a0907a3fd40ca7910ae97166ebe357d0e090",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/b3d2a0907a3fd40ca7910ae97166ebe357d0e090",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YjNkMmEwOTA3YTNmZDQwY2E3OTEwYWU5NzE2NmViZTM1N2QwZTA5MA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/08fc0204bfa58cfd157b832407aff95055945a06",
                    "sha": "08fc0204bfa58cfd157b832407aff95055945a06",
                    "url": "https://api.github.com/repos/cython/cython/commits/08fc0204bfa58cfd157b832407aff95055945a06"
                }
            ],
            "sha": "b3d2a0907a3fd40ca7910ae97166ebe357d0e090",
            "url": "https://api.github.com/repos/cython/cython/commits/b3d2a0907a3fd40ca7910ae97166ebe357d0e090"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8802dccdedfa42c46ae7635ebd71c370ea6f66ce/comments",
            "commit": {
                "author": {
                    "date": "2020-06-27T16:46:29Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-27T16:46:29Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Never use fastcall types without signature.use_fastcall\n\nThis enables identical tuples to go in and out unchanged\n(as before)",
                "tree": {
                    "sha": "5f30025efbcb7119d167d9fba4eaf70e5013b9c5",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/5f30025efbcb7119d167d9fba4eaf70e5013b9c5"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8802dccdedfa42c46ae7635ebd71c370ea6f66ce",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/8802dccdedfa42c46ae7635ebd71c370ea6f66ce",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ODgwMmRjY2RlZGZhNDJjNDZhZTc2MzVlYmQ3MWMzNzBlYTZmNjZjZQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b3d2a0907a3fd40ca7910ae97166ebe357d0e090",
                    "sha": "b3d2a0907a3fd40ca7910ae97166ebe357d0e090",
                    "url": "https://api.github.com/repos/cython/cython/commits/b3d2a0907a3fd40ca7910ae97166ebe357d0e090"
                }
            ],
            "sha": "8802dccdedfa42c46ae7635ebd71c370ea6f66ce",
            "url": "https://api.github.com/repos/cython/cython/commits/8802dccdedfa42c46ae7635ebd71c370ea6f66ce"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ef78a1f6173997f0c625443f7a2f67f7b3c18ebb/comments",
            "commit": {
                "author": {
                    "date": "2020-06-27T17:07:11Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-27T17:08:20Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Removed another |= PY_VECTORCALL_ARGUMENTS_OFFSET",
                "tree": {
                    "sha": "a0b653c71ea76447f9587337b43a8e50cf941936",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a0b653c71ea76447f9587337b43a8e50cf941936"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ef78a1f6173997f0c625443f7a2f67f7b3c18ebb",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/ef78a1f6173997f0c625443f7a2f67f7b3c18ebb",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZWY3OGExZjYxNzM5OTdmMGM2MjU0NDNmN2EyZjY3ZjdiM2MxOGViYg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8802dccdedfa42c46ae7635ebd71c370ea6f66ce",
                    "sha": "8802dccdedfa42c46ae7635ebd71c370ea6f66ce",
                    "url": "https://api.github.com/repos/cython/cython/commits/8802dccdedfa42c46ae7635ebd71c370ea6f66ce"
                }
            ],
            "sha": "ef78a1f6173997f0c625443f7a2f67f7b3c18ebb",
            "url": "https://api.github.com/repos/cython/cython/commits/ef78a1f6173997f0c625443f7a2f67f7b3c18ebb"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8/comments",
            "commit": {
                "author": {
                    "date": "2020-06-27T19:00:58Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-27T19:00:58Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Comply with new stricter style rules",
                "tree": {
                    "sha": "9f219f5ebab798cb8d82627cec64eb9748584b14",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/9f219f5ebab798cb8d82627cec64eb9748584b14"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NWFlNmIwMWRiY2Y5Y2I1N2ZjZTVhZWFjOTE0MjJhYjdlNWZhYWNjOA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ef78a1f6173997f0c625443f7a2f67f7b3c18ebb",
                    "sha": "ef78a1f6173997f0c625443f7a2f67f7b3c18ebb",
                    "url": "https://api.github.com/repos/cython/cython/commits/ef78a1f6173997f0c625443f7a2f67f7b3c18ebb"
                }
            ],
            "sha": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
            "url": "https://api.github.com/repos/cython/cython/commits/5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3346/commits",
    "created_at": "2020-02-05T20:40:56Z",
    "diff_url": "https://github.com/cython/cython/pull/3346.diff",
    "draft": false,
    "head": {
        "label": "da-woods:fastcall_args",
        "ref": "fastcall_args",
        "repo": {
            "archive_url": "https://api.github.com/repos/da-woods/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/da-woods/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/da-woods/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/da-woods/cython/branches{/branch}",
            "clone_url": "https://github.com/da-woods/cython.git",
            "collaborators_url": "https://api.github.com/repos/da-woods/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/da-woods/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/da-woods/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/da-woods/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/da-woods/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/da-woods/cython/contributors",
            "created_at": "2015-05-09T08:55:00Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/da-woods/cython/deployments",
            "description": "A Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/da-woods/cython/downloads",
            "events_url": "https://api.github.com/repos/da-woods/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/da-woods/cython/forks",
            "full_name": "da-woods/cython",
            "git_commits_url": "https://api.github.com/repos/da-woods/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/da-woods/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/da-woods/cython/git/tags{/sha}",
            "git_url": "git://github.com/da-woods/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/da-woods/cython/hooks",
            "html_url": "https://github.com/da-woods/cython",
            "id": 35321967,
            "issue_comment_url": "https://api.github.com/repos/da-woods/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/da-woods/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/da-woods/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/da-woods/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/da-woods/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/da-woods/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/da-woods/cython/merges",
            "milestones_url": "https://api.github.com/repos/da-woods/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNTMyMTk2Nw==",
            "notifications_url": "https://api.github.com/repos/da-woods/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/da-woods/cython/pulls{/number}",
            "pushed_at": "2020-06-27T19:01:29Z",
            "releases_url": "https://api.github.com/repos/da-woods/cython/releases{/id}",
            "size": 60781,
            "ssh_url": "git@github.com:da-woods/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/da-woods/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/da-woods/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/da-woods/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/da-woods/cython/subscription",
            "svn_url": "https://github.com/da-woods/cython",
            "tags_url": "https://api.github.com/repos/da-woods/cython/tags",
            "teams_url": "https://api.github.com/repos/da-woods/cython/teams",
            "trees_url": "https://api.github.com/repos/da-woods/cython/git/trees{/sha}",
            "updated_at": "2019-10-24T09:38:07Z",
            "url": "https://api.github.com/repos/da-woods/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
        "user": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
            "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
            "followers_url": "https://api.github.com/users/da-woods/followers",
            "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
            "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/da-woods",
            "id": 10536947,
            "login": "da-woods",
            "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
            "organizations_url": "https://api.github.com/users/da-woods/orgs",
            "received_events_url": "https://api.github.com/users/da-woods/received_events",
            "repos_url": "https://api.github.com/users/da-woods/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/da-woods"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3346",
    "id": 371575262,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3346",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "dd211e5f7529fd136f1b5c17b8bc50129dd55b2e",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxNTc1MjYy",
    "number": 3346,
    "patch_url": "https://github.com/cython/cython/pull/3346.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3346/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/5ae6b01dbcf9cb57fce5aeac91422ab7e5faacc8",
    "title": "Added fastcall_args directive",
    "updated_at": "2020-06-27T19:01:30Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3346",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}