{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3671/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3671/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3671"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3671"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3671/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3671"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1029,
            "forks_count": 1029,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 835,
            "open_issues_count": 835,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2020-06-12T11:54:49Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 59267,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 5238,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2020-06-12T01:45:17Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 5238,
            "watchers_count": 5238
        },
        "sha": "89a68b86ba99291bfce1c70657b869934efec204",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Closes #3670.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r437157711"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/437157711"
                }
            },
            "author_association": "MEMBER",
            "body": "This isn't enough to keep the Python parser from seeing the new syntax. That makes it fail in older Python versions. Maybe we could use one of the other failing examples instead, e.g. one with a comment. Or use a separate test file.",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-09T06:06:26Z",
            "diff_hunk": "@@ -110,3 +111,11 @@ def test_numpy(self):\n         a[0,0] = 10\n         self.assertEqual(safe_type(a), 'numpy.ndarray[numpy.float64_t, ndim=2]')\n         self.assertEqual(inline(\"return a[0,0]\", a=a, **self.test_kwds), 10.0)\n+\n+    @unittest.skipIf(sys.version_info < (3, 6), \"Requires Py3.6+\")",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r437157711",
            "id": 437157711,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1NzcxMQ==",
            "original_commit_id": "6770fe80c30e9231bd32c9b5e89ae10d4747c3f8",
            "original_line": 115,
            "original_position": 16,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestInline.py",
            "position": null,
            "pull_request_review_id": 426812860,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T06:44:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/437157711",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r437166760"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/437166760"
                }
            },
            "author_association": "NONE",
            "body": "Yeah, I noticed that after submitting this, but couldn't think of a good quick fix.  I thought a string-based definition, plus an `eval`, might work, but the comment approach could be easier.  I'll try those later today.",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-09T06:30:59Z",
            "diff_hunk": "@@ -110,3 +111,11 @@ def test_numpy(self):\n         a[0,0] = 10\n         self.assertEqual(safe_type(a), 'numpy.ndarray[numpy.float64_t, ndim=2]')\n         self.assertEqual(inline(\"return a[0,0]\", a=a, **self.test_kwds), 10.0)\n+\n+    @unittest.skipIf(sys.version_info < (3, 6), \"Requires Py3.6+\")",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r437166760",
            "id": 437166760,
            "in_reply_to_id": 437157711,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE2Njc2MA==",
            "original_commit_id": "6770fe80c30e9231bd32c9b5e89ae10d4747c3f8",
            "original_line": 115,
            "original_position": 16,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestInline.py",
            "position": null,
            "pull_request_review_id": 426824476,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T06:44:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/437166760",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/971601?v=4",
                "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}",
                "followers_url": "https://api.github.com/users/brandonwillard/followers",
                "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}",
                "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brandonwillard",
                "id": 971601,
                "login": "brandonwillard",
                "node_id": "MDQ6VXNlcjk3MTYwMQ==",
                "organizations_url": "https://api.github.com/users/brandonwillard/orgs",
                "received_events_url": "https://api.github.com/users/brandonwillard/received_events",
                "repos_url": "https://api.github.com/users/brandonwillard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brandonwillard"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r437952430"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/437952430"
                }
            },
            "author_association": "MEMBER",
            "body": "Isn't it more like \"either a string, or something that might have a `__name__` and `__code__` attribute\" ?",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-10T08:29:58Z",
            "diff_hunk": "@@ -161,6 +161,13 @@ def cython_inline(code, get_type=unsafe_type,\n                   cython_include_dirs=None, cython_compiler_directives=None,\n                   force=False, quiet=False, locals=None, globals=None, language_level=None, **kwds):\n \n+    from_func_obj = inspect.isfunction(code)",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r437952430",
            "id": 437952430,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk1MjQzMA==",
            "original_commit_id": "714864ebb2360e176451d22153cab07b4b94f0d6",
            "original_line": 164,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Build/Inline.py",
            "position": null,
            "pull_request_review_id": 427829046,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T06:44:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/437952430",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r437953537"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/437953537"
                }
            },
            "author_association": "MEMBER",
            "body": "This looks like the duplication could be avoided.",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-10T08:31:55Z",
            "diff_hunk": "@@ -241,15 +248,27 @@ def cython_inline(code, get_type=unsafe_type,\n                         c_include_dirs.append(numpy.get_include())\n                         define_macros.append((\"NPY_NO_DEPRECATED_API\", \"NPY_1_7_API_VERSION\"))\n                         # cflags.append('-Wno-unused')\n-            module_body, func_body = extract_func_code(code)\n             params = ', '.join(['%s %s' % a for a in arg_sigs])\n-            module_code = \"\"\"\n+\n+            if from_func_obj:\n+                module_body = ''\n+                func_body = code\n+                module_format = \"\"\"\n+%(module_body)s\n+%(cimports)s\n+%(func_body)s\n+                \"\"\"\n+            else:\n+                module_body, func_body = extract_func_code(code)\n+                module_format = \"\"\"\n %(module_body)s\n %(cimports)s\n def __invoke(%(params)s):\n %(func_body)s\n     return locals()\n-            \"\"\" % {'cimports': '\\n'.join(cimports),\n+                \"\"\"",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r437953537",
            "id": 437953537,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk1MzUzNw==",
            "original_commit_id": "714864ebb2360e176451d22153cab07b4b94f0d6",
            "original_line": 269,
            "original_position": 39,
            "original_start_line": 253,
            "path": "Cython/Build/Inline.py",
            "position": null,
            "pull_request_review_id": 427829046,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-11T06:44:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/437953537",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r437954040"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/437954040"
                }
            },
            "author_association": "MEMBER",
            "body": "`__invoke` -> `function`",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-10T08:32:47Z",
            "diff_hunk": "@@ -281,9 +300,10 @@ def __invoke(%(params)s):\n \n         module = load_dynamic(module_name, module_path)\n \n-    _cython_inline_cache[orig_code, arg_sigs, key_hash] = module.__invoke\n+    __invoke = getattr(module, fn_name)",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r437954040",
            "id": 437954040,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk1NDA0MA==",
            "original_commit_id": "714864ebb2360e176451d22153cab07b4b94f0d6",
            "original_line": 303,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Build/Inline.py",
            "position": null,
            "pull_request_review_id": 427829046,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T06:44:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/437954040",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r437954777"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/437954777"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-10T08:34:02Z",
            "diff_hunk": "@@ -110,3 +112,46 @@ def test_numpy(self):\n         a[0,0] = 10\n         self.assertEqual(safe_type(a), 'numpy.ndarray[numpy.float64_t, ndim=2]')\n         self.assertEqual(inline(\"return a[0,0]\", a=a, **self.test_kwds), 10.0)\n+\n+\n+",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r437954777",
            "id": 437954777,
            "line": 118,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk1NDc3Nw==",
            "original_commit_id": "714864ebb2360e176451d22153cab07b4b94f0d6",
            "original_line": 118,
            "original_position": 18,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestInline.py",
            "position": 27,
            "pull_request_review_id": 427829046,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T06:44:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/437954777",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r437955306"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/437955306"
                }
            },
            "author_association": "MEMBER",
            "body": "I think it's ok to use `super(…)` these days. :)",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-10T08:34:49Z",
            "diff_hunk": "@@ -110,3 +112,46 @@ def test_numpy(self):\n         a[0,0] = 10\n         self.assertEqual(safe_type(a), 'numpy.ndarray[numpy.float64_t, ndim=2]')\n         self.assertEqual(inline(\"return a[0,0]\", a=a, **self.test_kwds), 10.0)\n+\n+\n+\n+class TestRuntimeCompiledFunction(CythonTest):\n+    def setUp(self):\n+        CythonTest.setUp(self)",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r437955306",
            "id": 437955306,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk1NTMwNg==",
            "original_commit_id": "714864ebb2360e176451d22153cab07b4b94f0d6",
            "original_line": 120,
            "original_position": 21,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestInline.py",
            "position": null,
            "pull_request_review_id": 427829046,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T06:44:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/437955306",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r437955800"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/437955800"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-10T08:35:30Z",
            "diff_hunk": "@@ -110,3 +112,46 @@ def test_numpy(self):\n         a[0,0] = 10\n         self.assertEqual(safe_type(a), 'numpy.ndarray[numpy.float64_t, ndim=2]')\n         self.assertEqual(inline(\"return a[0,0]\", a=a, **self.test_kwds), 10.0)\n+\n+\n+\n+class TestRuntimeCompiledFunction(CythonTest):\n+    def setUp(self):\n+        CythonTest.setUp(self)\n+        self.test_kwds = dict(test_kwds)\n+        if os.path.isdir('TEST_TMP'):\n+            lib_dir = os.path.join('TEST_TMP','inline')\n+        else:\n+            lib_dir = tempfile.mkdtemp(prefix='cython_inline_')\n+        self.test_kwds['lib_dir'] = lib_dir\n+\n+    def test_basics(self):\n+\n+        def test_fn(x=\":\"):\n+            return x + 1\n+\n+        rcf = RuntimeCompiledFunction(test_fn)\n+        self.assertEqual(rcf(1), test_fn(1))\n+\n+    @unittest.skipIf(sys.version_info < (3, 6), \"Requires Py3.6+\")\n+    def test_type_hints(self):\n+",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r437955800",
            "id": 437955800,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk1NTgwMA==",
            "original_commit_id": "714864ebb2360e176451d22153cab07b4b94f0d6",
            "original_line": 138,
            "original_position": 39,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestInline.py",
            "position": null,
            "pull_request_review_id": 427829046,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T06:44:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/437955800",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r438305254"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/438305254"
                }
            },
            "author_association": "MEMBER",
            "body": "This seems constant and can be moved out of the wrapper. The same applies to all the function attribute lookups below.",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-10T17:50:25Z",
            "diff_hunk": "@@ -139,8 +139,21 @@ def inline(f, *args, **kwds):\n \n \n def compile(f):\n-    from Cython.Build.Inline import RuntimeCompiledFunction\n-    return RuntimeCompiledFunction(f)\n+    import inspect\n+    from functools import wraps\n+    from Cython.Build.Inline import IS_PY3, cython_inline\n+\n+    @wraps(f)\n+    def wrapped_f(*args, **kwargs):\n+        all = inspect.getcallargs(f, *args, **kwargs)\n+        # We have to strip this decorator from the source\n+        code = ''.join(inspect.getsourcelines(f)[0][1:])",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r438305254",
            "id": 438305254,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMwNTI1NA==",
            "original_commit_id": "a0aede1dfb3598c5d5821409b4aea2c40b8e008d",
            "original_line": 150,
            "original_position": 14,
            "original_start_line": null,
            "path": "Cython/Shadow.py",
            "position": null,
            "pull_request_review_id": 428294118,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T06:44:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/438305254",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r438305973"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/438305973"
                }
            },
            "author_association": "MEMBER",
            "body": "This is better spelled `if not IS_PY2`, as there is no reason to believe that it will become invalid when Py4 comes out.",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-10T17:51:39Z",
            "diff_hunk": "@@ -139,8 +139,21 @@ def inline(f, *args, **kwds):\n \n \n def compile(f):\n-    from Cython.Build.Inline import RuntimeCompiledFunction\n-    return RuntimeCompiledFunction(f)\n+    import inspect\n+    from functools import wraps\n+    from Cython.Build.Inline import IS_PY3, cython_inline\n+\n+    @wraps(f)\n+    def wrapped_f(*args, **kwargs):\n+        all = inspect.getcallargs(f, *args, **kwargs)\n+        # We have to strip this decorator from the source\n+        code = ''.join(inspect.getsourcelines(f)[0][1:])\n+        if IS_PY3:",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r438305973",
            "id": 438305973,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMwNTk3Mw==",
            "original_commit_id": "a0aede1dfb3598c5d5821409b4aea2c40b8e008d",
            "original_line": 151,
            "original_position": 15,
            "original_start_line": null,
            "path": "Cython/Shadow.py",
            "position": null,
            "pull_request_review_id": 428294118,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T06:44:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/438305973",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r438309700"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/438309700"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            cimports.append('\\nfrom cython cimport %s' % name)\r\n```",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-10T17:57:40Z",
            "diff_hunk": "@@ -206,6 +207,11 @@ def cython_inline(code, get_type=unsafe_type,\n         if arg is cython_module:\n             cimports.append('\\ncimport cython as %s' % name)\n             del kwds[name]\n+        # Import any missing Cython function and decorator dependencies\n+        if callable(arg) and arg in cython_module.__dict__.values():\n+            cimports.append('\\nfrom cython import %s' % name)",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r438309700",
            "id": 438309700,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMwOTcwMA==",
            "original_commit_id": "a0aede1dfb3598c5d5821409b4aea2c40b8e008d",
            "original_line": 212,
            "original_position": 16,
            "original_start_line": null,
            "path": "Cython/Build/Inline.py",
            "position": null,
            "pull_request_review_id": 428294118,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T06:44:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/438309700",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r438312156"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/438312156"
                }
            },
            "author_association": "MEMBER",
            "body": "This is a somewhat bold assumption. I'd really prefer having two interfaces to this function, and then renaming it to e.g. `compile_function_code` or so. The `cython.inline()` function can then prepend the function signature line to the code string, and the `cython.compile()` function can extract the whole function implementation. These steps are not shared between both tools, and shouldn't be shared in the implementation either.",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-10T18:01:47Z",
            "diff_hunk": "@@ -226,6 +232,11 @@ def cython_inline(code, get_type=unsafe_type,\n \n         if not os.path.exists(lib_dir):\n             os.makedirs(lib_dir)\n+\n+        # If this keyword was specified, then we're dealing with function code\n+        # and we do not need to manipulate it.\n+        fn_name = __fn_name or '__invoke'",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r438312156",
            "id": 438312156,
            "line": 249,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMxMjE1Ng==",
            "original_commit_id": "a0aede1dfb3598c5d5821409b4aea2c40b8e008d",
            "original_line": 249,
            "original_position": 29,
            "original_start_line": 236,
            "path": "Cython/Build/Inline.py",
            "position": 46,
            "pull_request_review_id": 428294118,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": 247,
            "start_side": "RIGHT",
            "updated_at": "2020-06-11T06:44:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/438312156",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r438314032"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/438314032"
                }
            },
            "author_association": "MEMBER",
            "body": "Please keep this class. It is not private enough to just remove it.",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-10T18:05:09Z",
            "diff_hunk": "@@ -328,27 +350,3 @@ def extract_func_code(code):\n                 current = function\n         current.append(line)\n     return '\\n'.join(module), '    ' + '\\n    '.join(function)\n-\n-\n-def get_body(source):\n-    ix = source.index(':')\n-    if source[:5] == 'lambda':\n-        return \"return %s\" % source[ix+1:]\n-    else:\n-        return source[ix+1:]\n-\n-\n-# Lots to be done here... It would be especially cool if compiled functions\n-# could invoke each other quickly.\n-class RuntimeCompiledFunction(object):",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r438314032",
            "id": 438314032,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMxNDAzMg==",
            "original_commit_id": "a0aede1dfb3598c5d5821409b4aea2c40b8e008d",
            "original_line": 343,
            "original_position": 95,
            "original_start_line": null,
            "path": "Cython/Build/Inline.py",
            "position": null,
            "pull_request_review_id": 428294118,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T06:44:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/438314032",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r438319117"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/438319117"
                }
            },
            "author_association": "NONE",
            "body": "The attribute lookups like `f.__globals__` and such?  You think they should be assigned to local variables and then used in `wrapped_f`?",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-10T18:14:04Z",
            "diff_hunk": "@@ -139,8 +139,21 @@ def inline(f, *args, **kwds):\n \n \n def compile(f):\n-    from Cython.Build.Inline import RuntimeCompiledFunction\n-    return RuntimeCompiledFunction(f)\n+    import inspect\n+    from functools import wraps\n+    from Cython.Build.Inline import IS_PY3, cython_inline\n+\n+    @wraps(f)\n+    def wrapped_f(*args, **kwargs):\n+        all = inspect.getcallargs(f, *args, **kwargs)\n+        # We have to strip this decorator from the source\n+        code = ''.join(inspect.getsourcelines(f)[0][1:])",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r438319117",
            "id": 438319117,
            "in_reply_to_id": 438305254,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMxOTExNw==",
            "original_commit_id": "a0aede1dfb3598c5d5821409b4aea2c40b8e008d",
            "original_line": 150,
            "original_position": 14,
            "original_start_line": null,
            "path": "Cython/Shadow.py",
            "position": null,
            "pull_request_review_id": 428311938,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T06:44:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/438319117",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/971601?v=4",
                "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}",
                "followers_url": "https://api.github.com/users/brandonwillard/followers",
                "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}",
                "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brandonwillard",
                "id": 971601,
                "login": "brandonwillard",
                "node_id": "MDQ6VXNlcjk3MTYwMQ==",
                "organizations_url": "https://api.github.com/users/brandonwillard/orgs",
                "received_events_url": "https://api.github.com/users/brandonwillard/received_events",
                "repos_url": "https://api.github.com/users/brandonwillard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brandonwillard"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r438326332"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/438326332"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, the whole Py2/Py3+ distinction is constant in the end. You only need one call in the wrapper, not two different ones.\r\n\r\nEventually, I'd also like to get rid of the call to `inspect.getcallargs()`, since that's fairly heavy, and anything else that's in the way of a fast path call into the function. That's not part of this PR, though.",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-10T18:27:03Z",
            "diff_hunk": "@@ -139,8 +139,21 @@ def inline(f, *args, **kwds):\n \n \n def compile(f):\n-    from Cython.Build.Inline import RuntimeCompiledFunction\n-    return RuntimeCompiledFunction(f)\n+    import inspect\n+    from functools import wraps\n+    from Cython.Build.Inline import IS_PY3, cython_inline\n+\n+    @wraps(f)\n+    def wrapped_f(*args, **kwargs):\n+        all = inspect.getcallargs(f, *args, **kwargs)\n+        # We have to strip this decorator from the source\n+        code = ''.join(inspect.getsourcelines(f)[0][1:])",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r438326332",
            "id": 438326332,
            "in_reply_to_id": 438305254,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyNjMzMg==",
            "original_commit_id": "a0aede1dfb3598c5d5821409b4aea2c40b8e008d",
            "original_line": 150,
            "original_position": 14,
            "original_start_line": null,
            "path": "Cython/Shadow.py",
            "position": null,
            "pull_request_review_id": 428321145,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T06:44:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/438326332",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r438396049"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/438396049"
                }
            },
            "author_association": "NONE",
            "body": "I tried to pull out the `cython.inline`-specific steps from the `cython.compile`-required ones, but everything is too interconnected due to the interplay between the argument signature, the cache keys, unbound symbol handling, and import dependency management.  \r\n\r\nIt looks like one reason for these inter-dependencies is the mixed use of keyword arguments in `cython.inline`/`cythone_inline`.  If compilation-specific keywords were distinct from keyword arguments intended for the compiled function, that would help.",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-10T20:41:38Z",
            "diff_hunk": "@@ -226,6 +232,11 @@ def cython_inline(code, get_type=unsafe_type,\n \n         if not os.path.exists(lib_dir):\n             os.makedirs(lib_dir)\n+\n+        # If this keyword was specified, then we're dealing with function code\n+        # and we do not need to manipulate it.\n+        fn_name = __fn_name or '__invoke'",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r438396049",
            "id": 438396049,
            "in_reply_to_id": 438312156,
            "line": 249,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM5NjA0OQ==",
            "original_commit_id": "a0aede1dfb3598c5d5821409b4aea2c40b8e008d",
            "original_line": 249,
            "original_position": 29,
            "original_start_line": 236,
            "path": "Cython/Build/Inline.py",
            "position": 46,
            "pull_request_review_id": 428412010,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": 247,
            "start_side": "RIGHT",
            "updated_at": "2020-06-11T06:44:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/438396049",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/971601?v=4",
                "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}",
                "followers_url": "https://api.github.com/users/brandonwillard/followers",
                "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}",
                "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brandonwillard",
                "id": 971601,
                "login": "brandonwillard",
                "node_id": "MDQ6VXNlcjk3MTYwMQ==",
                "organizations_url": "https://api.github.com/users/brandonwillard/orgs",
                "received_events_url": "https://api.github.com/users/brandonwillard/received_events",
                "repos_url": "https://api.github.com/users/brandonwillard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brandonwillard"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r438423823"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/438423823"
                }
            },
            "author_association": "NONE",
            "body": "We could use a `Signature` object and simply call `Signature.bind` within the wrapper function.  That might help a little, but Python 2.7 will balance that out by complicating the implementation (i.e. we might need to use `ArgSpec` in that case).",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-10T21:40:32Z",
            "diff_hunk": "@@ -139,8 +139,21 @@ def inline(f, *args, **kwds):\n \n \n def compile(f):\n-    from Cython.Build.Inline import RuntimeCompiledFunction\n-    return RuntimeCompiledFunction(f)\n+    import inspect\n+    from functools import wraps\n+    from Cython.Build.Inline import IS_PY3, cython_inline\n+\n+    @wraps(f)\n+    def wrapped_f(*args, **kwargs):\n+        all = inspect.getcallargs(f, *args, **kwargs)\n+        # We have to strip this decorator from the source\n+        code = ''.join(inspect.getsourcelines(f)[0][1:])",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r438423823",
            "id": 438423823,
            "in_reply_to_id": 438305254,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQyMzgyMw==",
            "original_commit_id": "a0aede1dfb3598c5d5821409b4aea2c40b8e008d",
            "original_line": 150,
            "original_position": 14,
            "original_start_line": null,
            "path": "Cython/Shadow.py",
            "position": null,
            "pull_request_review_id": 428448196,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T06:44:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/438423823",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/971601?v=4",
                "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}",
                "followers_url": "https://api.github.com/users/brandonwillard/followers",
                "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}",
                "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brandonwillard",
                "id": 971601,
                "login": "brandonwillard",
                "node_id": "MDQ6VXNlcjk3MTYwMQ==",
                "organizations_url": "https://api.github.com/users/brandonwillard/orgs",
                "received_events_url": "https://api.github.com/users/brandonwillard/received_events",
                "repos_url": "https://api.github.com/users/brandonwillard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brandonwillard"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r438634848"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/438634848"
                }
            },
            "author_association": "MEMBER",
            "body": "It doesn't hurt to always use `import as`. No need to special-case this, I think.",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-11T08:45:18Z",
            "diff_hunk": "@@ -202,10 +203,26 @@ def cython_inline(code, get_type=unsafe_type,\n             print(\"Could not parse code as a string (to extract unbound symbols).\")\n \n     cimports = []\n-    for name, arg in list(kwds.items()):\n-        if arg is cython_module:\n+    for name, obj in list(kwds.items()):\n+        if obj is cython_module:\n             cimports.append('\\ncimport cython as %s' % name)\n             del kwds[name]\n+        elif inspect.ismodule(obj):\n+            # Check for module references\n+            module_name = obj.__name__\n+            if module_name != name:\n+                cimports.append('\\nimport %(module)s as %(symbol)s' % {",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r438634848",
            "id": 438634848,
            "line": 214,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYzNDg0OA==",
            "original_commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "original_line": 214,
            "original_position": 24,
            "original_start_line": 213,
            "path": "Cython/Build/Inline.py",
            "position": 24,
            "pull_request_review_id": 428711704,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": 213,
            "start_side": "RIGHT",
            "updated_at": "2020-06-11T10:01:31Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/438634848",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r438638723"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/438638723"
                }
            },
            "author_association": "MEMBER",
            "body": "This can be dangerous since we're not taking these modules into account when building the compile hash key above. Passing different modules would lead to incorrect import code.",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-11T08:52:17Z",
            "diff_hunk": "@@ -202,10 +203,26 @@ def cython_inline(code, get_type=unsafe_type,\n             print(\"Could not parse code as a string (to extract unbound symbols).\")\n \n     cimports = []\n-    for name, arg in list(kwds.items()):\n-        if arg is cython_module:\n+    for name, obj in list(kwds.items()):\n+        if obj is cython_module:\n             cimports.append('\\ncimport cython as %s' % name)\n             del kwds[name]\n+        elif inspect.ismodule(obj):",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r438638723",
            "id": 438638723,
            "line": 210,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYzODcyMw==",
            "original_commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "original_line": 210,
            "original_position": 20,
            "original_start_line": null,
            "path": "Cython/Build/Inline.py",
            "position": 20,
            "pull_request_review_id": 428711704,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T10:01:31Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/438638723",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r438641678"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/438641678"
                }
            },
            "author_association": "MEMBER",
            "body": "Useless `None`s.",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-11T08:57:14Z",
            "diff_hunk": "@@ -138,9 +138,45 @@ def inline(f, *args, **kwds):\n         return f\n \n \n-def compile(f):\n-    from Cython.Build.Inline import RuntimeCompiledFunction\n-    return RuntimeCompiledFunction(f)\n+def compile(*args, **kwargs):\n+    import re\n+    import inspect\n+    from functools import wraps, partial\n+    from Cython.Build.Inline import cython_inline, IS_PY3\n+\n+    f_locals = inspect.currentframe().f_back.f_locals\n+    _cython_inline = partial(cython_inline, locals=f_locals, **kwargs)\n+\n+    decorator_pat = re.compile(r'@([.\\w]+)[\\(]?')\n+\n+    def decorator(f):\n+        if not IS_PY3:\n+            f_globals = f.func_globals\n+        else:\n+            f_globals = f.__globals__\n+\n+        code = inspect.getsourcelines(f)[0]\n+\n+        # We need to search for this decorator and strip it from the source\n+        m = decorator_pat.match(code[0].strip())\n+        if m:\n+            compile_fn_name = m.groups()[0]\n+            decorator_obj = f_locals.get(compile_fn_name, None) or f_globals.get(compile_fn_name, None)",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r438641678",
            "id": 438641678,
            "line": 164,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MTY3OA==",
            "original_commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "original_line": 164,
            "original_position": 30,
            "original_start_line": null,
            "path": "Cython/Shadow.py",
            "position": 30,
            "pull_request_review_id": 428711704,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T10:01:31Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/438641678",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r438643181"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/438643181"
                }
            },
            "author_association": "MEMBER",
            "body": "The inheritance will repeat the test methods here. You probably only wanted to inherit the setup.",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-11T08:59:42Z",
            "diff_hunk": "@@ -110,3 +112,89 @@ def test_numpy(self):\n         a[0,0] = 10\n         self.assertEqual(safe_type(a), 'numpy.ndarray[numpy.float64_t, ndim=2]')\n         self.assertEqual(inline(\"return a[0,0]\", a=a, **self.test_kwds), 10.0)\n+\n+\n+class TestCompileDecorator(TestInline):",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r438643181",
            "id": 438643181,
            "line": 117,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MzE4MQ==",
            "original_commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "original_line": 117,
            "original_position": 26,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestInline.py",
            "position": 26,
            "pull_request_review_id": 428711704,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T10:01:31Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/438643181",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r438645738"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/438645738"
                }
            },
            "author_association": "MEMBER",
            "body": "Do we really? If the `@compile` decorator does anything in a compiled module, then I think that is a bug. It should just be a no-op. Probably worth testing in `tests/run/pure_py.py`. The Cython-internal implementation should be in the tree transform `InterpretCompilerDirectives` in `Cython.Compiler.ParseTreeTransforms`.",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-11T09:04:10Z",
            "diff_hunk": "@@ -138,9 +138,45 @@ def inline(f, *args, **kwds):\n         return f\n \n \n-def compile(f):\n-    from Cython.Build.Inline import RuntimeCompiledFunction\n-    return RuntimeCompiledFunction(f)\n+def compile(*args, **kwargs):\n+    import re\n+    import inspect\n+    from functools import wraps, partial\n+    from Cython.Build.Inline import cython_inline, IS_PY3\n+\n+    f_locals = inspect.currentframe().f_back.f_locals\n+    _cython_inline = partial(cython_inline, locals=f_locals, **kwargs)\n+\n+    decorator_pat = re.compile(r'@([.\\w]+)[\\(]?')\n+\n+    def decorator(f):\n+        if not IS_PY3:\n+            f_globals = f.func_globals\n+        else:\n+            f_globals = f.__globals__\n+\n+        code = inspect.getsourcelines(f)[0]\n+\n+        # We need to search for this decorator and strip it from the source",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r438645738",
            "id": 438645738,
            "line": 160,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0NTczOA==",
            "original_commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "original_line": 160,
            "original_position": 26,
            "original_start_line": null,
            "path": "Cython/Shadow.py",
            "position": 26,
            "pull_request_review_id": 428711704,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T10:01:31Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/438645738",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r438668475"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/438668475"
                }
            },
            "author_association": "MEMBER",
            "body": "It's definitely weird that the `return locals()` at the end of the generated code depends on whether `__fn_name` is passed or not.\r\n\r\nI think it's ok to process the arguments multiple times, maybe in helper functions, if it's done by the initialisation of the decorator. That code can be costly. The call afterwards should avoid overhead where possible. This code was originally written for `inline()` one-shot calls that pass code and arguments at once, not for a two-phase `@compile` decorator+call usage. The decorator would benefit from such a split, including a separation of the call arguments from the decorator arguments.",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-11T09:45:47Z",
            "diff_hunk": "@@ -226,6 +232,11 @@ def cython_inline(code, get_type=unsafe_type,\n \n         if not os.path.exists(lib_dir):\n             os.makedirs(lib_dir)\n+\n+        # If this keyword was specified, then we're dealing with function code\n+        # and we do not need to manipulate it.\n+        fn_name = __fn_name or '__invoke'",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r438668475",
            "id": 438668475,
            "in_reply_to_id": 438312156,
            "line": 249,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY2ODQ3NQ==",
            "original_commit_id": "a0aede1dfb3598c5d5821409b4aea2c40b8e008d",
            "original_line": 249,
            "original_position": 29,
            "original_start_line": 236,
            "path": "Cython/Build/Inline.py",
            "position": 46,
            "pull_request_review_id": 428711704,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": 247,
            "start_side": "RIGHT",
            "updated_at": "2020-06-11T10:01:31Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/438668475",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r439081641"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439081641"
                }
            },
            "author_association": "NONE",
            "body": "Yeah, that makes sense.  I stashed a refactored version of `cython_compile` that performs multiple passes over the arguments like you mentioned, so I'll revisit that.",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-11T21:32:09Z",
            "diff_hunk": "@@ -226,6 +232,11 @@ def cython_inline(code, get_type=unsafe_type,\n \n         if not os.path.exists(lib_dir):\n             os.makedirs(lib_dir)\n+\n+        # If this keyword was specified, then we're dealing with function code\n+        # and we do not need to manipulate it.\n+        fn_name = __fn_name or '__invoke'",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r439081641",
            "id": 439081641,
            "in_reply_to_id": 438312156,
            "line": 249,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA4MTY0MQ==",
            "original_commit_id": "a0aede1dfb3598c5d5821409b4aea2c40b8e008d",
            "original_line": 249,
            "original_position": 29,
            "original_start_line": 236,
            "path": "Cython/Build/Inline.py",
            "position": 46,
            "pull_request_review_id": 429303075,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": 247,
            "start_side": "RIGHT",
            "updated_at": "2020-06-11T21:32:09Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439081641",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/971601?v=4",
                "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}",
                "followers_url": "https://api.github.com/users/brandonwillard/followers",
                "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}",
                "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brandonwillard",
                "id": 971601,
                "login": "brandonwillard",
                "node_id": "MDQ6VXNlcjk3MTYwMQ==",
                "organizations_url": "https://api.github.com/users/brandonwillard/orgs",
                "received_events_url": "https://api.github.com/users/brandonwillard/received_events",
                "repos_url": "https://api.github.com/users/brandonwillard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brandonwillard"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r439089091"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439089091"
                }
            },
            "author_association": "NONE",
            "body": "Ah, perhaps we could include the unbound symbols in the hash key somehow?",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-11T21:49:14Z",
            "diff_hunk": "@@ -202,10 +203,26 @@ def cython_inline(code, get_type=unsafe_type,\n             print(\"Could not parse code as a string (to extract unbound symbols).\")\n \n     cimports = []\n-    for name, arg in list(kwds.items()):\n-        if arg is cython_module:\n+    for name, obj in list(kwds.items()):\n+        if obj is cython_module:\n             cimports.append('\\ncimport cython as %s' % name)\n             del kwds[name]\n+        elif inspect.ismodule(obj):",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r439089091",
            "id": 439089091,
            "in_reply_to_id": 438638723,
            "line": 210,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA4OTA5MQ==",
            "original_commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "original_line": 210,
            "original_position": 20,
            "original_start_line": null,
            "path": "Cython/Build/Inline.py",
            "position": 20,
            "pull_request_review_id": 429317535,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T21:49:14Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439089091",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/971601?v=4",
                "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}",
                "followers_url": "https://api.github.com/users/brandonwillard/followers",
                "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}",
                "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brandonwillard",
                "id": 971601,
                "login": "brandonwillard",
                "node_id": "MDQ6VXNlcjk3MTYwMQ==",
                "organizations_url": "https://api.github.com/users/brandonwillard/orgs",
                "received_events_url": "https://api.github.com/users/brandonwillard/received_events",
                "repos_url": "https://api.github.com/users/brandonwillard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brandonwillard"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r439091771"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439091771"
                }
            },
            "author_association": "NONE",
            "body": "Ha, yes, I did; great point!",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-11T21:52:53Z",
            "diff_hunk": "@@ -110,3 +112,89 @@ def test_numpy(self):\n         a[0,0] = 10\n         self.assertEqual(safe_type(a), 'numpy.ndarray[numpy.float64_t, ndim=2]')\n         self.assertEqual(inline(\"return a[0,0]\", a=a, **self.test_kwds), 10.0)\n+\n+\n+class TestCompileDecorator(TestInline):",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r439091771",
            "id": 439091771,
            "in_reply_to_id": 438643181,
            "line": 117,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA5MTc3MQ==",
            "original_commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "original_line": 117,
            "original_position": 26,
            "original_start_line": null,
            "path": "Cython/Build/Tests/TestInline.py",
            "position": 26,
            "pull_request_review_id": 429319416,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T21:52:54Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439091771",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/971601?v=4",
                "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}",
                "followers_url": "https://api.github.com/users/brandonwillard/followers",
                "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}",
                "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brandonwillard",
                "id": 971601,
                "login": "brandonwillard",
                "node_id": "MDQ6VXNlcjk3MTYwMQ==",
                "organizations_url": "https://api.github.com/users/brandonwillard/orgs",
                "received_events_url": "https://api.github.com/users/brandonwillard/received_events",
                "repos_url": "https://api.github.com/users/brandonwillard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brandonwillard"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3671#discussion_r439095994"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3671"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439095994"
                }
            },
            "author_association": "NONE",
            "body": "OK, I'll check that out, but I do recall seeing some errors when `@compile` made it into the inlined source.",
            "commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "created_at": "2020-06-11T22:01:01Z",
            "diff_hunk": "@@ -138,9 +138,45 @@ def inline(f, *args, **kwds):\n         return f\n \n \n-def compile(f):\n-    from Cython.Build.Inline import RuntimeCompiledFunction\n-    return RuntimeCompiledFunction(f)\n+def compile(*args, **kwargs):\n+    import re\n+    import inspect\n+    from functools import wraps, partial\n+    from Cython.Build.Inline import cython_inline, IS_PY3\n+\n+    f_locals = inspect.currentframe().f_back.f_locals\n+    _cython_inline = partial(cython_inline, locals=f_locals, **kwargs)\n+\n+    decorator_pat = re.compile(r'@([.\\w]+)[\\(]?')\n+\n+    def decorator(f):\n+        if not IS_PY3:\n+            f_globals = f.func_globals\n+        else:\n+            f_globals = f.__globals__\n+\n+        code = inspect.getsourcelines(f)[0]\n+\n+        # We need to search for this decorator and strip it from the source",
            "html_url": "https://github.com/cython/cython/pull/3671#discussion_r439095994",
            "id": 439095994,
            "in_reply_to_id": 438645738,
            "line": 160,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA5NTk5NA==",
            "original_commit_id": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "original_line": 160,
            "original_position": 26,
            "original_start_line": null,
            "path": "Cython/Shadow.py",
            "position": 26,
            "pull_request_review_id": 429323313,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3671",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-11T22:01:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439095994",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/971601?v=4",
                "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}",
                "followers_url": "https://api.github.com/users/brandonwillard/followers",
                "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}",
                "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brandonwillard",
                "id": 971601,
                "login": "brandonwillard",
                "node_id": "MDQ6VXNlcjk3MTYwMQ==",
                "organizations_url": "https://api.github.com/users/brandonwillard/orgs",
                "received_events_url": "https://api.github.com/users/brandonwillard/received_events",
                "repos_url": "https://api.github.com/users/brandonwillard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brandonwillard"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3671/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/971601?v=4",
                "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}",
                "followers_url": "https://api.github.com/users/brandonwillard/followers",
                "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}",
                "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brandonwillard",
                "id": 971601,
                "login": "brandonwillard",
                "node_id": "MDQ6VXNlcjk3MTYwMQ==",
                "organizations_url": "https://api.github.com/users/brandonwillard/orgs",
                "received_events_url": "https://api.github.com/users/brandonwillard/received_events",
                "repos_url": "https://api.github.com/users/brandonwillard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brandonwillard"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/cee36843e105ccb418c4105572d2bf191da7ab18/comments",
            "commit": {
                "author": {
                    "date": "2020-06-08T23:00:08Z",
                    "email": "brandonwillard@gmail.com",
                    "name": "Brandon T. Willard"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-11T06:40:57Z",
                    "email": "brandonwillard@gmail.com",
                    "name": "Brandon T. Willard"
                },
                "message": "Fix RuntimeCompiledFunction type hint parsing\n\nCloses #3317.",
                "tree": {
                    "sha": "b2294aa764c2ba99587229cb6e105f7fe9f7a5e1",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/b2294aa764c2ba99587229cb6e105f7fe9f7a5e1"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/cee36843e105ccb418c4105572d2bf191da7ab18",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/971601?v=4",
                "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}",
                "followers_url": "https://api.github.com/users/brandonwillard/followers",
                "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}",
                "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brandonwillard",
                "id": 971601,
                "login": "brandonwillard",
                "node_id": "MDQ6VXNlcjk3MTYwMQ==",
                "organizations_url": "https://api.github.com/users/brandonwillard/orgs",
                "received_events_url": "https://api.github.com/users/brandonwillard/received_events",
                "repos_url": "https://api.github.com/users/brandonwillard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brandonwillard"
            },
            "html_url": "https://github.com/cython/cython/commit/cee36843e105ccb418c4105572d2bf191da7ab18",
            "node_id": "MDY6Q29tbWl0MjcwODQyNjc1OmNlZTM2ODQzZTEwNWNjYjQxOGM0MTA1NTcyZDJiZjE5MWRhN2FiMTg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/89a68b86ba99291bfce1c70657b869934efec204",
                    "sha": "89a68b86ba99291bfce1c70657b869934efec204",
                    "url": "https://api.github.com/repos/cython/cython/commits/89a68b86ba99291bfce1c70657b869934efec204"
                }
            ],
            "sha": "cee36843e105ccb418c4105572d2bf191da7ab18",
            "url": "https://api.github.com/repos/cython/cython/commits/cee36843e105ccb418c4105572d2bf191da7ab18"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/971601?v=4",
                "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}",
                "followers_url": "https://api.github.com/users/brandonwillard/followers",
                "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}",
                "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brandonwillard",
                "id": 971601,
                "login": "brandonwillard",
                "node_id": "MDQ6VXNlcjk3MTYwMQ==",
                "organizations_url": "https://api.github.com/users/brandonwillard/orgs",
                "received_events_url": "https://api.github.com/users/brandonwillard/received_events",
                "repos_url": "https://api.github.com/users/brandonwillard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brandonwillard"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1dba12173606cfd2938cef11a5c51e52033db857/comments",
            "commit": {
                "author": {
                    "date": "2020-06-11T06:38:59Z",
                    "email": "brandonwillard@gmail.com",
                    "name": "Brandon T. Willard"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-11T06:43:55Z",
                    "email": "brandonwillard@gmail.com",
                    "name": "Brandon T. Willard"
                },
                "message": "Only remove the correct decorator and allow keywords args",
                "tree": {
                    "sha": "8a553418c0d18c88fcdd5718744022d4354bc141",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8a553418c0d18c88fcdd5718744022d4354bc141"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1dba12173606cfd2938cef11a5c51e52033db857",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/971601?v=4",
                "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}",
                "followers_url": "https://api.github.com/users/brandonwillard/followers",
                "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}",
                "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brandonwillard",
                "id": 971601,
                "login": "brandonwillard",
                "node_id": "MDQ6VXNlcjk3MTYwMQ==",
                "organizations_url": "https://api.github.com/users/brandonwillard/orgs",
                "received_events_url": "https://api.github.com/users/brandonwillard/received_events",
                "repos_url": "https://api.github.com/users/brandonwillard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brandonwillard"
            },
            "html_url": "https://github.com/cython/cython/commit/1dba12173606cfd2938cef11a5c51e52033db857",
            "node_id": "MDY6Q29tbWl0MjcwODQyNjc1OjFkYmExMjE3MzYwNmNmZDI5MzhjZWYxMWE1YzUxZTUyMDMzZGI4NTc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/cee36843e105ccb418c4105572d2bf191da7ab18",
                    "sha": "cee36843e105ccb418c4105572d2bf191da7ab18",
                    "url": "https://api.github.com/repos/cython/cython/commits/cee36843e105ccb418c4105572d2bf191da7ab18"
                }
            ],
            "sha": "1dba12173606cfd2938cef11a5c51e52033db857",
            "url": "https://api.github.com/repos/cython/cython/commits/1dba12173606cfd2938cef11a5c51e52033db857"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/971601?v=4",
                "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}",
                "followers_url": "https://api.github.com/users/brandonwillard/followers",
                "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}",
                "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brandonwillard",
                "id": 971601,
                "login": "brandonwillard",
                "node_id": "MDQ6VXNlcjk3MTYwMQ==",
                "organizations_url": "https://api.github.com/users/brandonwillard/orgs",
                "received_events_url": "https://api.github.com/users/brandonwillard/received_events",
                "repos_url": "https://api.github.com/users/brandonwillard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brandonwillard"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe/comments",
            "commit": {
                "author": {
                    "date": "2020-06-11T06:40:14Z",
                    "email": "brandonwillard@gmail.com",
                    "name": "Brandon T. Willard"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-11T06:43:57Z",
                    "email": "brandonwillard@gmail.com",
                    "name": "Brandon T. Willard"
                },
                "message": "Handle aliased module dependencies",
                "tree": {
                    "sha": "f74b8eae62fcd96f77e266b1426e7b59b2cdc352",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f74b8eae62fcd96f77e266b1426e7b59b2cdc352"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/971601?v=4",
                "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}",
                "followers_url": "https://api.github.com/users/brandonwillard/followers",
                "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}",
                "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brandonwillard",
                "id": 971601,
                "login": "brandonwillard",
                "node_id": "MDQ6VXNlcjk3MTYwMQ==",
                "organizations_url": "https://api.github.com/users/brandonwillard/orgs",
                "received_events_url": "https://api.github.com/users/brandonwillard/received_events",
                "repos_url": "https://api.github.com/users/brandonwillard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brandonwillard"
            },
            "html_url": "https://github.com/cython/cython/commit/985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "node_id": "MDY6Q29tbWl0MjcwODQyNjc1Ojk4NWMwZWY1MGM2NDdiYjgzMmRiY2I0ZTZlZDVlMmQ4OGY3YjdmZmU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1dba12173606cfd2938cef11a5c51e52033db857",
                    "sha": "1dba12173606cfd2938cef11a5c51e52033db857",
                    "url": "https://api.github.com/repos/cython/cython/commits/1dba12173606cfd2938cef11a5c51e52033db857"
                }
            ],
            "sha": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
            "url": "https://api.github.com/repos/cython/cython/commits/985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3671/commits",
    "created_at": "2020-06-08T23:01:39Z",
    "diff_url": "https://github.com/cython/cython/pull/3671.diff",
    "draft": false,
    "head": {
        "label": "brandonwillard:gh3670_fix_decorator_type_hints",
        "ref": "gh3670_fix_decorator_type_hints",
        "repo": {
            "archive_url": "https://api.github.com/repos/brandonwillard/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/brandonwillard/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/brandonwillard/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/brandonwillard/cython/branches{/branch}",
            "clone_url": "https://github.com/brandonwillard/cython.git",
            "collaborators_url": "https://api.github.com/repos/brandonwillard/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/brandonwillard/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/brandonwillard/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/brandonwillard/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/brandonwillard/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/brandonwillard/cython/contributors",
            "created_at": "2020-06-08T22:14:03Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/brandonwillard/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/brandonwillard/cython/downloads",
            "events_url": "https://api.github.com/repos/brandonwillard/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/brandonwillard/cython/forks",
            "full_name": "brandonwillard/cython",
            "git_commits_url": "https://api.github.com/repos/brandonwillard/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/brandonwillard/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/brandonwillard/cython/git/tags{/sha}",
            "git_url": "git://github.com/brandonwillard/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/brandonwillard/cython/hooks",
            "html_url": "https://github.com/brandonwillard/cython",
            "id": 270842675,
            "issue_comment_url": "https://api.github.com/repos/brandonwillard/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/brandonwillard/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/brandonwillard/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/brandonwillard/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/brandonwillard/cython/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/brandonwillard/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/brandonwillard/cython/merges",
            "milestones_url": "https://api.github.com/repos/brandonwillard/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkyNzA4NDI2NzU=",
            "notifications_url": "https://api.github.com/repos/brandonwillard/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/971601?v=4",
                "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}",
                "followers_url": "https://api.github.com/users/brandonwillard/followers",
                "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}",
                "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brandonwillard",
                "id": 971601,
                "login": "brandonwillard",
                "node_id": "MDQ6VXNlcjk3MTYwMQ==",
                "organizations_url": "https://api.github.com/users/brandonwillard/orgs",
                "received_events_url": "https://api.github.com/users/brandonwillard/received_events",
                "repos_url": "https://api.github.com/users/brandonwillard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brandonwillard"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/brandonwillard/cython/pulls{/number}",
            "pushed_at": "2020-06-11T06:44:02Z",
            "releases_url": "https://api.github.com/repos/brandonwillard/cython/releases{/id}",
            "size": 59280,
            "ssh_url": "git@github.com:brandonwillard/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/brandonwillard/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/brandonwillard/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/brandonwillard/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/brandonwillard/cython/subscription",
            "svn_url": "https://github.com/brandonwillard/cython",
            "tags_url": "https://api.github.com/repos/brandonwillard/cython/tags",
            "teams_url": "https://api.github.com/repos/brandonwillard/cython/teams",
            "trees_url": "https://api.github.com/repos/brandonwillard/cython/git/trees{/sha}",
            "updated_at": "2020-06-08T22:14:05Z",
            "url": "https://api.github.com/repos/brandonwillard/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
        "user": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/971601?v=4",
            "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}",
            "followers_url": "https://api.github.com/users/brandonwillard/followers",
            "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/brandonwillard",
            "id": 971601,
            "login": "brandonwillard",
            "node_id": "MDQ6VXNlcjk3MTYwMQ==",
            "organizations_url": "https://api.github.com/users/brandonwillard/orgs",
            "received_events_url": "https://api.github.com/users/brandonwillard/received_events",
            "repos_url": "https://api.github.com/users/brandonwillard/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/brandonwillard"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3671",
    "id": 431440810,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3671",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "61e27c2ddd936c4543ddf5c52aeec2fdc49b40ac",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDMxNDQwODEw",
    "number": 3671,
    "patch_url": "https://github.com/cython/cython/pull/3671.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3671/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/985c0ef50c647bb832dbcb4e6ed5e2d88f7b7ffe",
    "title": "Fix RuntimeCompiledFunction type hint parsing",
    "updated_at": "2020-06-11T22:01:01Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3671",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/971601?v=4",
        "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}",
        "followers_url": "https://api.github.com/users/brandonwillard/followers",
        "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}",
        "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/brandonwillard",
        "id": 971601,
        "login": "brandonwillard",
        "node_id": "MDQ6VXNlcjk3MTYwMQ==",
        "organizations_url": "https://api.github.com/users/brandonwillard/orgs",
        "received_events_url": "https://api.github.com/users/brandonwillard/received_events",
        "repos_url": "https://api.github.com/users/brandonwillard/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/brandonwillard"
    }
}