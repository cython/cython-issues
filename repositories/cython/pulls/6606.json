{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/6606/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/6606/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/6606"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/6606"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/6606/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/6606"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1515,
            "forks_count": 1515,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 1420,
            "open_issues_count": 1420,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2025-03-14T10:16:18Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 75059,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 9838,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "topics": [
                "big-data",
                "c",
                "cpp",
                "cpython",
                "cpython-extensions",
                "cython",
                "performance",
                "python"
            ],
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2025-03-14T10:54:45Z",
            "url": "https://api.github.com/repos/cython/cython",
            "visibility": "public",
            "watchers": 9838,
            "watchers_count": 9838,
            "web_commit_signoff_required": false
        },
        "sha": "ba535394fc72da3ae2c46967fb6f348a39bb0d33",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython",
            "user_view_type": "public"
        }
    },
    "body": "Two improvements for https://github.com/cython/cython/pull/6582",
    "closed_at": "2025-03-10T11:14:19Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6606#discussion_r1911087496"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6606"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1911087496"
                }
            },
            "author_association": "MEMBER",
            "body": "This is definitely right - thanks",
            "commit_id": "e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
            "created_at": "2025-01-10T19:30:41Z",
            "diff_hunk": "@@ -858,12 +866,12 @@ static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit,\n static PyObject*\n __Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)\n {\n-    PyObject *func_qualname;\n+    PyObject *repr;\n     __Pyx_BEGIN_CRITICAL_SECTION(op);\n-    func_qualname = op->func_qualname;\n+    repr = PyUnicode_FromFormat(\"<cyfunction %U at %p>\",\n+                                op->func_qualname, (void *)op);",
            "html_url": "https://github.com/cython/cython/pull/6606#discussion_r1911087496",
            "id": 1911087496,
            "line": 872,
            "node_id": "PRRC_kwDOABDGAc5x6OGI",
            "original_commit_id": "e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
            "original_line": 872,
            "original_position": 82,
            "original_start_line": null,
            "path": "Cython/Utility/CythonFunction.c",
            "position": 82,
            "pull_request_review_id": 2543504963,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6606",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1911087496/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-10T19:44:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1911087496",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6606#discussion_r1911132821"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6606"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1911132821"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm a bit nervous about whether this is always right. I made a toy C++ example replicating this\r\n\r\n```\r\n#include <atomic>\r\n#include <mutex>\r\n#include <cstdlib>\r\n#include <latch>\r\n#include <thread>\r\n\r\nint *get_no_atomic(int** input, std::mutex *m) {\r\n    auto v = *input;\r\n    if (!v) {\r\n        m->lock();\r\n        v = *input;\r\n        if (!v) {\r\n            v = (int*)calloc(1, sizeof(int));\r\n            *input = v;\r\n        }\r\n        m->unlock();\r\n    }\r\n    return v;\r\n}\r\n\r\nint *get_atomic(std::atomic<int*>* input, std::mutex *m) {\r\n    auto v = input->load();\r\n    if (!v) {\r\n        m->lock();\r\n        v = input->load();\r\n        if (!v) {\r\n            v = (int*)calloc(1, sizeof(int));\r\n            input->store(v);\r\n        }\r\n        m->unlock();\r\n    }\r\n    return v;\r\n}\r\n\r\nvoid run_get_no_atomic(int** input, std::mutex *m, std::latch *l) {\r\n    l->arrive_and_wait(); // Just so the threads start as close together as possible\r\n    auto r1 = get_no_atomic(input, m);\r\n    auto r2 = get_no_atomic(input, m);\r\n    std::printf(\"%p %p\\n\", r1, r2);\r\n}\r\n\r\nvoid run_get_atomic(std::atomic<int*>* input, std::mutex *m, std::latch *l) {\r\n    l->arrive_and_wait(); // Just so the threads start as close together as possible\r\n    auto r1 = get_atomic(input, m);\r\n    auto r2 = get_atomic(input, m);\r\n    std::printf(\"%p %p\\n\", r1, r2);\r\n}\r\n\r\nint main() {\r\n    {\r\n        std::mutex m;\r\n        std::atomic<int*> a;\r\n        std::latch l{2};\r\n        auto thread1 = std::jthread(&run_get_atomic, &a, &m, &l);\r\n        auto thread2 = std::jthread(&run_get_atomic, &a, &m, &l);\r\n    }\r\n    std::printf(\"-------\\n\");\r\n    {\r\n        std::mutex m;\r\n        int* a = nullptr;\r\n        std::latch l{2};\r\n        auto thread1 = std::jthread(&run_get_no_atomic, &a, &m, &l);\r\n        auto thread2 = std::jthread(&run_get_no_atomic, &a, &m, &l);\r\n    }\r\n}\r\n```\r\n\r\nPractically I can't get it to give me a wrong answer (I've tried on x64, armv7, and arm64).\r\n\r\nHowever, thread sanitizer does tell me off about the non-atomic version. Which is probably mostly theoretical but makes me a bit unhappy",
            "commit_id": "e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
            "created_at": "2025-01-10T19:43:41Z",
            "diff_hunk": "@@ -535,25 +530,38 @@ __Pyx_CyFunction_get_is_coroutine_locked(__pyx_CyFunctionObject *op) {\n         module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n         Py_DECREF(fromlist);\n         if (unlikely(!module)) goto ignore;\n-        op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n+        is_coroutine_value = __Pyx_PyObject_GetAttrStr(module, marker);\n         Py_DECREF(module);\n-        if (likely(op->func_is_coroutine)) {\n-            return __Pyx_NewRef(op->func_is_coroutine);\n+        if (likely(is_coroutine_value)) {\n+            return is_coroutine_value;\n         }\n ignore:\n         PyErr_Clear();\n     }\n \n-    op->func_is_coroutine = __Pyx_PyBool_FromLong(is_coroutine);\n-    return __Pyx_NewRef(op->func_is_coroutine);\n+    return __Pyx_PyBool_FromLong(is_coroutine);\n }\n \n static PyObject *\n __Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, void *context) {\n     PyObject *result;\n     CYTHON_UNUSED_VAR(context);\n+    if (op->func_is_coroutine) {",
            "html_url": "https://github.com/cython/cython/pull/6606#discussion_r1911132821",
            "id": 1911132821,
            "line": 549,
            "node_id": "PRRC_kwDOABDGAc5x6ZKV",
            "original_commit_id": "e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
            "original_line": 549,
            "original_position": 53,
            "original_start_line": null,
            "path": "Cython/Utility/CythonFunction.c",
            "position": 53,
            "pull_request_review_id": 2543504963,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6606",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1911132821/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-10T19:45:19Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1911132821",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6606#discussion_r1911135550"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6606"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1911135550"
                }
            },
            "author_association": "MEMBER",
            "body": "This bit of the change looks reasonable too",
            "commit_id": "e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
            "created_at": "2025-01-10T19:44:30Z",
            "diff_hunk": "@@ -535,25 +530,38 @@ __Pyx_CyFunction_get_is_coroutine_locked(__pyx_CyFunctionObject *op) {\n         module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n         Py_DECREF(fromlist);\n         if (unlikely(!module)) goto ignore;\n-        op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n+        is_coroutine_value = __Pyx_PyObject_GetAttrStr(module, marker);",
            "html_url": "https://github.com/cython/cython/pull/6606#discussion_r1911135550",
            "id": 1911135550,
            "line": 533,
            "node_id": "PRRC_kwDOABDGAc5x6Z0-",
            "original_commit_id": "e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
            "original_line": 533,
            "original_position": 33,
            "original_start_line": null,
            "path": "Cython/Utility/CythonFunction.c",
            "position": 33,
            "pull_request_review_id": 2543504963,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6606",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1911135550/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-10T19:44:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1911135550",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6606#discussion_r1911198375"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6606"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1911198375"
                }
            },
            "author_association": "MEMBER",
            "body": "The guard against concurrent initialisation is needed (even if you put the whole thing in a critical section) - definitively agree with that",
            "commit_id": "e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
            "created_at": "2025-01-10T20:05:36Z",
            "diff_hunk": "@@ -535,25 +530,38 @@ __Pyx_CyFunction_get_is_coroutine_locked(__pyx_CyFunctionObject *op) {\n         module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n         Py_DECREF(fromlist);\n         if (unlikely(!module)) goto ignore;\n-        op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n+        is_coroutine_value = __Pyx_PyObject_GetAttrStr(module, marker);\n         Py_DECREF(module);\n-        if (likely(op->func_is_coroutine)) {\n-            return __Pyx_NewRef(op->func_is_coroutine);\n+        if (likely(is_coroutine_value)) {\n+            return is_coroutine_value;\n         }\n ignore:\n         PyErr_Clear();\n     }\n \n-    op->func_is_coroutine = __Pyx_PyBool_FromLong(is_coroutine);\n-    return __Pyx_NewRef(op->func_is_coroutine);\n+    return __Pyx_PyBool_FromLong(is_coroutine);\n }\n \n static PyObject *\n __Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, void *context) {\n     PyObject *result;\n     CYTHON_UNUSED_VAR(context);\n+    if (op->func_is_coroutine) {\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    }\n+\n+    result = __Pyx_CyFunction_get_is_coroutine_value(op);\n+    if (unlikely(!result))\n+        return NULL;\n+\n     __Pyx_BEGIN_CRITICAL_SECTION(op);\n-    result = __Pyx_CyFunction_get_is_coroutine_locked(op);\n+    // Guard against concurrent initialisation.\n+    if (op->func_is_coroutine) {",
            "html_url": "https://github.com/cython/cython/pull/6606#discussion_r1911198375",
            "id": 1911198375,
            "line": 559,
            "node_id": "PRRC_kwDOABDGAc5x6pKn",
            "original_commit_id": "e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
            "original_line": 559,
            "original_position": 64,
            "original_start_line": null,
            "path": "Cython/Utility/CythonFunction.c",
            "position": 64,
            "pull_request_review_id": 2543641024,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6606",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1911198375/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-10T20:06:05Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1911198375",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6606#discussion_r1938304944"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6606"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1938304944"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    __Pyx_BEGIN_CRITICAL_SECTION(op);\r\n    if (op->func_is_coroutine) {\r\n        result = __Pyx_NewRef(op->func_is_coroutine);\r\n    }\r\n    __Pyx_END_CRITICAL_SECTION();\r\n    if (result) return result;\r\n```\r\n\r\nThis is my proposed change. I'd rather avoid (technical) undefined behaviour so things are testable with thread sanitizer if we want to. That'd require atomics here. I don't think this is performance-critical enough to justify the extra complexity so a critical section seems the easiest approach.",
            "commit_id": "e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
            "created_at": "2025-02-01T16:47:08Z",
            "diff_hunk": "@@ -535,25 +530,38 @@ __Pyx_CyFunction_get_is_coroutine_locked(__pyx_CyFunctionObject *op) {\n         module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n         Py_DECREF(fromlist);\n         if (unlikely(!module)) goto ignore;\n-        op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n+        is_coroutine_value = __Pyx_PyObject_GetAttrStr(module, marker);\n         Py_DECREF(module);\n-        if (likely(op->func_is_coroutine)) {\n-            return __Pyx_NewRef(op->func_is_coroutine);\n+        if (likely(is_coroutine_value)) {\n+            return is_coroutine_value;\n         }\n ignore:\n         PyErr_Clear();\n     }\n \n-    op->func_is_coroutine = __Pyx_PyBool_FromLong(is_coroutine);\n-    return __Pyx_NewRef(op->func_is_coroutine);\n+    return __Pyx_PyBool_FromLong(is_coroutine);\n }\n \n static PyObject *\n __Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, void *context) {\n     PyObject *result;\n     CYTHON_UNUSED_VAR(context);\n+    if (op->func_is_coroutine) {\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    }",
            "html_url": "https://github.com/cython/cython/pull/6606#discussion_r1938304944",
            "id": 1938304944,
            "line": 551,
            "node_id": "PRRC_kwDOABDGAc5ziC-w",
            "original_commit_id": "e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
            "original_line": 551,
            "original_position": 55,
            "original_start_line": 549,
            "path": "Cython/Utility/CythonFunction.c",
            "position": 55,
            "pull_request_review_id": 2588365223,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6606",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1938304944/reactions"
            },
            "side": "RIGHT",
            "start_line": 549,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-01T16:47:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1938304944",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6606#discussion_r1987078532"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6606"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1987078532"
                }
            },
            "author_association": "MEMBER",
            "body": "Isn't there a way to declare an \"initialised once\" value to thread-sanitizer? Once the if-test succeeds, the value is set and safe to be read by threads.",
            "commit_id": "e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
            "created_at": "2025-03-10T11:11:11Z",
            "diff_hunk": "@@ -535,25 +530,38 @@ __Pyx_CyFunction_get_is_coroutine_locked(__pyx_CyFunctionObject *op) {\n         module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n         Py_DECREF(fromlist);\n         if (unlikely(!module)) goto ignore;\n-        op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n+        is_coroutine_value = __Pyx_PyObject_GetAttrStr(module, marker);\n         Py_DECREF(module);\n-        if (likely(op->func_is_coroutine)) {\n-            return __Pyx_NewRef(op->func_is_coroutine);\n+        if (likely(is_coroutine_value)) {\n+            return is_coroutine_value;\n         }\n ignore:\n         PyErr_Clear();\n     }\n \n-    op->func_is_coroutine = __Pyx_PyBool_FromLong(is_coroutine);\n-    return __Pyx_NewRef(op->func_is_coroutine);\n+    return __Pyx_PyBool_FromLong(is_coroutine);\n }\n \n static PyObject *\n __Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, void *context) {\n     PyObject *result;\n     CYTHON_UNUSED_VAR(context);\n+    if (op->func_is_coroutine) {\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    }",
            "html_url": "https://github.com/cython/cython/pull/6606#discussion_r1987078532",
            "id": 1987078532,
            "in_reply_to_id": 1938304944,
            "line": 551,
            "node_id": "PRRC_kwDOABDGAc52cGmE",
            "original_commit_id": "e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
            "original_line": 551,
            "original_position": 55,
            "original_start_line": 549,
            "path": "Cython/Utility/CythonFunction.c",
            "position": 55,
            "pull_request_review_id": 2670588054,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6606",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1987078532/reactions"
            },
            "side": "RIGHT",
            "start_line": 549,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-03-10T11:13:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1987078532",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6606#discussion_r1987961103"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6606"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1987961103"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think there's a special way to declare it to thread sanitizer that concept to thread sanitizer. It normally just expects you to use atomics for the reads and write (which is fine, but the macros are a bit awkward).",
            "commit_id": "e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
            "created_at": "2025-03-10T20:16:45Z",
            "diff_hunk": "@@ -535,25 +530,38 @@ __Pyx_CyFunction_get_is_coroutine_locked(__pyx_CyFunctionObject *op) {\n         module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n         Py_DECREF(fromlist);\n         if (unlikely(!module)) goto ignore;\n-        op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n+        is_coroutine_value = __Pyx_PyObject_GetAttrStr(module, marker);\n         Py_DECREF(module);\n-        if (likely(op->func_is_coroutine)) {\n-            return __Pyx_NewRef(op->func_is_coroutine);\n+        if (likely(is_coroutine_value)) {\n+            return is_coroutine_value;\n         }\n ignore:\n         PyErr_Clear();\n     }\n \n-    op->func_is_coroutine = __Pyx_PyBool_FromLong(is_coroutine);\n-    return __Pyx_NewRef(op->func_is_coroutine);\n+    return __Pyx_PyBool_FromLong(is_coroutine);\n }\n \n static PyObject *\n __Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, void *context) {\n     PyObject *result;\n     CYTHON_UNUSED_VAR(context);\n+    if (op->func_is_coroutine) {\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    }",
            "html_url": "https://github.com/cython/cython/pull/6606#discussion_r1987961103",
            "id": 1987961103,
            "in_reply_to_id": 1938304944,
            "line": 551,
            "node_id": "PRRC_kwDOABDGAc52feEP",
            "original_commit_id": "e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
            "original_line": 551,
            "original_position": 55,
            "original_start_line": 549,
            "path": "Cython/Utility/CythonFunction.c",
            "position": 55,
            "pull_request_review_id": 2672100709,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6606",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1987961103/reactions"
            },
            "side": "RIGHT",
            "start_line": 549,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-03-10T20:16:45Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1987961103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6606#discussion_r1994322289"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6606"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1994322289"
                }
            },
            "author_association": "MEMBER",
            "body": "As a hackish form of a hack, we could inject the critical section only if TSan is used. :o]\r\n\r\nhttps://github.com/google/sanitizers/wiki/ThreadSanitizerCppManual#suppressing-reports\r\n\"\"\"\r\nExclude problematic code/test under TSan with `#if defined(__has_feature) && __has_feature(thread_sanitizer)`.\r\n\"\"\"",
            "commit_id": "e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
            "created_at": "2025-03-13T21:24:45Z",
            "diff_hunk": "@@ -535,25 +530,38 @@ __Pyx_CyFunction_get_is_coroutine_locked(__pyx_CyFunctionObject *op) {\n         module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n         Py_DECREF(fromlist);\n         if (unlikely(!module)) goto ignore;\n-        op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n+        is_coroutine_value = __Pyx_PyObject_GetAttrStr(module, marker);\n         Py_DECREF(module);\n-        if (likely(op->func_is_coroutine)) {\n-            return __Pyx_NewRef(op->func_is_coroutine);\n+        if (likely(is_coroutine_value)) {\n+            return is_coroutine_value;\n         }\n ignore:\n         PyErr_Clear();\n     }\n \n-    op->func_is_coroutine = __Pyx_PyBool_FromLong(is_coroutine);\n-    return __Pyx_NewRef(op->func_is_coroutine);\n+    return __Pyx_PyBool_FromLong(is_coroutine);\n }\n \n static PyObject *\n __Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, void *context) {\n     PyObject *result;\n     CYTHON_UNUSED_VAR(context);\n+    if (op->func_is_coroutine) {\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    }",
            "html_url": "https://github.com/cython/cython/pull/6606#discussion_r1994322289",
            "id": 1994322289,
            "in_reply_to_id": 1938304944,
            "line": 551,
            "node_id": "PRRC_kwDOABDGAc523vFx",
            "original_commit_id": "e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
            "original_line": 551,
            "original_position": 55,
            "original_start_line": 549,
            "path": "Cython/Utility/CythonFunction.c",
            "position": 55,
            "pull_request_review_id": 2683395932,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6606",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1994322289/reactions"
            },
            "side": "RIGHT",
            "start_line": 549,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-03-13T21:24:45Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1994322289",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6606/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f977d3d947b1d103e96d87e4297a7a82a9c16467/comments",
            "commit": {
                "author": {
                    "date": "2025-01-10T10:18:04Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "Stefan Behnel"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2025-01-10T10:18:04Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "Stefan Behnel"
                },
                "message": "Avoid unsafe attribute use outside of critical section.",
                "tree": {
                    "sha": "4eef4c6bcce0bfb5b5ce60493b10bc833e043d95",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/4eef4c6bcce0bfb5b5ce60493b10bc833e043d95"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f977d3d947b1d103e96d87e4297a7a82a9c16467",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false,
                    "verified_at": null
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "html_url": "https://github.com/cython/cython/commit/f977d3d947b1d103e96d87e4297a7a82a9c16467",
            "node_id": "C_kwDOACXZ0toAKGY5NzdkM2Q5NDdiMWQxMDNlOTZkODdlNDI5N2E3YTgyYTljMTY0Njc",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ba535394fc72da3ae2c46967fb6f348a39bb0d33",
                    "sha": "ba535394fc72da3ae2c46967fb6f348a39bb0d33",
                    "url": "https://api.github.com/repos/cython/cython/commits/ba535394fc72da3ae2c46967fb6f348a39bb0d33"
                }
            ],
            "sha": "f977d3d947b1d103e96d87e4297a7a82a9c16467",
            "url": "https://api.github.com/repos/cython/cython/commits/f977d3d947b1d103e96d87e4297a7a82a9c16467"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea/comments",
            "commit": {
                "author": {
                    "date": "2025-01-10T10:32:48Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "Stefan Behnel"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2025-01-10T10:32:48Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "Stefan Behnel"
                },
                "message": "Move long constant initialisation out of critical section for \"CyFunction.is_coroutine\".",
                "tree": {
                    "sha": "0587904aeedf3e0ef5ddd6903e84159917e89c76",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0587904aeedf3e0ef5ddd6903e84159917e89c76"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false,
                    "verified_at": null
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "html_url": "https://github.com/cython/cython/commit/e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
            "node_id": "C_kwDOACXZ0toAKGU1YTdlNzY5MThiY2RjMTNlYzhiYjZlNWI5NmJmYTY1YzVjOWQ4ZWE",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f977d3d947b1d103e96d87e4297a7a82a9c16467",
                    "sha": "f977d3d947b1d103e96d87e4297a7a82a9c16467",
                    "url": "https://api.github.com/repos/cython/cython/commits/f977d3d947b1d103e96d87e4297a7a82a9c16467"
                }
            ],
            "sha": "e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
            "url": "https://api.github.com/repos/cython/cython/commits/e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/6606/commits",
    "created_at": "2025-01-10T10:35:19Z",
    "diff_url": "https://github.com/cython/cython/pull/6606.diff",
    "draft": false,
    "head": {
        "label": "scoder:gh6582_improve_cyfunc_critical_sections",
        "ref": "gh6582_improve_cyfunc_critical_sections",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/scoder/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/scoder/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/scoder/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/scoder/cython/branches{/branch}",
            "clone_url": "https://github.com/scoder/cython.git",
            "collaborators_url": "https://api.github.com/repos/scoder/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/scoder/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/scoder/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/scoder/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/scoder/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/scoder/cython/contributors",
            "created_at": "2011-09-29T07:52:12Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/scoder/cython/deployments",
            "description": "A Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/scoder/cython/downloads",
            "events_url": "https://api.github.com/repos/scoder/cython/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/scoder/cython/forks",
            "full_name": "scoder/cython",
            "git_commits_url": "https://api.github.com/repos/scoder/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/scoder/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/scoder/cython/git/tags{/sha}",
            "git_url": "git://github.com/scoder/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": false,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/scoder/cython/hooks",
            "html_url": "https://github.com/scoder/cython",
            "id": 2480594,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/scoder/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/scoder/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/scoder/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/scoder/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/scoder/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/scoder/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/scoder/cython/merges",
            "milestones_url": "https://api.github.com/repos/scoder/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkyNDgwNTk0",
            "notifications_url": "https://api.github.com/repos/scoder/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/scoder/cython/pulls{/number}",
            "pushed_at": "2025-03-14T10:22:34Z",
            "releases_url": "https://api.github.com/repos/scoder/cython/releases{/id}",
            "size": 74713,
            "ssh_url": "git@github.com:scoder/cython.git",
            "stargazers_count": 11,
            "stargazers_url": "https://api.github.com/repos/scoder/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/scoder/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/scoder/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/scoder/cython/subscription",
            "svn_url": "https://github.com/scoder/cython",
            "tags_url": "https://api.github.com/repos/scoder/cython/tags",
            "teams_url": "https://api.github.com/repos/scoder/cython/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/scoder/cython/git/trees{/sha}",
            "updated_at": "2025-03-14T08:30:52Z",
            "url": "https://api.github.com/repos/scoder/cython",
            "visibility": "public",
            "watchers": 11,
            "watchers_count": 11,
            "web_commit_signoff_required": false
        },
        "sha": "e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/6606",
    "id": 2270191475,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/6606",
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558030,
            "name": "cleanup",
            "node_id": "MDU6TGFiZWw0MjU1NTgwMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/cleanup"
        }
    ],
    "locked": false,
    "merge_commit_sha": "e0b76893559cf38ce7f0bf5a8dc5945e2de82c10",
    "merged_at": "2025-03-10T11:14:19Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 362,
        "created_at": "2019-02-24T14:21:23Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder",
            "user_view_type": "public"
        },
        "description": "* Remove code for Python 2 and Python < 3.8.\r\n* Integrate better with Python 3.\r\n* Improve support for the Limited API.\r\n* Start supporting GIL-free Python 3.13.\r\n* Support the Py3.13 `sys.monitoring` API.\r\n* Support and use `am_send` for coroutines.",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/65",
        "id": 4082235,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/65/labels",
        "node_id": "MDk6TWlsZXN0b25lNDA4MjIzNQ==",
        "number": 65,
        "open_issues": 21,
        "state": "open",
        "title": "3.1",
        "updated_at": "2025-03-14T10:19:54Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/65"
    },
    "node_id": "PR_kwDOABDGAc6HUF9z",
    "number": 6606,
    "patch_url": "https://github.com/cython/cython/pull/6606.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/6606/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/e5a7e76918bcdc13ec8bb6e5b96bfa65c5c9d8ea",
    "title": "Improve critical sections in CyFunction",
    "updated_at": "2025-03-13T21:24:45Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/6606",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
        "events_url": "https://api.github.com/users/scoder/events{/privacy}",
        "followers_url": "https://api.github.com/users/scoder/followers",
        "following_url": "https://api.github.com/users/scoder/following{/other_user}",
        "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/scoder",
        "id": 491659,
        "login": "scoder",
        "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
        "organizations_url": "https://api.github.com/users/scoder/orgs",
        "received_events_url": "https://api.github.com/users/scoder/received_events",
        "repos_url": "https://api.github.com/users/scoder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/scoder",
        "user_view_type": "public"
    }
}