{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/4081/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4081/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/4081"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/4081"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4081/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4081"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1386,
            "forks_count": 1386,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 1165,
            "open_issues_count": 1165,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2023-05-16T10:58:13Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 68106,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 7924,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "topics": [
                "big-data",
                "c",
                "cpp",
                "cpython",
                "cpython-extensions",
                "cython",
                "performance",
                "python"
            ],
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2023-05-16T04:13:16Z",
            "url": "https://api.github.com/repos/cython/cython",
            "visibility": "public",
            "watchers": 7924,
            "watchers_count": 7924,
            "web_commit_signoff_required": false
        },
        "sha": "bc3dd1a2ece6e72d80e2796af3737a1cb65b6142",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": null,
    "closed_at": "2021-05-10T14:49:23Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r605660440"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/605660440"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "In all other cases const is added in the function signature instead. Is there a reason, why it has to be in here for std::vector?",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-01T13:32:03Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r605660440",
            "id": 605660440,
            "line": 55,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNTY2MDQ0MA==",
            "original_commit_id": "f801c50af212085a6d03f5c837e52c03cd35b6c5",
            "original_line": 55,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": 5,
            "pull_request_review_id": 626270860,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/605660440/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/605660440",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r605661382"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/605661382"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This applies changes similar to https://github.com/cython/cython/issues/2844, since it is not really clear when/if there will be such a optimization for list comprehensions. In case it exists in the future this could directly be a list comprehension as well",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-01T13:33:23Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(v.size())\n+    cdef size_t i = 0\n+    for i in range(v.size()):\n+        item = v[i]\n+        Py_INCREF(item)\n+        PyList_SET_ITEM(o, i, item)\n+    return o",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r605661382",
            "id": 605661382,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNTY2MTM4Mg==",
            "original_commit_id": "f801c50af212085a6d03f5c837e52c03cd35b6c5",
            "original_line": 77,
            "original_position": 25,
            "original_start_line": 59,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": null,
            "pull_request_review_id": 626270860,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/605661382/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/605661382",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606238851"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606238851"
                }
            },
            "author_association": "MEMBER",
            "body": "Probably just predates proper `const` support.",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T13:32:15Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606238851",
            "id": 606238851,
            "in_reply_to_id": 605660440,
            "line": 55,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjIzODg1MQ==",
            "original_commit_id": "f801c50af212085a6d03f5c837e52c03cd35b6c5",
            "original_line": 55,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": 5,
            "pull_request_review_id": 626984946,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606238851/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606238851",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606240347"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606240347"
                }
            },
            "author_association": "MEMBER",
            "body": "Does this need to be `size_t` instead of the usual `Py_ssize_t` for indexing?\r\n```suggestion\r\n    cdef Py_ssize_t i\r\n```",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T13:36:18Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(v.size())\n+    cdef size_t i = 0",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606240347",
            "id": 606240347,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjI0MDM0Nw==",
            "original_commit_id": "f801c50af212085a6d03f5c837e52c03cd35b6c5",
            "original_line": 67,
            "original_position": 20,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": null,
            "pull_request_review_id": 626984946,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606240347/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606240347",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606240632"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606240632"
                }
            },
            "author_association": "MEMBER",
            "body": "`int`?\r\n```suggestion\r\n    cdef cpp_list[X].const_iterator iter = v.begin()\r\n```",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T13:37:03Z",
            "diff_hunk": "@@ -87,14 +97,24 @@ cdef extern from *:\n             bint operator!=(const_iterator)\n         const_iterator begin()\n         const_iterator end()\n+        size_t size()\n+\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n @cname(\"{{cname}}\")\n cdef object {{cname}}(const cpp_list[X]& v):\n-    o = []\n-    cdef cpp_list[X].const_iterator iter = v.begin()\n+    o = PyList_New(v.size())\n+    cdef size_t i = 0\n+    cdef cpp_list[int].const_iterator iter = v.begin()",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606240632",
            "id": 606240632,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjI0MDYzMg==",
            "original_commit_id": "f801c50af212085a6d03f5c837e52c03cd35b6c5",
            "original_line": 111,
            "original_position": 46,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": null,
            "pull_request_review_id": 626984946,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606240632/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606240632",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606240996"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606240996"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        i += 1\r\n```",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T13:37:54Z",
            "diff_hunk": "@@ -87,14 +97,24 @@ cdef extern from *:\n             bint operator!=(const_iterator)\n         const_iterator begin()\n         const_iterator end()\n+        size_t size()\n+\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n @cname(\"{{cname}}\")\n cdef object {{cname}}(const cpp_list[X]& v):\n-    o = []\n-    cdef cpp_list[X].const_iterator iter = v.begin()\n+    o = PyList_New(v.size())\n+    cdef size_t i = 0\n+    cdef cpp_list[int].const_iterator iter = v.begin()\n     while iter != v.end():\n-        o.append(cython.operator.dereference(iter))\n+        item = cython.operator.dereference(iter)\n+        Py_INCREF(item)\n+        PyList_SET_ITEM(o, i, item)\n         cython.operator.preincrement(iter)\n+        i = i + 1",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606240996",
            "id": 606240996,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjI0MDk5Ng==",
            "original_commit_id": "f801c50af212085a6d03f5c837e52c03cd35b6c5",
            "original_line": 117,
            "original_position": 53,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": null,
            "pull_request_review_id": 626984946,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606240996/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606240996",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606262805"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606262805"
                }
            },
            "author_association": "MEMBER",
            "body": "This might just be a mismatch where no option can ever be \"right\" - `size_t` matches the type of of `v.size()`, but not `PyList_SET_ITEM`.\r\n\r\nPossibly the right thing to do is to raise an error if `v.size() > PY_SSIZE_T_MAX` and then use `Py_ssize_t` after that check? But I doubt if many people have the memory to run that test-case.",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T14:29:58Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(v.size())\n+    cdef size_t i = 0",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606262805",
            "id": 606262805,
            "in_reply_to_id": 606240347,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjI2MjgwNQ==",
            "original_commit_id": "f801c50af212085a6d03f5c837e52c03cd35b6c5",
            "original_line": 67,
            "original_position": 20,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": null,
            "pull_request_review_id": 627015546,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606262805/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606262805",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606317432"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606317432"
                }
            },
            "author_association": "MEMBER",
            "body": "Useless assignment.\r\n```suggestion\r\n    cdef Py_ssize_t i\r\n    for i in range(v.size()):\r\n```",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T16:40:56Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i = 0\n+    for i in range(v.size()):",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606317432",
            "id": 606317432,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjMxNzQzMg==",
            "original_commit_id": "16a6e4e05b562837e1e06cd4abf3b1b56e60a029",
            "original_line": 73,
            "original_position": 21,
            "original_start_line": 67,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": null,
            "pull_request_review_id": 627100760,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606317432/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606317432",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606318078"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606318078"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I changed it to Py_ssize_t. Even for a bit vector (vector<bool>) this would require 1.07E+09 Gb of memory, so I do not think, that this is a concern (+ the memory allocation for the PyList). In Cpython this would already causes a exception because a negative size is specified, while in PyPy this would allocate a empty list.\r\nhttps://github.com/mozillazg/pypy/blob/11af013b3723c15c9ce51f68fd5c2db51f74ba3d/pypy/module/cpyext/listobject.py#L23\r\nI personally do not see anyone running into this issue, given the big memory requirement",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T16:42:35Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(v.size())\n+    cdef size_t i = 0",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606318078",
            "id": 606318078,
            "in_reply_to_id": 606240347,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjMxODA3OA==",
            "original_commit_id": "f801c50af212085a6d03f5c837e52c03cd35b6c5",
            "original_line": 67,
            "original_position": 20,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": null,
            "pull_request_review_id": 627103238,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606318078/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606318078",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606318752"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606318752"
                }
            },
            "author_association": "MEMBER",
            "body": "It still feels like we should add a max size check here (and also for `cpp_list` further down), because, why not?",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T16:44:06Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606318752",
            "id": 606318752,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjMxODc1Mg==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 71,
            "original_position": 19,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": null,
            "pull_request_review_id": 627105552,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606318752/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606318752",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606318794"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606318794"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Is it preferred to use\r\n```\r\n    cdef Py_ssize_t i\r\n    for i in range(v.size()):\r\n```\r\nor\r\n```\r\n    for i in range(<Py_ssize_t>v.size()):\r\n```\r\nand let cython deduce the type of i?",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T16:44:13Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i = 0\n+    for i in range(v.size()):",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606318794",
            "id": 606318794,
            "in_reply_to_id": 606317432,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjMxODc5NA==",
            "original_commit_id": "16a6e4e05b562837e1e06cd4abf3b1b56e60a029",
            "original_line": 73,
            "original_position": 21,
            "original_start_line": 67,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": null,
            "pull_request_review_id": 627105704,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606318794/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606318794",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606319657"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606319657"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we should add a size check here to make sure that the vector did not grow during iteration.",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T16:46:17Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i\n+    for i in range(v.size()):\n+        item = v[i]\n+        Py_INCREF(item)\n+        PyList_SET_ITEM(o, i, item)",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606319657",
            "id": 606319657,
            "line": 78,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjMxOTY1Nw==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 76,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": 30,
            "pull_request_review_id": 627105552,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606319657/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606319657",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606320281"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606320281"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we should add a size check here to make sure that the vector did not grow during iteration.",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T16:47:39Z",
            "diff_hunk": "@@ -87,14 +97,24 @@ cdef extern from *:\n             bint operator!=(const_iterator)\n         const_iterator begin()\n         const_iterator end()\n+        size_t size()\n+\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n @cname(\"{{cname}}\")\n cdef object {{cname}}(const cpp_list[X]& v):\n-    o = []\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i = 0\n     cdef cpp_list[X].const_iterator iter = v.begin()\n     while iter != v.end():\n-        o.append(cython.operator.dereference(iter))\n+        item = cython.operator.dereference(iter)\n+        Py_INCREF(item)\n+        PyList_SET_ITEM(o, i, item)",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606320281",
            "id": 606320281,
            "line": 130,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjMyMDI4MQ==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 125,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": 64,
            "pull_request_review_id": 627105552,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606320281/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606320281",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606322942"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606322942"
                }
            },
            "author_association": "MEMBER",
            "body": "The first. It's usually better if utility code doesn't depend too much on features that users can influence. Keeps it less brittle.",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T16:54:14Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i = 0\n+    for i in range(v.size()):",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606322942",
            "id": 606322942,
            "in_reply_to_id": 606317432,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjMyMjk0Mg==",
            "original_commit_id": "16a6e4e05b562837e1e06cd4abf3b1b56e60a029",
            "original_line": 73,
            "original_position": 21,
            "original_start_line": 67,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": null,
            "pull_request_review_id": 627120708,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606322942/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606322942",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606322957"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606322957"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Can this happen? Since this requires the GIL I do not see how a different thread would change the size + generally C++ standard containers are not thread safe.",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T16:54:16Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i\n+    for i in range(v.size()):\n+        item = v[i]\n+        Py_INCREF(item)\n+        PyList_SET_ITEM(o, i, item)",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606322957",
            "id": 606322957,
            "in_reply_to_id": 606319657,
            "line": 78,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjMyMjk1Nw==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 76,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": 30,
            "pull_request_review_id": 627120775,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606322957/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606322957",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606324154"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606324154"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "what is the appropriate exception type? ",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T16:56:05Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606324154",
            "id": 606324154,
            "in_reply_to_id": 606318752,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjMyNDE1NA==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 71,
            "original_position": 19,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": null,
            "pull_request_review_id": 627122428,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606324154/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606324154",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606333612"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606333612"
                }
            },
            "author_association": "MEMBER",
            "body": "In principle the constructor/destructor of any of the C++ objects could resize the vector, or the the constructor of the `item` Python object could release the GIL (most likely by invoking the GC, and causing arbitrary Python code to get executed in a destructor somewhere).\r\n\r\nPersonally I'd take the view that pretty much all of C++ iteration relies on containers not managing to resize themselves during it, and that it isn't necessary to handle this corner case. But I'm pretty sure I could force it to happen if I tried.",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T17:16:28Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i\n+    for i in range(v.size()):\n+        item = v[i]\n+        Py_INCREF(item)\n+        PyList_SET_ITEM(o, i, item)",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606333612",
            "id": 606333612,
            "in_reply_to_id": 606319657,
            "line": 78,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjMzMzYxMg==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 76,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": 30,
            "pull_request_review_id": 627132286,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606333612/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606333612",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606334575"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606334575"
                }
            },
            "author_association": "MEMBER",
            "body": "With that said, if we were going to test it I think the place to do it would be before indexing the vector - I don't think that the vector growing is a problem for the current code because the stop condition for the range is only evaluated once",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T17:18:44Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i\n+    for i in range(v.size()):\n+        item = v[i]\n+        Py_INCREF(item)\n+        PyList_SET_ITEM(o, i, item)",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606334575",
            "id": 606334575,
            "in_reply_to_id": 606319657,
            "line": 78,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjMzNDU3NQ==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 76,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": 30,
            "pull_request_review_id": 627133345,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606334575/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606334575",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606348180"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606348180"
                }
            },
            "author_association": "MEMBER",
            "body": "~~Right. This case is probably ok. If the vector grows, it will stop short, which is fine since we don't guarantee anything in that case except that it doesn't crash. If the vector shrinks, it would raise a C++ exception on indexing, which should then get turned into an `IndexError`. So that's fine, too.~~",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T17:52:42Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i\n+    for i in range(v.size()):\n+        item = v[i]\n+        Py_INCREF(item)\n+        PyList_SET_ITEM(o, i, item)",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606348180",
            "id": 606348180,
            "in_reply_to_id": 606319657,
            "line": 78,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjM0ODE4MA==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 76,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": 30,
            "pull_request_review_id": 627150038,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606348180/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606348180",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606348341"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606348341"
                }
            },
            "author_association": "MEMBER",
            "body": "`OverflowError`?",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T17:53:04Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606348341",
            "id": 606348341,
            "in_reply_to_id": 606318752,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjM0ODM0MQ==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 71,
            "original_position": 19,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": null,
            "pull_request_review_id": 627150236,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606348341/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606348341",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606353173"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606353173"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yes probably you could force it. The C++ standard containers are not thread safe, so users should manage this themselves. I do not see any way for us to make sure they are in this use case. Checking the size in front of each access would just make it harder to break it, but if you try hard you can still break it.",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T18:05:43Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i\n+    for i in range(v.size()):\n+        item = v[i]\n+        Py_INCREF(item)\n+        PyList_SET_ITEM(o, i, item)",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606353173",
            "id": 606353173,
            "in_reply_to_id": 606319657,
            "line": 78,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjM1MzE3Mw==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 76,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": 30,
            "pull_request_review_id": 627156353,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606353173/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606353173",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606354444"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606354444"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> If the vector shrinks, it would raise a C++ exception on indexing, which should then get turned into an IndexError. So that's fine, too.\r\n\r\nNo it does not\r\nv[i] just accesses out of bounds memory which is undefined behavior\r\n\r\nv.at(i) raises an exception, but since vector is not thread safe it might resize in between the size check and the access in the at function\r\n\r\nAlso many of our iterations are based on iterators, which might get invalidated -> undefined behavior",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T18:08:54Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i\n+    for i in range(v.size()):\n+        item = v[i]\n+        Py_INCREF(item)\n+        PyList_SET_ITEM(o, i, item)",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606354444",
            "id": 606354444,
            "in_reply_to_id": 606319657,
            "line": 78,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjM1NDQ0NA==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 76,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": 30,
            "pull_request_review_id": 627157857,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606354444/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606354444",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606382198"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606382198"
                }
            },
            "author_association": "MEMBER",
            "body": "I think threading is not something we should care about. But modification during iteration is. As @da-woods pointed out, the vector might change while instantiating the Python item, which can execute arbitrary Python code. We should guard against that.",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T19:18:49Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i\n+    for i in range(v.size()):\n+        item = v[i]\n+        Py_INCREF(item)\n+        PyList_SET_ITEM(o, i, item)",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606382198",
            "id": 606382198,
            "in_reply_to_id": 606319657,
            "line": 78,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjM4MjE5OA==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 76,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": 30,
            "pull_request_review_id": 627219568,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606382198/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606382198",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606386854"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606386854"
                }
            },
            "author_association": "MEMBER",
            "body": "We could use a `while` loop and add a second loop after it that uses `append()` if there is really anything left to append.",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T19:32:08Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i\n+    for i in range(v.size()):\n+        item = v[i]\n+        Py_INCREF(item)\n+        PyList_SET_ITEM(o, i, item)",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606386854",
            "id": 606386854,
            "in_reply_to_id": 606319657,
            "line": 78,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjM4Njg1NA==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 76,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": 30,
            "pull_request_review_id": 627225116,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606386854/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606386854",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606394897"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606394897"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm not sure a second loop is worthwhile. I'd argue for either:\r\n* Use the code as-is (on the basis this anything that changes the vector during iteration is very unusual, and people who write such code should be ultra-careful about ownership and object lifetime)\r\n* Swap `[i]` for `.at(i)`, on the basis that it should keep things fairly safe (i.e. raise an Python exception)\r\n\r\nPersonally I don't think it's sensible to try to handle too much beyond that. Any code that could change the size of vector could also go back and modify earlier elements, so we can never do more than just a \"best-effort snapshot\"",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T19:55:37Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i\n+    for i in range(v.size()):\n+        item = v[i]\n+        Py_INCREF(item)\n+        PyList_SET_ITEM(o, i, item)",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606394897",
            "id": 606394897,
            "in_reply_to_id": 606319657,
            "line": 78,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjM5NDg5Nw==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 76,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": 30,
            "pull_request_review_id": 627236289,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606394897/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606394897",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606398697"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606398697"
                }
            },
            "author_association": "MEMBER",
            "body": "I would argue that we should mimic the semantics of Python list iteration here. If you change a Python list while iterating over it, it will simply stop as soon as it has returned as many (or more) items as the current list length at this time. It may skip over items when you add or remove some, but it won't crash, and it will look at the list length on every iteration and stop as soon as it has nothing more to give to you.\r\n\r\nNote that this is not special-purpose code. It's generic list copying code that users won't even notice they are using most of the time. It should try to be as widely applicable as possible (but not a tad slower than strictly necessary). If we introduce potential bugs or non-obvious constraints here, then there is a high chance that it won't be noticed in user code until much, much later, when the right kind of data passes through it during the right phase of the moon.\r\n\r\nIf it behaves different from `[transform(x) for x in some_sequence]` then there should be a convincing reason for that. Not the other way round.",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T20:07:10Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i\n+    for i in range(v.size()):\n+        item = v[i]\n+        Py_INCREF(item)\n+        PyList_SET_ITEM(o, i, item)",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606398697",
            "id": 606398697,
            "in_reply_to_id": 606319657,
            "line": 78,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjM5ODY5Nw==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 76,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": 30,
            "pull_request_review_id": 627254291,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606398697/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606398697",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606404406"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606404406"
                }
            },
            "author_association": "MEMBER",
            "body": "> Also many of our iterations are based on iterators, which might get invalidated -> undefined behavior\r\n\r\nOne final comment on this from me I think: for C++ linked lists, sets and maps, using iterators is the only way to traverse then and C++ iterators have a very strong requirement that the container won't be modified as you go. So for vector/string/deque we could definitely make it a bit more robust to changes, but for most other  types I don't think it's possible.",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T20:18:15Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i\n+    for i in range(v.size()):\n+        item = v[i]\n+        Py_INCREF(item)\n+        PyList_SET_ITEM(o, i, item)",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606404406",
            "id": 606404406,
            "in_reply_to_id": 606319657,
            "line": 78,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjQwNDQwNg==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 76,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": 30,
            "pull_request_review_id": 627261624,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606404406/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606404406",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606407658"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606407658"
                }
            },
            "author_association": "MEMBER",
            "body": "@da-woods That's a convincing reason for those containers then. :)\r\n\r\nJust keep in mind that C++ containers can easily be used by Cython developers as low-level data types even if their C++ knowledge is limited. If we can make it work for them by providing sensible semantics, we should.",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T20:27:49Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i\n+    for i in range(v.size()):\n+        item = v[i]\n+        Py_INCREF(item)\n+        PyList_SET_ITEM(o, i, item)",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606407658",
            "id": 606407658,
            "in_reply_to_id": 606319657,
            "line": 78,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjQwNzY1OA==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 76,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": 30,
            "pull_request_review_id": 627265407,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606407658/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606407658",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606412900"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606412900"
                }
            },
            "author_association": "MEMBER",
            "body": "@da-woods What you wrote doesn't seem to apply to linked lists, though, e.g. https://www.cplusplus.com/reference/list/list/push_front/ – deques yes, maps and sets partly. Clearing always invalidates, for example, but inserting doesn't necessarily. So there are several modifications that users can apply to C++ containers without rendering their iterators invalid or useless.",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T20:44:08Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i\n+    for i in range(v.size()):\n+        item = v[i]\n+        Py_INCREF(item)\n+        PyList_SET_ITEM(o, i, item)",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606412900",
            "id": 606412900,
            "in_reply_to_id": 606319657,
            "line": 78,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjQxMjkwMA==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 76,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": 30,
            "pull_request_review_id": 627282094,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606412900/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606412900",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r606428320"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/606428320"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yes linked lists are not that problematic. The iterator can simply check the next pointer each time. It is only problematic when the element the iterator currently points to is invalidated. However I do not know how we would verify, that this did not happen.",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-04-02T21:33:37Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())\n+    cdef Py_ssize_t i\n+    for i in range(v.size()):\n+        item = v[i]\n+        Py_INCREF(item)\n+        PyList_SET_ITEM(o, i, item)",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r606428320",
            "id": 606428320,
            "in_reply_to_id": 606319657,
            "line": 78,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjQyODMyMA==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 76,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": 30,
            "pull_request_review_id": 627372945,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/606428320/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/606428320",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4081#discussion_r626464862"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4081"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/626464862"
                }
            },
            "author_association": "MEMBER",
            "body": "Actually, raising a `MemoryError` might be better. After all, we'd be trying to allocate a huge list of Python objects (4-8 byte pointers plus objects), which would obviously fail if already its size exceeds the maximum allowed length. The size check would just prevent the size overflow that might lead to silent data loss instead of an exception.\r\n\r\nBasically, the only realistic case where this may occur is a bit vector. Or maybe a `char` vector. Or something like that. Maybe something forged. But we should handle (and reject) such extreme cases correctly. Whenever we cast an unsigned to a signed size, it's worth a maximum size check.",
            "commit_id": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "created_at": "2021-05-05T10:55:41Z",
            "diff_hunk": "@@ -52,14 +52,24 @@ cdef vector[X] {{cname}}(object o) except *:\n #################### vector.to_py ####################\n \n cdef extern from *:\n-    cdef cppclass vector \"const std::vector\" [T]:\n+    cdef cppclass vector \"std::vector\" [T]:\n         size_t size()\n         T& operator[](size_t)\n \n-@cname(\"{{cname}}\")\n-cdef object {{cname}}(vector[X]& v):\n-    return [v[i] for i in range(v.size())]\n+cdef extern from \"Python.h\":\n+    void Py_INCREF(object)\n+    list PyList_New(Py_ssize_t size)\n+    void PyList_SET_ITEM(object list, Py_ssize_t i, object o)\n \n+@cname(\"{{cname}}\")\n+cdef object {{cname}}(const vector[X]& v):\n+    o = PyList_New(<Py_ssize_t>v.size())",
            "html_url": "https://github.com/cython/cython/pull/4081#discussion_r626464862",
            "id": 626464862,
            "in_reply_to_id": 606318752,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjQ2NDg2Mg==",
            "original_commit_id": "d47efd45a80d88d3a8bd5d38569f9a69e9ef1a4c",
            "original_line": 71,
            "original_position": 19,
            "original_start_line": null,
            "path": "Cython/Utility/CppConvert.pyx",
            "position": null,
            "pull_request_review_id": 652169820,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4081",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/626464862/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-09T17:55:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/626464862",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4081/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8eb0e2480772d82e2f2c75018ca6fc52a31a42e3/comments",
            "commit": {
                "author": {
                    "date": "2021-04-01T13:29:30Z",
                    "email": "kontakt@maxbachmann.de",
                    "name": "Max Bachmann"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-08T12:56:47Z",
                    "email": "kontakt@maxbachmann.de",
                    "name": "Max Bachmann"
                },
                "message": "Reduce memory allocations in C++ to PyList Conversions",
                "tree": {
                    "sha": "388440ea90205fdbd86b9c21fa3f772bfa25103a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/388440ea90205fdbd86b9c21fa3f772bfa25103a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8eb0e2480772d82e2f2c75018ca6fc52a31a42e3",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            },
            "html_url": "https://github.com/cython/cython/commit/8eb0e2480772d82e2f2c75018ca6fc52a31a42e3",
            "node_id": "MDY6Q29tbWl0MTA5OTI2NTo4ZWIwZTI0ODA3NzJkODJlMmYyYzc1MDE4Y2E2ZmM1MmEzMWE0MmUz",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/bc3dd1a2ece6e72d80e2796af3737a1cb65b6142",
                    "sha": "bc3dd1a2ece6e72d80e2796af3737a1cb65b6142",
                    "url": "https://api.github.com/repos/cython/cython/commits/bc3dd1a2ece6e72d80e2796af3737a1cb65b6142"
                }
            ],
            "sha": "8eb0e2480772d82e2f2c75018ca6fc52a31a42e3",
            "url": "https://api.github.com/repos/cython/cython/commits/8eb0e2480772d82e2f2c75018ca6fc52a31a42e3"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/12fb22bd5da31a4825c7f29c9895592d39a240cf/comments",
            "commit": {
                "author": {
                    "date": "2021-04-02T16:41:17Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-08T12:56:47Z",
                    "email": "kontakt@maxbachmann.de",
                    "name": "Max Bachmann"
                },
                "message": "Remove useless assignment.",
                "tree": {
                    "sha": "e7d53ec1d9d3a4d729e713cacbb695fb1e8dac92",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e7d53ec1d9d3a4d729e713cacbb695fb1e8dac92"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/12fb22bd5da31a4825c7f29c9895592d39a240cf",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            },
            "html_url": "https://github.com/cython/cython/commit/12fb22bd5da31a4825c7f29c9895592d39a240cf",
            "node_id": "MDY6Q29tbWl0MTA5OTI2NToxMmZiMjJiZDVkYTMxYTQ4MjVjN2YyOWM5ODk1NTkyZDM5YTI0MGNm",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8eb0e2480772d82e2f2c75018ca6fc52a31a42e3",
                    "sha": "8eb0e2480772d82e2f2c75018ca6fc52a31a42e3",
                    "url": "https://api.github.com/repos/cython/cython/commits/8eb0e2480772d82e2f2c75018ca6fc52a31a42e3"
                }
            ],
            "sha": "12fb22bd5da31a4825c7f29c9895592d39a240cf",
            "url": "https://api.github.com/repos/cython/cython/commits/12fb22bd5da31a4825c7f29c9895592d39a240cf"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9a55efd0bd948807cda5da5ce4cdc3acac7844ac/comments",
            "commit": {
                "author": {
                    "date": "2021-05-08T11:42:18Z",
                    "email": "kontakt@maxbachmann.de",
                    "name": "Max Bachmann"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-08T17:36:41Z",
                    "email": "kontakt@maxbachmann.de",
                    "name": "Max Bachmann"
                },
                "message": "add overflow check for Py_ssize_t conversion",
                "tree": {
                    "sha": "9d6372969a0086a6ba801650546d3cd9e8d18819",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/9d6372969a0086a6ba801650546d3cd9e8d18819"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9a55efd0bd948807cda5da5ce4cdc3acac7844ac",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
                "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxbachmann/followers",
                "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxbachmann",
                "id": 44199644,
                "login": "maxbachmann",
                "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
                "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
                "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
                "repos_url": "https://api.github.com/users/maxbachmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxbachmann"
            },
            "html_url": "https://github.com/cython/cython/commit/9a55efd0bd948807cda5da5ce4cdc3acac7844ac",
            "node_id": "MDY6Q29tbWl0MTA5OTI2NTo5YTU1ZWZkMGJkOTQ4ODA3Y2RhNWRhNWNlNGNkYzNhY2FjNzg0NGFj",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/12fb22bd5da31a4825c7f29c9895592d39a240cf",
                    "sha": "12fb22bd5da31a4825c7f29c9895592d39a240cf",
                    "url": "https://api.github.com/repos/cython/cython/commits/12fb22bd5da31a4825c7f29c9895592d39a240cf"
                }
            ],
            "sha": "9a55efd0bd948807cda5da5ce4cdc3acac7844ac",
            "url": "https://api.github.com/repos/cython/cython/commits/9a55efd0bd948807cda5da5ce4cdc3acac7844ac"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15/comments",
            "commit": {
                "author": {
                    "date": "2021-05-09T17:55:10Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-09T17:55:10Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Minor code cleanups, add casts to avoid comparison of signed and unsigned integers.",
                "tree": {
                    "sha": "f4b7185dc4b1d10f0147edc57c6f961d6bc8fcbf",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f4b7185dc4b1d10f0147edc57c6f961d6bc8fcbf"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
                "verification": {
                    "payload": "tree f4b7185dc4b1d10f0147edc57c6f961d6bc8fcbf\nparent 9a55efd0bd948807cda5da5ce4cdc3acac7844ac\nauthor scoder <stefan_ml@behnel.de> 1620582910 +0200\ncommitter GitHub <noreply@github.com> 1620582910 +0200\n\nMinor code cleanups, add casts to avoid comparison of signed and unsigned integers.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgmCH+CRBK7hj4Ov3rIwAAz8cIAHkP2ItLmSHxKk65DwVA0seF\nKV4YplKzi8T3B8/tGQWDfjXcmaM4hvHoXzIUiuW75UiDuYbKn1+SRk6n6/E01GvC\nB/RI7XlkuzKaM70aMtJB69yju970oMum4TVwjgRZksCTqqEleTxBnOPW92h6ibop\n8R63dvus4juzhyvnrEOVqmFKu7WJPewVzCtNrRC7Ob0H/6mC35nfuX21zvZZluB1\naBCMZx/8aBZ+l9nS9nmskI3vqzZ5Atqoh0x2k3JIStmiTl5E0O5xKeYOdWjT0e3G\nk05lsE7r9YQ3XIyQj2Wxu9oityaIVJa9YjbsUkNbxONDJ1HfV73ICc3xvmACbLU=\n=NXKl\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "node_id": "MDY6Q29tbWl0MTA5OTI2NTpiOThlM2I5ODJmZmI3ZGMyMzQ4ZmNhMWE4NWRhZmY4YTdlYzVhYjE1",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9a55efd0bd948807cda5da5ce4cdc3acac7844ac",
                    "sha": "9a55efd0bd948807cda5da5ce4cdc3acac7844ac",
                    "url": "https://api.github.com/repos/cython/cython/commits/9a55efd0bd948807cda5da5ce4cdc3acac7844ac"
                }
            ],
            "sha": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
            "url": "https://api.github.com/repos/cython/cython/commits/b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/4081/commits",
    "created_at": "2021-04-01T13:31:00Z",
    "diff_url": "https://github.com/cython/cython/pull/4081.diff",
    "draft": false,
    "head": {
        "label": "maxbachmann:CppConvert2",
        "ref": "CppConvert2",
        "repo": null,
        "sha": "b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
            "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
            "followers_url": "https://api.github.com/users/maxbachmann/followers",
            "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
            "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/maxbachmann",
            "id": 44199644,
            "login": "maxbachmann",
            "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
            "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
            "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
            "repos_url": "https://api.github.com/users/maxbachmann/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/maxbachmann"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/4081",
    "id": 607405501,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/4081",
    "labels": [
        {
            "color": "f9d0c4",
            "default": false,
            "description": null,
            "id": 414805136,
            "name": "C++",
            "node_id": "MDU6TGFiZWw0MTQ4MDUxMzY=",
            "url": "https://api.github.com/repos/cython/cython/labels/C++"
        },
        {
            "color": "444444",
            "default": true,
            "description": null,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        }
    ],
    "locked": false,
    "merge_commit_sha": "b1f7d5927b902e8ec978898d5ab0e5cc0491127a",
    "merged_at": "2021-05-10T14:49:23Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 896,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3str`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 50,
        "state": "open",
        "title": "3.0",
        "updated_at": "2023-05-15T20:07:31Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjA3NDA1NTAx",
    "number": 4081,
    "patch_url": "https://github.com/cython/cython/pull/4081.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/4081/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/b98e3b982ffb7dc2348fca1a85daff8a7ec5ab15",
    "title": "Reduce memory allocations in C++ to PyList Conversions",
    "updated_at": "2023-05-15T18:39:50Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/4081",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/44199644?v=4",
        "events_url": "https://api.github.com/users/maxbachmann/events{/privacy}",
        "followers_url": "https://api.github.com/users/maxbachmann/followers",
        "following_url": "https://api.github.com/users/maxbachmann/following{/other_user}",
        "gists_url": "https://api.github.com/users/maxbachmann/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/maxbachmann",
        "id": 44199644,
        "login": "maxbachmann",
        "node_id": "MDQ6VXNlcjQ0MTk5NjQ0",
        "organizations_url": "https://api.github.com/users/maxbachmann/orgs",
        "received_events_url": "https://api.github.com/users/maxbachmann/received_events",
        "repos_url": "https://api.github.com/users/maxbachmann/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/maxbachmann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/maxbachmann/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/maxbachmann"
    }
}