{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3323/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3323/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3323"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3323"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3323/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3323"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/b6add1bc3b3a7651954566fec370fb9cf9e2aac6"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 970,
            "forks_count": 970,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 789,
            "open_issues_count": 789,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2020-01-22T09:45:20Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 56004,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 4839,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2020-01-22T12:16:05Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 4839,
            "watchers_count": 4839
        },
        "sha": "52c326626f88b2df7e86b10c63634603b4cbe38f",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "I'm kind of optimistic that this fixes some of https://github.com/cython/cython/issues/1159 and also preserves most of the optimizations made (so range is still translated into a simple for loop, and dict.values etc still works...). I've inspected the code by eye to check the optimizations - I'm not sure if they're tested for in the testsuite or not - so there may be some I've missed but they mostly happen fairly naturally with this approach.\r\n\r\nIt also works for comprehensions (which is a bit simpler, but important to me because I often like to use `locals().items()` when debugging, and `locals()` is now draw from the correct place).\r\n\r\nEssentially all I do is change\r\n```\r\n   [ x for x in something ]\r\n```\r\nto\r\n   ```\r\n   tmp = something\r\n   [ x for x in tmp ]\r\n```\r\nat an early stage in the pipeline. There's some added complications because temp variables don't like it when they are defined outside a closure but used inside (so I've added some code to add them into the `outer_scope` as `__pyx_input_0`).\r\n\r\nI'm pretty certain this isn't perfect, but I thought it was probably in a useful enough state to get feedback for anyway.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369265715"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369265715"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Not really a related change, but Py2.3 compatibility seemed redundant...",
            "commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "created_at": "2020-01-21T21:59:04Z",
            "diff_hunk": "@@ -1,14 +1,11 @@\n \n cimport cython\n \n-# Py2.3 doesn't have the set type, but Cython does :)",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369265715",
            "id": 369265715,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2NTcxNQ==",
            "original_commit_id": "38e76879556f1b55984574a574f5b41afe72395d",
            "original_position": 4,
            "path": "tests/run/setcomp.pyx",
            "position": 4,
            "pull_request_review_id": 346221223,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-01-22T09:45:19Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369265715",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369465954"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369465954"
                }
            },
            "author_association": "MEMBER",
            "body": "An additional overindentation here would make it clearer to spot that this line is still part of the condition and not the first statement in the if-block. (Same in other places)",
            "commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "created_at": "2020-01-22T10:01:50Z",
            "diff_hunk": "@@ -943,6 +944,11 @@ def mark_forloop_target(self, node):\n         is_special = False\n         sequence = node.iterator.sequence\n         target = node.target\n+        if (isinstance(sequence, UtilNodes.ComprehensionResultRefNode) and\n+            sequence.is_main_result):",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369465954",
            "id": 369465954,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ2NTk1NA==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 13,
            "path": "Cython/Compiler/FlowControl.py",
            "position": 13,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-01-22T10:56:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369465954",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369466803"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369466803"
                }
            },
            "author_association": "MEMBER",
            "body": "\"complex\". Three arguments don't seem \"complicated\" to me, at least.",
            "commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "created_at": "2020-01-22T10:03:41Z",
            "diff_hunk": "@@ -1315,6 +1317,64 @@ def visit_ExprNode(self, node):\n         # With statements are never inside expressions.\n         return node\n \n+class ComprehensionScopeTransform(CythonTransform, SkipDeclarations):\n+    \"\"\"\n+    Moves expressions out of list/set/etc comprehensions so they have the correct scope\n+\n+    Effectively\n+        cmp = [ a for a in some_expression ]\n+    is changed to\n+        tmp = some_expression\n+        cmp = [ a for a in tmp ]\n+\n+    (with some complications to keep optimizations (e.g. if \"some_expression\" is a range\n+    where possible)\n+    \"\"\"\n+    def visit_ComprehensionNode(self, node):\n+        itseq = node.loop.iterator.sequence\n+        # there's no value in substituting these very simple expressions\n+        # with a temp (but NameNode must be so that it's evaluated in\n+        # the right scope)\n+        if isinstance(itseq, ExprNodes.ConstNode):\n+            return node\n+        original_node = node\n+\n+        new_itseq = ComprehensionResultRefNode(itseq)\n+        node.loop.iterator.sequence = new_itseq\n+        node = ComprehensionEvalWithTempExprNode(new_itseq, node)\n+\n+        if (isinstance(itseq, ExprNodes.SimpleCallNode) and\n+            len(itseq.args) <= 3 # range with 3 arguments is the\n+                  # most complicated expression that may be optimizable",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369466803",
            "id": 369466803,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ2NjgwMw==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 43,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 43,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-01-22T10:56:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369466803",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369467622"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369467622"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah, nice. I would probably have forgotten about cases like this.",
            "commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "created_at": "2020-01-22T10:05:17Z",
            "diff_hunk": "@@ -1315,6 +1317,64 @@ def visit_ExprNode(self, node):\n         # With statements are never inside expressions.\n         return node\n \n+class ComprehensionScopeTransform(CythonTransform, SkipDeclarations):\n+    \"\"\"\n+    Moves expressions out of list/set/etc comprehensions so they have the correct scope\n+\n+    Effectively\n+        cmp = [ a for a in some_expression ]\n+    is changed to\n+        tmp = some_expression\n+        cmp = [ a for a in tmp ]\n+\n+    (with some complications to keep optimizations (e.g. if \"some_expression\" is a range\n+    where possible)\n+    \"\"\"\n+    def visit_ComprehensionNode(self, node):\n+        itseq = node.loop.iterator.sequence\n+        # there's no value in substituting these very simple expressions\n+        # with a temp (but NameNode must be so that it's evaluated in\n+        # the right scope)\n+        if isinstance(itseq, ExprNodes.ConstNode):\n+            return node\n+        original_node = node\n+\n+        new_itseq = ComprehensionResultRefNode(itseq)\n+        node.loop.iterator.sequence = new_itseq\n+        node = ComprehensionEvalWithTempExprNode(new_itseq, node)\n+\n+        if (isinstance(itseq, ExprNodes.SimpleCallNode) and\n+            len(itseq.args) <= 3 # range with 3 arguments is the\n+                  # most complicated expression that may be optimizable\n+            ):\n+            # to facilitate optimization also create a version that looks like:\n+            #     cmp = [ a for a in range(0, 10) ]\n+            # to:\n+            #     tmp0 = 0\n+            #     tmp1 = 10\n+            #     cmp = [ a for a in range(tmp0, tmp1) ]",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369467622",
            "id": 369467622,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ2NzYyMg==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 50,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 50,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-01-22T10:56:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369467622",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369471130"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369471130"
                }
            },
            "author_association": "MEMBER",
            "body": "Feels too complex for a `property`.",
            "commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "created_at": "2020-01-22T10:11:25Z",
            "diff_hunk": "@@ -2676,6 +2736,40 @@ def visit_ClassDefNode(self, node):\n         self.needs_closure = True\n         return node\n \n+class _FindComprehensionEvalWithTempExprNode(TreeVisitor):\n+    def __init__(self):\n+        super(_FindComprehensionEvalWithTempExprNode, self).__init__()\n+        self.found_above_lambdas = []\n+        self.lambdas = []\n+\n+    def visit_ComprehensionEvalWithTempExprNode(self, node):\n+        if node.lazy_temp not in self.found_above_lambdas:\n+            self.found_above_lambdas.append(node.lazy_temp)\n+        self._visitchildren(node, None)\n+\n+    def visit_LambdaNode(self, node):\n+        self.lambdas.append(node)\n+        return # don't go any deeper\n+\n+    def visit_Node(self, node):\n+        self._visitchildren(node, None) # necessary ?\n+\n+    @property\n+    def found(self):",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369471130",
            "id": 369471130,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3MTEzMA==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 99,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 99,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-01-22T10:56:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369471130",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369473245"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369473245"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, it does. Can we maybe call `create_class_from_scope()` *after* `visitchildren`? (Hmm, could be that the class is already needed further down in the tree.) Or, do more in the `MarkClosureVisitor`?\r\nRepeated calls to `tree_contains()` aren't entirely free of cost, and a single-pass traversal is always preferable.\r\n\r\nAlso, I don't understand what `found_above_lambdas` means here? In what way \"above\"? What it this class trying to achieve?",
            "commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "created_at": "2020-01-22T10:15:33Z",
            "diff_hunk": "@@ -2676,6 +2736,40 @@ def visit_ClassDefNode(self, node):\n         self.needs_closure = True\n         return node\n \n+class _FindComprehensionEvalWithTempExprNode(TreeVisitor):\n+    def __init__(self):\n+        super(_FindComprehensionEvalWithTempExprNode, self).__init__()\n+        self.found_above_lambdas = []\n+        self.lambdas = []\n+\n+    def visit_ComprehensionEvalWithTempExprNode(self, node):\n+        if node.lazy_temp not in self.found_above_lambdas:\n+            self.found_above_lambdas.append(node.lazy_temp)\n+        self._visitchildren(node, None)\n+\n+    def visit_LambdaNode(self, node):\n+        self.lambdas.append(node)\n+        return # don't go any deeper\n+\n+    def visit_Node(self, node):\n+        self._visitchildren(node, None) # necessary ?\n+\n+    @property\n+    def found(self):\n+        # this feels like duplicating the tracking done in\n+        # \"comp_input_variables\" but I can't find a better way of doing it",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369473245",
            "id": 369473245,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3MzI0NQ==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 101,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 101,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-01-22T11:02:47Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369473245",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369476299"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369476299"
                }
            },
            "author_association": "MEMBER",
            "body": "Just stick to 4-space indentation steps (i.e. 3 more spaces here).",
            "commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "created_at": "2020-01-22T10:21:41Z",
            "diff_hunk": "@@ -2734,9 +2832,10 @@ def create_class_from_scope(self, node, target_module_scope, inner_node=None):\n \n         if node.is_generator:\n             pass\n-        elif not in_closure and not from_closure:\n+        elif (not in_closure and not from_closure and\n+              not inputs_in_closure and not inputs_from_closure):",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369476299",
            "id": 369476299,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3NjI5OQ==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 150,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 150,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-01-22T10:56:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369476299",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369479550"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369479550"
                }
            },
            "author_association": "MEMBER",
            "body": "Are these really so special that they merit their own declaration loop? Can't they be integrated with the normal (temp) variable handling?\r\n\r\nWhat you could try is to use a `TempNode` for the references. I've never seen those being used across closure boundaries, so there might be obstacles (which could genuinely be worth removing), but they seem an appropriate mechanism for handling this kind of temporary expression extraction.",
            "commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "created_at": "2020-01-22T10:28:11Z",
            "diff_hunk": "@@ -2783,6 +2882,23 @@ def create_class_from_scope(self, node, target_module_scope, inner_node=None):\n             if entry.is_declared_generic:\n                 closure_entry.is_declared_generic = 1\n         node.needs_closure = True\n+\n+        ninputs = 0\n+        for var in inputs_in_closure:",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369479550",
            "id": 369479550,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3OTU1MA==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 172,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 172,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-01-22T10:56:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369479550",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369481391"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369481391"
                }
            },
            "author_association": "MEMBER",
            "body": "It should *always* be possible to import this globally.",
            "commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "created_at": "2020-01-22T10:31:33Z",
            "diff_hunk": "@@ -291,6 +291,42 @@ def generate_evaluation_code(self, code):\n         self.subexpression.generate_evaluation_code(code)\n         self.teardown_temp_expr(code)\n \n+# distinguish the comprehension classes just so they can be\n+# identified separately\n+class ComprehensionEvalWithTempExprNode(EvalWithTempExprNode):\n+    def setup_temp_expr(self, code):\n+        from . import Naming",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369481391",
            "id": 369481391,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4MTM5MQ==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 8,
            "path": "Cython/Compiler/UtilNodes.py",
            "position": 8,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-01-22T10:56:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369481391",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369482533"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369482533"
                }
            },
            "author_association": "MEMBER",
            "body": "What does this mean? What is the \"first\", and why is it special?",
            "commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "created_at": "2020-01-22T10:33:57Z",
            "diff_hunk": "@@ -291,6 +291,42 @@ def generate_evaluation_code(self, code):\n         self.subexpression.generate_evaluation_code(code)\n         self.teardown_temp_expr(code)\n \n+# distinguish the comprehension classes just so they can be\n+# identified separately\n+class ComprehensionEvalWithTempExprNode(EvalWithTempExprNode):\n+    def setup_temp_expr(self, code):\n+        from . import Naming\n+        if not self.lazy_temp.crosses_closure:\n+            return super(ComprehensionEvalWithTempExprNode, self).setup_temp_expr(code)\n+\n+        self.temp_expression.generate_evaluation_code(code)\n+        self.temp_type = self.temp_expression.type\n+        if self.temp_type.is_array:\n+            self.temp_type = c_ptr_type(self.temp_type.base_type)\n+\n+        self._result_in_temp = False # unlike parent, never use this\n+\n+        self.temp_expression.make_owned_reference(code)\n+        self.temp = \"%s->%s\" % (Naming.cur_scope_cname, self.lazy_temp.crosses_closure)\n+        if self.temp_type.is_pyobject:\n+            code.put_xgotref(self.temp)\n+            code.put_giveref(self.temp_expression.result())\n+            code.put_xdecref_set(self.temp, self.temp_expression.result())\n+            code.put_incref(self.temp, self.temp_type) # FIXME giveref maybe instead?\n+        else:\n+            code.putln(\"%s = %s;\" % (self.temp, self.temp_expression.result()))\n+        self.temp_expression.generate_disposal_code(code)\n+        self.temp_expression.free_temps(code)\n+\n+    def teardown_temp_expr(self, code):\n+        if not self.lazy_temp.crosses_closure:\n+            return super(ComprehensionEvalWithTempExprNode, self).teardown_temp_expr(code)\n+        # otherwise nothing to do... it's handled by the closure class\n+\n+class ComprehensionResultRefNode(ResultRefNode):\n+    is_main_result = False # only true for first\n+     # ComprehensionResultRefNode created for an comprehension/genexpr",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369482533",
            "id": 369482533,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4MjUzMw==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 38,
            "path": "Cython/Compiler/UtilNodes.py",
            "position": 38,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-01-22T10:56:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369482533",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369483406"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369483406"
                }
            },
            "author_association": "MEMBER",
            "body": "Please always keep two spaces before the `#` to visually separate comments from the code they refer to.\r\nhttps://www.python.org/dev/peps/pep-0008/#inline-comments\r\nAlso, a multi-line inline comment seems self-contradicting. :)",
            "commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "created_at": "2020-01-22T10:35:52Z",
            "diff_hunk": "@@ -1315,6 +1317,64 @@ def visit_ExprNode(self, node):\n         # With statements are never inside expressions.\n         return node\n \n+class ComprehensionScopeTransform(CythonTransform, SkipDeclarations):\n+    \"\"\"\n+    Moves expressions out of list/set/etc comprehensions so they have the correct scope\n+\n+    Effectively\n+        cmp = [ a for a in some_expression ]\n+    is changed to\n+        tmp = some_expression\n+        cmp = [ a for a in tmp ]\n+\n+    (with some complications to keep optimizations (e.g. if \"some_expression\" is a range\n+    where possible)\n+    \"\"\"\n+    def visit_ComprehensionNode(self, node):\n+        itseq = node.loop.iterator.sequence\n+        # there's no value in substituting these very simple expressions\n+        # with a temp (but NameNode must be so that it's evaluated in\n+        # the right scope)\n+        if isinstance(itseq, ExprNodes.ConstNode):\n+            return node\n+        original_node = node\n+\n+        new_itseq = ComprehensionResultRefNode(itseq)\n+        node.loop.iterator.sequence = new_itseq\n+        node = ComprehensionEvalWithTempExprNode(new_itseq, node)\n+\n+        if (isinstance(itseq, ExprNodes.SimpleCallNode) and\n+            len(itseq.args) <= 3 # range with 3 arguments is the",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369483406",
            "id": 369483406,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4MzQwNg==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 42,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 42,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-01-22T10:56:36Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369483406",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369487452"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369487452"
                }
            },
            "author_association": "MEMBER",
            "body": "This whole method looks like a collection of things that other nodes and transformations are already taking care of. It seems dangerous (in terms of future maintenance) to replicate them here.\r\nThat (again) suggests to me that these input values should be much less special overall.",
            "commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "created_at": "2020-01-22T10:44:28Z",
            "diff_hunk": "@@ -291,6 +291,42 @@ def generate_evaluation_code(self, code):\n         self.subexpression.generate_evaluation_code(code)\n         self.teardown_temp_expr(code)\n \n+# distinguish the comprehension classes just so they can be\n+# identified separately\n+class ComprehensionEvalWithTempExprNode(EvalWithTempExprNode):\n+    def setup_temp_expr(self, code):",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369487452",
            "id": 369487452,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4NzQ1Mg==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 7,
            "path": "Cython/Compiler/UtilNodes.py",
            "position": 7,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-01-22T10:56:36Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369487452",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369488803"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369488803"
                }
            },
            "author_association": "MEMBER",
            "body": "Why have this twice? It seems enough to include it in the Python compatibility test file.",
            "commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "created_at": "2020-01-22T10:47:20Z",
            "diff_hunk": "@@ -561,3 +561,19 @@ def test_generator_kwds3(**kwargs):\n     a\n     \"\"\"\n     yield from kwargs.keys()\n+\n+def test_generator_scope():",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369488803",
            "id": 369488803,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4ODgwMw==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 5,
            "path": "tests/run/generators.pyx",
            "position": 5,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-01-22T10:56:36Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369488803",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369489980"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369489980"
                }
            },
            "author_association": "MEMBER",
            "body": "This test seems better suited for `run/locals.pyx` than the general set comprehension test suite.",
            "commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "created_at": "2020-01-22T10:49:48Z",
            "diff_hunk": "@@ -62,3 +59,12 @@ def sorted(it):\n     l = list(it)\n     l.sort()\n     return l\n+\n+def set_comp_scope():\n+    \"\"\"\n+    locals should be evaluated in the outer scope",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369489980",
            "id": 369489980,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4OTk4MA==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 32,
            "path": "tests/run/setcomp.pyx",
            "position": 32,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-01-22T10:56:36Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369489980",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369500142"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369500142"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Only because the generators.pyx and generators_py.py already look to be duplicates of each other so I was copying what was already there. I agree there's no real benefit.",
            "commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "created_at": "2020-01-22T11:13:01Z",
            "diff_hunk": "@@ -561,3 +561,19 @@ def test_generator_kwds3(**kwargs):\n     a\n     \"\"\"\n     yield from kwargs.keys()\n+\n+def test_generator_scope():",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369500142",
            "id": 369500142,
            "in_reply_to_id": 369488803,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUwMDE0Mg==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 5,
            "path": "tests/run/generators.pyx",
            "position": 5,
            "pull_request_review_id": 346509822,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-01-22T11:13:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369500142",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369503758"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369503758"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The main issue I had with the normal temp handling was that temps are usually put in `closure_scope->__pyx_tx` rather than `closure_scope->outer_scope->__pyx_tx`, and we don't have access to `closure_scope` in the function doing the setup.\r\n\r\nHowever I agree with your dislike of special cases, so I'll have another think about this when I come back to it.",
            "commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "created_at": "2020-01-22T11:21:39Z",
            "diff_hunk": "@@ -2783,6 +2882,23 @@ def create_class_from_scope(self, node, target_module_scope, inner_node=None):\n             if entry.is_declared_generic:\n                 closure_entry.is_declared_generic = 1\n         node.needs_closure = True\n+\n+        ninputs = 0\n+        for var in inputs_in_closure:",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369503758",
            "id": 369503758,
            "in_reply_to_id": 369479550,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUwMzc1OA==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 172,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 172,
            "pull_request_review_id": 346514356,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-01-22T11:21:39Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369503758",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369506604"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369506604"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This was definitely a bit of code I'm not really happy with. I'm trying to find `Comp...ResultRef`s that are used both inside and outside of a generator expression (using the base `LambdaNode` to find it). So it's first searching for all the `Comp...ResultRef` between the current node and whatever generator expressions exist, then looking to see which ones also appear in the generator expression.\r\n\r\nIt does seem an inefficient way of doing it so I'll definitely try to replace this approach.",
            "commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "created_at": "2020-01-22T11:28:59Z",
            "diff_hunk": "@@ -2676,6 +2736,40 @@ def visit_ClassDefNode(self, node):\n         self.needs_closure = True\n         return node\n \n+class _FindComprehensionEvalWithTempExprNode(TreeVisitor):\n+    def __init__(self):\n+        super(_FindComprehensionEvalWithTempExprNode, self).__init__()\n+        self.found_above_lambdas = []\n+        self.lambdas = []\n+\n+    def visit_ComprehensionEvalWithTempExprNode(self, node):\n+        if node.lazy_temp not in self.found_above_lambdas:\n+            self.found_above_lambdas.append(node.lazy_temp)\n+        self._visitchildren(node, None)\n+\n+    def visit_LambdaNode(self, node):\n+        self.lambdas.append(node)\n+        return # don't go any deeper\n+\n+    def visit_Node(self, node):\n+        self._visitchildren(node, None) # necessary ?\n+\n+    @property\n+    def found(self):\n+        # this feels like duplicating the tracking done in\n+        # \"comp_input_variables\" but I can't find a better way of doing it",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369506604",
            "id": 369506604,
            "in_reply_to_id": 369473245,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUwNjYwNA==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 101,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 101,
            "pull_request_review_id": 346518131,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-01-22T11:29:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369506604",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369547631"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369547631"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It's only worth creating these additional substitutions for the cases that are optimized. The original node is replaced and so the inputs to it need evaluating in the correct scope/at the correct time.\r\n\r\nThat's the various `dict`/`set` iterations (most complicated is: `expr.single_arg_call()`), C arrays (not a call anyway), `enumerate` (`enumerate` is at most 2 args, although `start` might be a keyword argument so I should go back and check I haven't broken anything there), `reversed` (one argument), or `range` (1-3 arguments).\r\n\r\nSince nothing more \"complicated\" can currently be substituted during the optimization that's why it stops there. Maybe it should be removed though as being a pointless check because it doesn't do any harm (maybe a tiny bit of speed?) to process more complicated calls.",
            "commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "created_at": "2020-01-22T13:06:53Z",
            "diff_hunk": "@@ -1315,6 +1317,64 @@ def visit_ExprNode(self, node):\n         # With statements are never inside expressions.\n         return node\n \n+class ComprehensionScopeTransform(CythonTransform, SkipDeclarations):\n+    \"\"\"\n+    Moves expressions out of list/set/etc comprehensions so they have the correct scope\n+\n+    Effectively\n+        cmp = [ a for a in some_expression ]\n+    is changed to\n+        tmp = some_expression\n+        cmp = [ a for a in tmp ]\n+\n+    (with some complications to keep optimizations (e.g. if \"some_expression\" is a range\n+    where possible)\n+    \"\"\"\n+    def visit_ComprehensionNode(self, node):\n+        itseq = node.loop.iterator.sequence\n+        # there's no value in substituting these very simple expressions\n+        # with a temp (but NameNode must be so that it's evaluated in\n+        # the right scope)\n+        if isinstance(itseq, ExprNodes.ConstNode):\n+            return node\n+        original_node = node\n+\n+        new_itseq = ComprehensionResultRefNode(itseq)\n+        node.loop.iterator.sequence = new_itseq\n+        node = ComprehensionEvalWithTempExprNode(new_itseq, node)\n+\n+        if (isinstance(itseq, ExprNodes.SimpleCallNode) and\n+            len(itseq.args) <= 3 # range with 3 arguments is the\n+                  # most complicated expression that may be optimizable",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369547631",
            "id": 369547631,
            "in_reply_to_id": 369466803,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0NzYzMQ==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 43,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 43,
            "pull_request_review_id": 346571250,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-01-22T13:07:32Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369547631",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3323/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/eea02d6b8cb59b0c7b77cb98bf696517472dcaec/comments",
            "commit": {
                "author": {
                    "date": "2020-01-17T17:38:08Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-18T17:10:12Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed handling of scope for Comprehensions\n\n(but not for generator expressions).\n\nDid this by changing\n   [ x for x in something ]\nto\n   tmp = something\n   [ x for x in tmp ]\n\nI also believe all the optimizations still work",
                "tree": {
                    "sha": "3965db06361247769d73a9bfcfbd398f3fa968bc",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3965db06361247769d73a9bfcfbd398f3fa968bc"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/eea02d6b8cb59b0c7b77cb98bf696517472dcaec",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/eea02d6b8cb59b0c7b77cb98bf696517472dcaec",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZWVhMDJkNmI4Y2I1OWIwYzdiNzdjYjk4YmY2OTY1MTc0NzJkY2FlYw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9a53c8ac9a9438822dd1659fee4ae478953ce38a",
                    "sha": "9a53c8ac9a9438822dd1659fee4ae478953ce38a",
                    "url": "https://api.github.com/repos/cython/cython/commits/9a53c8ac9a9438822dd1659fee4ae478953ce38a"
                }
            ],
            "sha": "eea02d6b8cb59b0c7b77cb98bf696517472dcaec",
            "url": "https://api.github.com/repos/cython/cython/commits/eea02d6b8cb59b0c7b77cb98bf696517472dcaec"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6de08874ee940bdbc9dd8892347c364f12bf6f80/comments",
            "commit": {
                "author": {
                    "date": "2020-01-21T10:26:39Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-21T10:26:39Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Skipped very simple cases",
                "tree": {
                    "sha": "0be154d20ea38f11f7c43f889e221a8340420287",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0be154d20ea38f11f7c43f889e221a8340420287"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6de08874ee940bdbc9dd8892347c364f12bf6f80",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/6de08874ee940bdbc9dd8892347c364f12bf6f80",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NmRlMDg4NzRlZTk0MGJkYmM5ZGQ4ODkyMzQ3YzM2NGYxMmJmNmY4MA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/eea02d6b8cb59b0c7b77cb98bf696517472dcaec",
                    "sha": "eea02d6b8cb59b0c7b77cb98bf696517472dcaec",
                    "url": "https://api.github.com/repos/cython/cython/commits/eea02d6b8cb59b0c7b77cb98bf696517472dcaec"
                }
            ],
            "sha": "6de08874ee940bdbc9dd8892347c364f12bf6f80",
            "url": "https://api.github.com/repos/cython/cython/commits/6de08874ee940bdbc9dd8892347c364f12bf6f80"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5249b2d91f0ba77cdf9d901ffc65860df4c3f8c1/comments",
            "commit": {
                "author": {
                    "date": "2020-01-21T17:23:35Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-21T17:31:41Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "A working version with generator expressions?\n\nA bit more care has to be taken than with comprehensions since\ntemp variables can't span into a generator. Therefore, we save\nthis in the outer function scope as \"__pyx_input_n\"",
                "tree": {
                    "sha": "400f9dbba523d58036b68c35ae20d25d4a700452",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/400f9dbba523d58036b68c35ae20d25d4a700452"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5249b2d91f0ba77cdf9d901ffc65860df4c3f8c1",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/5249b2d91f0ba77cdf9d901ffc65860df4c3f8c1",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NTI0OWIyZDkxZjBiYTc3Y2RmOWQ5MDFmZmM2NTg2MGRmNGMzZjhjMQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6de08874ee940bdbc9dd8892347c364f12bf6f80",
                    "sha": "6de08874ee940bdbc9dd8892347c364f12bf6f80",
                    "url": "https://api.github.com/repos/cython/cython/commits/6de08874ee940bdbc9dd8892347c364f12bf6f80"
                }
            ],
            "sha": "5249b2d91f0ba77cdf9d901ffc65860df4c3f8c1",
            "url": "https://api.github.com/repos/cython/cython/commits/5249b2d91f0ba77cdf9d901ffc65860df4c3f8c1"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/38e76879556f1b55984574a574f5b41afe72395d/comments",
            "commit": {
                "author": {
                    "date": "2020-01-21T21:47:29Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-21T21:47:29Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Passing runtests.py generator now\n\nAlso added a very basic doctest for the scope",
                "tree": {
                    "sha": "1e21af356fb6a14759f1ee40395e4f82e5585855",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1e21af356fb6a14759f1ee40395e4f82e5585855"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/38e76879556f1b55984574a574f5b41afe72395d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/38e76879556f1b55984574a574f5b41afe72395d",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MzhlNzY4Nzk1NTZmMWI1NTk4NDU3NGE1NzRmNWI0MWFmZTcyMzk1ZA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/5249b2d91f0ba77cdf9d901ffc65860df4c3f8c1",
                    "sha": "5249b2d91f0ba77cdf9d901ffc65860df4c3f8c1",
                    "url": "https://api.github.com/repos/cython/cython/commits/5249b2d91f0ba77cdf9d901ffc65860df4c3f8c1"
                }
            ],
            "sha": "38e76879556f1b55984574a574f5b41afe72395d",
            "url": "https://api.github.com/repos/cython/cython/commits/38e76879556f1b55984574a574f5b41afe72395d"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b6add1bc3b3a7651954566fec370fb9cf9e2aac6/comments",
            "commit": {
                "author": {
                    "date": "2020-01-22T09:42:53Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-22T09:42:53Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Partly fixed (a for a in a) case\n\nwhich also seems to fixes a bunch of other test failures.\nHowever, genexpr_iterable_lookup_t600 doesn't yet pass...\nsome tests fail, and some refnanny errors",
                "tree": {
                    "sha": "9b868d800da92667809e6ee49fd7b2c6b9ab3954",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/9b868d800da92667809e6ee49fd7b2c6b9ab3954"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YjZhZGQxYmMzYjNhNzY1MTk1NDU2NmZlYzM3MGZiOWNmOWUyYWFjNg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/38e76879556f1b55984574a574f5b41afe72395d",
                    "sha": "38e76879556f1b55984574a574f5b41afe72395d",
                    "url": "https://api.github.com/repos/cython/cython/commits/38e76879556f1b55984574a574f5b41afe72395d"
                }
            ],
            "sha": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "url": "https://api.github.com/repos/cython/cython/commits/b6add1bc3b3a7651954566fec370fb9cf9e2aac6"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3323/commits",
    "created_at": "2020-01-21T21:56:51Z",
    "diff_url": "https://github.com/cython/cython/pull/3323.diff",
    "head": {
        "label": "da-woods:genexpr_scope3",
        "ref": "genexpr_scope3",
        "repo": {
            "archive_url": "https://api.github.com/repos/da-woods/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/da-woods/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/da-woods/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/da-woods/cython/branches{/branch}",
            "clone_url": "https://github.com/da-woods/cython.git",
            "collaborators_url": "https://api.github.com/repos/da-woods/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/da-woods/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/da-woods/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/da-woods/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/da-woods/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/da-woods/cython/contributors",
            "created_at": "2015-05-09T08:55:00Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/da-woods/cython/deployments",
            "description": "A Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/da-woods/cython/downloads",
            "events_url": "https://api.github.com/repos/da-woods/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/da-woods/cython/forks",
            "full_name": "da-woods/cython",
            "git_commits_url": "https://api.github.com/repos/da-woods/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/da-woods/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/da-woods/cython/git/tags{/sha}",
            "git_url": "git://github.com/da-woods/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/da-woods/cython/hooks",
            "html_url": "https://github.com/da-woods/cython",
            "id": 35321967,
            "issue_comment_url": "https://api.github.com/repos/da-woods/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/da-woods/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/da-woods/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/da-woods/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/da-woods/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/da-woods/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/da-woods/cython/merges",
            "milestones_url": "https://api.github.com/repos/da-woods/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNTMyMTk2Nw==",
            "notifications_url": "https://api.github.com/repos/da-woods/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/da-woods/cython/pulls{/number}",
            "pushed_at": "2020-01-22T09:45:17Z",
            "releases_url": "https://api.github.com/repos/da-woods/cython/releases{/id}",
            "size": 55927,
            "ssh_url": "git@github.com:da-woods/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/da-woods/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/da-woods/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/da-woods/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/da-woods/cython/subscription",
            "svn_url": "https://github.com/da-woods/cython",
            "tags_url": "https://api.github.com/repos/da-woods/cython/tags",
            "teams_url": "https://api.github.com/repos/da-woods/cython/teams",
            "trees_url": "https://api.github.com/repos/da-woods/cython/git/trees{/sha}",
            "updated_at": "2019-10-24T09:38:07Z",
            "url": "https://api.github.com/repos/da-woods/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
        "user": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
            "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
            "followers_url": "https://api.github.com/users/da-woods/followers",
            "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
            "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/da-woods",
            "id": 10536947,
            "login": "da-woods",
            "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
            "organizations_url": "https://api.github.com/users/da-woods/orgs",
            "received_events_url": "https://api.github.com/users/da-woods/received_events",
            "repos_url": "https://api.github.com/users/da-woods/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/da-woods"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3323",
    "id": 365537067,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3323",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "dd9c0c511aba01a5df8594915c62d8302845bdf1",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY1NTM3MDY3",
    "number": 3323,
    "patch_url": "https://github.com/cython/cython/pull/3323.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3323/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
    "title": "[WIP] Generator expression and comprehension scope",
    "updated_at": "2020-01-22T13:07:32Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3323",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}