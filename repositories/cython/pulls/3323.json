{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3323/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3323/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3323"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3323"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3323/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3323"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/43bab6366931005be5620be5f1e8ae955c149af9"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 995,
            "forks_count": 995,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 823,
            "open_issues_count": 823,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2020-03-25T14:37:19Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 56731,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 4995,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2020-03-25T14:07:19Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 4995,
            "watchers_count": 4995
        },
        "sha": "48dc1f0169f81ed20c6b374941c2498ec94e57d0",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "I'm kind of optimistic that this fixes some of https://github.com/cython/cython/issues/1159 and also preserves most of the optimizations made (so range is still translated into a simple for loop, and dict.values etc still works...). I've inspected the code by eye to check the optimizations - I'm not sure if they're tested for in the testsuite or not - so there may be some I've missed but they mostly happen fairly naturally with this approach.\r\n\r\nIt also works for comprehensions (which is a bit simpler, but important to me because I often like to use `locals().items()` when debugging, and `locals()` is now draw from the correct place).\r\n\r\nEssentially all I do is change\r\n```\r\n   [ x for x in something ]\r\n```\r\nto\r\n   ```\r\n   tmp = something\r\n   [ x for x in tmp ]\r\n```\r\nat an early stage in the pipeline. There's some added complications because temp variables don't like it when they are defined outside a closure but used inside (so I've added some code to add them into the `outer_scope` as `__pyx_input_0`).\r\n\r\nI'm pretty certain this isn't perfect, but I thought it was probably in a useful enough state to get feedback for anyway.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369265715"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369265715"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Not really a related change, but Py2.3 compatibility seemed redundant...",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-21T21:59:04Z",
            "diff_hunk": "@@ -1,14 +1,11 @@\n \n cimport cython\n \n-# Py2.3 doesn't have the set type, but Cython does :)",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369265715",
            "id": 369265715,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2NTcxNQ==",
            "original_commit_id": "38e76879556f1b55984574a574f5b41afe72395d",
            "original_position": 4,
            "path": "tests/run/setcomp.pyx",
            "position": 4,
            "pull_request_review_id": 346221223,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369265715",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369465954"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369465954"
                }
            },
            "author_association": "MEMBER",
            "body": "An additional overindentation here would make it clearer to spot that this line is still part of the condition and not the first statement in the if-block. (Same in other places)",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-22T10:01:50Z",
            "diff_hunk": "@@ -943,6 +944,11 @@ def mark_forloop_target(self, node):\n         is_special = False\n         sequence = node.iterator.sequence\n         target = node.target\n+        if (isinstance(sequence, UtilNodes.ComprehensionResultRefNode) and\n+            sequence.is_main_result):",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369465954",
            "id": 369465954,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ2NTk1NA==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 13,
            "path": "Cython/Compiler/FlowControl.py",
            "position": null,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369465954",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369466803"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369466803"
                }
            },
            "author_association": "MEMBER",
            "body": "\"complex\". Three arguments don't seem \"complicated\" to me, at least.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-22T10:03:41Z",
            "diff_hunk": "@@ -1315,6 +1317,64 @@ def visit_ExprNode(self, node):\n         # With statements are never inside expressions.\n         return node\n \n+class ComprehensionScopeTransform(CythonTransform, SkipDeclarations):\n+    \"\"\"\n+    Moves expressions out of list/set/etc comprehensions so they have the correct scope\n+\n+    Effectively\n+        cmp = [ a for a in some_expression ]\n+    is changed to\n+        tmp = some_expression\n+        cmp = [ a for a in tmp ]\n+\n+    (with some complications to keep optimizations (e.g. if \"some_expression\" is a range\n+    where possible)\n+    \"\"\"\n+    def visit_ComprehensionNode(self, node):\n+        itseq = node.loop.iterator.sequence\n+        # there's no value in substituting these very simple expressions\n+        # with a temp (but NameNode must be so that it's evaluated in\n+        # the right scope)\n+        if isinstance(itseq, ExprNodes.ConstNode):\n+            return node\n+        original_node = node\n+\n+        new_itseq = ComprehensionResultRefNode(itseq)\n+        node.loop.iterator.sequence = new_itseq\n+        node = ComprehensionEvalWithTempExprNode(new_itseq, node)\n+\n+        if (isinstance(itseq, ExprNodes.SimpleCallNode) and\n+            len(itseq.args) <= 3 # range with 3 arguments is the\n+                  # most complicated expression that may be optimizable",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369466803",
            "id": 369466803,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ2NjgwMw==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 43,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369466803",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369467622"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369467622"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah, nice. I would probably have forgotten about cases like this.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-22T10:05:17Z",
            "diff_hunk": "@@ -1315,6 +1317,64 @@ def visit_ExprNode(self, node):\n         # With statements are never inside expressions.\n         return node\n \n+class ComprehensionScopeTransform(CythonTransform, SkipDeclarations):\n+    \"\"\"\n+    Moves expressions out of list/set/etc comprehensions so they have the correct scope\n+\n+    Effectively\n+        cmp = [ a for a in some_expression ]\n+    is changed to\n+        tmp = some_expression\n+        cmp = [ a for a in tmp ]\n+\n+    (with some complications to keep optimizations (e.g. if \"some_expression\" is a range\n+    where possible)\n+    \"\"\"\n+    def visit_ComprehensionNode(self, node):\n+        itseq = node.loop.iterator.sequence\n+        # there's no value in substituting these very simple expressions\n+        # with a temp (but NameNode must be so that it's evaluated in\n+        # the right scope)\n+        if isinstance(itseq, ExprNodes.ConstNode):\n+            return node\n+        original_node = node\n+\n+        new_itseq = ComprehensionResultRefNode(itseq)\n+        node.loop.iterator.sequence = new_itseq\n+        node = ComprehensionEvalWithTempExprNode(new_itseq, node)\n+\n+        if (isinstance(itseq, ExprNodes.SimpleCallNode) and\n+            len(itseq.args) <= 3 # range with 3 arguments is the\n+                  # most complicated expression that may be optimizable\n+            ):\n+            # to facilitate optimization also create a version that looks like:\n+            #     cmp = [ a for a in range(0, 10) ]\n+            # to:\n+            #     tmp0 = 0\n+            #     tmp1 = 10\n+            #     cmp = [ a for a in range(tmp0, tmp1) ]",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369467622",
            "id": 369467622,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ2NzYyMg==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 50,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 94,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369467622",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369471130"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369471130"
                }
            },
            "author_association": "MEMBER",
            "body": "Feels too complex for a `property`.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-22T10:11:25Z",
            "diff_hunk": "@@ -2676,6 +2736,40 @@ def visit_ClassDefNode(self, node):\n         self.needs_closure = True\n         return node\n \n+class _FindComprehensionEvalWithTempExprNode(TreeVisitor):\n+    def __init__(self):\n+        super(_FindComprehensionEvalWithTempExprNode, self).__init__()\n+        self.found_above_lambdas = []\n+        self.lambdas = []\n+\n+    def visit_ComprehensionEvalWithTempExprNode(self, node):\n+        if node.lazy_temp not in self.found_above_lambdas:\n+            self.found_above_lambdas.append(node.lazy_temp)\n+        self._visitchildren(node, None)\n+\n+    def visit_LambdaNode(self, node):\n+        self.lambdas.append(node)\n+        return # don't go any deeper\n+\n+    def visit_Node(self, node):\n+        self._visitchildren(node, None) # necessary ?\n+\n+    @property\n+    def found(self):",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369471130",
            "id": 369471130,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3MTEzMA==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 99,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369471130",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369473245"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369473245"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, it does. Can we maybe call `create_class_from_scope()` *after* `visitchildren`? (Hmm, could be that the class is already needed further down in the tree.) Or, do more in the `MarkClosureVisitor`?\r\nRepeated calls to `tree_contains()` aren't entirely free of cost, and a single-pass traversal is always preferable.\r\n\r\nAlso, I don't understand what `found_above_lambdas` means here? In what way \"above\"? What it this class trying to achieve?",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-22T10:15:33Z",
            "diff_hunk": "@@ -2676,6 +2736,40 @@ def visit_ClassDefNode(self, node):\n         self.needs_closure = True\n         return node\n \n+class _FindComprehensionEvalWithTempExprNode(TreeVisitor):\n+    def __init__(self):\n+        super(_FindComprehensionEvalWithTempExprNode, self).__init__()\n+        self.found_above_lambdas = []\n+        self.lambdas = []\n+\n+    def visit_ComprehensionEvalWithTempExprNode(self, node):\n+        if node.lazy_temp not in self.found_above_lambdas:\n+            self.found_above_lambdas.append(node.lazy_temp)\n+        self._visitchildren(node, None)\n+\n+    def visit_LambdaNode(self, node):\n+        self.lambdas.append(node)\n+        return # don't go any deeper\n+\n+    def visit_Node(self, node):\n+        self._visitchildren(node, None) # necessary ?\n+\n+    @property\n+    def found(self):\n+        # this feels like duplicating the tracking done in\n+        # \"comp_input_variables\" but I can't find a better way of doing it",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369473245",
            "id": 369473245,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3MzI0NQ==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 101,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369473245",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369476299"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369476299"
                }
            },
            "author_association": "MEMBER",
            "body": "Just stick to 4-space indentation steps (i.e. 3 more spaces here).",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-22T10:21:41Z",
            "diff_hunk": "@@ -2734,9 +2832,10 @@ def create_class_from_scope(self, node, target_module_scope, inner_node=None):\n \n         if node.is_generator:\n             pass\n-        elif not in_closure and not from_closure:\n+        elif (not in_closure and not from_closure and\n+              not inputs_in_closure and not inputs_from_closure):",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369476299",
            "id": 369476299,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3NjI5OQ==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 150,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369476299",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369479550"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369479550"
                }
            },
            "author_association": "MEMBER",
            "body": "Are these really so special that they merit their own declaration loop? Can't they be integrated with the normal (temp) variable handling?\r\n\r\nWhat you could try is to use a `TempNode` for the references. I've never seen those being used across closure boundaries, so there might be obstacles (which could genuinely be worth removing), but they seem an appropriate mechanism for handling this kind of temporary expression extraction.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-22T10:28:11Z",
            "diff_hunk": "@@ -2783,6 +2882,23 @@ def create_class_from_scope(self, node, target_module_scope, inner_node=None):\n             if entry.is_declared_generic:\n                 closure_entry.is_declared_generic = 1\n         node.needs_closure = True\n+\n+        ninputs = 0\n+        for var in inputs_in_closure:",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369479550",
            "id": 369479550,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3OTU1MA==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 172,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369479550",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369481391"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369481391"
                }
            },
            "author_association": "MEMBER",
            "body": "It should *always* be possible to import this globally.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-22T10:31:33Z",
            "diff_hunk": "@@ -291,6 +291,42 @@ def generate_evaluation_code(self, code):\n         self.subexpression.generate_evaluation_code(code)\n         self.teardown_temp_expr(code)\n \n+# distinguish the comprehension classes just so they can be\n+# identified separately\n+class ComprehensionEvalWithTempExprNode(EvalWithTempExprNode):\n+    def setup_temp_expr(self, code):\n+        from . import Naming",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369481391",
            "id": 369481391,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4MTM5MQ==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 8,
            "path": "Cython/Compiler/UtilNodes.py",
            "position": null,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369481391",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369482533"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369482533"
                }
            },
            "author_association": "MEMBER",
            "body": "What does this mean? What is the \"first\", and why is it special?",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-22T10:33:57Z",
            "diff_hunk": "@@ -291,6 +291,42 @@ def generate_evaluation_code(self, code):\n         self.subexpression.generate_evaluation_code(code)\n         self.teardown_temp_expr(code)\n \n+# distinguish the comprehension classes just so they can be\n+# identified separately\n+class ComprehensionEvalWithTempExprNode(EvalWithTempExprNode):\n+    def setup_temp_expr(self, code):\n+        from . import Naming\n+        if not self.lazy_temp.crosses_closure:\n+            return super(ComprehensionEvalWithTempExprNode, self).setup_temp_expr(code)\n+\n+        self.temp_expression.generate_evaluation_code(code)\n+        self.temp_type = self.temp_expression.type\n+        if self.temp_type.is_array:\n+            self.temp_type = c_ptr_type(self.temp_type.base_type)\n+\n+        self._result_in_temp = False # unlike parent, never use this\n+\n+        self.temp_expression.make_owned_reference(code)\n+        self.temp = \"%s->%s\" % (Naming.cur_scope_cname, self.lazy_temp.crosses_closure)\n+        if self.temp_type.is_pyobject:\n+            code.put_xgotref(self.temp)\n+            code.put_giveref(self.temp_expression.result())\n+            code.put_xdecref_set(self.temp, self.temp_expression.result())\n+            code.put_incref(self.temp, self.temp_type) # FIXME giveref maybe instead?\n+        else:\n+            code.putln(\"%s = %s;\" % (self.temp, self.temp_expression.result()))\n+        self.temp_expression.generate_disposal_code(code)\n+        self.temp_expression.free_temps(code)\n+\n+    def teardown_temp_expr(self, code):\n+        if not self.lazy_temp.crosses_closure:\n+            return super(ComprehensionEvalWithTempExprNode, self).teardown_temp_expr(code)\n+        # otherwise nothing to do... it's handled by the closure class\n+\n+class ComprehensionResultRefNode(ResultRefNode):\n+    is_main_result = False # only true for first\n+     # ComprehensionResultRefNode created for an comprehension/genexpr",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369482533",
            "id": 369482533,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4MjUzMw==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 38,
            "path": "Cython/Compiler/UtilNodes.py",
            "position": null,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369482533",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369483406"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369483406"
                }
            },
            "author_association": "MEMBER",
            "body": "Please always keep two spaces before the `#` to visually separate comments from the code they refer to.\r\nhttps://www.python.org/dev/peps/pep-0008/#inline-comments\r\nAlso, a multi-line inline comment seems self-contradicting. :)",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-22T10:35:52Z",
            "diff_hunk": "@@ -1315,6 +1317,64 @@ def visit_ExprNode(self, node):\n         # With statements are never inside expressions.\n         return node\n \n+class ComprehensionScopeTransform(CythonTransform, SkipDeclarations):\n+    \"\"\"\n+    Moves expressions out of list/set/etc comprehensions so they have the correct scope\n+\n+    Effectively\n+        cmp = [ a for a in some_expression ]\n+    is changed to\n+        tmp = some_expression\n+        cmp = [ a for a in tmp ]\n+\n+    (with some complications to keep optimizations (e.g. if \"some_expression\" is a range\n+    where possible)\n+    \"\"\"\n+    def visit_ComprehensionNode(self, node):\n+        itseq = node.loop.iterator.sequence\n+        # there's no value in substituting these very simple expressions\n+        # with a temp (but NameNode must be so that it's evaluated in\n+        # the right scope)\n+        if isinstance(itseq, ExprNodes.ConstNode):\n+            return node\n+        original_node = node\n+\n+        new_itseq = ComprehensionResultRefNode(itseq)\n+        node.loop.iterator.sequence = new_itseq\n+        node = ComprehensionEvalWithTempExprNode(new_itseq, node)\n+\n+        if (isinstance(itseq, ExprNodes.SimpleCallNode) and\n+            len(itseq.args) <= 3 # range with 3 arguments is the",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369483406",
            "id": 369483406,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4MzQwNg==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 42,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369483406",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369487452"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369487452"
                }
            },
            "author_association": "MEMBER",
            "body": "This whole method looks like a collection of things that other nodes and transformations are already taking care of. It seems dangerous (in terms of future maintenance) to replicate them here.\r\nThat (again) suggests to me that these input values should be much less special overall.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-22T10:44:28Z",
            "diff_hunk": "@@ -291,6 +291,42 @@ def generate_evaluation_code(self, code):\n         self.subexpression.generate_evaluation_code(code)\n         self.teardown_temp_expr(code)\n \n+# distinguish the comprehension classes just so they can be\n+# identified separately\n+class ComprehensionEvalWithTempExprNode(EvalWithTempExprNode):\n+    def setup_temp_expr(self, code):",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369487452",
            "id": 369487452,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4NzQ1Mg==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 7,
            "path": "Cython/Compiler/UtilNodes.py",
            "position": null,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369487452",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369488803"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369488803"
                }
            },
            "author_association": "MEMBER",
            "body": "Why have this twice? It seems enough to include it in the Python compatibility test file.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-22T10:47:20Z",
            "diff_hunk": "@@ -561,3 +561,19 @@ def test_generator_kwds3(**kwargs):\n     a\n     \"\"\"\n     yield from kwargs.keys()\n+\n+def test_generator_scope():",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369488803",
            "id": 369488803,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4ODgwMw==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 5,
            "path": "tests/run/generators.pyx",
            "position": 5,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369488803",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369489980"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369489980"
                }
            },
            "author_association": "MEMBER",
            "body": "This test seems better suited for `run/locals.pyx` than the general set comprehension test suite.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-22T10:49:48Z",
            "diff_hunk": "@@ -62,3 +59,12 @@ def sorted(it):\n     l = list(it)\n     l.sort()\n     return l\n+\n+def set_comp_scope():\n+    \"\"\"\n+    locals should be evaluated in the outer scope",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369489980",
            "id": 369489980,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4OTk4MA==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 32,
            "path": "tests/run/setcomp.pyx",
            "position": null,
            "pull_request_review_id": 346466475,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369489980",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369500142"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369500142"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Only because the generators.pyx and generators_py.py already look to be duplicates of each other so I was copying what was already there. I agree there's no real benefit.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-22T11:13:01Z",
            "diff_hunk": "@@ -561,3 +561,19 @@ def test_generator_kwds3(**kwargs):\n     a\n     \"\"\"\n     yield from kwargs.keys()\n+\n+def test_generator_scope():",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369500142",
            "id": 369500142,
            "in_reply_to_id": 369488803,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUwMDE0Mg==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 5,
            "path": "tests/run/generators.pyx",
            "position": 5,
            "pull_request_review_id": 346509822,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369500142",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369503758"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369503758"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The main issue I had with the normal temp handling was that temps are usually put in `closure_scope->__pyx_tx` rather than `closure_scope->outer_scope->__pyx_tx`, and we don't have access to `closure_scope` in the function doing the setup.\r\n\r\nHowever I agree with your dislike of special cases, so I'll have another think about this when I come back to it.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-22T11:21:39Z",
            "diff_hunk": "@@ -2783,6 +2882,23 @@ def create_class_from_scope(self, node, target_module_scope, inner_node=None):\n             if entry.is_declared_generic:\n                 closure_entry.is_declared_generic = 1\n         node.needs_closure = True\n+\n+        ninputs = 0\n+        for var in inputs_in_closure:",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369503758",
            "id": 369503758,
            "in_reply_to_id": 369479550,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUwMzc1OA==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 172,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 346514356,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369503758",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369506604"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369506604"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This was definitely a bit of code I'm not really happy with. I'm trying to find `Comp...ResultRef`s that are used both inside and outside of a generator expression (using the base `LambdaNode` to find it). So it's first searching for all the `Comp...ResultRef` between the current node and whatever generator expressions exist, then looking to see which ones also appear in the generator expression.\r\n\r\nIt does seem an inefficient way of doing it so I'll definitely try to replace this approach.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-22T11:28:59Z",
            "diff_hunk": "@@ -2676,6 +2736,40 @@ def visit_ClassDefNode(self, node):\n         self.needs_closure = True\n         return node\n \n+class _FindComprehensionEvalWithTempExprNode(TreeVisitor):\n+    def __init__(self):\n+        super(_FindComprehensionEvalWithTempExprNode, self).__init__()\n+        self.found_above_lambdas = []\n+        self.lambdas = []\n+\n+    def visit_ComprehensionEvalWithTempExprNode(self, node):\n+        if node.lazy_temp not in self.found_above_lambdas:\n+            self.found_above_lambdas.append(node.lazy_temp)\n+        self._visitchildren(node, None)\n+\n+    def visit_LambdaNode(self, node):\n+        self.lambdas.append(node)\n+        return # don't go any deeper\n+\n+    def visit_Node(self, node):\n+        self._visitchildren(node, None) # necessary ?\n+\n+    @property\n+    def found(self):\n+        # this feels like duplicating the tracking done in\n+        # \"comp_input_variables\" but I can't find a better way of doing it",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369506604",
            "id": 369506604,
            "in_reply_to_id": 369473245,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUwNjYwNA==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 101,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 346518131,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369506604",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r369547631"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369547631"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It's only worth creating these additional substitutions for the cases that are optimized. The original node is replaced and so the inputs to it need evaluating in the correct scope/at the correct time.\r\n\r\nThat's the various `dict`/`set` iterations (most complicated is: `expr.single_arg_call()`), C arrays (not a call anyway), `enumerate` (`enumerate` is at most 2 args, although `start` might be a keyword argument so I should go back and check I haven't broken anything there), `reversed` (one argument), or `range` (1-3 arguments).\r\n\r\nSince nothing more \"complicated\" can currently be substituted during the optimization that's why it stops there. Maybe it should be removed though as being a pointless check because it doesn't do any harm (maybe a tiny bit of speed?) to process more complicated calls.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-22T13:06:53Z",
            "diff_hunk": "@@ -1315,6 +1317,64 @@ def visit_ExprNode(self, node):\n         # With statements are never inside expressions.\n         return node\n \n+class ComprehensionScopeTransform(CythonTransform, SkipDeclarations):\n+    \"\"\"\n+    Moves expressions out of list/set/etc comprehensions so they have the correct scope\n+\n+    Effectively\n+        cmp = [ a for a in some_expression ]\n+    is changed to\n+        tmp = some_expression\n+        cmp = [ a for a in tmp ]\n+\n+    (with some complications to keep optimizations (e.g. if \"some_expression\" is a range\n+    where possible)\n+    \"\"\"\n+    def visit_ComprehensionNode(self, node):\n+        itseq = node.loop.iterator.sequence\n+        # there's no value in substituting these very simple expressions\n+        # with a temp (but NameNode must be so that it's evaluated in\n+        # the right scope)\n+        if isinstance(itseq, ExprNodes.ConstNode):\n+            return node\n+        original_node = node\n+\n+        new_itseq = ComprehensionResultRefNode(itseq)\n+        node.loop.iterator.sequence = new_itseq\n+        node = ComprehensionEvalWithTempExprNode(new_itseq, node)\n+\n+        if (isinstance(itseq, ExprNodes.SimpleCallNode) and\n+            len(itseq.args) <= 3 # range with 3 arguments is the\n+                  # most complicated expression that may be optimizable",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r369547631",
            "id": 369547631,
            "in_reply_to_id": 369466803,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0NzYzMQ==",
            "original_commit_id": "b6add1bc3b3a7651954566fec370fb9cf9e2aac6",
            "original_position": 43,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 346571250,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369547631",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r370927176"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/370927176"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Would simply `('index', 'slice', 'stop', 'start', 'base')` be less of a puzzle to future readers?",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-25T10:54:54Z",
            "diff_hunk": "@@ -1366,14 +1366,19 @@ def visit_ComprehensionNode(self, node):\n                 itseq.function.obj = obj\n                 node = EvalWithTempExprNode(obj, node)\n \n-            for n, a in enumerate(itseq.args):\n+            for n, a in reversed(list(enumerate(itseq.args))):\n+                # \"reversed\" preserved the order the arguments are evaluated\n                 if isinstance(a, ExprNodes.ConstNode):\n                     continue\n                 a = ResultRefNode(a)\n                 itseq.args[n] = a\n                 node = EvalWithTempExprNode(a, node)\n         elif isinstance(itseq, (ExprNodes.SliceIndexNode, ExprNodes.IndexNode)):\n-            for attr in itseq.subexprs:\n+            for attr in reversed(('base', 'start', 'stop', 'slice', 'index')):\n+                # specify the attrs explicitly to control evaluation order\n+                if attr not in itseq.subexprs:\n+                    continue",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r370927176",
            "id": 370927176,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyNzE3Ng==",
            "original_commit_id": "5e270fde869e391a2b85947f1826525cd2ef29be",
            "original_position": 17,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 348320580,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/370927176",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r370927714"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/370927714"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It seems to me that this is does nothing useful and might be artifact from older version.  Since `itseq` is replace by `new_*` (otherwise after this loop ~~half of~~ the *skipped* attrs will be lost), can we just do `for a in reversed(itseq.args)`?",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-25T11:07:28Z",
            "diff_hunk": "@@ -1366,14 +1366,19 @@ def visit_ComprehensionNode(self, node):\n                 itseq.function.obj = obj\n                 node = EvalWithTempExprNode(obj, node)\n \n-            for n, a in enumerate(itseq.args):\n+            for n, a in reversed(list(enumerate(itseq.args))):\n+                # \"reversed\" preserved the order the arguments are evaluated\n                 if isinstance(a, ExprNodes.ConstNode):\n                     continue\n                 a = ResultRefNode(a)\n                 itseq.args[n] = a",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r370927714",
            "id": 370927714,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyNzcxNA==",
            "original_commit_id": "5e270fde869e391a2b85947f1826525cd2ef29be",
            "original_position": 10,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 101,
            "pull_request_review_id": 348320580,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/370927714",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r370931845"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/370931845"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "My view is that the \"reversed\" makes it clear what we're working backwards (but it certainly isn't something I feel very strongly about...). However indexing C arrays isn't quite working right yet, so this bit may well end up changed anyway.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-25T12:49:35Z",
            "diff_hunk": "@@ -1366,14 +1366,19 @@ def visit_ComprehensionNode(self, node):\n                 itseq.function.obj = obj\n                 node = EvalWithTempExprNode(obj, node)\n \n-            for n, a in enumerate(itseq.args):\n+            for n, a in reversed(list(enumerate(itseq.args))):\n+                # \"reversed\" preserved the order the arguments are evaluated\n                 if isinstance(a, ExprNodes.ConstNode):\n                     continue\n                 a = ResultRefNode(a)\n                 itseq.args[n] = a\n                 node = EvalWithTempExprNode(a, node)\n         elif isinstance(itseq, (ExprNodes.SliceIndexNode, ExprNodes.IndexNode)):\n-            for attr in itseq.subexprs:\n+            for attr in reversed(('base', 'start', 'stop', 'slice', 'index')):\n+                # specify the attrs explicitly to control evaluation order\n+                if attr not in itseq.subexprs:\n+                    continue",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r370931845",
            "id": 370931845,
            "in_reply_to_id": 370927176,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzMTg0NQ==",
            "original_commit_id": "5e270fde869e391a2b85947f1826525cd2ef29be",
            "original_position": 17,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 348324511,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/370931845",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r370932170"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/370932170"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm pretty sure this is right. I use `n` to index `itseq.args`. `itseq` still exists and is valid. `new_itseq` is just a `ResultRefNode` that contains `itseq`",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-25T12:54:28Z",
            "diff_hunk": "@@ -1366,14 +1366,19 @@ def visit_ComprehensionNode(self, node):\n                 itseq.function.obj = obj\n                 node = EvalWithTempExprNode(obj, node)\n \n-            for n, a in enumerate(itseq.args):\n+            for n, a in reversed(list(enumerate(itseq.args))):\n+                # \"reversed\" preserved the order the arguments are evaluated\n                 if isinstance(a, ExprNodes.ConstNode):\n                     continue\n                 a = ResultRefNode(a)\n                 itseq.args[n] = a",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r370932170",
            "id": 370932170,
            "in_reply_to_id": 370927714,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzMjE3MA==",
            "original_commit_id": "5e270fde869e391a2b85947f1826525cd2ef29be",
            "original_position": 10,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 101,
            "pull_request_review_id": 348324837,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/370932170",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r370935694"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/370935694"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I see, above is also just my opinion.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-25T14:14:14Z",
            "diff_hunk": "@@ -1366,14 +1366,19 @@ def visit_ComprehensionNode(self, node):\n                 itseq.function.obj = obj\n                 node = EvalWithTempExprNode(obj, node)\n \n-            for n, a in enumerate(itseq.args):\n+            for n, a in reversed(list(enumerate(itseq.args))):\n+                # \"reversed\" preserved the order the arguments are evaluated\n                 if isinstance(a, ExprNodes.ConstNode):\n                     continue\n                 a = ResultRefNode(a)\n                 itseq.args[n] = a\n                 node = EvalWithTempExprNode(a, node)\n         elif isinstance(itseq, (ExprNodes.SliceIndexNode, ExprNodes.IndexNode)):\n-            for attr in itseq.subexprs:\n+            for attr in reversed(('base', 'start', 'stop', 'slice', 'index')):\n+                # specify the attrs explicitly to control evaluation order\n+                if attr not in itseq.subexprs:\n+                    continue",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r370935694",
            "id": 370935694,
            "in_reply_to_id": 370927176,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzNTY5NA==",
            "original_commit_id": "5e270fde869e391a2b85947f1826525cd2ef29be",
            "original_position": 17,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 348327790,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/370935694",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r370935901"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/370935901"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> `new_itseq` is just a `ResultRefNode` that contains `itseq`\r\n\r\nI'm so sorry, I did not know about that.  I am wondering tho, is it necessary to unlazy `itseq.args` (`list`) then?",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-25T14:20:00Z",
            "diff_hunk": "@@ -1366,14 +1366,19 @@ def visit_ComprehensionNode(self, node):\n                 itseq.function.obj = obj\n                 node = EvalWithTempExprNode(obj, node)\n \n-            for n, a in enumerate(itseq.args):\n+            for n, a in reversed(list(enumerate(itseq.args))):\n+                # \"reversed\" preserved the order the arguments are evaluated\n                 if isinstance(a, ExprNodes.ConstNode):\n                     continue\n                 a = ResultRefNode(a)\n                 itseq.args[n] = a",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r370935901",
            "id": 370935901,
            "in_reply_to_id": 370927714,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzNTkwMQ==",
            "original_commit_id": "5e270fde869e391a2b85947f1826525cd2ef29be",
            "original_position": 10,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 101,
            "pull_request_review_id": 348327992,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/370935901",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r370985927"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/370985927"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm not sure I understand the question fully, but I don't think so. The reference to `itseq` is shared between `itseq` and the `ResultRefNode` so changing one changes both.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-26T09:47:59Z",
            "diff_hunk": "@@ -1366,14 +1366,19 @@ def visit_ComprehensionNode(self, node):\n                 itseq.function.obj = obj\n                 node = EvalWithTempExprNode(obj, node)\n \n-            for n, a in enumerate(itseq.args):\n+            for n, a in reversed(list(enumerate(itseq.args))):\n+                # \"reversed\" preserved the order the arguments are evaluated\n                 if isinstance(a, ExprNodes.ConstNode):\n                     continue\n                 a = ResultRefNode(a)\n                 itseq.args[n] = a",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r370985927",
            "id": 370985927,
            "in_reply_to_id": 370927714,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4NTkyNw==",
            "original_commit_id": "5e270fde869e391a2b85947f1826525cd2ef29be",
            "original_position": 10,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 101,
            "pull_request_review_id": 348368592,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/370985927",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r370988681"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/370988681"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I was having some confusion earlier interpreting the `reversed(list(enumerate` call.  My latest referred to that can we just `reversed(enumerate` which is lazier and may reduce some tiny overhead.  Please the discard my embarrassing *suggest changes* thing if it is possible though.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-26T10:36:36Z",
            "diff_hunk": "@@ -1366,14 +1366,19 @@ def visit_ComprehensionNode(self, node):\n                 itseq.function.obj = obj\n                 node = EvalWithTempExprNode(obj, node)\n \n-            for n, a in enumerate(itseq.args):\n+            for n, a in reversed(list(enumerate(itseq.args))):\n+                # \"reversed\" preserved the order the arguments are evaluated\n                 if isinstance(a, ExprNodes.ConstNode):\n                     continue\n                 a = ResultRefNode(a)\n                 itseq.args[n] = a",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r370988681",
            "id": 370988681,
            "in_reply_to_id": 370927714,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4ODY4MQ==",
            "original_commit_id": "5e270fde869e391a2b85947f1826525cd2ef29be",
            "original_position": 10,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": 101,
            "pull_request_review_id": 348370898,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/370988681",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/13689192?v=4",
                "events_url": "https://api.github.com/users/McSinyx/events{/privacy}",
                "followers_url": "https://api.github.com/users/McSinyx/followers",
                "following_url": "https://api.github.com/users/McSinyx/following{/other_user}",
                "gists_url": "https://api.github.com/users/McSinyx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/McSinyx",
                "id": 13689192,
                "login": "McSinyx",
                "node_id": "MDQ6VXNlcjEzNjg5MTky",
                "organizations_url": "https://api.github.com/users/McSinyx/orgs",
                "received_events_url": "https://api.github.com/users/McSinyx/received_events",
                "repos_url": "https://api.github.com/users/McSinyx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/McSinyx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/McSinyx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/McSinyx"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r371088849"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/371088849"
                }
            },
            "author_association": "MEMBER",
            "body": "It took me a moment to understand that this is correct, so there's room for improvement.\r\nWhy not use `self.closure_result_code()` as the first item and build the whole list of arguments at once?",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-27T07:17:43Z",
            "diff_hunk": "@@ -9647,11 +9655,14 @@ def analyse_declarations(self, env):\n         self.def_node.entry.signature = TypeSlots.pyfunction_noargs\n \n     def generate_result_code(self, code):\n+        args_to_call = [\"\"] + [ cp.result() for cp in self.call_parameters ]\n+        args_to_call = \", \".join(args_to_call)",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r371088849",
            "id": 371088849,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA4ODg0OQ==",
            "original_commit_id": "91b1992b1399acf90f6fc180c07afc842a54ef5b",
            "original_position": 24,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 348470470,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/371088849",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r371089232"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/371089232"
                }
            },
            "author_association": "MEMBER",
            "body": "`child_attrs` refers back to `subexprs` if it's not overwritten, so I don't think you need to set it here.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-27T07:19:21Z",
            "diff_hunk": "@@ -9632,10 +9632,18 @@ class GeneratorExpressionNode(LambdaNode):\n     #\n     # loop      ForStatNode   the for-loop, containing a YieldExprNode\n     # def_node  DefNode       the underlying generator 'def' node\n+    # call_parameters [ExprNode]   (Internal) parameters passed to the DefNode call\n \n     name = StringEncoding.EncodedString('genexpr')\n     binding = False\n \n+    child_attrs = LambdaNode.child_attrs + [\"call_parameters\"]\n+    subexprs = LambdaNode.subexprs + [\"call_parameters\"]",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r371089232",
            "id": 371089232,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA4OTIzMg==",
            "original_commit_id": "91b1992b1399acf90f6fc180c07afc842a54ef5b",
            "original_position": 10,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 20,
            "pull_request_review_id": 348470470,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/371089232",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r371089825"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/371089825"
                }
            },
            "author_association": "MEMBER",
            "body": "dead code",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-27T07:22:16Z",
            "diff_hunk": "@@ -128,6 +129,79 @@ def _find_yield_statements(node):\n         yield_statements = []\n     return yield_statements\n \n+class _ReplaceResultRefNodes(Visitor.EnvTransform):\n+    # This is the implementation to handle ResultRefNodes and EvalWithTempExprNode\n+    # that are defined outside a generator expression but used inside. It replaces\n+    # them with arguments to the \"genexpr\" function instead\n+    def __init__(self, context, number, orig_node, gen_node):\n+        # The reason for using \".x\" as the name is that this is how CPython\n+        # tracks internal variables in loops (e.g.\n+        #  { locals() for v in range(10) }\n+        # will produce \"v\" and \",0\"). We don't replicate this behaviour completely\n+        # but use it as a starting point\n+        super(_ReplaceResultRefNodes, self).__init__(context)\n+        self.name = EncodedString(\".{0}\".format(number))\n+        self.cname = EncodedString(Naming.genexpr_arg_prefix + str(number))\n+        self.replacements_made = 0\n+        self.orig_node = orig_node\n+        assert isinstance(orig_node, UtilNodes.ResultRefNode)\n+        self.gen_node = gen_node\n+        self.args = []\n+        self.call_parameters = []\n+\n+    def make_replacement(self, node):\n+        if self.replacements_made == 0:\n+            # on the first go append an argument to the generator's def_func\n+            # Since most of the types are known by now this is fairly basic\n+            self.call_parameters.append(self.orig_node)\n+            pos = self.orig_node.pos\n+            name_decl = Nodes.CNameDeclaratorNode(pos=pos, name=self.name)\n+            name_decl.type = self.orig_node.type\n+            new_arg = Nodes.CArgDeclNode(pos=pos, declarator=name_decl,\n+                                            base_type=None, default=None, annotation=None)\n+            new_arg.name = name_decl.name\n+            new_arg.type = name_decl.type\n+\n+            def_node = self.gen_node.def_node\n+\n+            self.args.append(new_arg) # don't add args to def_node right now,\n+                # otherwise they can get replaced automatically by mistake.\n+                # use \"finalize_args\" at the end\n+\n+            new_arg.entry = def_node.declare_argument(def_node.local_scope, new_arg)\n+            new_arg.entry.cname = self.cname\n+            new_arg.entry.in_closure = True\n+\n+        name_node = ExprNodes.NameNode(pos=pos, name=self.name)\n+        name_node.entry = self.current_env().lookup(name_node.name)\n+        name_node.type = name_node.entry.type\n+\n+        self.replacements_made += 1\n+\n+        return name_node\n+\n+    def finalize_args(self):\n+        if self.replacements_made:\n+            self.gen_node.def_node.args = self.args\n+            self.gen_node.call_parameters = self.call_parameters\n+\n+    def __call__(self, root):\n+        # This is usually called with a GeneratorExpressionNode which\n+        # doesn't have a scope. Therefore force it to work with a dummy value\n+        if not hasattr(root, \"scope\"):\n+            root.scope = None\n+            return super(_ReplaceResultRefNodes, self).__call__(root)\n+            del root.scope",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r371089825",
            "id": 371089825,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA4OTgyNQ==",
            "original_commit_id": "91b1992b1399acf90f6fc180c07afc842a54ef5b",
            "original_position": 74,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 348470470,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/371089825",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r372611759"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/372611759"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "To go into a generator expression `iter` now needs to be copyable and default initializable. Copyable makes sense (since it needs to outlive the destruction in finally), but default initializable is just because the scope class is created empty then filled up later. I don't think this will be easy to change. It also gets copied twice which isn't ideal.\r\n\r\nThis restrictions don't apply for comprehensions.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-29T20:24:41Z",
            "diff_hunk": "@@ -98,6 +103,34 @@ def test_custom():\n     finally:\n         del iter\n \n+def test_custom2():\n+    \"\"\"\n+    (deref(iter) instead of iter[0])\n+    >>> test_custom()\n+    [1.0, 2.0, 3.0]\n+    \"\"\"\n+    cdef double* values = [1, 2, 3]\n+    cdef DoublePointerIter* iter\n+    try:\n+        iter = new DoublePointerIter(values, 3)\n+        return [x for x in deref(iter)]\n+    finally:\n+        del iter\n+\n+def test_custom_genexp():\n+    \"\"\"\n+    >>> list(test_custom())\n+    [1.0, 2.0, 3.0]\n+    \"\"\"\n+    cdef double* values = [1, 2, 3]\n+    cdef DoublePointerIterCanMakeEmpty* iter\n+    try:\n+        iter = new DoublePointerIterCanMakeEmpty(values, 3)\n+        # TODO: Needs to copy once - currently copies twice\n+        return (x for x in iter[0])",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r372611759",
            "id": 372611759,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYxMTc1OQ==",
            "original_commit_id": "b9378ee11e8e6c307d337013076f0a9285c77713",
            "original_position": 40,
            "path": "tests/run/cpp_iterators.pyx",
            "position": 40,
            "pull_request_review_id": 350400403,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/372611759",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r372642164"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/372642164"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`LambdaNode` (which `GeneratorExpressionNode` inherits from) specifically sets `child_attrs` and so the link between them is broken. I didn't want to change it in `LambdaNode` since I  wasn't sure if it was deliberate so I did both here.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-29T21:34:11Z",
            "diff_hunk": "@@ -9632,10 +9632,18 @@ class GeneratorExpressionNode(LambdaNode):\n     #\n     # loop      ForStatNode   the for-loop, containing a YieldExprNode\n     # def_node  DefNode       the underlying generator 'def' node\n+    # call_parameters [ExprNode]   (Internal) parameters passed to the DefNode call\n \n     name = StringEncoding.EncodedString('genexpr')\n     binding = False\n \n+    child_attrs = LambdaNode.child_attrs + [\"call_parameters\"]\n+    subexprs = LambdaNode.subexprs + [\"call_parameters\"]",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r372642164",
            "id": 372642164,
            "in_reply_to_id": 371089232,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY0MjE2NA==",
            "original_commit_id": "91b1992b1399acf90f6fc180c07afc842a54ef5b",
            "original_position": 10,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 20,
            "pull_request_review_id": 350439927,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/372642164",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r372814791"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/372814791"
                }
            },
            "author_association": "MEMBER",
            "body": "Interesting. Maybe `LambdaNode` just does it wrong and should extend `subexprs` instead? Could even be the reason for #3267.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-30T08:33:00Z",
            "diff_hunk": "@@ -9632,10 +9632,18 @@ class GeneratorExpressionNode(LambdaNode):\n     #\n     # loop      ForStatNode   the for-loop, containing a YieldExprNode\n     # def_node  DefNode       the underlying generator 'def' node\n+    # call_parameters [ExprNode]   (Internal) parameters passed to the DefNode call\n \n     name = StringEncoding.EncodedString('genexpr')\n     binding = False\n \n+    child_attrs = LambdaNode.child_attrs + [\"call_parameters\"]\n+    subexprs = LambdaNode.subexprs + [\"call_parameters\"]",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r372814791",
            "id": 372814791,
            "in_reply_to_id": 371089232,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgxNDc5MQ==",
            "original_commit_id": "91b1992b1399acf90f6fc180c07afc842a54ef5b",
            "original_position": 10,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 20,
            "pull_request_review_id": 350649661,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/372814791",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r372826898"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/372826898"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It looks like `LambdaNode.def_node` wants to be in `child_attrs` but not `subexprs` because it isn't an expression so doesn't have `generate_evaluation_code` so that bit is deliberate. Presumably that does stop some `LambdaNode`'s inherited `subexprs` from being processed, but explicitly including them in `child_attrs` doesn't seem to fix #3267.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-01-30T09:01:21Z",
            "diff_hunk": "@@ -9632,10 +9632,18 @@ class GeneratorExpressionNode(LambdaNode):\n     #\n     # loop      ForStatNode   the for-loop, containing a YieldExprNode\n     # def_node  DefNode       the underlying generator 'def' node\n+    # call_parameters [ExprNode]   (Internal) parameters passed to the DefNode call\n \n     name = StringEncoding.EncodedString('genexpr')\n     binding = False\n \n+    child_attrs = LambdaNode.child_attrs + [\"call_parameters\"]\n+    subexprs = LambdaNode.subexprs + [\"call_parameters\"]",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r372826898",
            "id": 372826898,
            "in_reply_to_id": 371089232,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNjg5OA==",
            "original_commit_id": "91b1992b1399acf90f6fc180c07afc842a54ef5b",
            "original_position": 10,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 20,
            "pull_request_review_id": 350664799,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/372826898",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3323#discussion_r391456321"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3323"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/391456321"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Note to self - this is a workaround for https://github.com/cython/cython/issues/3418. Should be taken out because the fix described in that issue is better.",
            "commit_id": "43bab6366931005be5620be5f1e8ae955c149af9",
            "created_at": "2020-03-12T08:11:38Z",
            "diff_hunk": "@@ -222,13 +233,23 @@ def free_temps(self, code):\n class LetNodeMixin:\n     def set_temp_expr(self, lazy_temp):\n         self.lazy_temp = lazy_temp\n-        self.temp_expression = lazy_temp.expression\n+        # don't need to set temp_expression because of property\n+\n+    # property prevents it from getting out of sync\n+    @property\n+    def temp_expression(self):\n+        return self.lazy_temp.expression\n+    @temp_expression.setter\n+    def temp_expression(self, value):\n+        self.lazy_temp.update_expression(value)\n \n     def setup_temp_expr(self, code):\n         self.temp_expression.generate_evaluation_code(code)\n         self.temp_type = self.temp_expression.type\n         if self.temp_type.is_array:\n             self.temp_type = c_ptr_type(self.temp_type.base_type)\n+        elif self.temp_type.is_cfunction:",
            "html_url": "https://github.com/cython/cython/pull/3323#discussion_r391456321",
            "id": 391456321,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1NjMyMQ==",
            "original_commit_id": "b9378ee11e8e6c307d337013076f0a9285c77713",
            "original_position": 45,
            "path": "Cython/Compiler/UtilNodes.py",
            "position": null,
            "pull_request_review_id": 373346074,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3323",
            "updated_at": "2020-03-25T08:28:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/391456321",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3323/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6691e50385a8cfd56de9cf8d0d244bb97bf8cae2/comments",
            "commit": {
                "author": {
                    "date": "2020-01-17T17:38:08Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-29T19:11:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed handling of scope for Comprehensions\n\n(but not for generator expressions).\n\nDid this by changing\n   [ x for x in something ]\nto\n   tmp = something\n   [ x for x in tmp ]\n\nI also believe all the optimizations still work",
                "tree": {
                    "sha": "1378a912120f139d2c32f7cf0a90fd40632f1251",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1378a912120f139d2c32f7cf0a90fd40632f1251"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6691e50385a8cfd56de9cf8d0d244bb97bf8cae2",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/6691e50385a8cfd56de9cf8d0d244bb97bf8cae2",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NjY5MWU1MDM4NWE4Y2ZkNTZkZTljZjhkMGQyNDRiYjk3YmY4Y2FlMg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f875f4c2a1b8e84fc3577a8dbe607d72cbd70131",
                    "sha": "f875f4c2a1b8e84fc3577a8dbe607d72cbd70131",
                    "url": "https://api.github.com/repos/cython/cython/commits/f875f4c2a1b8e84fc3577a8dbe607d72cbd70131"
                }
            ],
            "sha": "6691e50385a8cfd56de9cf8d0d244bb97bf8cae2",
            "url": "https://api.github.com/repos/cython/cython/commits/6691e50385a8cfd56de9cf8d0d244bb97bf8cae2"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/85e49345f0307518d46290a7821365e1ed6fc304/comments",
            "commit": {
                "author": {
                    "date": "2020-01-21T10:26:39Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-29T19:11:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Skipped very simple cases",
                "tree": {
                    "sha": "0df7375a2af8ad2e04d7643a338931f8dea78fd6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0df7375a2af8ad2e04d7643a338931f8dea78fd6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/85e49345f0307518d46290a7821365e1ed6fc304",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/85e49345f0307518d46290a7821365e1ed6fc304",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ODVlNDkzNDVmMDMwNzUxOGQ0NjI5MGE3ODIxMzY1ZTFlZDZmYzMwNA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6691e50385a8cfd56de9cf8d0d244bb97bf8cae2",
                    "sha": "6691e50385a8cfd56de9cf8d0d244bb97bf8cae2",
                    "url": "https://api.github.com/repos/cython/cython/commits/6691e50385a8cfd56de9cf8d0d244bb97bf8cae2"
                }
            ],
            "sha": "85e49345f0307518d46290a7821365e1ed6fc304",
            "url": "https://api.github.com/repos/cython/cython/commits/85e49345f0307518d46290a7821365e1ed6fc304"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7e724a73a5e4332fb73e268cdd34f681d60d2709/comments",
            "commit": {
                "author": {
                    "date": "2020-01-21T17:23:35Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-29T19:11:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "A working version with generator expressions?\n\nA bit more care has to be taken than with comprehensions since\ntemp variables can't span into a generator. Therefore, we save\nthis in the outer function scope as \"__pyx_input_n\"",
                "tree": {
                    "sha": "16741030edefdaaa004cd9fb8bdf002522a73ecd",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/16741030edefdaaa004cd9fb8bdf002522a73ecd"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7e724a73a5e4332fb73e268cdd34f681d60d2709",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/7e724a73a5e4332fb73e268cdd34f681d60d2709",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6N2U3MjRhNzNhNWU0MzMyZmI3M2UyNjhjZGQzNGY2ODFkNjBkMjcwOQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/85e49345f0307518d46290a7821365e1ed6fc304",
                    "sha": "85e49345f0307518d46290a7821365e1ed6fc304",
                    "url": "https://api.github.com/repos/cython/cython/commits/85e49345f0307518d46290a7821365e1ed6fc304"
                }
            ],
            "sha": "7e724a73a5e4332fb73e268cdd34f681d60d2709",
            "url": "https://api.github.com/repos/cython/cython/commits/7e724a73a5e4332fb73e268cdd34f681d60d2709"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9ffe4a9253a20f62ce248f1e552a587ecc356b68/comments",
            "commit": {
                "author": {
                    "date": "2020-01-21T21:47:29Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-29T19:11:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Passing runtests.py generator now\n\nAlso added a very basic doctest for the scope",
                "tree": {
                    "sha": "d9f7eb3a07d363f1f11812be635d3a3eb8719989",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d9f7eb3a07d363f1f11812be635d3a3eb8719989"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9ffe4a9253a20f62ce248f1e552a587ecc356b68",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/9ffe4a9253a20f62ce248f1e552a587ecc356b68",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6OWZmZTRhOTI1M2EyMGY2MmNlMjQ4ZjFlNTUyYTU4N2VjYzM1NmI2OA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7e724a73a5e4332fb73e268cdd34f681d60d2709",
                    "sha": "7e724a73a5e4332fb73e268cdd34f681d60d2709",
                    "url": "https://api.github.com/repos/cython/cython/commits/7e724a73a5e4332fb73e268cdd34f681d60d2709"
                }
            ],
            "sha": "9ffe4a9253a20f62ce248f1e552a587ecc356b68",
            "url": "https://api.github.com/repos/cython/cython/commits/9ffe4a9253a20f62ce248f1e552a587ecc356b68"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4678e3eb95a1f25f436034bd84c3e13933d58dc5/comments",
            "commit": {
                "author": {
                    "date": "2020-01-22T09:42:53Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-29T19:11:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Partly fixed (a for a in a) case\n\nwhich also seems to fixes a bunch of other test failures.\nHowever, genexpr_iterable_lookup_t600 doesn't yet pass...\nsome tests fail, and some refnanny errors",
                "tree": {
                    "sha": "16793ff5b7f1ba45b6824d8dc49eb189eccabf5e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/16793ff5b7f1ba45b6824d8dc49eb189eccabf5e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4678e3eb95a1f25f436034bd84c3e13933d58dc5",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/4678e3eb95a1f25f436034bd84c3e13933d58dc5",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NDY3OGUzZWI5NWExZjI1ZjQzNjAzNGJkODRjM2UxMzkzM2Q1OGRjNQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9ffe4a9253a20f62ce248f1e552a587ecc356b68",
                    "sha": "9ffe4a9253a20f62ce248f1e552a587ecc356b68",
                    "url": "https://api.github.com/repos/cython/cython/commits/9ffe4a9253a20f62ce248f1e552a587ecc356b68"
                }
            ],
            "sha": "4678e3eb95a1f25f436034bd84c3e13933d58dc5",
            "url": "https://api.github.com/repos/cython/cython/commits/4678e3eb95a1f25f436034bd84c3e13933d58dc5"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/abab0be3f38cc7a1afd73655c25ab146b4f2e575/comments",
            "commit": {
                "author": {
                    "date": "2020-01-23T16:02:46Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-29T19:11:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Simple changes from code review",
                "tree": {
                    "sha": "af14526587fe4d0228d7ee508275f426232d3813",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/af14526587fe4d0228d7ee508275f426232d3813"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/abab0be3f38cc7a1afd73655c25ab146b4f2e575",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/abab0be3f38cc7a1afd73655c25ab146b4f2e575",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YWJhYjBiZTNmMzhjYzdhMWFmZDczNjU1YzI1YWIxNDZiNGYyZTU3NQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4678e3eb95a1f25f436034bd84c3e13933d58dc5",
                    "sha": "4678e3eb95a1f25f436034bd84c3e13933d58dc5",
                    "url": "https://api.github.com/repos/cython/cython/commits/4678e3eb95a1f25f436034bd84c3e13933d58dc5"
                }
            ],
            "sha": "abab0be3f38cc7a1afd73655c25ab146b4f2e575",
            "url": "https://api.github.com/repos/cython/cython/commits/abab0be3f38cc7a1afd73655c25ab146b4f2e575"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a80a65549f9aa2cb735b06f5f398583b4912e7bd/comments",
            "commit": {
                "author": {
                    "date": "2020-01-24T17:51:01Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-29T19:11:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed generator expression scope (hopefully)\n\nThe basic outline of moving the variables to a temp remains as\nbefore. Now after the loop optimizatation step any temp variables\nthat appear both inside and outside the generator expression\nare converted to arguments to the genexpr function. They can\nthen be captured as closure variables by the normal rules\nrather than creating a special mechanism",
                "tree": {
                    "sha": "9f27e8e00b3ea8e3174ef9647a7b4816cba4695b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/9f27e8e00b3ea8e3174ef9647a7b4816cba4695b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a80a65549f9aa2cb735b06f5f398583b4912e7bd",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/a80a65549f9aa2cb735b06f5f398583b4912e7bd",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YTgwYTY1NTQ5ZjlhYTJjYjczNWIwNmY1ZjM5ODU4M2I0OTEyZTdiZA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/abab0be3f38cc7a1afd73655c25ab146b4f2e575",
                    "sha": "abab0be3f38cc7a1afd73655c25ab146b4f2e575",
                    "url": "https://api.github.com/repos/cython/cython/commits/abab0be3f38cc7a1afd73655c25ab146b4f2e575"
                }
            ],
            "sha": "a80a65549f9aa2cb735b06f5f398583b4912e7bd",
            "url": "https://api.github.com/repos/cython/cython/commits/a80a65549f9aa2cb735b06f5f398583b4912e7bd"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5d7b63e044dcb07233d2b3918bfb449ded128e7c/comments",
            "commit": {
                "author": {
                    "date": "2020-01-24T19:47:26Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-29T19:11:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Should now cope with arrays and array slices better",
                "tree": {
                    "sha": "65a6bc0ee49f40e828e1244765156f604e8e4041",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/65a6bc0ee49f40e828e1244765156f604e8e4041"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5d7b63e044dcb07233d2b3918bfb449ded128e7c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/5d7b63e044dcb07233d2b3918bfb449ded128e7c",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NWQ3YjYzZTA0NGRjYjA3MjMzZDJiMzkxOGJmYjQ0OWRlZDEyOGU3Yw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a80a65549f9aa2cb735b06f5f398583b4912e7bd",
                    "sha": "a80a65549f9aa2cb735b06f5f398583b4912e7bd",
                    "url": "https://api.github.com/repos/cython/cython/commits/a80a65549f9aa2cb735b06f5f398583b4912e7bd"
                }
            ],
            "sha": "5d7b63e044dcb07233d2b3918bfb449ded128e7c",
            "url": "https://api.github.com/repos/cython/cython/commits/5d7b63e044dcb07233d2b3918bfb449ded128e7c"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d8060c77394ec056823a1b2a52866a5d96df8b0f/comments",
            "commit": {
                "author": {
                    "date": "2020-01-24T22:02:10Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-29T19:11:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed type inference for mono-type lists in genexprs",
                "tree": {
                    "sha": "81f371dd068de292c33117724eadaf1625a53e24",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/81f371dd068de292c33117724eadaf1625a53e24"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d8060c77394ec056823a1b2a52866a5d96df8b0f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/d8060c77394ec056823a1b2a52866a5d96df8b0f",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZDgwNjBjNzczOTRlYzA1NjgyM2ExYjJhNTI4NjZhNWQ5NmRmOGIwZg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/5d7b63e044dcb07233d2b3918bfb449ded128e7c",
                    "sha": "5d7b63e044dcb07233d2b3918bfb449ded128e7c",
                    "url": "https://api.github.com/repos/cython/cython/commits/5d7b63e044dcb07233d2b3918bfb449ded128e7c"
                }
            ],
            "sha": "d8060c77394ec056823a1b2a52866a5d96df8b0f",
            "url": "https://api.github.com/repos/cython/cython/commits/d8060c77394ec056823a1b2a52866a5d96df8b0f"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/68347376ec0639a7980c115adf422e7884f88c1e/comments",
            "commit": {
                "author": {
                    "date": "2020-01-24T23:17:27Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-29T19:11:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Allow InlineGeneratorExpressions again\n\nachieved by shuffling the order of the EvalWithTempExprs outwards\nso they surround the revelant call node.\n\nAlso crudely allow for ... from loops (although this should\nprobably be better)",
                "tree": {
                    "sha": "56141ee1d533b99d8f8e9fc79bb6a4f93579df7d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/56141ee1d533b99d8f8e9fc79bb6a4f93579df7d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/68347376ec0639a7980c115adf422e7884f88c1e",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/68347376ec0639a7980c115adf422e7884f88c1e",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NjgzNDczNzZlYzA2MzlhNzk4MGMxMTVhZGY0MjJlNzg4NGY4OGMxZQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d8060c77394ec056823a1b2a52866a5d96df8b0f",
                    "sha": "d8060c77394ec056823a1b2a52866a5d96df8b0f",
                    "url": "https://api.github.com/repos/cython/cython/commits/d8060c77394ec056823a1b2a52866a5d96df8b0f"
                }
            ],
            "sha": "68347376ec0639a7980c115adf422e7884f88c1e",
            "url": "https://api.github.com/repos/cython/cython/commits/68347376ec0639a7980c115adf422e7884f88c1e"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9a1f978bcea6cf78da2f8e41bdc8fb66f1f2d6b5/comments",
            "commit": {
                "author": {
                    "date": "2020-01-24T23:27:43Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-29T19:11:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed order that arguments are evaluated in\n\nand tested it",
                "tree": {
                    "sha": "b08eb6620425c5d4854b4723204f2fa99f46a2c1",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/b08eb6620425c5d4854b4723204f2fa99f46a2c1"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9a1f978bcea6cf78da2f8e41bdc8fb66f1f2d6b5",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/9a1f978bcea6cf78da2f8e41bdc8fb66f1f2d6b5",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6OWExZjk3OGJjZWE2Y2Y3OGRhMmY4ZTQxYmRjOGZiNjZmMWYyZDZiNQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/68347376ec0639a7980c115adf422e7884f88c1e",
                    "sha": "68347376ec0639a7980c115adf422e7884f88c1e",
                    "url": "https://api.github.com/repos/cython/cython/commits/68347376ec0639a7980c115adf422e7884f88c1e"
                }
            ],
            "sha": "9a1f978bcea6cf78da2f8e41bdc8fb66f1f2d6b5",
            "url": "https://api.github.com/repos/cython/cython/commits/9a1f978bcea6cf78da2f8e41bdc8fb66f1f2d6b5"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c9d89166d3d5e6f94e9d03eae0c4ba9f482e13d8/comments",
            "commit": {
                "author": {
                    "date": "2020-01-25T13:27:31Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-29T19:11:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Changes to generator expressions + scoping\n\nMostly to make them optimze more cleanly, since the tests that\nare failing are mostly for optimizations",
                "tree": {
                    "sha": "ef101fcb303b671686c0afd9975aa044e619b992",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ef101fcb303b671686c0afd9975aa044e619b992"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c9d89166d3d5e6f94e9d03eae0c4ba9f482e13d8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/c9d89166d3d5e6f94e9d03eae0c4ba9f482e13d8",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YzlkODkxNjZkM2Q1ZTZmOTRlOWQwM2VhZTBjNGJhOWY0ODJlMTNkOA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9a1f978bcea6cf78da2f8e41bdc8fb66f1f2d6b5",
                    "sha": "9a1f978bcea6cf78da2f8e41bdc8fb66f1f2d6b5",
                    "url": "https://api.github.com/repos/cython/cython/commits/9a1f978bcea6cf78da2f8e41bdc8fb66f1f2d6b5"
                }
            ],
            "sha": "c9d89166d3d5e6f94e9d03eae0c4ba9f482e13d8",
            "url": "https://api.github.com/repos/cython/cython/commits/c9d89166d3d5e6f94e9d03eae0c4ba9f482e13d8"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/0eff6111994539e05419ed822de53117881893a5/comments",
            "commit": {
                "author": {
                    "date": "2020-01-26T09:45:48Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-29T19:11:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Improved removal of EvalWithTempExpr nodes for generators\n\nwhere those nodes are determined to be constants",
                "tree": {
                    "sha": "0f6341b7c458eeac4ca84a3750cf2ea6230bbd6c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0f6341b7c458eeac4ca84a3750cf2ea6230bbd6c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/0eff6111994539e05419ed822de53117881893a5",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/0eff6111994539e05419ed822de53117881893a5",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MGVmZjYxMTE5OTQ1MzllMDU0MTllZDgyMmRlNTMxMTc4ODE4OTNhNQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c9d89166d3d5e6f94e9d03eae0c4ba9f482e13d8",
                    "sha": "c9d89166d3d5e6f94e9d03eae0c4ba9f482e13d8",
                    "url": "https://api.github.com/repos/cython/cython/commits/c9d89166d3d5e6f94e9d03eae0c4ba9f482e13d8"
                }
            ],
            "sha": "0eff6111994539e05419ed822de53117881893a5",
            "url": "https://api.github.com/repos/cython/cython/commits/0eff6111994539e05419ed822de53117881893a5"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f1d8e5a057eacffd8f7fef652d829746cd67e7b2/comments",
            "commit": {
                "author": {
                    "date": "2020-01-27T21:42:57Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-29T19:11:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Further fixes to handling of generator expression scope\n\nI'm moderately optimistic most of the tests pass...\n(Except builtin_subtype which is tricky and which I\ndon't really understand)",
                "tree": {
                    "sha": "1b8f01226c62024026df1500df17d1fb2d78573b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1b8f01226c62024026df1500df17d1fb2d78573b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f1d8e5a057eacffd8f7fef652d829746cd67e7b2",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/f1d8e5a057eacffd8f7fef652d829746cd67e7b2",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZjFkOGU1YTA1N2VhY2ZmZDhmN2ZlZjY1MmQ4Mjk3NDZjZDY3ZTdiMg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/0eff6111994539e05419ed822de53117881893a5",
                    "sha": "0eff6111994539e05419ed822de53117881893a5",
                    "url": "https://api.github.com/repos/cython/cython/commits/0eff6111994539e05419ed822de53117881893a5"
                }
            ],
            "sha": "f1d8e5a057eacffd8f7fef652d829746cd67e7b2",
            "url": "https://api.github.com/repos/cython/cython/commits/f1d8e5a057eacffd8f7fef652d829746cd67e7b2"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/fd8b6d32069544916a264a9ba18fbca19ed08e5c/comments",
            "commit": {
                "author": {
                    "date": "2020-01-29T10:27:14Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-29T19:11:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed correct generation of ExprNodes\n\nAssorted fixes to make optimizations work as before",
                "tree": {
                    "sha": "2c845e051c69080ddc96f402b43a947dee4ae101",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2c845e051c69080ddc96f402b43a947dee4ae101"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/fd8b6d32069544916a264a9ba18fbca19ed08e5c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/fd8b6d32069544916a264a9ba18fbca19ed08e5c",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZmQ4YjZkMzIwNjk1NDQ5MTZhMjY0YTliYTE4ZmJjYTE5ZWQwOGU1Yw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f1d8e5a057eacffd8f7fef652d829746cd67e7b2",
                    "sha": "f1d8e5a057eacffd8f7fef652d829746cd67e7b2",
                    "url": "https://api.github.com/repos/cython/cython/commits/f1d8e5a057eacffd8f7fef652d829746cd67e7b2"
                }
            ],
            "sha": "fd8b6d32069544916a264a9ba18fbca19ed08e5c",
            "url": "https://api.github.com/repos/cython/cython/commits/fd8b6d32069544916a264a9ba18fbca19ed08e5c"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b9378ee11e8e6c307d337013076f0a9285c77713/comments",
            "commit": {
                "author": {
                    "date": "2020-01-29T19:48:25Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-29T19:48:25Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "locals test - py2 and 3 had different output",
                "tree": {
                    "sha": "f32dd355511f3cadb0ee4f32b04b198d5a27124c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f32dd355511f3cadb0ee4f32b04b198d5a27124c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b9378ee11e8e6c307d337013076f0a9285c77713",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/b9378ee11e8e6c307d337013076f0a9285c77713",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YjkzNzhlZTExZThlNmMzMDdkMzM3MDEzMDc2ZjBhOTI4NWM3NzcxMw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/fd8b6d32069544916a264a9ba18fbca19ed08e5c",
                    "sha": "fd8b6d32069544916a264a9ba18fbca19ed08e5c",
                    "url": "https://api.github.com/repos/cython/cython/commits/fd8b6d32069544916a264a9ba18fbca19ed08e5c"
                }
            ],
            "sha": "b9378ee11e8e6c307d337013076f0a9285c77713",
            "url": "https://api.github.com/repos/cython/cython/commits/b9378ee11e8e6c307d337013076f0a9285c77713"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b421a03569b42c7b6b3c69e38808a1c5ea9467b6/comments",
            "commit": {
                "author": {
                    "date": "2020-01-29T19:55:56Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-03-12T09:00:07Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Small changes mostly from review",
                "tree": {
                    "sha": "fe02af238e1e7cfd389cecb2bbee564bd55e5a2b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/fe02af238e1e7cfd389cecb2bbee564bd55e5a2b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b421a03569b42c7b6b3c69e38808a1c5ea9467b6",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/b421a03569b42c7b6b3c69e38808a1c5ea9467b6",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YjQyMWEwMzU2OWI0MmM3YjZiM2M2OWUzODgwOGExYzVlYTk0NjdiNg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b9378ee11e8e6c307d337013076f0a9285c77713",
                    "sha": "b9378ee11e8e6c307d337013076f0a9285c77713",
                    "url": "https://api.github.com/repos/cython/cython/commits/b9378ee11e8e6c307d337013076f0a9285c77713"
                }
            ],
            "sha": "b421a03569b42c7b6b3c69e38808a1c5ea9467b6",
            "url": "https://api.github.com/repos/cython/cython/commits/b421a03569b42c7b6b3c69e38808a1c5ea9467b6"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/43bab6366931005be5620be5f1e8ae955c149af9/comments",
            "commit": {
                "author": {
                    "date": "2020-03-25T08:28:54Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-03-25T08:28:54Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'master' into genexpr_scope3",
                "tree": {
                    "sha": "b04c2f47e7ce953fe9caeb1917c55225873189a6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/b04c2f47e7ce953fe9caeb1917c55225873189a6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/43bab6366931005be5620be5f1e8ae955c149af9",
                "verification": {
                    "payload": "tree b04c2f47e7ce953fe9caeb1917c55225873189a6\nparent b421a03569b42c7b6b3c69e38808a1c5ea9467b6\nparent 48dc1f0169f81ed20c6b374941c2498ec94e57d0\nauthor da-woods <dw-git@d-woods.co.uk> 1585124934 +0000\ncommitter GitHub <noreply@github.com> 1585124934 +0000\n\nMerge branch 'master' into genexpr_scope3",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeexZGCRBK7hj4Ov3rIwAAdHIIAAiDPULmlkOTx8CdJyPbHHr0\nDiHqcUEe2TDYsE05DukfrNi6mKwii5YjkpRg2BPMDkqVNw29EwjJQszYrxNtjBP9\n8Eb3/AxXBaTOe7TSkxcn4eR6Ru8BauVa4Tcb8H9EN27EpDMIW+5SUpXZ/utwnzyR\nn+yVNl6kNtDFrJ7Osux7jfROWpMoydqj517R7FRyiPdQ4F1j6yiXS9r6x7peq/5r\nHdipszc1QwebUTE/byEek191/A/5j0SJ+JWbojh5atzXrnzbLHt21UEPDXAbY3na\na2CvToySGK0pxXzAHqDupzq4YYf9tnu+Vlp1xRRCtujE8cWXzqwYNCd+e1C+5K4=\n=VcS5\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/43bab6366931005be5620be5f1e8ae955c149af9",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NDNiYWI2MzY2OTMxMDA1YmU1NjIwYmU1ZjFlOGFlOTU1YzE0OWFmOQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b421a03569b42c7b6b3c69e38808a1c5ea9467b6",
                    "sha": "b421a03569b42c7b6b3c69e38808a1c5ea9467b6",
                    "url": "https://api.github.com/repos/cython/cython/commits/b421a03569b42c7b6b3c69e38808a1c5ea9467b6"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/48dc1f0169f81ed20c6b374941c2498ec94e57d0",
                    "sha": "48dc1f0169f81ed20c6b374941c2498ec94e57d0",
                    "url": "https://api.github.com/repos/cython/cython/commits/48dc1f0169f81ed20c6b374941c2498ec94e57d0"
                }
            ],
            "sha": "43bab6366931005be5620be5f1e8ae955c149af9",
            "url": "https://api.github.com/repos/cython/cython/commits/43bab6366931005be5620be5f1e8ae955c149af9"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3323/commits",
    "created_at": "2020-01-21T21:56:51Z",
    "diff_url": "https://github.com/cython/cython/pull/3323.diff",
    "draft": false,
    "head": {
        "label": "da-woods:genexpr_scope3",
        "ref": "genexpr_scope3",
        "repo": {
            "archive_url": "https://api.github.com/repos/da-woods/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/da-woods/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/da-woods/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/da-woods/cython/branches{/branch}",
            "clone_url": "https://github.com/da-woods/cython.git",
            "collaborators_url": "https://api.github.com/repos/da-woods/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/da-woods/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/da-woods/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/da-woods/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/da-woods/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/da-woods/cython/contributors",
            "created_at": "2015-05-09T08:55:00Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/da-woods/cython/deployments",
            "description": "A Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/da-woods/cython/downloads",
            "events_url": "https://api.github.com/repos/da-woods/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/da-woods/cython/forks",
            "full_name": "da-woods/cython",
            "git_commits_url": "https://api.github.com/repos/da-woods/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/da-woods/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/da-woods/cython/git/tags{/sha}",
            "git_url": "git://github.com/da-woods/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/da-woods/cython/hooks",
            "html_url": "https://github.com/da-woods/cython",
            "id": 35321967,
            "issue_comment_url": "https://api.github.com/repos/da-woods/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/da-woods/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/da-woods/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/da-woods/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/da-woods/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/da-woods/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/da-woods/cython/merges",
            "milestones_url": "https://api.github.com/repos/da-woods/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNTMyMTk2Nw==",
            "notifications_url": "https://api.github.com/repos/da-woods/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/da-woods/cython/pulls{/number}",
            "pushed_at": "2020-03-25T14:37:15Z",
            "releases_url": "https://api.github.com/repos/da-woods/cython/releases{/id}",
            "size": 58068,
            "ssh_url": "git@github.com:da-woods/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/da-woods/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/da-woods/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/da-woods/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/da-woods/cython/subscription",
            "svn_url": "https://github.com/da-woods/cython",
            "tags_url": "https://api.github.com/repos/da-woods/cython/tags",
            "teams_url": "https://api.github.com/repos/da-woods/cython/teams",
            "trees_url": "https://api.github.com/repos/da-woods/cython/git/trees{/sha}",
            "updated_at": "2019-10-24T09:38:07Z",
            "url": "https://api.github.com/repos/da-woods/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "43bab6366931005be5620be5f1e8ae955c149af9",
        "user": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
            "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
            "followers_url": "https://api.github.com/users/da-woods/followers",
            "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
            "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/da-woods",
            "id": 10536947,
            "login": "da-woods",
            "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
            "organizations_url": "https://api.github.com/users/da-woods/orgs",
            "received_events_url": "https://api.github.com/users/da-woods/received_events",
            "repos_url": "https://api.github.com/users/da-woods/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/da-woods"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3323",
    "id": 365537067,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3323",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "43e207363fee5a0e20fe04d1d35ef3ced9a2fab4",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY1NTM3MDY3",
    "number": 3323,
    "patch_url": "https://github.com/cython/cython/pull/3323.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3323/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/43bab6366931005be5620be5f1e8ae955c149af9",
    "title": "Generator expression and comprehension scope",
    "updated_at": "2020-03-25T08:28:56Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3323",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}