{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/6028/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/6028/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/6028"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/6028"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/6028/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/6028"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/eb8ce41988a0f5b32d79da42795ef641d66b8839"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1433,
            "forks_count": 1433,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 1281,
            "open_issues_count": 1281,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2024-02-27T14:19:50Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 71638,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 8743,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "topics": [
                "big-data",
                "c",
                "cpp",
                "cpython",
                "cpython-extensions",
                "cython",
                "performance",
                "python"
            ],
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2024-02-27T13:20:56Z",
            "url": "https://api.github.com/repos/cython/cython",
            "visibility": "public",
            "watchers": 8743,
            "watchers_count": 8743,
            "web_commit_signoff_required": false
        },
        "sha": "e6c621a91265d94a6c0dad9975e85b46c493706d",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Hopefully helps with https://github.com/cython/cython/issues/4425.\r\n\r\nIt reduces binary object size by ~0.5% (module-dependent of course). This isn't the same as compile-time, but it's likely to be correlated in this case.\r\n\r\nCode objects can be initialized after all other Python constants because no other literals can depend on them. Unfortunately I wasn't able to use a module-level constant global table for them because I was fighting with the module name defines. That's an improvement for the future when we've got further with module-state.",
    "closed_at": "2024-02-27T06:50:25Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6028#discussion_r1501398896"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6028"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1501398896"
                }
            },
            "author_association": "MEMBER",
            "body": "I'd prefer seeing the arguments that are passed and collected here. Accepting `*args` makes it difficult to spot misplaced arguments in the call, for example. Given the remaining FIXME's, it's likely that we'll extend them in the future.\r\n\r\nMaybe use a dedicated namedtuple and pass that instead of `*args`? Or … (mindblowing idea after almost 22 years of Py2 development) … a dataclass?",
            "commit_id": "eb8ce41988a0f5b32d79da42795ef641d66b8839",
            "created_at": "2024-02-24T10:49:32Z",
            "diff_hunk": "@@ -1411,6 +1413,11 @@ def get_py_string_const(self, text, identifier=None,\n             text.encoding, identifier, is_str, py3str_cstring)\n         return py_string\n \n+    def get_py_codeobj_const(self, *args):\n+        idx = len(self.codeobject_constants)\n+        self.codeobject_constants.append(args)\n+        return f\"{Naming.codeobjtab_cname}[{idx}]\"",
            "html_url": "https://github.com/cython/cython/pull/6028#discussion_r1501398896",
            "id": 1501398896,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5ZfYdw",
            "original_commit_id": "2515608a41f68f4053f0b5d7ea09de1303225044",
            "original_line": 1419,
            "original_position": 23,
            "original_start_line": 1416,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 1899399395,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6028",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501398896/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-24T11:11:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501398896",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6028#discussion_r1501401079"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6028"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1501401079"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        # code objects come after the other globals (since they use strings and tuples)\r\n```",
            "commit_id": "eb8ce41988a0f5b32d79da42795ef641d66b8839",
            "created_at": "2024-02-24T10:57:23Z",
            "diff_hunk": "@@ -3111,6 +3111,8 @@ def generate_module_init_func(self, imported_modules, env, code):\n         code.put_error_if_neg(self.pos, \"__Pyx_InitConstants()\")\n         code.putln(\"stringtab_initialized = 1;\")\n         code.put_error_if_neg(self.pos, \"__Pyx_InitGlobals()\")  # calls any utility code\n+        # code objects come after the other globals (since they strings and tuples)",
            "html_url": "https://github.com/cython/cython/pull/6028#discussion_r1501401079",
            "id": 1501401079,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5ZfY_3",
            "original_commit_id": "2515608a41f68f4053f0b5d7ea09de1303225044",
            "original_line": 3114,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 1899399395,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6028",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501401079/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-24T11:11:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501401079",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6028#discussion_r1501403740"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6028"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1501403740"
                }
            },
            "author_association": "MEMBER",
            "body": "Didn't you write in the stringtab discussion that local arrays produce a lot of code?\r\nMost of the values are constants, and e.g. for string constants (and tuples), you could store the string's index in the string table (as you do for the file name) and pass the module's string table into the init function, to avoid a dependency on any init-time created pointers. That would make the code object table static data.",
            "commit_id": "eb8ce41988a0f5b32d79da42795ef641d66b8839",
            "created_at": "2024-02-24T11:07:00Z",
            "diff_hunk": "@@ -1666,6 +1674,65 @@ def generate_string_constants(self):\n                     Naming.stringtab_cname,\n                     init_constants.error_goto(self.module_pos)))\n \n+    def generate_codeobject_constants(self):\n+        # TODO:\n+        # There will be a significant optimization here once we've got rid of the\n+        # global \"#define\"s pointing into the module state. When this is done the\n+        # references to constants in the code object table can be done using\n+        # offsetof, and it can be defined as a C constant global.\n+        # For now it must be defined as a function local.\n+        self.parts['decls'].putln(\"static int __Pyx_CreateCodeTabAndInitCode(void); /* proto */\")\n+\n+        w = self.parts['pycodeobj_table']\n+        w.putln(\"static int __Pyx_CreateCodeTabAndInitCode(void) {\")\n+\n+        if not self.codeobject_constants:\n+            w.putln(\"}\")\n+            return\n+\n+        self.use_utility_code(UtilityCode.load_cached(\"InitCodeObjs\", \"ModuleSetupCode.c\"))\n+\n+        self.parts['module_state'].putln(\"PyObject *%s[%s];\" % (\n+                Naming.codeobjtab_cname, len(self.codeobject_constants)))\n+\n+        self.parts['module_state_clear'].putln(\"for (int n=0; n<%s; ++n) {\" %\n+                                               len(self.codeobject_constants))\n+        self.parts['module_state_clear'].putln(\"Py_CLEAR(clear_module_state->%s[n]);\" %\n+            Naming.codeobjtab_cname)\n+        self.parts['module_state_clear'].putln(\"}\")\n+        self.parts['module_state_traverse'].putln(\"for (int n=0; n<%s; ++n) {\" %\n+                                                  len(self.codeobject_constants))\n+        self.parts['module_state_traverse'].putln(\"Py_VISIT(traverse_module_state->%s[n]);\" %\n+            Naming.codeobjtab_cname)\n+        self.parts['module_state_traverse'].putln(\"}\")\n+\n+        self.parts['module_state_defines'].putln(\"#define %s %s->%s\" % (\n+            Naming.codeobjtab_cname, Naming.modulestateglobal_cname, Naming.codeobjtab_cname\n+        ))\n+\n+        w.putln(\"__Pyx_CodeObjectTabEntry tab[] = {\")",
            "html_url": "https://github.com/cython/cython/pull/6028#discussion_r1501403740",
            "id": 1501403740,
            "line": 1767,
            "node_id": "PRRC_kwDOABDGAc5ZfZpc",
            "original_commit_id": "2515608a41f68f4053f0b5d7ea09de1303225044",
            "original_line": 1713,
            "original_position": 76,
            "original_start_line": null,
            "path": "Cython/Compiler/Code.py",
            "position": 85,
            "pull_request_review_id": 1899399395,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6028",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501403740/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-24T11:11:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501403740",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6028#discussion_r1501406666"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6028"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1501406666"
                }
            },
            "author_association": "MEMBER",
            "body": "This is largely the comment at the start of the function:\r\n\r\n```\r\n         # TODO:\r\n        # There will be a significant optimization here once we've got rid of the\r\n        # global \"#define\"s pointing into the module state. When this is done the\r\n        # references to constants in the code object table can be done using\r\n        # offsetof, and it can be defined as a C constant global.\r\n        # For now it must be defined as a function local.\r\n```\r\n\r\nI think the string index is a bit awkward because they're in a `dict` (which is only kind of ordered, and not for all Python versions). And it doesn't work for tuples.\r\n\r\nMy conclusion was that it's easy to fix to do well after https://github.com/cython/cython/pull/5323/files and the local array is still an improvement for now.",
            "commit_id": "eb8ce41988a0f5b32d79da42795ef641d66b8839",
            "created_at": "2024-02-24T11:16:41Z",
            "diff_hunk": "@@ -1666,6 +1674,65 @@ def generate_string_constants(self):\n                     Naming.stringtab_cname,\n                     init_constants.error_goto(self.module_pos)))\n \n+    def generate_codeobject_constants(self):\n+        # TODO:\n+        # There will be a significant optimization here once we've got rid of the\n+        # global \"#define\"s pointing into the module state. When this is done the\n+        # references to constants in the code object table can be done using\n+        # offsetof, and it can be defined as a C constant global.\n+        # For now it must be defined as a function local.\n+        self.parts['decls'].putln(\"static int __Pyx_CreateCodeTabAndInitCode(void); /* proto */\")\n+\n+        w = self.parts['pycodeobj_table']\n+        w.putln(\"static int __Pyx_CreateCodeTabAndInitCode(void) {\")\n+\n+        if not self.codeobject_constants:\n+            w.putln(\"}\")\n+            return\n+\n+        self.use_utility_code(UtilityCode.load_cached(\"InitCodeObjs\", \"ModuleSetupCode.c\"))\n+\n+        self.parts['module_state'].putln(\"PyObject *%s[%s];\" % (\n+                Naming.codeobjtab_cname, len(self.codeobject_constants)))\n+\n+        self.parts['module_state_clear'].putln(\"for (int n=0; n<%s; ++n) {\" %\n+                                               len(self.codeobject_constants))\n+        self.parts['module_state_clear'].putln(\"Py_CLEAR(clear_module_state->%s[n]);\" %\n+            Naming.codeobjtab_cname)\n+        self.parts['module_state_clear'].putln(\"}\")\n+        self.parts['module_state_traverse'].putln(\"for (int n=0; n<%s; ++n) {\" %\n+                                                  len(self.codeobject_constants))\n+        self.parts['module_state_traverse'].putln(\"Py_VISIT(traverse_module_state->%s[n]);\" %\n+            Naming.codeobjtab_cname)\n+        self.parts['module_state_traverse'].putln(\"}\")\n+\n+        self.parts['module_state_defines'].putln(\"#define %s %s->%s\" % (\n+            Naming.codeobjtab_cname, Naming.modulestateglobal_cname, Naming.codeobjtab_cname\n+        ))\n+\n+        w.putln(\"__Pyx_CodeObjectTabEntry tab[] = {\")",
            "html_url": "https://github.com/cython/cython/pull/6028#discussion_r1501406666",
            "id": 1501406666,
            "in_reply_to_id": 1501403740,
            "line": 1767,
            "node_id": "PRRC_kwDOABDGAc5ZfaXK",
            "original_commit_id": "2515608a41f68f4053f0b5d7ea09de1303225044",
            "original_line": 1713,
            "original_position": 76,
            "original_start_line": null,
            "path": "Cython/Compiler/Code.py",
            "position": 85,
            "pull_request_review_id": 1899402231,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6028",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501406666/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-24T11:16:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501406666",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6028#discussion_r1501678482"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6028"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1501678482"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    code_object_data = collections.namedtuple(\r\n        \"code_object_data\",\r\n```",
            "commit_id": "eb8ce41988a0f5b32d79da42795ef641d66b8839",
            "created_at": "2024-02-24T18:29:01Z",
            "diff_hunk": "@@ -10137,6 +10138,12 @@ class CodeObjectNode(ExprNode):\n     is_temp = False\n     result_code = None\n \n+    const_data_type = collections.namedtuple(\n+        \"const_data_type\",",
            "html_url": "https://github.com/cython/cython/pull/6028#discussion_r1501678482",
            "id": 1501678482,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5ZgcuS",
            "original_commit_id": "cfdb59f088817ebc89232b48d78cebf131558f9a",
            "original_line": 10142,
            "original_position": 13,
            "original_start_line": 10141,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1899550983,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6028",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501678482/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-24T18:42:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501678482",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6028#discussion_r1501678497"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6028"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1501678497"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        data = self.code_object_data(\r\n```",
            "commit_id": "eb8ce41988a0f5b32d79da42795ef641d66b8839",
            "created_at": "2024-02-24T18:29:14Z",
            "diff_hunk": "@@ -10186,25 +10190,18 @@ def generate_result_code(self, code):\n         elif self.def_node.is_generator:\n             flags.append('CO_GENERATOR')\n \n-        code.putln(\"%s = (PyObject*)__Pyx_PyCode_New(%d, %d, %d, %d, 0, %s, %s, %s, %s, %s, %s, %s, %s, %s, %d, %s); %s\" % (\n-            self.result_code,\n-            len(func.args) - func.num_kwonly_args,  # argcount\n-            func.num_posonly_args,     # posonlyargcount (Py3.8+ only)\n-            func.num_kwonly_args,      # kwonlyargcount (Py3 only)\n-            len(self.varnames.args),   # nlocals\n-            '|'.join(flags) or '0',    # flags\n-            Naming.empty_bytes,        # code\n-            Naming.empty_tuple,        # consts\n-            Naming.empty_tuple,        # names (FIXME)\n-            self.varnames.result(),    # varnames\n-            Naming.empty_tuple,        # freevars (FIXME)\n-            Naming.empty_tuple,        # cellvars (FIXME)\n-            file_path_const,           # filename\n-            func_name,                 # name\n-            self.pos[1],               # firstlineno\n-            Naming.empty_bytes,        # lnotab\n-            code.error_goto_if_null(self.result_code, self.pos),\n-            ))\n+        data = self.const_data_type(",
            "html_url": "https://github.com/cython/cython/pull/6028#discussion_r1501678497",
            "id": 1501678497,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5Zgcuh",
            "original_commit_id": "cfdb59f088817ebc89232b48d78cebf131558f9a",
            "original_line": 10193,
            "original_position": 65,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1899550983,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6028",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501678497/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-24T18:42:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501678497",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6028#discussion_r1501678579"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6028"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1501678579"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            num_posonly_args=func.num_posonly_args,  # Py3.8+ only\r\n```",
            "commit_id": "eb8ce41988a0f5b32d79da42795ef641d66b8839",
            "created_at": "2024-02-24T18:30:05Z",
            "diff_hunk": "@@ -10186,25 +10190,18 @@ def generate_result_code(self, code):\n         elif self.def_node.is_generator:\n             flags.append('CO_GENERATOR')\n \n-        code.putln(\"%s = (PyObject*)__Pyx_PyCode_New(%d, %d, %d, %d, 0, %s, %s, %s, %s, %s, %s, %s, %s, %s, %d, %s); %s\" % (\n-            self.result_code,\n-            len(func.args) - func.num_kwonly_args,  # argcount\n-            func.num_posonly_args,     # posonlyargcount (Py3.8+ only)\n-            func.num_kwonly_args,      # kwonlyargcount (Py3 only)\n-            len(self.varnames.args),   # nlocals\n-            '|'.join(flags) or '0',    # flags\n-            Naming.empty_bytes,        # code\n-            Naming.empty_tuple,        # consts\n-            Naming.empty_tuple,        # names (FIXME)\n-            self.varnames.result(),    # varnames\n-            Naming.empty_tuple,        # freevars (FIXME)\n-            Naming.empty_tuple,        # cellvars (FIXME)\n-            file_path_const,           # filename\n-            func_name,                 # name\n-            self.pos[1],               # firstlineno\n-            Naming.empty_bytes,        # lnotab\n-            code.error_goto_if_null(self.result_code, self.pos),\n-            ))\n+        data = self.const_data_type(\n+            pos=self.pos,\n+            argcount=len(func.args) - func.num_kwonly_args,\n+            num_posonly_args=func.num_posonly_args, # Py3.8+ only",
            "html_url": "https://github.com/cython/cython/pull/6028#discussion_r1501678579",
            "id": 1501678579,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5Zgcvz",
            "original_commit_id": "cfdb59f088817ebc89232b48d78cebf131558f9a",
            "original_line": 10196,
            "original_position": 68,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1899550983,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6028",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501678579/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-24T18:42:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501678579",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6028#discussion_r1501679861"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6028"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1501679861"
                }
            },
            "author_association": "MEMBER",
            "body": "Why not pass the `CodeObjectNode` as argument and build an ordered list of those nodes here? Then the `ModuleNode` could simply call a dedicated code generation method on each of those CO nodes and the whole CO table filling would be done by the `CodeObjectNode` implementation, rather than being split across two nodes in two different files that need to exchange structured data to do their work correctly.",
            "commit_id": "eb8ce41988a0f5b32d79da42795ef641d66b8839",
            "created_at": "2024-02-24T18:39:30Z",
            "diff_hunk": "@@ -1411,6 +1413,15 @@ def get_py_string_const(self, text, identifier=None,\n             text.encoding, identifier, is_str, py3str_cstring)\n         return py_string\n \n+    def get_py_codeobj_const_cname(self):\n+        idx = len(self.codeobject_constants)\n+        name = f\"{Naming.codeobjtab_cname}[{idx}]\"\n+        self.codeobject_constants[name] = None\n+        return name",
            "html_url": "https://github.com/cython/cython/pull/6028#discussion_r1501679861",
            "id": 1501679861,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5ZgdD1",
            "original_commit_id": "cfdb59f088817ebc89232b48d78cebf131558f9a",
            "original_line": 1420,
            "original_position": 24,
            "original_start_line": 1416,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 1899550983,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6028",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501679861/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-24T18:42:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501679861",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6028#discussion_r1501799746"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6028"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1501799746"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        # Note that the iteration relies on nodes being insertion ordered.\r\n```",
            "commit_id": "eb8ce41988a0f5b32d79da42795ef641d66b8839",
            "created_at": "2024-02-25T11:25:44Z",
            "diff_hunk": "@@ -1715,6 +1724,56 @@ def normalise_encoding_name(py_string):\n                 Naming.stringtab_encodings_cname,\n                 init_constants.error_goto(self.module_pos)))\n \n+    def generate_codeobject_constants(self):\n+        # TODO:\n+        # There will be a significant optimization here once we've got rid of the\n+        # global \"#define\"s pointing into the module state. When this is done the\n+        # references to constants in the code object table can be done using\n+        # offsetof, and it can be defined as a C constant global.\n+        # For now it must be defined as a function local.\n+        self.parts['decls'].putln(\"static int __Pyx_CreateCodeTabAndInitCode(void); /* proto */\")\n+\n+        w = self.parts['pycodeobj_table']\n+        w.putln(\"static int __Pyx_CreateCodeTabAndInitCode(void) {\")\n+\n+        if not self.codeobject_constants:\n+            w.putln(\"return 0;\")\n+            w.putln(\"}\")\n+            return\n+\n+        self.use_utility_code(UtilityCode.load_cached(\"InitCodeObjs\", \"ModuleSetupCode.c\"))\n+\n+        self.parts['module_state'].putln(\"PyObject *%s[%s];\" % (\n+                Naming.codeobjtab_cname, len(self.codeobject_constants)))\n+\n+        self.parts['module_state_clear'].putln(\"for (int n=0; n<%s; ++n) {\" %\n+                                               len(self.codeobject_constants))\n+        self.parts['module_state_clear'].putln(\"Py_CLEAR(clear_module_state->%s[n]);\" %\n+            Naming.codeobjtab_cname)\n+        self.parts['module_state_clear'].putln(\"}\")\n+        self.parts['module_state_traverse'].putln(\"for (int n=0; n<%s; ++n) {\" %\n+                                                  len(self.codeobject_constants))\n+        self.parts['module_state_traverse'].putln(\"Py_VISIT(traverse_module_state->%s[n]);\" %\n+            Naming.codeobjtab_cname)\n+        self.parts['module_state_traverse'].putln(\"}\")\n+\n+        self.parts['module_state_defines'].putln(\"#define %s %s->%s\" % (\n+            Naming.codeobjtab_cname, Naming.modulestateglobal_cname, Naming.codeobjtab_cname\n+        ))\n+\n+        w.putln(\"__Pyx_CodeObjectTabEntry tab[] = {\")\n+        # Note that the iteration relies on dicts being insertion ordered",
            "html_url": "https://github.com/cython/cython/pull/6028#discussion_r1501799746",
            "id": 1501799746,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5Zg6VC",
            "original_commit_id": "4706fa6071726d11d503f0669814d03d0ef8b677",
            "original_line": 1765,
            "original_position": 79,
            "original_start_line": null,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 1899656604,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6028",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501799746/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-25T11:49:05Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501799746",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6028#discussion_r1501799942"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6028"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1501799942"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "eb8ce41988a0f5b32d79da42795ef641d66b8839",
            "created_at": "2024-02-25T11:26:49Z",
            "diff_hunk": "@@ -20,6 +20,7 @@\n import copy\n import os.path\n import operator\n+import collections",
            "html_url": "https://github.com/cython/cython/pull/6028#discussion_r1501799942",
            "id": 1501799942,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5Zg6YG",
            "original_commit_id": "4706fa6071726d11d503f0669814d03d0ef8b677",
            "original_line": 23,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1899656604,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6028",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501799942/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-25T11:49:05Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501799942",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6028#discussion_r1501800132"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6028"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1501800132"
                }
            },
            "author_association": "MEMBER",
            "body": "\"Already generated\" when `result_code` is None?",
            "commit_id": "eb8ce41988a0f5b32d79da42795ef641d66b8839",
            "created_at": "2024-02-25T11:27:49Z",
            "diff_hunk": "@@ -10154,57 +10155,52 @@ def may_be_none(self):\n \n     def calculate_result_code(self, code=None):\n         if self.result_code is None:\n-            self.result_code = code.get_py_const(py_object_type, 'codeobj', cleanup_level=2)\n+            self.result_code = code.get_py_codeobj_const(self)\n         return self.result_code\n \n     def generate_result_code(self, code):\n         if self.result_code is None:\n-            self.result_code = code.get_py_const(py_object_type, 'codeobj', cleanup_level=2)\n+            # cname already generated",
            "html_url": "https://github.com/cython/cython/pull/6028#discussion_r1501800132",
            "id": 1501800132,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5Zg6bE",
            "original_commit_id": "4706fa6071726d11d503f0669814d03d0ef8b677",
            "original_line": 10163,
            "original_position": 19,
            "original_start_line": 10162,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1899656604,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6028",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501800132/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-25T11:49:05Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501800132",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6028#discussion_r1501801012"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6028"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1501801012"
                }
            },
            "author_association": "MEMBER",
            "body": "Can't the values of these attributes also be created locally in `generate_codeobj_tab_entry`? They don't seems to be special in any way, or dependent on any local state in this method.",
            "commit_id": "eb8ce41988a0f5b32d79da42795ef641d66b8839",
            "created_at": "2024-02-25T11:33:36Z",
            "diff_hunk": "@@ -10154,57 +10155,52 @@ def may_be_none(self):\n \n     def calculate_result_code(self, code=None):\n         if self.result_code is None:\n-            self.result_code = code.get_py_const(py_object_type, 'codeobj', cleanup_level=2)\n+            self.result_code = code.get_py_codeobj_const(self)\n         return self.result_code\n \n     def generate_result_code(self, code):\n         if self.result_code is None:\n-            self.result_code = code.get_py_const(py_object_type, 'codeobj', cleanup_level=2)\n+            # cname already generated\n+            self.result_code = code.get_py_codeobj_const(self)\n \n-        code = code.get_cached_constants_writer(self.result_code)\n-        if code is None:\n-            return  # already initialised\n-        code.mark_pos(self.pos)\n         func = self.def_node\n-        func_name = code.get_py_string_const(\n+        self.func_name_result = code.get_py_string_const(\n             func.name, identifier=True, is_str=False, unicode_value=func.name)\n         # FIXME: better way to get the module file path at module init time? Encoding to use?\n         file_path = StringEncoding.bytes_literal(func.pos[0].get_filenametable_entry().encode('utf8'), 'utf8')\n-        file_path_const = code.get_py_string_const(file_path, identifier=False, is_str=True)\n+        self.file_path_result = code.get_py_string_const(file_path, identifier=False, is_str=True)\n+\n+        self.varnames_result = self.varnames.result()",
            "html_url": "https://github.com/cython/cython/pull/6028#discussion_r1501801012",
            "id": 1501801012,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5Zg6o0",
            "original_commit_id": "4706fa6071726d11d503f0669814d03d0ef8b677",
            "original_line": 10173,
            "original_position": 35,
            "original_start_line": 10169,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1899656604,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6028",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501801012/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2024-02-25T11:49:05Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501801012",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6028#discussion_r1501804072"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6028"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1501804072"
                }
            },
            "author_association": "MEMBER",
            "body": "It's more than I think it'd probably be too late to generate them in `generate_codeobj_tab_entry` because we've probably already written the stringtab by then. I'll add a comment though because it isn't obvious",
            "commit_id": "eb8ce41988a0f5b32d79da42795ef641d66b8839",
            "created_at": "2024-02-25T11:51:22Z",
            "diff_hunk": "@@ -10154,57 +10155,52 @@ def may_be_none(self):\n \n     def calculate_result_code(self, code=None):\n         if self.result_code is None:\n-            self.result_code = code.get_py_const(py_object_type, 'codeobj', cleanup_level=2)\n+            self.result_code = code.get_py_codeobj_const(self)\n         return self.result_code\n \n     def generate_result_code(self, code):\n         if self.result_code is None:\n-            self.result_code = code.get_py_const(py_object_type, 'codeobj', cleanup_level=2)\n+            # cname already generated\n+            self.result_code = code.get_py_codeobj_const(self)\n \n-        code = code.get_cached_constants_writer(self.result_code)\n-        if code is None:\n-            return  # already initialised\n-        code.mark_pos(self.pos)\n         func = self.def_node\n-        func_name = code.get_py_string_const(\n+        self.func_name_result = code.get_py_string_const(\n             func.name, identifier=True, is_str=False, unicode_value=func.name)\n         # FIXME: better way to get the module file path at module init time? Encoding to use?\n         file_path = StringEncoding.bytes_literal(func.pos[0].get_filenametable_entry().encode('utf8'), 'utf8')\n-        file_path_const = code.get_py_string_const(file_path, identifier=False, is_str=True)\n+        self.file_path_result = code.get_py_string_const(file_path, identifier=False, is_str=True)\n+\n+        self.varnames_result = self.varnames.result()",
            "html_url": "https://github.com/cython/cython/pull/6028#discussion_r1501804072",
            "id": 1501804072,
            "in_reply_to_id": 1501801012,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5Zg7Yo",
            "original_commit_id": "4706fa6071726d11d503f0669814d03d0ef8b677",
            "original_line": 10173,
            "original_position": 35,
            "original_start_line": 10169,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1899660841,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6028",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501804072/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2024-02-25T11:51:22Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501804072",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6028#discussion_r1501804142"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6028"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1501804142"
                }
            },
            "author_association": "MEMBER",
            "body": "Comment should probably just go I think",
            "commit_id": "eb8ce41988a0f5b32d79da42795ef641d66b8839",
            "created_at": "2024-02-25T11:52:07Z",
            "diff_hunk": "@@ -1715,6 +1724,56 @@ def normalise_encoding_name(py_string):\n                 Naming.stringtab_encodings_cname,\n                 init_constants.error_goto(self.module_pos)))\n \n+    def generate_codeobject_constants(self):\n+        # TODO:\n+        # There will be a significant optimization here once we've got rid of the\n+        # global \"#define\"s pointing into the module state. When this is done the\n+        # references to constants in the code object table can be done using\n+        # offsetof, and it can be defined as a C constant global.\n+        # For now it must be defined as a function local.\n+        self.parts['decls'].putln(\"static int __Pyx_CreateCodeTabAndInitCode(void); /* proto */\")\n+\n+        w = self.parts['pycodeobj_table']\n+        w.putln(\"static int __Pyx_CreateCodeTabAndInitCode(void) {\")\n+\n+        if not self.codeobject_constants:\n+            w.putln(\"return 0;\")\n+            w.putln(\"}\")\n+            return\n+\n+        self.use_utility_code(UtilityCode.load_cached(\"InitCodeObjs\", \"ModuleSetupCode.c\"))\n+\n+        self.parts['module_state'].putln(\"PyObject *%s[%s];\" % (\n+                Naming.codeobjtab_cname, len(self.codeobject_constants)))\n+\n+        self.parts['module_state_clear'].putln(\"for (int n=0; n<%s; ++n) {\" %\n+                                               len(self.codeobject_constants))\n+        self.parts['module_state_clear'].putln(\"Py_CLEAR(clear_module_state->%s[n]);\" %\n+            Naming.codeobjtab_cname)\n+        self.parts['module_state_clear'].putln(\"}\")\n+        self.parts['module_state_traverse'].putln(\"for (int n=0; n<%s; ++n) {\" %\n+                                                  len(self.codeobject_constants))\n+        self.parts['module_state_traverse'].putln(\"Py_VISIT(traverse_module_state->%s[n]);\" %\n+            Naming.codeobjtab_cname)\n+        self.parts['module_state_traverse'].putln(\"}\")\n+\n+        self.parts['module_state_defines'].putln(\"#define %s %s->%s\" % (\n+            Naming.codeobjtab_cname, Naming.modulestateglobal_cname, Naming.codeobjtab_cname\n+        ))\n+\n+        w.putln(\"__Pyx_CodeObjectTabEntry tab[] = {\")\n+        # Note that the iteration relies on dicts being insertion ordered",
            "html_url": "https://github.com/cython/cython/pull/6028#discussion_r1501804142",
            "id": 1501804142,
            "in_reply_to_id": 1501799746,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5Zg7Zu",
            "original_commit_id": "4706fa6071726d11d503f0669814d03d0ef8b677",
            "original_line": 1765,
            "original_position": 79,
            "original_start_line": null,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 1899660959,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6028",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501804142/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-25T11:52:07Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1501804142",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6028#discussion_r1502429293"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6028"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1502429293"
                }
            },
            "author_association": "MEMBER",
            "body": "Not sure. The string tab has its own position in the code sections and even utility code that comes in during code generation can still add strings to it. Have you tried it?",
            "commit_id": "eb8ce41988a0f5b32d79da42795ef641d66b8839",
            "created_at": "2024-02-26T11:05:54Z",
            "diff_hunk": "@@ -10154,57 +10155,52 @@ def may_be_none(self):\n \n     def calculate_result_code(self, code=None):\n         if self.result_code is None:\n-            self.result_code = code.get_py_const(py_object_type, 'codeobj', cleanup_level=2)\n+            self.result_code = code.get_py_codeobj_const(self)\n         return self.result_code\n \n     def generate_result_code(self, code):\n         if self.result_code is None:\n-            self.result_code = code.get_py_const(py_object_type, 'codeobj', cleanup_level=2)\n+            # cname already generated\n+            self.result_code = code.get_py_codeobj_const(self)\n \n-        code = code.get_cached_constants_writer(self.result_code)\n-        if code is None:\n-            return  # already initialised\n-        code.mark_pos(self.pos)\n         func = self.def_node\n-        func_name = code.get_py_string_const(\n+        self.func_name_result = code.get_py_string_const(\n             func.name, identifier=True, is_str=False, unicode_value=func.name)\n         # FIXME: better way to get the module file path at module init time? Encoding to use?\n         file_path = StringEncoding.bytes_literal(func.pos[0].get_filenametable_entry().encode('utf8'), 'utf8')\n-        file_path_const = code.get_py_string_const(file_path, identifier=False, is_str=True)\n+        self.file_path_result = code.get_py_string_const(file_path, identifier=False, is_str=True)\n+\n+        self.varnames_result = self.varnames.result()",
            "html_url": "https://github.com/cython/cython/pull/6028#discussion_r1502429293",
            "id": 1502429293,
            "in_reply_to_id": 1501801012,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5ZjUBt",
            "original_commit_id": "4706fa6071726d11d503f0669814d03d0ef8b677",
            "original_line": 10173,
            "original_position": 35,
            "original_start_line": 10169,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1900583274,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6028",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1502429293/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2024-02-26T11:05:54Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1502429293",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6028#discussion_r1502436728"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6028"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1502436728"
                }
            },
            "author_association": "MEMBER",
            "body": "I tried moving the string tab and integer constant generation calls last in `generate_const_declarations` and it still worked for me. That's probably a good idea anyway, the simpler the constants, the more chances we should give move elaborate code to make use of them.\r\n\r\n```patch\r\ndiff --git a/Cython/Compiler/Code.py b/Cython/Compiler/Code.py\r\nindex eb41b8065..37ed1e61c 100644\r\n--- a/Cython/Compiler/Code.py\r\n+++ b/Cython/Compiler/Code.py\r\n@@ -1523,9 +1523,9 @@ class GlobalState:\r\n \r\n     def generate_const_declarations(self):\r\n         self.generate_cached_methods_decls()\r\n+        self.generate_object_constant_decls()\r\n         self.generate_string_constants()\r\n         self.generate_num_constants()\r\n-        self.generate_object_constant_decls()\r\n \r\n     def generate_object_constant_decls(self):\r\n         consts = [(len(c.cname), c.cname, c)\r\n```",
            "commit_id": "eb8ce41988a0f5b32d79da42795ef641d66b8839",
            "created_at": "2024-02-26T11:12:23Z",
            "diff_hunk": "@@ -10154,57 +10155,52 @@ def may_be_none(self):\n \n     def calculate_result_code(self, code=None):\n         if self.result_code is None:\n-            self.result_code = code.get_py_const(py_object_type, 'codeobj', cleanup_level=2)\n+            self.result_code = code.get_py_codeobj_const(self)\n         return self.result_code\n \n     def generate_result_code(self, code):\n         if self.result_code is None:\n-            self.result_code = code.get_py_const(py_object_type, 'codeobj', cleanup_level=2)\n+            # cname already generated\n+            self.result_code = code.get_py_codeobj_const(self)\n \n-        code = code.get_cached_constants_writer(self.result_code)\n-        if code is None:\n-            return  # already initialised\n-        code.mark_pos(self.pos)\n         func = self.def_node\n-        func_name = code.get_py_string_const(\n+        self.func_name_result = code.get_py_string_const(\n             func.name, identifier=True, is_str=False, unicode_value=func.name)\n         # FIXME: better way to get the module file path at module init time? Encoding to use?\n         file_path = StringEncoding.bytes_literal(func.pos[0].get_filenametable_entry().encode('utf8'), 'utf8')\n-        file_path_const = code.get_py_string_const(file_path, identifier=False, is_str=True)\n+        self.file_path_result = code.get_py_string_const(file_path, identifier=False, is_str=True)\n+\n+        self.varnames_result = self.varnames.result()",
            "html_url": "https://github.com/cython/cython/pull/6028#discussion_r1502436728",
            "id": 1502436728,
            "in_reply_to_id": 1501801012,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc5ZjV14",
            "original_commit_id": "4706fa6071726d11d503f0669814d03d0ef8b677",
            "original_line": 10173,
            "original_position": 35,
            "original_start_line": 10169,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1900595292,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6028",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1502436728/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2024-02-26T11:12:23Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1502436728",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6028/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/99a17f194df2299bc170a7245cd0425c20a4a53b/comments",
            "commit": {
                "author": {
                    "date": "2024-02-24T10:00:31Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2024-02-24T10:00:31Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Initialize code objects with loop over table\n\nHopefully helps with https://github.com/cython/cython/issues/4425.\n\nIt reduces binary object size by ~0.5% (module-dependent of course).\n\nCode objects can be initialized after all other Python constants\nbecause no other literals can depend on them. Unfortunately I\nwasn't able to use a module-level constant global table for them\nbecause I was fighting with the module name defines.\nThat's an improvement for the future when we've got further with\nmodule-state.",
                "tree": {
                    "sha": "1575207eb1499867ae1b9d23db4a6bce4a67639a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1575207eb1499867ae1b9d23db4a6bce4a67639a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/99a17f194df2299bc170a7245cd0425c20a4a53b",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/99a17f194df2299bc170a7245cd0425c20a4a53b",
            "node_id": "C_kwDOAhr4b9oAKDk5YTE3ZjE5NGRmMjI5OWJjMTcwYTcyNDVjZDA0MjVjMjBhNGE1M2I",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c5e250049a1a18cd32cd7b0ab80e8fa58310e672",
                    "sha": "c5e250049a1a18cd32cd7b0ab80e8fa58310e672",
                    "url": "https://api.github.com/repos/cython/cython/commits/c5e250049a1a18cd32cd7b0ab80e8fa58310e672"
                }
            ],
            "sha": "99a17f194df2299bc170a7245cd0425c20a4a53b",
            "url": "https://api.github.com/repos/cython/cython/commits/99a17f194df2299bc170a7245cd0425c20a4a53b"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2515608a41f68f4053f0b5d7ea09de1303225044/comments",
            "commit": {
                "author": {
                    "date": "2024-02-24T10:29:07Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2024-02-24T10:29:07Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Spelling and comment for objname",
                "tree": {
                    "sha": "d9469373782455b3b6280598884e1d59eb512c88",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d9469373782455b3b6280598884e1d59eb512c88"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2515608a41f68f4053f0b5d7ea09de1303225044",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/2515608a41f68f4053f0b5d7ea09de1303225044",
            "node_id": "C_kwDOAhr4b9oAKDI1MTU2MDhhNDFmNjhmNDA1M2YwYjVkN2VhMDlkZTEzMDMyMjUwNDQ",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/99a17f194df2299bc170a7245cd0425c20a4a53b",
                    "sha": "99a17f194df2299bc170a7245cd0425c20a4a53b",
                    "url": "https://api.github.com/repos/cython/cython/commits/99a17f194df2299bc170a7245cd0425c20a4a53b"
                }
            ],
            "sha": "2515608a41f68f4053f0b5d7ea09de1303225044",
            "url": "https://api.github.com/repos/cython/cython/commits/2515608a41f68f4053f0b5d7ea09de1303225044"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ee074f5758564aa4dc52af348eb0416d116708a4/comments",
            "commit": {
                "author": {
                    "date": "2024-02-24T10:58:46Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2024-02-24T10:58:46Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'master' into codeobj-table",
                "tree": {
                    "sha": "bd9bc4c3e7ab6ac3351619714a43c37dcc1c5cc9",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/bd9bc4c3e7ab6ac3351619714a43c37dcc1c5cc9"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ee074f5758564aa4dc52af348eb0416d116708a4",
                "verification": {
                    "payload": "tree bd9bc4c3e7ab6ac3351619714a43c37dcc1c5cc9\nparent 2515608a41f68f4053f0b5d7ea09de1303225044\nparent e6c621a91265d94a6c0dad9975e85b46c493706d\nauthor da-woods <dw-git@d-woods.co.uk> 1708772326 +0000\ncommitter GitHub <noreply@github.com> 1708772326 +0000\n\nMerge branch 'master' into codeobj-table",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJl2cvmCRC1aQ7uu5UhlAAAeRMQABw5nR4EMg7e9CaPpR7RCbqD\nMNWmFehwqVxLg2DG89C2ra/ywcNMiBnrN/PsKmMEGSaocD8HJ/gmUFXuWTdDBWDd\nwkhtKNz9ifqYhJPY9ZnCIlVBqOCMCKil1M/67xB63ZPnYn637TC8ThyhYv8vDtsi\nldUyCEbc7cOltMwAJnR5UkspVOhtjUGgagzt+4rd0qWfv6yOBzxlEbatdbxxyrwq\nqgh4lu2RsHwYhyj14xB+X2KRNbApfgTAgpw/GY/6LWIT1p9XJPlZb/J7xF9UkYkx\njbpVbW6L1udlFyD/D2efzl8WpDf455JcCnHMPWRYkaG0R0mtahQWbk6pb694m5Tj\nev+TeqWc4cv12ZV5z3gfb9WR2hzLdm7W+wcqSvqFQKu2iKodi3WvMna9f6/w//Yh\nPVd36NBH/nq7K908SOO4XB/P4DMEGpTEBHpOG8IM9nDDKpwPmgeECViwwdM2emsW\nyoyNZAcvyMmActGEZb/UU3toGJ1ub5DaOX3V/RFBaj4hmGdIB04AtYQjwnCmYasw\ndG3+9xta0vw4Wk36jZ4fvqYcPttajFjcUeNxTOzyXF9pY1i6O0qVKQpt60PQu30N\nypd7NxRDqfKh+Yv8XvapMvKDlpjybBSA8r9vGNsL/A6nA8H4+CkeG0gxVEc6ca5g\nTvzn4AsxqZgVTivVNB+X\n=4uW+\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/ee074f5758564aa4dc52af348eb0416d116708a4",
            "node_id": "C_kwDOAhr4b9oAKGVlMDc0ZjU3NTg1NjRhYTRkYzUyYWYzNDhlYjA0MTZkMTE2NzA4YTQ",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2515608a41f68f4053f0b5d7ea09de1303225044",
                    "sha": "2515608a41f68f4053f0b5d7ea09de1303225044",
                    "url": "https://api.github.com/repos/cython/cython/commits/2515608a41f68f4053f0b5d7ea09de1303225044"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/e6c621a91265d94a6c0dad9975e85b46c493706d",
                    "sha": "e6c621a91265d94a6c0dad9975e85b46c493706d",
                    "url": "https://api.github.com/repos/cython/cython/commits/e6c621a91265d94a6c0dad9975e85b46c493706d"
                }
            ],
            "sha": "ee074f5758564aa4dc52af348eb0416d116708a4",
            "url": "https://api.github.com/repos/cython/cython/commits/ee074f5758564aa4dc52af348eb0416d116708a4"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9c27f09dfd614de9253f42f571ad1133f8163fd5/comments",
            "commit": {
                "author": {
                    "date": "2024-02-24T12:21:54Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2024-02-24T12:21:54Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixes and comments from review",
                "tree": {
                    "sha": "e13165ef159fb75f902d415843da7c34f54cce69",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e13165ef159fb75f902d415843da7c34f54cce69"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9c27f09dfd614de9253f42f571ad1133f8163fd5",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/9c27f09dfd614de9253f42f571ad1133f8163fd5",
            "node_id": "C_kwDOAhr4b9oAKDljMjdmMDlkZmQ2MTRkZTkyNTNmNDJmNTcxYWQxMTMzZjgxNjNmZDU",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ee074f5758564aa4dc52af348eb0416d116708a4",
                    "sha": "ee074f5758564aa4dc52af348eb0416d116708a4",
                    "url": "https://api.github.com/repos/cython/cython/commits/ee074f5758564aa4dc52af348eb0416d116708a4"
                }
            ],
            "sha": "9c27f09dfd614de9253f42f571ad1133f8163fd5",
            "url": "https://api.github.com/repos/cython/cython/commits/9c27f09dfd614de9253f42f571ad1133f8163fd5"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/cfdb59f088817ebc89232b48d78cebf131558f9a/comments",
            "commit": {
                "author": {
                    "date": "2024-02-24T13:44:39Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2024-02-24T13:44:39Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "call later",
                "tree": {
                    "sha": "2362314cfc3cb2aa43fea543de1c17d2dd127f31",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2362314cfc3cb2aa43fea543de1c17d2dd127f31"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/cfdb59f088817ebc89232b48d78cebf131558f9a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/cfdb59f088817ebc89232b48d78cebf131558f9a",
            "node_id": "C_kwDOAhr4b9oAKGNmZGI1OWYwODg4MTdlYmM4OTIzMmI0OGQ3OGNlYmYxMzE1NThmOWE",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9c27f09dfd614de9253f42f571ad1133f8163fd5",
                    "sha": "9c27f09dfd614de9253f42f571ad1133f8163fd5",
                    "url": "https://api.github.com/repos/cython/cython/commits/9c27f09dfd614de9253f42f571ad1133f8163fd5"
                }
            ],
            "sha": "cfdb59f088817ebc89232b48d78cebf131558f9a",
            "url": "https://api.github.com/repos/cython/cython/commits/cfdb59f088817ebc89232b48d78cebf131558f9a"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4706fa6071726d11d503f0669814d03d0ef8b677/comments",
            "commit": {
                "author": {
                    "date": "2024-02-25T11:12:12Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2024-02-25T11:12:12Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Store node on globalstate, generate code from node",
                "tree": {
                    "sha": "d6b1b78c1e96c9cea507cbc3ac52dd971e3f3de0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d6b1b78c1e96c9cea507cbc3ac52dd971e3f3de0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4706fa6071726d11d503f0669814d03d0ef8b677",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/4706fa6071726d11d503f0669814d03d0ef8b677",
            "node_id": "C_kwDOAhr4b9oAKDQ3MDZmYTYwNzE3MjZkMTFkNTAzZjA2Njk4MTRkMDNkMGVmOGI2Nzc",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/cfdb59f088817ebc89232b48d78cebf131558f9a",
                    "sha": "cfdb59f088817ebc89232b48d78cebf131558f9a",
                    "url": "https://api.github.com/repos/cython/cython/commits/cfdb59f088817ebc89232b48d78cebf131558f9a"
                }
            ],
            "sha": "4706fa6071726d11d503f0669814d03d0ef8b677",
            "url": "https://api.github.com/repos/cython/cython/commits/4706fa6071726d11d503f0669814d03d0ef8b677"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/199b87bd7876b2a3592104dd345689a85050e8b9/comments",
            "commit": {
                "author": {
                    "date": "2024-02-25T11:55:16Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2024-02-25T11:55:16Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Comments from review",
                "tree": {
                    "sha": "24ae845f8c5750d600536849ae9872c91bac6ad0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/24ae845f8c5750d600536849ae9872c91bac6ad0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/199b87bd7876b2a3592104dd345689a85050e8b9",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/199b87bd7876b2a3592104dd345689a85050e8b9",
            "node_id": "C_kwDOAhr4b9oAKDE5OWI4N2JkNzg3NmIyYTM1OTIxMDRkZDM0NTY4OWE4NTA1MGU4Yjk",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4706fa6071726d11d503f0669814d03d0ef8b677",
                    "sha": "4706fa6071726d11d503f0669814d03d0ef8b677",
                    "url": "https://api.github.com/repos/cython/cython/commits/4706fa6071726d11d503f0669814d03d0ef8b677"
                }
            ],
            "sha": "199b87bd7876b2a3592104dd345689a85050e8b9",
            "url": "https://api.github.com/repos/cython/cython/commits/199b87bd7876b2a3592104dd345689a85050e8b9"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/675d1fa67b4107e43a8bcdb28f46feed29504bca/comments",
            "commit": {
                "author": {
                    "date": "2024-02-25T11:56:14Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2024-02-25T11:56:14Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Stray import",
                "tree": {
                    "sha": "e83219ffdfa0534ab858586074b57a68bc6a98a6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e83219ffdfa0534ab858586074b57a68bc6a98a6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/675d1fa67b4107e43a8bcdb28f46feed29504bca",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/675d1fa67b4107e43a8bcdb28f46feed29504bca",
            "node_id": "C_kwDOAhr4b9oAKDY3NWQxZmE2N2I0MTA3ZTQzYThiY2RiMjhmNDZmZWVkMjk1MDRiY2E",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/199b87bd7876b2a3592104dd345689a85050e8b9",
                    "sha": "199b87bd7876b2a3592104dd345689a85050e8b9",
                    "url": "https://api.github.com/repos/cython/cython/commits/199b87bd7876b2a3592104dd345689a85050e8b9"
                }
            ],
            "sha": "675d1fa67b4107e43a8bcdb28f46feed29504bca",
            "url": "https://api.github.com/repos/cython/cython/commits/675d1fa67b4107e43a8bcdb28f46feed29504bca"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/eb8ce41988a0f5b32d79da42795ef641d66b8839/comments",
            "commit": {
                "author": {
                    "date": "2024-02-26T21:07:26Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2024-02-26T21:07:26Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Move string constant generation into codetab stage",
                "tree": {
                    "sha": "ba1c7829bf70742bc8ad5bf283579a939907c4c2",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ba1c7829bf70742bc8ad5bf283579a939907c4c2"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/eb8ce41988a0f5b32d79da42795ef641d66b8839",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/eb8ce41988a0f5b32d79da42795ef641d66b8839",
            "node_id": "C_kwDOAhr4b9oAKGViOGNlNDE5ODhhMGY1YjMyZDc5ZGE0Mjc5NWVmNjQxZDY2Yjg4Mzk",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/675d1fa67b4107e43a8bcdb28f46feed29504bca",
                    "sha": "675d1fa67b4107e43a8bcdb28f46feed29504bca",
                    "url": "https://api.github.com/repos/cython/cython/commits/675d1fa67b4107e43a8bcdb28f46feed29504bca"
                }
            ],
            "sha": "eb8ce41988a0f5b32d79da42795ef641d66b8839",
            "url": "https://api.github.com/repos/cython/cython/commits/eb8ce41988a0f5b32d79da42795ef641d66b8839"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/6028/commits",
    "created_at": "2024-02-24T10:04:58Z",
    "diff_url": "https://github.com/cython/cython/pull/6028.diff",
    "draft": false,
    "head": {
        "label": "da-woods:codeobj-table",
        "ref": "codeobj-table",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/da-woods/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/da-woods/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/da-woods/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/da-woods/cython/branches{/branch}",
            "clone_url": "https://github.com/da-woods/cython.git",
            "collaborators_url": "https://api.github.com/repos/da-woods/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/da-woods/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/da-woods/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/da-woods/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/da-woods/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/da-woods/cython/contributors",
            "created_at": "2015-05-09T08:55:00Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/da-woods/cython/deployments",
            "description": "A Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/da-woods/cython/downloads",
            "events_url": "https://api.github.com/repos/da-woods/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/da-woods/cython/forks",
            "full_name": "da-woods/cython",
            "git_commits_url": "https://api.github.com/repos/da-woods/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/da-woods/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/da-woods/cython/git/tags{/sha}",
            "git_url": "git://github.com/da-woods/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/da-woods/cython/hooks",
            "html_url": "https://github.com/da-woods/cython",
            "id": 35321967,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/da-woods/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/da-woods/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/da-woods/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/da-woods/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/da-woods/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/da-woods/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/da-woods/cython/merges",
            "milestones_url": "https://api.github.com/repos/da-woods/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNTMyMTk2Nw==",
            "notifications_url": "https://api.github.com/repos/da-woods/cython/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/da-woods/cython/pulls{/number}",
            "pushed_at": "2024-02-27T06:50:29Z",
            "releases_url": "https://api.github.com/repos/da-woods/cython/releases{/id}",
            "size": 74386,
            "ssh_url": "git@github.com:da-woods/cython.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/da-woods/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/da-woods/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/da-woods/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/da-woods/cython/subscription",
            "svn_url": "https://github.com/da-woods/cython",
            "tags_url": "https://api.github.com/repos/da-woods/cython/tags",
            "teams_url": "https://api.github.com/repos/da-woods/cython/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/da-woods/cython/git/trees{/sha}",
            "updated_at": "2022-08-11T09:03:48Z",
            "url": "https://api.github.com/repos/da-woods/cython",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "eb8ce41988a0f5b32d79da42795ef641d66b8839",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
            "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
            "followers_url": "https://api.github.com/users/da-woods/followers",
            "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
            "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/da-woods",
            "id": 10536947,
            "login": "da-woods",
            "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
            "organizations_url": "https://api.github.com/users/da-woods/orgs",
            "received_events_url": "https://api.github.com/users/da-woods/received_events",
            "repos_url": "https://api.github.com/users/da-woods/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/da-woods"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/6028",
    "id": 1741757310,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/6028",
    "labels": [
        {
            "color": "444444",
            "default": true,
            "description": null,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        }
    ],
    "locked": false,
    "merge_commit_sha": "904741890210d681102780dbd9f41bdf1ae561d2",
    "merged_at": "2024-02-27T06:50:25Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 83,
        "created_at": "2019-02-24T14:21:23Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Remove support for Python 2 and Python < 3.8.",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/65",
        "id": 4082235,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/65/labels",
        "node_id": "MDk6TWlsZXN0b25lNDA4MjIzNQ==",
        "number": 65,
        "open_issues": 16,
        "state": "open",
        "title": "3.1",
        "updated_at": "2024-02-27T06:50:26Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/65"
    },
    "node_id": "PR_kwDOABDGAc5n0Rt-",
    "number": 6028,
    "patch_url": "https://github.com/cython/cython/pull/6028.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/6028/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/eb8ce41988a0f5b32d79da42795ef641d66b8839",
    "title": "Initialize code objects with loop over table",
    "updated_at": "2024-02-27T06:50:29Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/6028",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}