{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/4128/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4128/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/4128"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/4128"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4128/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4128"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/0c413b01b60deee4d15768dcce28f2c238a58f91"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1139,
            "forks_count": 1139,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 936,
            "open_issues_count": 936,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2021-05-03T05:40:56Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 62851,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 6042,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2021-05-03T05:40:59Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 6042,
            "watchers_count": 6042
        },
        "sha": "30f5ad30542c63156e4babcab1e783ef44b09e15",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "*See [Is Includes/cpython/datetime.pxd incomplete?](https://groups.google.com/u/1/g/cython-users/c/d4zOq6i7D9M)*\r\n\r\nI used the other code in that file as a reference point, but as I did that I noticed how it doesn't actually fully conform to [CPython's `datetime.h` file](https://github.com/python/cpython/blob/master/Include/datetime.h), for example see the following: https://github.com/cython/cython/blob/3048be77631d91ddf9210c34f8de436ab70d7c04/Cython/Includes/cpython/datetime.pxd#L156-L157 Compared to CPython's `.h` file:\r\nhttps://github.com/python/cpython/blob/49fdf118aeda891401d638ac32296c7d55d54678/Include/datetime.h#L226-L228\r\n\r\n*I could widen the scope of this pull request to include making the necessary changes for that.*\r\n\r\n\r\n**For the additions I have done so far, am I supposed to add tests for them?**",
    "closed_at": "2021-05-02T16:48:13Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r615438033"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/615438033"
                }
            },
            "author_association": "MEMBER",
            "body": "That's not using the right signature. According to `datetime.h`, it's called like this:\r\n```c\r\n    PyDateTimeAPI->DateTime_FromTimestamp( \\\r\n        (PyObject*) (PyDateTimeAPI->DateTimeType), args, NULL)\r\n```\r\nwhere `args` is a tuple. So, I guess, the equivalent in Cython would be\r\n```suggestion\r\n# Create a datetime object using DateTime CAPI classmethod.\r\ncdef inline object datetime_from_timestamp(timestamp, tz=None):\r\n    return PyDateTimeApi.DateTime_FromTimestamp(\r\n        PyDateTimeApi.DateTimeType, (timestamp, tz) if tz is not None else (timestamp,), NULL)\r\n```\r\nThat suggests that the signature of that function pointer (`(object, object, object)`) is incorrect. It should be `(PyTypeObject*, object, PyObject*)`. Which … looks ugly, but that's how it's used.\r\n\r\nSimilarly, the function below also wants an `args` tuple as argument, not a float. (And, BTW, `float` means C float, not Python float.)\r\n\r\nIt doesn't really feel like these will be much faster than a plain Python call. Probably still visible in really time critical code, I guess.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-18T18:44:55Z",
            "diff_hunk": "@@ -161,6 +167,14 @@ cdef inline object datetime_new(int year, int month, int day, int hour, int minu\n cdef inline object timedelta_new(int days, int seconds, int useconds):\n     return PyDateTimeAPI.Delta_FromDelta(days, seconds, useconds, 1, PyDateTimeAPI.DeltaType)\n \n+# Create a datetime object using DateTime CAPI classmethod.\n+cdef inline object datetime_from_timestamp(float timestamp, object tz):\n+    return PyDateTimeApi.DateTime_FromTimestamp(timestamp, tz)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r615438033",
            "id": 615438033,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNTQzODAzMw==",
            "original_commit_id": "755c7d6619984ef659c0666fc560cebf10ee3732",
            "original_line": 172,
            "original_position": 26,
            "original_start_line": 170,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 638357013,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/615438033",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r615442346"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/615442346"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> (And, BTW, float means C float, not Python float.)\r\n\r\n Is that why you removed the `float` static typing from timestamp? Shouldn't there be `int` then, or is it just better without typing?\r\n\r\nThe documentation specifies:\r\n> Return the local date and time corresponding to the POSIX timestamp, such as is returned by [time.time()](https://docs.python.org/3/library/time.html#time.time).\r\n\r\n> time.time() → float\r\n",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-18T19:23:14Z",
            "diff_hunk": "@@ -161,6 +167,14 @@ cdef inline object datetime_new(int year, int month, int day, int hour, int minu\n cdef inline object timedelta_new(int days, int seconds, int useconds):\n     return PyDateTimeAPI.Delta_FromDelta(days, seconds, useconds, 1, PyDateTimeAPI.DeltaType)\n \n+# Create a datetime object using DateTime CAPI classmethod.\n+cdef inline object datetime_from_timestamp(float timestamp, object tz):\n+    return PyDateTimeApi.DateTime_FromTimestamp(timestamp, tz)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r615442346",
            "id": 615442346,
            "in_reply_to_id": 615438033,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNTQ0MjM0Ng==",
            "original_commit_id": "755c7d6619984ef659c0666fc560cebf10ee3732",
            "original_line": 172,
            "original_position": 26,
            "original_start_line": 170,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 638359955,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/615442346",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r615443335"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/615443335"
                }
            },
            "author_association": "MEMBER",
            "body": "> Is that why you removed the float static typing from timestamp? Shouldn't there be int then, or is it just better without typing?\r\n\r\nSince we're only using it as an object, we shouldn't require users to pass in a C value. They may already have an object on their side that we can just pass through. Or they may not, in which case the conversion will happen automatically on the caller side. Taking an object and passing it on is as fast as it gets.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-18T19:31:58Z",
            "diff_hunk": "@@ -161,6 +167,14 @@ cdef inline object datetime_new(int year, int month, int day, int hour, int minu\n cdef inline object timedelta_new(int days, int seconds, int useconds):\n     return PyDateTimeAPI.Delta_FromDelta(days, seconds, useconds, 1, PyDateTimeAPI.DeltaType)\n \n+# Create a datetime object using DateTime CAPI classmethod.\n+cdef inline object datetime_from_timestamp(float timestamp, object tz):\n+    return PyDateTimeApi.DateTime_FromTimestamp(timestamp, tz)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r615443335",
            "id": 615443335,
            "in_reply_to_id": 615438033,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNTQ0MzMzNQ==",
            "original_commit_id": "755c7d6619984ef659c0666fc560cebf10ee3732",
            "original_line": 172,
            "original_position": 26,
            "original_start_line": 170,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 638360574,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/615443335",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r616996187"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/616996187"
                }
            },
            "author_association": "MEMBER",
            "body": "This can't work because we haven't imported the C-API yet at this point, i.e. the user did not call `import_datetime()` yet.\r\n\r\nAlso, it requires a cast to `<object>`.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-20T20:05:17Z",
            "diff_hunk": "@@ -141,6 +149,9 @@ cdef extern from \"datetime.h\":\n cdef inline void import_datetime():\n     PyDateTime_IMPORT\n \n+# Time zone singleton for UTC.\n+cdef object utc_tz = PyDateTimeAPI.TimeZone_UTC",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r616996187",
            "id": 616996187,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjk5NjE4Nw==",
            "original_commit_id": "1722ad941f8369898f329fdade42f985bbefeeca",
            "original_line": 153,
            "original_position": 31,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 640375656,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/616996187",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r616998931"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/616998931"
                }
            },
            "author_association": "MEMBER",
            "body": "\"optionally\" suggests to me that it should be … optional. :)\r\n```suggestion\r\n# Create a timezone from an offset, optionally a name.\r\ncdef inline object timezone_from_offset(offset, name=None):\r\n    return PyDateTimeAPI.TimeZone_FromTimeZone(offset, NULL if name is None else <PyObject*>name)\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-20T20:09:46Z",
            "diff_hunk": "@@ -161,6 +172,27 @@ cdef inline object datetime_new(int year, int month, int day, int hour, int minu\n cdef inline object timedelta_new(int days, int seconds, int useconds):\n     return PyDateTimeAPI.Delta_FromDelta(days, seconds, useconds, 1, PyDateTimeAPI.DeltaType)\n \n+# Create a timezone from an offset, optionally a name.\n+cdef inline object timezone_new(offset, name):\n+    return PyDateTimeAPI.TimeZone_FromTimeZone(offset, name)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r616998931",
            "id": 616998931,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjk5ODkzMQ==",
            "original_commit_id": "1722ad941f8369898f329fdade42f985bbefeeca",
            "original_line": 177,
            "original_position": 42,
            "original_start_line": 175,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 640375656,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/616998931",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r617002677"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/617002677"
                }
            },
            "author_association": "MEMBER",
            "body": "`fold` defaults to `0`. If it wasn't added only in Py3.6 and later, we could simply make it an optional argument to the existing `datetime_new()` function. However, the fact that the `…AndFold()` C-API functions are not available at all in Py<3.6 requires a bit of C macro magic to make this compile in older Pythons.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-20T20:15:56Z",
            "diff_hunk": "@@ -161,6 +172,27 @@ cdef inline object datetime_new(int year, int month, int day, int hour, int minu\n cdef inline object timedelta_new(int days, int seconds, int useconds):\n     return PyDateTimeAPI.Delta_FromDelta(days, seconds, useconds, 1, PyDateTimeAPI.DeltaType)\n \n+# Create a timezone from an offset, optionally a name.\n+cdef inline object timezone_new(offset, name):\n+    return PyDateTimeAPI.TimeZone_FromTimeZone(offset, name)\n+\n+# Create a datetime object with a fold using DateTime CAPI factory function.\n+cdef inline object datetime_and_fold_new(int year, int month, int day, int hour, int minute, int second, int microsecond, object tz, int fold):\n+    return PyDateTimeAPI.DateTime_FromDateAndTimeAndFold(year, month, day, hour, minute, second, microsecond, tz, fold, PyDateTimeAPI.DateTimeType)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r617002677",
            "id": 617002677,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzAwMjY3Nw==",
            "original_commit_id": "1722ad941f8369898f329fdade42f985bbefeeca",
            "original_line": 181,
            "original_position": 46,
            "original_start_line": 179,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 640375656,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/617002677",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r617054881"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/617054881"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Ah! That's what I was missing, so make that a function like `get_utc()` and then do a cast. Gotcha",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-20T21:46:10Z",
            "diff_hunk": "@@ -141,6 +149,9 @@ cdef extern from \"datetime.h\":\n cdef inline void import_datetime():\n     PyDateTime_IMPORT\n \n+# Time zone singleton for UTC.\n+cdef object utc_tz = PyDateTimeAPI.TimeZone_UTC",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r617054881",
            "id": 617054881,
            "in_reply_to_id": 616996187,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzA1NDg4MQ==",
            "original_commit_id": "1722ad941f8369898f329fdade42f985bbefeeca",
            "original_line": 153,
            "original_position": 31,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 640451725,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/617054881",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r617057351"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/617057351"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I was originally thinking that the optionality would end up in the C Api's hands, which does have a default. Good catch.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-20T21:50:59Z",
            "diff_hunk": "@@ -161,6 +172,27 @@ cdef inline object datetime_new(int year, int month, int day, int hour, int minu\n cdef inline object timedelta_new(int days, int seconds, int useconds):\n     return PyDateTimeAPI.Delta_FromDelta(days, seconds, useconds, 1, PyDateTimeAPI.DeltaType)\n \n+# Create a timezone from an offset, optionally a name.\n+cdef inline object timezone_new(offset, name):\n+    return PyDateTimeAPI.TimeZone_FromTimeZone(offset, name)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r617057351",
            "id": 617057351,
            "in_reply_to_id": 616998931,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzA1NzM1MQ==",
            "original_commit_id": "1722ad941f8369898f329fdade42f985bbefeeca",
            "original_line": 177,
            "original_position": 42,
            "original_start_line": 175,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 640454508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/617057351",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r617059939"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/617059939"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Are you proposing that something similar to what was done earlier in the file is done? I am referencing the following bit of code:\r\n\r\n```\r\n    \"\"\"\r\n    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\r\n    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\r\n    #endif\r\n    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\r\n    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\r\n    #endif\r\n    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_MICROSECONDS)\r\n    #define PyDateTime_DELTA_GET_MICROSECONDS(o)   (((PyDateTime_Delta*)o)->microseconds)\r\n    #endif\r\n    \"\"\"\r\n```\r\n\r\nThis should probably be done for the upcoming `get_utc()` function then as well?",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-20T21:56:39Z",
            "diff_hunk": "@@ -161,6 +172,27 @@ cdef inline object datetime_new(int year, int month, int day, int hour, int minu\n cdef inline object timedelta_new(int days, int seconds, int useconds):\n     return PyDateTimeAPI.Delta_FromDelta(days, seconds, useconds, 1, PyDateTimeAPI.DeltaType)\n \n+# Create a timezone from an offset, optionally a name.\n+cdef inline object timezone_new(offset, name):\n+    return PyDateTimeAPI.TimeZone_FromTimeZone(offset, name)\n+\n+# Create a datetime object with a fold using DateTime CAPI factory function.\n+cdef inline object datetime_and_fold_new(int year, int month, int day, int hour, int minute, int second, int microsecond, object tz, int fold):\n+    return PyDateTimeAPI.DateTime_FromDateAndTimeAndFold(year, month, day, hour, minute, second, microsecond, tz, fold, PyDateTimeAPI.DateTimeType)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r617059939",
            "id": 617059939,
            "in_reply_to_id": 617002677,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzA1OTkzOQ==",
            "original_commit_id": "1722ad941f8369898f329fdade42f985bbefeeca",
            "original_line": 181,
            "original_position": 46,
            "original_start_line": 179,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 640457633,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/617059939",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r617406732"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/617406732"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes. We'd define them as an alias to the non-`AndFold` functions, for anything before 3.6(beta? – or whenever it was added).\r\n\r\nNot sure if we should make it an error if a non-0 value is passed, but I'd rather not. It seems reasonable for user code to ignore this case, without special treatment. Making it an error, while making it visible that the case is not handled correctly, would also require the users who do not care to add special-casing code on their side.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-21T10:23:07Z",
            "diff_hunk": "@@ -161,6 +172,27 @@ cdef inline object datetime_new(int year, int month, int day, int hour, int minu\n cdef inline object timedelta_new(int days, int seconds, int useconds):\n     return PyDateTimeAPI.Delta_FromDelta(days, seconds, useconds, 1, PyDateTimeAPI.DeltaType)\n \n+# Create a timezone from an offset, optionally a name.\n+cdef inline object timezone_new(offset, name):\n+    return PyDateTimeAPI.TimeZone_FromTimeZone(offset, name)\n+\n+# Create a datetime object with a fold using DateTime CAPI factory function.\n+cdef inline object datetime_and_fold_new(int year, int month, int day, int hour, int minute, int second, int microsecond, object tz, int fold):\n+    return PyDateTimeAPI.DateTime_FromDateAndTimeAndFold(year, month, day, hour, minute, second, microsecond, tz, fold, PyDateTimeAPI.DateTimeType)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r617406732",
            "id": 617406732,
            "in_reply_to_id": 617002677,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzQwNjczMg==",
            "original_commit_id": "1722ad941f8369898f329fdade42f985bbefeeca",
            "original_line": 181,
            "original_position": 46,
            "original_start_line": 179,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 640902348,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/617406732",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r617850616"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/617850616"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I haven't really had time to figure it out completely and test, but thought I'd push a form of \"status rapport\", is this somewhat what we've been talking about?",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-21T20:20:57Z",
            "diff_hunk": "@@ -76,22 +76,40 @@ cdef extern from \"datetime.h\":\n \n     # Define structure for C API.\n     ctypedef struct PyDateTime_CAPI:\n+        \"\"\"\n+        #if PY_MAJOR_VERSON < 3 && PY_MINOR_VERSION < 6 && !defined(*DateTime_FromDateAndTimeAndFold)\n+        #define DateTime_FromDateAndTimeAndFold(year, month, day, hour, min, sec, usec, tz, fold) \\\n+        #   PyDateTimeAPI->DateTime_FromDateAndTime(year, month, day, hour, min, sec, usec, tz)\n+        #endif\n+        #if Py_MAJOR_VERSION < 3 && PY_MINOR_VERSION < 6 && !defined(*Time_FromTimeAndFold)\n+        #define PyTime_FromTimeAndFold(hour, minute, second, usecond, fold) \\\n+        #   PydateTimeAPI->Time_FromTime(hour, minute, second, usecond)\n+        #endif\n+        \"\"\"",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r617850616",
            "id": 617850616,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNzg1MDYxNg==",
            "original_commit_id": "71d51f102764e669ae7edddbc4986560ed7b8b1d",
            "original_line": 88,
            "original_position": 13,
            "original_start_line": 79,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 641489327,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/617850616",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r618543459"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/618543459"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I think that's (close to) the right idea, although it'll need a bit of tweaking before it works. Most significantly `defined` can only check if a macro exists so you can't use it on a pointer - I think you'll just have to base this on the Python version.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-22T16:12:39Z",
            "diff_hunk": "@@ -76,22 +76,40 @@ cdef extern from \"datetime.h\":\n \n     # Define structure for C API.\n     ctypedef struct PyDateTime_CAPI:\n+        \"\"\"\n+        #if PY_MAJOR_VERSON < 3 && PY_MINOR_VERSION < 6 && !defined(*DateTime_FromDateAndTimeAndFold)\n+        #define DateTime_FromDateAndTimeAndFold(year, month, day, hour, min, sec, usec, tz, fold) \\\n+        #   PyDateTimeAPI->DateTime_FromDateAndTime(year, month, day, hour, min, sec, usec, tz)\n+        #endif\n+        #if Py_MAJOR_VERSION < 3 && PY_MINOR_VERSION < 6 && !defined(*Time_FromTimeAndFold)\n+        #define PyTime_FromTimeAndFold(hour, minute, second, usecond, fold) \\\n+        #   PydateTimeAPI->Time_FromTime(hour, minute, second, usecond)\n+        #endif\n+        \"\"\"",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r618543459",
            "id": 618543459,
            "in_reply_to_id": 617850616,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODU0MzQ1OQ==",
            "original_commit_id": "71d51f102764e669ae7edddbc4986560ed7b8b1d",
            "original_line": 88,
            "original_position": 13,
            "original_start_line": 79,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 642405908,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/618543459",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r618666658"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/618666658"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": ">  I think you'll just have to base this on the Python version.\r\n\r\nCan we do that? I would assume it's for the same reasoning as to why the file implements `PyDateTime_CAPI` for the constructors in the first place.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-22T19:04:04Z",
            "diff_hunk": "@@ -76,22 +76,40 @@ cdef extern from \"datetime.h\":\n \n     # Define structure for C API.\n     ctypedef struct PyDateTime_CAPI:\n+        \"\"\"\n+        #if PY_MAJOR_VERSON < 3 && PY_MINOR_VERSION < 6 && !defined(*DateTime_FromDateAndTimeAndFold)\n+        #define DateTime_FromDateAndTimeAndFold(year, month, day, hour, min, sec, usec, tz, fold) \\\n+        #   PyDateTimeAPI->DateTime_FromDateAndTime(year, month, day, hour, min, sec, usec, tz)\n+        #endif\n+        #if Py_MAJOR_VERSION < 3 && PY_MINOR_VERSION < 6 && !defined(*Time_FromTimeAndFold)\n+        #define PyTime_FromTimeAndFold(hour, minute, second, usecond, fold) \\\n+        #   PydateTimeAPI->Time_FromTime(hour, minute, second, usecond)\n+        #endif\n+        \"\"\"",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r618666658",
            "id": 618666658,
            "in_reply_to_id": 617850616,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODY2NjY1OA==",
            "original_commit_id": "71d51f102764e669ae7edddbc4986560ed7b8b1d",
            "original_line": 88,
            "original_position": 13,
            "original_start_line": 79,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 642572649,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/618666658",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619126113"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619126113"
                }
            },
            "author_association": "MEMBER",
            "body": "This change makes no sense at all.\r\n\r\nEdit: revising my comment a bit, what you probably intended was to add the internal struct fields of the object to make them accessible. You can do this in the class declaration, but don't declare a struct for them.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-23T10:49:18Z",
            "diff_hunk": "@@ -6,23 +6,132 @@ cdef extern from \"Python.h\":\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n-    #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\n-    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\n-    #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_MICROSECONDS)\n-    #define PyDateTime_DELTA_GET_MICROSECONDS(o)   (((PyDateTime_Delta*)o)->microseconds)\n+    #if PY_MAJOR_VERSION <3\n+        #ifndef PyDateTime_DELTA_GET_DAYS\n+            PyDateTime_DELTA_GET_DAYS(o) (((PyDateTime_Delta*)o)->days)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_SECONDS\n+            #define PyDateTime_DELTA_GET_SECONDS(o) (((PyDateTime_Delta*)o)->seconds)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_MICROSECONDS\n+            #define PyDateTime_DELTA_GET_MICROSECONDS(o) (((PyDateTime_Delta*)o)->microseconds)\n+        #endif\n+\n+        #if PY_MINOR_VERSION < 7 && !defined(PyDateTime_TimeZone_UTC)\n+            #define PyDateTime_TimeZone_UTC NULL\n+        #endif\n     #endif\n     \"\"\"\n \n-    ctypedef extern class datetime.date[object PyDateTime_Date]:\n+    ctypedef struct PyDateTime_Delta:\n+        int days\n+        int seconds\n+        int microseconds\n+\n+    ctypedef struct PyDateTime_TZInfo:\n         pass\n \n-    ctypedef extern class datetime.time[object PyDateTime_Time]:\n+    ctypedef struct PyDateTime_Time:\n+        char hastzinfo\n+        PyObject *tzinfo",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619126113",
            "id": 619126113,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTEyNjExMw==",
            "original_commit_id": "66eff99264ada24f75b3f2a2dd57a7113ce8e7f1",
            "original_line": 36,
            "original_position": 41,
            "original_start_line": 23,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 643169744,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619126113",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619128112"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619128112"
                }
            },
            "author_association": "MEMBER",
            "body": "This will crash in Py3.6 and earlier, given your `#define` above.\r\nEither there's a way to emulate it in earlier versions, or raise an exception.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-23T10:52:57Z",
            "diff_hunk": "@@ -146,25 +195,50 @@ cdef inline void import_datetime():\n cdef inline object date_new(int year, int month, int day):\n     return PyDateTimeAPI.Date_FromDate(year, month, day, PyDateTimeAPI.DateType)\n \n+# Create datetime object using DateTime CAPI factory function.\n+# Note, there are no range checks for any of the arguments.\n+cdef inline object datetime_new(int year, int month, int day, int hour, int minute, int second, int microsecond, object tz):\n+    return PyDateTimeAPI.DateTime_FromDateAndTime(year, month, day, hour, minute, second, microsecond, tz, PyDateTimeAPI.DateTimeType)\n+\n+# Create a datetime object with a fold using DateTime CAPI factory function.\n+cdef inline object datetime_and_fold_new(int year, int month, int day, int hour, int minute, int second, int microsecond, object tz, int fold):\n+    return PyDateTimeAPI.DateTime_FromDateAndTimeAndFold(year, month, day, hour, minute, second, microsecond, tz, fold, PyDateTimeAPI.DateTimeType)\n+\n # Create time object using DateTime CAPI factory function\n # Note, there are no range checks for any of the arguments.\n cdef inline object time_new(int hour, int minute, int second, int microsecond, object tz):\n     return PyDateTimeAPI.Time_FromTime(hour, minute, second, microsecond, tz, PyDateTimeAPI.TimeType)\n \n-# Create datetime object using DateTime CAPI factory function.\n-# Note, there are no range checks for any of the arguments.\n-cdef inline object datetime_new(int year, int month, int day, int hour, int minute, int second, int microsecond, object tz):\n-    return PyDateTimeAPI.DateTime_FromDateAndTime(year, month, day, hour, minute, second, microsecond, tz, PyDateTimeAPI.DateTimeType)\n+# Create a time object with a fold using DateTime CAPI factory function.\n+cdef inline object time_and_fold_new(int hour, int minute, int second, int microsecond, object tz, int fold):\n+    return PyDateTimeAPI.Time_FromTimeAndFold(hour, minute, second, microsecond, tz, fold, PyDateTimeAPI.TimeType)\n \n # Create timedelta object using DateTime CAPI factory function.\n # Note, there are no range checks for any of the arguments.\n cdef inline object timedelta_new(int days, int seconds, int useconds):\n     return PyDateTimeAPI.Delta_FromDelta(days, seconds, useconds, 1, PyDateTimeAPI.DeltaType)\n \n+# Create a timezone from an offset, optionally a name.\n+cdef inline object timezone_new(PyObject* offset, PyObject* name=NULL):\n+    return PyDateTimeAPI.TimeZone_FromTimeZone(offset, name)\n+\n+# Create a datetime object using DateTime CAPI classmethod.\n+cdef inline object datetime_from_timestamp(int timestamp, object tz):\n+    return PyDateTimeAPI.DateTime_FromTimestamp(PyDateTimeAPI.DateTimeType, (timestamp, tz) if tz is not None else (timestamp,), NULL)\n+\n+# Create a date object using DateTime CAPI classmethod.\n+cdef inline object date_from_timestamp(int timestamp):\n+    return PyDateTimeAPI.Date_FromTimestamp(PyDateTimeAPI.DateType, (timestamp,))\n+\n+\n # More recognizable getters for date/time/datetime/timedelta.\n-# There are no setters because datetime.h hasn't them.\n-# This is because of immutable nature of these objects by design.\n-# If you would change time/date/datetime/timedelta object you need to recreate.\n+# There are no setters because datetime.h doesn't have them.\n+# This is because of the immutable nature of these objects by design.\n+# If you would like to change a time/date/datetime/timedelta object you need to recreate it.\n+\n+# Get UTC singleton\n+cdef inline object get_utc():\n+    return <object>PyDateTime_TimeZone_UTC",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619128112",
            "id": 619128112,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTEyODExMg==",
            "original_commit_id": "66eff99264ada24f75b3f2a2dd57a7113ce8e7f1",
            "original_line": 284,
            "original_position": 283,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 643172398,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619128112",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619669397"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619669397"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This is the only way from what I found that we can support these new features while being able to compile on previous versions. Interesting enough, I am getting some warning while compiling though:\r\n```\r\ntesty.c(2806): warning C4047: 'function': 'PyObject *' differs in levels of indirection from 'int'\r\ntesty.c(2806): warning C4024: 'function through pointer': different types for formal and actual parameter 1\r\ntesty.c(2884): warning C4013: 'PyDateTime_FromTimeStamp' undefined; assuming extern returning int\r\ntesty.c(2884): warning C4047: '=': 'PyObject *' differs in levels of indirection from 'int'\r\ntesty.c(2945): warning C4013: 'PyDate_FromTimeStamp' undefined; assuming extern returning int\r\ntesty.c(2945): warning C4047: '=': 'PyObject *' differs in levels of indirection from 'int'\r\n```\r\n\r\nNot sure how to satisfy the compiler here, `PyDateTime_FromTimeStamp` and `PyDate_FromTimeStamp` should not be much different from the other functions.\r\n\r\n*PS: Gonna install a few different older Python versions to test on*",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-24T14:53:55Z",
            "diff_hunk": "@@ -119,21 +193,41 @@ cdef extern from \"datetime.h\":\n     int PyDateTime_DATE_GET_MINUTE(object o)\n     int PyDateTime_DATE_GET_SECOND(object o)\n     int PyDateTime_DATE_GET_MICROSECOND(object o)\n+    int PyDateTime_DATE_GET_FOLD(object o)\n+    object PyDateTime_DATE_GET_TZINFO(object o)\n \n     # Getters for time (C macros).\n     int PyDateTime_TIME_GET_HOUR(object o)\n     int PyDateTime_TIME_GET_MINUTE(object o)\n     int PyDateTime_TIME_GET_SECOND(object o)\n     int PyDateTime_TIME_GET_MICROSECOND(object o)\n+    int PyDateTime_TIME_GET_FOLD(object o)\n+    object PyDateTime_TIME_GET_TZINFO(object o)\n \n     # Getters for timedelta (C macros).\n     int PyDateTime_DELTA_GET_DAYS(object o)\n     int PyDateTime_DELTA_GET_SECONDS(object o)\n     int PyDateTime_DELTA_GET_MICROSECONDS(object o)\n \n+    # Constructors\n+    object PyDateTime_FromDateAndTimeAndFold(\n+        int year, int month, int day, int hour, int min, int sec, int usec, int fold\n+    )\n+    object PyTime_FromTimeAndFold(int hour, int minute, int second, int usecond, int fold)\n+\n+    # We don't need this first one\n+    # object PyTimeZone_FromOffset(int offset)\n+    object PyTimeZone_FromOffsetAndName(int offset, str name)\n+\n+    # Constructors for the DB API\n+    object PyDateTime_FromTimeStamp(object args)\n+    object PyDate_FromTimeStamp(object args)\n+",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619669397",
            "id": 619669397,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTY2OTM5Nw==",
            "original_commit_id": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "original_line": 225,
            "original_position": 161,
            "original_start_line": 212,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 644039668,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619669397",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619766002"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619766002"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we can declare this as `object`. \r\n```suggestion\r\n    object PyDateTime_TimeZone_UTC  # requires Py3.7+ !\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-25T07:25:56Z",
            "diff_hunk": "@@ -119,21 +193,41 @@ cdef extern from \"datetime.h\":\n     int PyDateTime_DATE_GET_MINUTE(object o)\n     int PyDateTime_DATE_GET_SECOND(object o)\n     int PyDateTime_DATE_GET_MICROSECOND(object o)\n+    int PyDateTime_DATE_GET_FOLD(object o)\n+    object PyDateTime_DATE_GET_TZINFO(object o)\n \n     # Getters for time (C macros).\n     int PyDateTime_TIME_GET_HOUR(object o)\n     int PyDateTime_TIME_GET_MINUTE(object o)\n     int PyDateTime_TIME_GET_SECOND(object o)\n     int PyDateTime_TIME_GET_MICROSECOND(object o)\n+    int PyDateTime_TIME_GET_FOLD(object o)\n+    object PyDateTime_TIME_GET_TZINFO(object o)\n \n     # Getters for timedelta (C macros).\n     int PyDateTime_DELTA_GET_DAYS(object o)\n     int PyDateTime_DELTA_GET_SECONDS(object o)\n     int PyDateTime_DELTA_GET_MICROSECONDS(object o)\n \n+    # Constructors\n+    object PyDateTime_FromDateAndTimeAndFold(\n+        int year, int month, int day, int hour, int min, int sec, int usec, int fold\n+    )\n+    object PyTime_FromTimeAndFold(int hour, int minute, int second, int usecond, int fold)\n+\n+    # We don't need this first one\n+    # object PyTimeZone_FromOffset(int offset)\n+    object PyTimeZone_FromOffsetAndName(int offset, str name)\n+\n+    # Constructors for the DB API\n+    object PyDateTime_FromTimeStamp(object args)\n+    object PyDate_FromTimeStamp(object args)\n+\n     # PyDateTime CAPI object.\n     PyDateTime_CAPI *PyDateTimeAPI\n \n+    PyObject* PyDateTime_TimeZone_UTC",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619766002",
            "id": 619766002,
            "line": 253,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTc2NjAwMg==",
            "original_commit_id": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "original_line": 229,
            "original_position": 165,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": 213,
            "pull_request_review_id": 644102697,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619766002",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619766417"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619766417"
                }
            },
            "author_association": "MEMBER",
            "body": "Even if we don't need it, users may.\r\n```suggestion\r\n    object PyTimeZone_FromOffset(int offset)\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-25T07:28:36Z",
            "diff_hunk": "@@ -119,21 +193,41 @@ cdef extern from \"datetime.h\":\n     int PyDateTime_DATE_GET_MINUTE(object o)\n     int PyDateTime_DATE_GET_SECOND(object o)\n     int PyDateTime_DATE_GET_MICROSECOND(object o)\n+    int PyDateTime_DATE_GET_FOLD(object o)\n+    object PyDateTime_DATE_GET_TZINFO(object o)\n \n     # Getters for time (C macros).\n     int PyDateTime_TIME_GET_HOUR(object o)\n     int PyDateTime_TIME_GET_MINUTE(object o)\n     int PyDateTime_TIME_GET_SECOND(object o)\n     int PyDateTime_TIME_GET_MICROSECOND(object o)\n+    int PyDateTime_TIME_GET_FOLD(object o)\n+    object PyDateTime_TIME_GET_TZINFO(object o)\n \n     # Getters for timedelta (C macros).\n     int PyDateTime_DELTA_GET_DAYS(object o)\n     int PyDateTime_DELTA_GET_SECONDS(object o)\n     int PyDateTime_DELTA_GET_MICROSECONDS(object o)\n \n+    # Constructors\n+    object PyDateTime_FromDateAndTimeAndFold(\n+        int year, int month, int day, int hour, int min, int sec, int usec, int fold\n+    )\n+    object PyTime_FromTimeAndFold(int hour, int minute, int second, int usecond, int fold)\n+\n+    # We don't need this first one\n+    # object PyTimeZone_FromOffset(int offset)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619766417",
            "id": 619766417,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTc2NjQxNw==",
            "original_commit_id": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "original_line": 219,
            "original_position": 155,
            "original_start_line": 218,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 644102697,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619766417",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619766571"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619766571"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    if PY_VERSION_HEX < 0x030700b1:\r\n        # TODO: emulate\r\n        raise RuntimeError(\"Time zones are not available from the C-API\")\r\n    return PyDateTime_TimeZone_UTC\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-25T07:29:55Z",
            "diff_hunk": "@@ -146,25 +195,50 @@ cdef inline void import_datetime():\n cdef inline object date_new(int year, int month, int day):\n     return PyDateTimeAPI.Date_FromDate(year, month, day, PyDateTimeAPI.DateType)\n \n+# Create datetime object using DateTime CAPI factory function.\n+# Note, there are no range checks for any of the arguments.\n+cdef inline object datetime_new(int year, int month, int day, int hour, int minute, int second, int microsecond, object tz):\n+    return PyDateTimeAPI.DateTime_FromDateAndTime(year, month, day, hour, minute, second, microsecond, tz, PyDateTimeAPI.DateTimeType)\n+\n+# Create a datetime object with a fold using DateTime CAPI factory function.\n+cdef inline object datetime_and_fold_new(int year, int month, int day, int hour, int minute, int second, int microsecond, object tz, int fold):\n+    return PyDateTimeAPI.DateTime_FromDateAndTimeAndFold(year, month, day, hour, minute, second, microsecond, tz, fold, PyDateTimeAPI.DateTimeType)\n+\n # Create time object using DateTime CAPI factory function\n # Note, there are no range checks for any of the arguments.\n cdef inline object time_new(int hour, int minute, int second, int microsecond, object tz):\n     return PyDateTimeAPI.Time_FromTime(hour, minute, second, microsecond, tz, PyDateTimeAPI.TimeType)\n \n-# Create datetime object using DateTime CAPI factory function.\n-# Note, there are no range checks for any of the arguments.\n-cdef inline object datetime_new(int year, int month, int day, int hour, int minute, int second, int microsecond, object tz):\n-    return PyDateTimeAPI.DateTime_FromDateAndTime(year, month, day, hour, minute, second, microsecond, tz, PyDateTimeAPI.DateTimeType)\n+# Create a time object with a fold using DateTime CAPI factory function.\n+cdef inline object time_and_fold_new(int hour, int minute, int second, int microsecond, object tz, int fold):\n+    return PyDateTimeAPI.Time_FromTimeAndFold(hour, minute, second, microsecond, tz, fold, PyDateTimeAPI.TimeType)\n \n # Create timedelta object using DateTime CAPI factory function.\n # Note, there are no range checks for any of the arguments.\n cdef inline object timedelta_new(int days, int seconds, int useconds):\n     return PyDateTimeAPI.Delta_FromDelta(days, seconds, useconds, 1, PyDateTimeAPI.DeltaType)\n \n+# Create a timezone from an offset, optionally a name.\n+cdef inline object timezone_new(PyObject* offset, PyObject* name=NULL):\n+    return PyDateTimeAPI.TimeZone_FromTimeZone(offset, name)\n+\n+# Create a datetime object using DateTime CAPI classmethod.\n+cdef inline object datetime_from_timestamp(int timestamp, object tz):\n+    return PyDateTimeAPI.DateTime_FromTimestamp(PyDateTimeAPI.DateTimeType, (timestamp, tz) if tz is not None else (timestamp,), NULL)\n+\n+# Create a date object using DateTime CAPI classmethod.\n+cdef inline object date_from_timestamp(int timestamp):\n+    return PyDateTimeAPI.Date_FromTimestamp(PyDateTimeAPI.DateType, (timestamp,))\n+\n+\n # More recognizable getters for date/time/datetime/timedelta.\n-# There are no setters because datetime.h hasn't them.\n-# This is because of immutable nature of these objects by design.\n-# If you would change time/date/datetime/timedelta object you need to recreate.\n+# There are no setters because datetime.h doesn't have them.\n+# This is because of the immutable nature of these objects by design.\n+# If you would like to change a time/date/datetime/timedelta object you need to recreate it.\n+\n+# Get UTC singleton\n+cdef inline object get_utc():\n+    return <object>PyDateTime_TimeZone_UTC",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619766571",
            "id": 619766571,
            "in_reply_to_id": 619128112,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTc2NjU3MQ==",
            "original_commit_id": "66eff99264ada24f75b3f2a2dd57a7113ce8e7f1",
            "original_line": 284,
            "original_position": 283,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 644102697,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619766571",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619768045"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619768045"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        # We cannot use the following because they do not compile in Python < 3.7.\r\n        # Instead, we use datetime.h's macros here that we can backport in C.\r\n\r\n        # constructors\r\n        object (*TimeZone_FromTimeZone)(object offset, PyObject *name)\r\n\r\n        # singletons\r\n        PyObject *TimeZone_UTC\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-25T07:40:37Z",
            "diff_hunk": "@@ -89,9 +150,22 @@ cdef extern from \"datetime.h\":\n         object (*Time_FromTime)(int, int, int, int, object, PyTypeObject*)\n         object (*Delta_FromDelta)(int, int, int, int, PyTypeObject*)\n \n+        # We cannot use the following because we still need to compile on previous versions,\n+        # instead we use datetime.h's macros that we can do some C macro magic on top of.\n+\n+        # constructors\n+        # object (*TimeZone_FromTimeZone)(PyObject *offset, PyObject *name)\n+\n+        # singletons\n+        # PyObject *TimeZone_UTC",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619768045",
            "id": 619768045,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTc2ODA0NQ==",
            "original_commit_id": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "original_line": 160,
            "original_position": 114,
            "original_start_line": 153,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 644102697,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619768045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619768189"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619768189"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        object (*DateTime_FromTimestamp)(object, object, PyObject*)\r\n        object (*Date_FromTimestamp)(object, object)\r\n\r\n        # PEP 495 constructors\r\n        object (*DateTime_FromDateAndTimeAndFold)(int, int, int, int, int, int, int, object, int, PyTypeObject*)\r\n        object (*Time_FromTimeAndFold)(int, int, int ,int, object, int, PyTypeObject*)\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-25T07:41:57Z",
            "diff_hunk": "@@ -89,9 +150,22 @@ cdef extern from \"datetime.h\":\n         object (*Time_FromTime)(int, int, int, int, object, PyTypeObject*)\n         object (*Delta_FromDelta)(int, int, int, int, PyTypeObject*)\n \n+        # We cannot use the following because we still need to compile on previous versions,\n+        # instead we use datetime.h's macros that we can do some C macro magic on top of.\n+\n+        # constructors\n+        # object (*TimeZone_FromTimeZone)(PyObject *offset, PyObject *name)\n+\n+        # singletons\n+        # PyObject *TimeZone_UTC\n+\n         # constructors for the DB API\n-        object (*DateTime_FromTimestamp)(object, object, object)\n-        object (*Date_FromTimestamp)(object, object)\n+        # object (*DateTime_FromTimestamp)(PyTypeObject*, object, PyObject*)\n+        # object (*Date_FromTimestamp)(PyTypeObject*, object)\n+\n+        # PEP 495 constructors\n+        # object (*DateTime_FromDateAndTimeAndFold)(int, int, int, int, int, int, int, object, int, PyTypeObject*)\n+        # object (*Time_FromTimeAndFold)(int, int, int ,int, object, int, PyTypeObject*)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619768189",
            "id": 619768189,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTc2ODE4OQ==",
            "original_commit_id": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "original_line": 168,
            "original_position": 124,
            "original_start_line": 163,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 644102697,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619768189",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619769094"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619769094"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't know where you got the information from that `offset` is an `int`. According to the implementation, it's a `timedelta` instance.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-25T07:48:00Z",
            "diff_hunk": "@@ -161,11 +255,34 @@ cdef inline object datetime_new(int year, int month, int day, int hour, int minu\n cdef inline object timedelta_new(int days, int seconds, int useconds):\n     return PyDateTimeAPI.Delta_FromDelta(days, seconds, useconds, 1, PyDateTimeAPI.DeltaType)\n \n+# Create datetime object using PEP 495 constructor.\n+cdef inline object datetime_and_fold_new(int year, int month, int day, int hour, int minute, int second, int microsecond, int fold):\n+    return PyDateTime_FromDateAndTimeAndFold(year, month, day, hour, minute, second, microsecond, fold)\n+\n+# Create time object using PEP 495 constructor.\n+cdef inline object time_and_fold_new(int hour, int minute, int second, int usecond, int fold):\n+    return PyTime_FromTimeAndFold(hour, minute, second, usecond, fold)\n+\n+cdef inline object timezone_new(int offset, str name=''):\n+    return PyTimeZone_FromOffsetAndName(offset, name)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619769094",
            "id": 619769094,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTc2OTA5NA==",
            "original_commit_id": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "original_line": 267,
            "original_position": 183,
            "original_start_line": 266,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 644102697,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619769094",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619769477"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619769477"
                }
            },
            "author_association": "MEMBER",
            "body": "`timestamp` can also be a `float`. Given that we are passing it on as Python object anyway, I'd not give it a type at all.\r\n```suggestion\r\ncdef inline object datetime_from_timestamp(timestamp, tz=None):\r\n    return PyDateTime_FromTimeStamp((timestamp, tz) if tz is not None else (timestamp,))\r\n\r\n# Create date object using DB API constructor.\r\ncdef inline object date_from_timestamp(timestamp):\r\n    return PyDate_FromTimeStamp((timestamp,))\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-25T07:50:25Z",
            "diff_hunk": "@@ -161,11 +255,34 @@ cdef inline object datetime_new(int year, int month, int day, int hour, int minu\n cdef inline object timedelta_new(int days, int seconds, int useconds):\n     return PyDateTimeAPI.Delta_FromDelta(days, seconds, useconds, 1, PyDateTimeAPI.DeltaType)\n \n+# Create datetime object using PEP 495 constructor.\n+cdef inline object datetime_and_fold_new(int year, int month, int day, int hour, int minute, int second, int microsecond, int fold):\n+    return PyDateTime_FromDateAndTimeAndFold(year, month, day, hour, minute, second, microsecond, fold)\n+\n+# Create time object using PEP 495 constructor.\n+cdef inline object time_and_fold_new(int hour, int minute, int second, int usecond, int fold):\n+    return PyTime_FromTimeAndFold(hour, minute, second, usecond, fold)\n+\n+cdef inline object timezone_new(int offset, str name=''):\n+    return PyTimeZone_FromOffsetAndName(offset, name)\n+\n+# Create datetime object using DB API constructor.\n+cdef inline object datetime_from_timestamp(int timestamp, object tz):\n+    return PyDateTime_FromTimeStamp((timestamp, tz) if tz is not None else (timestamp,))\n+\n+# Create date object using DB API constructor.\n+cdef inline object date_from_timestamp(int timestamp):\n+    return PyDate_FromTimeStamp((timestamp,))",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619769477",
            "id": 619769477,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTc2OTQ3Nw==",
            "original_commit_id": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "original_line": 275,
            "original_position": 191,
            "original_start_line": 270,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 644102697,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619769477",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619769716"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619769716"
                }
            },
            "author_association": "MEMBER",
            "body": "Note that the original `#if` was meant for Python 2.x, that's why it says `PY_MAJOR_VERSION < 3`. You can use `PY_VERSION_HEX` to detect concrete Python versions.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-25T07:52:33Z",
            "diff_hunk": "@@ -6,22 +6,73 @@ cdef extern from \"Python.h\":\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n-    #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\n-    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\n-    #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_MICROSECONDS)\n-    #define PyDateTime_DELTA_GET_MICROSECONDS(o)   (((PyDateTime_Delta*)o)->microseconds)\n+    #if PY_MAJOR_VERSION < 3\n+        #if PY_MINOR_VERSION < 3",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619769716",
            "id": 619769716,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTc2OTcxNg==",
            "original_commit_id": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "original_line": 10,
            "original_position": 13,
            "original_start_line": 9,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 644102697,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619769716",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619808340"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619808340"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "No we cannot, see the following error:\r\n\r\n```\r\n------------------------------------------------------------\r\n...\r\n    object PyDate_FromTimeStamp(object args)\r\n\r\n    # PyDateTime CAPI object.\r\n    PyDateTime_CAPI *PyDateTimeAPI\r\n\r\n    object PyDateTime_TimeZone_UTC  # requires Py3.7+ !\r\n          ^\r\n------------------------------------------------------------\r\n\r\ndatetime.pxd:223:11: Python object cannot be declared extern",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-25T12:29:16Z",
            "diff_hunk": "@@ -119,21 +193,41 @@ cdef extern from \"datetime.h\":\n     int PyDateTime_DATE_GET_MINUTE(object o)\n     int PyDateTime_DATE_GET_SECOND(object o)\n     int PyDateTime_DATE_GET_MICROSECOND(object o)\n+    int PyDateTime_DATE_GET_FOLD(object o)\n+    object PyDateTime_DATE_GET_TZINFO(object o)\n \n     # Getters for time (C macros).\n     int PyDateTime_TIME_GET_HOUR(object o)\n     int PyDateTime_TIME_GET_MINUTE(object o)\n     int PyDateTime_TIME_GET_SECOND(object o)\n     int PyDateTime_TIME_GET_MICROSECOND(object o)\n+    int PyDateTime_TIME_GET_FOLD(object o)\n+    object PyDateTime_TIME_GET_TZINFO(object o)\n \n     # Getters for timedelta (C macros).\n     int PyDateTime_DELTA_GET_DAYS(object o)\n     int PyDateTime_DELTA_GET_SECONDS(object o)\n     int PyDateTime_DELTA_GET_MICROSECONDS(object o)\n \n+    # Constructors\n+    object PyDateTime_FromDateAndTimeAndFold(\n+        int year, int month, int day, int hour, int min, int sec, int usec, int fold\n+    )\n+    object PyTime_FromTimeAndFold(int hour, int minute, int second, int usecond, int fold)\n+\n+    # We don't need this first one\n+    # object PyTimeZone_FromOffset(int offset)\n+    object PyTimeZone_FromOffsetAndName(int offset, str name)\n+\n+    # Constructors for the DB API\n+    object PyDateTime_FromTimeStamp(object args)\n+    object PyDate_FromTimeStamp(object args)\n+\n     # PyDateTime CAPI object.\n     PyDateTime_CAPI *PyDateTimeAPI\n \n+    PyObject* PyDateTime_TimeZone_UTC",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619808340",
            "id": 619808340,
            "in_reply_to_id": 619766002,
            "line": 253,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTgwODM0MA==",
            "original_commit_id": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "original_line": 229,
            "original_position": 165,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": 213,
            "pull_request_review_id": 644134025,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619808340",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619809154"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619809154"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "```diff\r\n-    return <object>PyDateTime_TimeZone_UTC\r\n+    if PY_VERSION_HEX < 0x030700b1:\r\n+        # TODO: emulate\r\n+        raise RuntimeError(\"Time zones are not available from the C-API\")\r\n+    return PyDateTime_TimeZone_UTC\r\n```\r\nReferencing this suggestion, I tried something similar earlier but it doesn't work. I get:\r\n\r\n```\r\n------------------------------------------------------------\r\n...\r\n# This is because of immutable nature of these objects by design.\r\n# If you would change time/date/datetime/timedelta object you need to recreate.\r\n\r\n# Get UTC singleton\r\ncdef inline object get_utc():\r\n    if PY_VERSION_HEX < 0x030700b1:\r\n      ^\r\n------------------------------------------------------------\r\n\r\ndatetime.pxd:279:7: undeclared name not builtin: PY_VERSION_HEX\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-25T12:35:34Z",
            "diff_hunk": "@@ -89,9 +150,22 @@ cdef extern from \"datetime.h\":\n         object (*Time_FromTime)(int, int, int, int, object, PyTypeObject*)\n         object (*Delta_FromDelta)(int, int, int, int, PyTypeObject*)\n \n+        # We cannot use the following because we still need to compile on previous versions,\n+        # instead we use datetime.h's macros that we can do some C macro magic on top of.\n+\n+        # constructors\n+        # object (*TimeZone_FromTimeZone)(PyObject *offset, PyObject *name)\n+\n+        # singletons\n+        # PyObject *TimeZone_UTC",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619809154",
            "id": 619809154,
            "in_reply_to_id": 619768045,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTgwOTE1NA==",
            "original_commit_id": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "original_line": 160,
            "original_position": 114,
            "original_start_line": 153,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 644134619,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619809154",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619809723"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619809723"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "`from cpython.version cimport PY_VERSION_HEX`",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-25T12:39:13Z",
            "diff_hunk": "@@ -89,9 +150,22 @@ cdef extern from \"datetime.h\":\n         object (*Time_FromTime)(int, int, int, int, object, PyTypeObject*)\n         object (*Delta_FromDelta)(int, int, int, int, PyTypeObject*)\n \n+        # We cannot use the following because we still need to compile on previous versions,\n+        # instead we use datetime.h's macros that we can do some C macro magic on top of.\n+\n+        # constructors\n+        # object (*TimeZone_FromTimeZone)(PyObject *offset, PyObject *name)\n+\n+        # singletons\n+        # PyObject *TimeZone_UTC",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619809723",
            "id": 619809723,
            "in_reply_to_id": 619768045,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTgwOTcyMw==",
            "original_commit_id": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "original_line": 160,
            "original_position": 114,
            "original_start_line": 153,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 644135025,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619809723",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619809957"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619809957"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "```diff\r\n+        object (*DateTime_FromTimestamp)(object, object, PyObject*)\r\n+        object (*Date_FromTimestamp)(object, object)\r\n```\r\n\r\nThis doesn't work, see:\r\n```\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\ncdef inline object timezone_new(int offset, str name=''):\r\n    return PyTimeZone_FromOffsetAndName(offset, name)\r\n\r\n# Create datetime object using DB API constructor.\r\ncdef inline object datetime_from_timestamp(int timestamp, object tz=None):\r\n    return PyDateTimeAPI.DateTime_FromTimestamp(PyDateTimeAPI.DateTimeType, (timestamp, tz) if tz is not None else (timestamp,), NULL)\r\n                                                            ^\r\n------------------------------------------------------------\r\n\r\ndatey.pxd:265:61: Cannot convert 'PyTypeObject *' to Python object\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\ncdef inline object datetime_from_timestamp(int timestamp, object tz=None):\r\n    return PyDateTimeAPI.DateTime_FromTimestamp(PyDateTimeAPI.DateTimeType, (timestamp, tz) if tz is not None else (timestamp,), NULL)\r\n\r\n# Create date object using DB API constructor.\r\ncdef inline object date_from_timestamp(int timestamp):\r\n    return PyDateTimeAPI.Date_FromTimestamp(PyDateTimeAPI.DateType, (timestamp,))\r\n                                                        ^\r\n------------------------------------------------------------\r\n\r\ndatey.pxd:269:57: Cannot convert 'PyTypeObject *' to Python object\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-25T12:40:51Z",
            "diff_hunk": "@@ -89,9 +150,22 @@ cdef extern from \"datetime.h\":\n         object (*Time_FromTime)(int, int, int, int, object, PyTypeObject*)\n         object (*Delta_FromDelta)(int, int, int, int, PyTypeObject*)\n \n+        # We cannot use the following because we still need to compile on previous versions,\n+        # instead we use datetime.h's macros that we can do some C macro magic on top of.\n+\n+        # constructors\n+        # object (*TimeZone_FromTimeZone)(PyObject *offset, PyObject *name)\n+\n+        # singletons\n+        # PyObject *TimeZone_UTC\n+\n         # constructors for the DB API\n-        object (*DateTime_FromTimestamp)(object, object, object)\n-        object (*Date_FromTimestamp)(object, object)\n+        # object (*DateTime_FromTimestamp)(PyTypeObject*, object, PyObject*)\n+        # object (*Date_FromTimestamp)(PyTypeObject*, object)\n+\n+        # PEP 495 constructors\n+        # object (*DateTime_FromDateAndTimeAndFold)(int, int, int, int, int, int, int, object, int, PyTypeObject*)\n+        # object (*Time_FromTimeAndFold)(int, int, int ,int, object, int, PyTypeObject*)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619809957",
            "id": 619809957,
            "in_reply_to_id": 619768189,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTgwOTk1Nw==",
            "original_commit_id": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "original_line": 168,
            "original_position": 124,
            "original_start_line": 163,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 644135196,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619809957",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619810384"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619810384"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "That should be solvable with a cast: `<object>PyDateTimeAPI.DateType`",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-25T12:44:25Z",
            "diff_hunk": "@@ -89,9 +150,22 @@ cdef extern from \"datetime.h\":\n         object (*Time_FromTime)(int, int, int, int, object, PyTypeObject*)\n         object (*Delta_FromDelta)(int, int, int, int, PyTypeObject*)\n \n+        # We cannot use the following because we still need to compile on previous versions,\n+        # instead we use datetime.h's macros that we can do some C macro magic on top of.\n+\n+        # constructors\n+        # object (*TimeZone_FromTimeZone)(PyObject *offset, PyObject *name)\n+\n+        # singletons\n+        # PyObject *TimeZone_UTC\n+\n         # constructors for the DB API\n-        object (*DateTime_FromTimestamp)(object, object, object)\n-        object (*Date_FromTimestamp)(object, object)\n+        # object (*DateTime_FromTimestamp)(PyTypeObject*, object, PyObject*)\n+        # object (*Date_FromTimestamp)(PyTypeObject*, object)\n+\n+        # PEP 495 constructors\n+        # object (*DateTime_FromDateAndTimeAndFold)(int, int, int, int, int, int, int, object, int, PyTypeObject*)\n+        # object (*Time_FromTimeAndFold)(int, int, int ,int, object, int, PyTypeObject*)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619810384",
            "id": 619810384,
            "in_reply_to_id": 619768189,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTgxMDM4NA==",
            "original_commit_id": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "original_line": 168,
            "original_position": 124,
            "original_start_line": 163,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 644135548,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619810384",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619812308"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619812308"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I was able to do this, not sure if there is a better way (if so please point that out):\r\n```py\r\n# From higher up\r\n\"\"\"\r\n    #ifndef PyDateTime_TimeZone_UTC\r\n        #define PyDateTime_TimeZone_UTC Py_None\r\n    #endif\r\n\"\"\"\r\n\r\n...\r\n\r\ncdef inline object get_utc():\r\n    cast = <object>PyDateTime_TimeZone_UTC\r\n    if cast is None:\r\n        raise RuntimeError('Time zones are not available from the C-API.')\r\n    # TODO: Emulate the UTC singleton\r\n    return cast\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-25T12:58:36Z",
            "diff_hunk": "@@ -89,9 +150,22 @@ cdef extern from \"datetime.h\":\n         object (*Time_FromTime)(int, int, int, int, object, PyTypeObject*)\n         object (*Delta_FromDelta)(int, int, int, int, PyTypeObject*)\n \n+        # We cannot use the following because we still need to compile on previous versions,\n+        # instead we use datetime.h's macros that we can do some C macro magic on top of.\n+\n+        # constructors\n+        # object (*TimeZone_FromTimeZone)(PyObject *offset, PyObject *name)\n+\n+        # singletons\n+        # PyObject *TimeZone_UTC",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619812308",
            "id": 619812308,
            "in_reply_to_id": 619768045,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTgxMjMwOA==",
            "original_commit_id": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "original_line": 160,
            "original_position": 114,
            "original_start_line": 153,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 644136899,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619812308",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619817067"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619817067"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Ah, I fixed the issue with those by just having them all be `#ifndef`.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-25T13:34:19Z",
            "diff_hunk": "@@ -6,22 +6,73 @@ cdef extern from \"Python.h\":\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n-    #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\n-    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\n-    #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_MICROSECONDS)\n-    #define PyDateTime_DELTA_GET_MICROSECONDS(o)   (((PyDateTime_Delta*)o)->microseconds)\n+    #if PY_MAJOR_VERSION < 3\n+        #if PY_MINOR_VERSION < 3",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619817067",
            "id": 619817067,
            "in_reply_to_id": 619769716,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTgxNzA2Nw==",
            "original_commit_id": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "original_line": 10,
            "original_position": 13,
            "original_start_line": 9,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 644140645,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619817067",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619835349"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619835349"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "_Right_, but why cast it when you can just define it as a `PyTypeObject *` in the first place?",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-25T15:42:41Z",
            "diff_hunk": "@@ -89,9 +150,22 @@ cdef extern from \"datetime.h\":\n         object (*Time_FromTime)(int, int, int, int, object, PyTypeObject*)\n         object (*Delta_FromDelta)(int, int, int, int, PyTypeObject*)\n \n+        # We cannot use the following because we still need to compile on previous versions,\n+        # instead we use datetime.h's macros that we can do some C macro magic on top of.\n+\n+        # constructors\n+        # object (*TimeZone_FromTimeZone)(PyObject *offset, PyObject *name)\n+\n+        # singletons\n+        # PyObject *TimeZone_UTC\n+\n         # constructors for the DB API\n-        object (*DateTime_FromTimestamp)(object, object, object)\n-        object (*Date_FromTimestamp)(object, object)\n+        # object (*DateTime_FromTimestamp)(PyTypeObject*, object, PyObject*)\n+        # object (*Date_FromTimestamp)(PyTypeObject*, object)\n+\n+        # PEP 495 constructors\n+        # object (*DateTime_FromDateAndTimeAndFold)(int, int, int, int, int, int, int, object, int, PyTypeObject*)\n+        # object (*Time_FromTimeAndFold)(int, int, int ,int, object, int, PyTypeObject*)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619835349",
            "id": 619835349,
            "in_reply_to_id": 619768189,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTgzNTM0OQ==",
            "original_commit_id": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "original_line": 168,
            "original_position": 124,
            "original_start_line": 163,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 644153878,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619835349",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619844609"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619844609"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I tried my best to look into emulating the UTC timezone, but without being able to create timezones (which is not exposed to us) that is impossible.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-25T16:55:09Z",
            "diff_hunk": "@@ -89,9 +150,22 @@ cdef extern from \"datetime.h\":\n         object (*Time_FromTime)(int, int, int, int, object, PyTypeObject*)\n         object (*Delta_FromDelta)(int, int, int, int, PyTypeObject*)\n \n+        # We cannot use the following because we still need to compile on previous versions,\n+        # instead we use datetime.h's macros that we can do some C macro magic on top of.\n+\n+        # constructors\n+        # object (*TimeZone_FromTimeZone)(PyObject *offset, PyObject *name)\n+\n+        # singletons\n+        # PyObject *TimeZone_UTC",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619844609",
            "id": 619844609,
            "in_reply_to_id": 619768045,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTg0NDYwOQ==",
            "original_commit_id": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "original_line": 160,
            "original_position": 114,
            "original_start_line": 153,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 644160272,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619844609",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r619874732"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/619874732"
                }
            },
            "author_association": "MEMBER",
            "body": "Right. Then the `get_utc()` function has its value.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-25T20:42:28Z",
            "diff_hunk": "@@ -119,21 +193,41 @@ cdef extern from \"datetime.h\":\n     int PyDateTime_DATE_GET_MINUTE(object o)\n     int PyDateTime_DATE_GET_SECOND(object o)\n     int PyDateTime_DATE_GET_MICROSECOND(object o)\n+    int PyDateTime_DATE_GET_FOLD(object o)\n+    object PyDateTime_DATE_GET_TZINFO(object o)\n \n     # Getters for time (C macros).\n     int PyDateTime_TIME_GET_HOUR(object o)\n     int PyDateTime_TIME_GET_MINUTE(object o)\n     int PyDateTime_TIME_GET_SECOND(object o)\n     int PyDateTime_TIME_GET_MICROSECOND(object o)\n+    int PyDateTime_TIME_GET_FOLD(object o)\n+    object PyDateTime_TIME_GET_TZINFO(object o)\n \n     # Getters for timedelta (C macros).\n     int PyDateTime_DELTA_GET_DAYS(object o)\n     int PyDateTime_DELTA_GET_SECONDS(object o)\n     int PyDateTime_DELTA_GET_MICROSECONDS(object o)\n \n+    # Constructors\n+    object PyDateTime_FromDateAndTimeAndFold(\n+        int year, int month, int day, int hour, int min, int sec, int usec, int fold\n+    )\n+    object PyTime_FromTimeAndFold(int hour, int minute, int second, int usecond, int fold)\n+\n+    # We don't need this first one\n+    # object PyTimeZone_FromOffset(int offset)\n+    object PyTimeZone_FromOffsetAndName(int offset, str name)\n+\n+    # Constructors for the DB API\n+    object PyDateTime_FromTimeStamp(object args)\n+    object PyDate_FromTimeStamp(object args)\n+\n     # PyDateTime CAPI object.\n     PyDateTime_CAPI *PyDateTimeAPI\n \n+    PyObject* PyDateTime_TimeZone_UTC",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r619874732",
            "id": 619874732,
            "in_reply_to_id": 619766002,
            "line": 253,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxOTg3NDczMg==",
            "original_commit_id": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "original_line": 229,
            "original_position": 165,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": 213,
            "pull_request_review_id": 644179559,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/619874732",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r622321401"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/622321401"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        if sys.version_info < (3, 7):\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-28T15:58:26Z",
            "diff_hunk": "@@ -40,3 +42,19 @@ def test_timedelta(int days, int seconds, int useconds):\n     '''\n     val = timedelta(days, seconds, useconds)\n     return val\n+\n+def test_timezone(int days, int seconds, int useconds, str name):\n+    '''\n+    >>> val = test_timezone(0, 3600, 0, 'CET')\n+    >>> print(val)\n+    True\n+    '''\n+    try:\n+        val = timezone_new(timedelta(days, seconds, useconds), name)\n+        return repr(val) == \"datetime.timezone(datetime.timedelta(seconds=3600), 'CET')\"\n+    except RuntimeError:\n+        if sys.version_info[:2] == (3, 7):",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r622321401",
            "id": 622321401,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjMyMTQwMQ==",
            "original_commit_id": "a2ebdd32c8e7535a190fc617493ac9cd17bad12e",
            "original_line": 56,
            "original_position": 30,
            "original_start_line": null,
            "path": "tests/run/datetime_cimport.pyx",
            "position": null,
            "pull_request_review_id": 647248623,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/622321401",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r622321951"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/622321951"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nfrom cpython.datetime cimport time_hour, time_minute, time_second, time_microsecond, time_fold\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-28T15:59:05Z",
            "diff_hunk": "@@ -1,12 +1,14 @@\n from cpython.datetime cimport import_datetime\n from cpython.datetime cimport time_new, date_new, datetime_new, timedelta_new\n from cpython.datetime cimport time_tzinfo, datetime_tzinfo\n-from cpython.datetime cimport time_hour, time_minute, time_second, time_microsecond\n+from cpython.datetime cimport time_hour, time_minute, time_second, time_microsecond, \\\n+                              time_fold",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r622321951",
            "id": 622321951,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjMyMTk1MQ==",
            "original_commit_id": "a2ebdd32c8e7535a190fc617493ac9cd17bad12e",
            "original_line": 5,
            "original_position": 6,
            "original_start_line": 4,
            "path": "tests/run/datetime_members.pyx",
            "position": null,
            "pull_request_review_id": 647248623,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/622321951",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r622323615"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/622323615"
                }
            },
            "author_association": "MEMBER",
            "body": "Well, except that this fails in Py<3.7.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-28T16:00:59Z",
            "diff_hunk": "@@ -258,6 +258,6 @@ def test_datetime_from_utc_timestamp():\n     >>> tp == dt\n     True\n     \"\"\"\n-    tp = datetime_from_timestamp(1618770890, utc_tz)\n+    tp = datetime_from_timestamp(1618770890, get_utc())",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r622323615",
            "id": 622323615,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjMyMzYxNQ==",
            "original_commit_id": "a2ebdd32c8e7535a190fc617493ac9cd17bad12e",
            "original_line": 261,
            "original_position": 14,
            "original_start_line": null,
            "path": "tests/run/datetime_pxd.pyx",
            "position": null,
            "pull_request_review_id": 647248623,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/622323615",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r622327068"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/622327068"
                }
            },
            "author_association": "MEMBER",
            "body": "I'd rather keep a maximum version in here so that this code doesn't break if anyone ever decides to turn these into inline functions or so. It's easy to control the past – we rarely succeed in controlling the future.\r\n\r\nJust use `PY_VERSION_HEX` with the appropriate CPython release.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-28T16:05:06Z",
            "diff_hunk": "@@ -1,27 +1,99 @@\n from cpython.object cimport PyObject\n+from cpython.version cimport PY_VERSION_HEX\n \n cdef extern from \"Python.h\":\n     ctypedef struct PyTypeObject:\n         pass\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n+    /* Backport for Python < 3.3 */\n+    #ifndef PyDateTime_DELTA_GET_DAYS",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r622327068",
            "id": 622327068,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjMyNzA2OA==",
            "original_commit_id": "a2ebdd32c8e7535a190fc617493ac9cd17bad12e",
            "original_line": 11,
            "original_position": 13,
            "original_start_line": 10,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 647248623,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/622327068",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r622329070"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/622329070"
                }
            },
            "author_association": "MEMBER",
            "body": "Shouldn't these define the same name? (Also below.)",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-28T16:07:27Z",
            "diff_hunk": "@@ -1,27 +1,99 @@\n from cpython.object cimport PyObject\n+from cpython.version cimport PY_VERSION_HEX\n \n cdef extern from \"Python.h\":\n     ctypedef struct PyTypeObject:\n         pass\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n+    /* Backport for Python < 3.3 */\n+    #ifndef PyDateTime_DELTA_GET_DAYS\n+        #define PyDateTime_DELTA_GET_DAYS(o) (((PyDateTime_Delta*)o)->days)\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\n-    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\n+    #ifndef PyDateTime_DELTA_GET_SECONDS\n+        #define PyDateTime_DELTA_GET_SECONDS(o) (((PyDateTime_Delta*)o)->seconds)\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_MICROSECONDS)\n-    #define PyDateTime_DELTA_GET_MICROSECONDS(o)   (((PyDateTime_Delta*)o)->microseconds)\n+    #ifndef PyDateTime_DELTA_GET_MICROSECONDS\n+        #define PyDateTime_DELTA_GET_MICROSECONDS(o) (((PyDateTime_Delta*)o)->microseconds)\n+    #endif\n+\n+    /* Backport for Python < 3.6 */\n+    #ifndef PyDateTime_TIME_GET_FOLD\n+        #define PyDateTime_TIME_GET_FOLD(o) 0\n+    #endif\n+    #ifndef PyDateTime_DATE_GET_FOLD\n+        #define PyDateTime_DATE_GET_FOLD(o) 0\n+    #endif\n+\n+    /* Backport for Python < 3.6 */\n+    #ifndef PyDateTime_FromDateAndTimeAndFold\n+        #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r622329070",
            "id": 622329070,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjMyOTA3MA==",
            "original_commit_id": "a2ebdd32c8e7535a190fc617493ac9cd17bad12e",
            "original_line": 31,
            "original_position": 37,
            "original_start_line": 30,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 647248623,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/622329070",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r622353225"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/622353225"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I wasn't sure if we wanted to overwrite it, could be confusing to call `PyDateTime_FromDateAndTimeAndFold` with `tz` when in the `datetime.h` it is not defined to take it. But I am onboard to use a `#undef` and redefine it. What do you think?",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-28T16:36:38Z",
            "diff_hunk": "@@ -1,27 +1,99 @@\n from cpython.object cimport PyObject\n+from cpython.version cimport PY_VERSION_HEX\n \n cdef extern from \"Python.h\":\n     ctypedef struct PyTypeObject:\n         pass\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n+    /* Backport for Python < 3.3 */\n+    #ifndef PyDateTime_DELTA_GET_DAYS\n+        #define PyDateTime_DELTA_GET_DAYS(o) (((PyDateTime_Delta*)o)->days)\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\n-    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\n+    #ifndef PyDateTime_DELTA_GET_SECONDS\n+        #define PyDateTime_DELTA_GET_SECONDS(o) (((PyDateTime_Delta*)o)->seconds)\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_MICROSECONDS)\n-    #define PyDateTime_DELTA_GET_MICROSECONDS(o)   (((PyDateTime_Delta*)o)->microseconds)\n+    #ifndef PyDateTime_DELTA_GET_MICROSECONDS\n+        #define PyDateTime_DELTA_GET_MICROSECONDS(o) (((PyDateTime_Delta*)o)->microseconds)\n+    #endif\n+\n+    /* Backport for Python < 3.6 */\n+    #ifndef PyDateTime_TIME_GET_FOLD\n+        #define PyDateTime_TIME_GET_FOLD(o) 0\n+    #endif\n+    #ifndef PyDateTime_DATE_GET_FOLD\n+        #define PyDateTime_DATE_GET_FOLD(o) 0\n+    #endif\n+\n+    /* Backport for Python < 3.6 */\n+    #ifndef PyDateTime_FromDateAndTimeAndFold\n+        #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r622353225",
            "id": 622353225,
            "in_reply_to_id": 622329070,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjM1MzIyNQ==",
            "original_commit_id": "a2ebdd32c8e7535a190fc617493ac9cd17bad12e",
            "original_line": 31,
            "original_position": 37,
            "original_start_line": 30,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 647288282,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/622353225",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r622499591"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/622499591"
                }
            },
            "author_association": "MEMBER",
            "body": "No, that's not what I meant. I meant the two different names:\r\n```\r\n#ifndef PyDateTime_FromDateAndTimeAndFold\r\n        #define __Pyx_DateTime_DateTimeWithFold\r\n```\r\nBoth should use the name `__Pyx_DateTime_DateTimeWithFold`.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-28T20:05:37Z",
            "diff_hunk": "@@ -1,27 +1,99 @@\n from cpython.object cimport PyObject\n+from cpython.version cimport PY_VERSION_HEX\n \n cdef extern from \"Python.h\":\n     ctypedef struct PyTypeObject:\n         pass\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n+    /* Backport for Python < 3.3 */\n+    #ifndef PyDateTime_DELTA_GET_DAYS\n+        #define PyDateTime_DELTA_GET_DAYS(o) (((PyDateTime_Delta*)o)->days)\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\n-    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\n+    #ifndef PyDateTime_DELTA_GET_SECONDS\n+        #define PyDateTime_DELTA_GET_SECONDS(o) (((PyDateTime_Delta*)o)->seconds)\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_MICROSECONDS)\n-    #define PyDateTime_DELTA_GET_MICROSECONDS(o)   (((PyDateTime_Delta*)o)->microseconds)\n+    #ifndef PyDateTime_DELTA_GET_MICROSECONDS\n+        #define PyDateTime_DELTA_GET_MICROSECONDS(o) (((PyDateTime_Delta*)o)->microseconds)\n+    #endif\n+\n+    /* Backport for Python < 3.6 */\n+    #ifndef PyDateTime_TIME_GET_FOLD\n+        #define PyDateTime_TIME_GET_FOLD(o) 0\n+    #endif\n+    #ifndef PyDateTime_DATE_GET_FOLD\n+        #define PyDateTime_DATE_GET_FOLD(o) 0\n+    #endif\n+\n+    /* Backport for Python < 3.6 */\n+    #ifndef PyDateTime_FromDateAndTimeAndFold\n+        #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r622499591",
            "id": 622499591,
            "in_reply_to_id": 622329070,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjQ5OTU5MQ==",
            "original_commit_id": "a2ebdd32c8e7535a190fc617493ac9cd17bad12e",
            "original_line": 31,
            "original_position": 37,
            "original_start_line": 30,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 647493564,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/622499591",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r622506282"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/622506282"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Ah yeah, with the Python version check introduced that should be done, let me amend.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-28T20:14:47Z",
            "diff_hunk": "@@ -1,27 +1,99 @@\n from cpython.object cimport PyObject\n+from cpython.version cimport PY_VERSION_HEX\n \n cdef extern from \"Python.h\":\n     ctypedef struct PyTypeObject:\n         pass\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n+    /* Backport for Python < 3.3 */\n+    #ifndef PyDateTime_DELTA_GET_DAYS\n+        #define PyDateTime_DELTA_GET_DAYS(o) (((PyDateTime_Delta*)o)->days)\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\n-    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\n+    #ifndef PyDateTime_DELTA_GET_SECONDS\n+        #define PyDateTime_DELTA_GET_SECONDS(o) (((PyDateTime_Delta*)o)->seconds)\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_MICROSECONDS)\n-    #define PyDateTime_DELTA_GET_MICROSECONDS(o)   (((PyDateTime_Delta*)o)->microseconds)\n+    #ifndef PyDateTime_DELTA_GET_MICROSECONDS\n+        #define PyDateTime_DELTA_GET_MICROSECONDS(o) (((PyDateTime_Delta*)o)->microseconds)\n+    #endif\n+\n+    /* Backport for Python < 3.6 */\n+    #ifndef PyDateTime_TIME_GET_FOLD\n+        #define PyDateTime_TIME_GET_FOLD(o) 0\n+    #endif\n+    #ifndef PyDateTime_DATE_GET_FOLD\n+        #define PyDateTime_DATE_GET_FOLD(o) 0\n+    #endif\n+\n+    /* Backport for Python < 3.6 */\n+    #ifndef PyDateTime_FromDateAndTimeAndFold\n+        #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r622506282",
            "id": 622506282,
            "in_reply_to_id": 622329070,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjUwNjI4Mg==",
            "original_commit_id": "a2ebdd32c8e7535a190fc617493ac9cd17bad12e",
            "original_line": 31,
            "original_position": 37,
            "original_start_line": 30,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 647520311,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/622506282",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r622742454"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/622742454"
                }
            },
            "author_association": "MEMBER",
            "body": "Looks like these were also added to Py2.7.5.\r\n```suggestion\r\n    /* Backport for Python < 2.7.5 */\r\n    #if PY_VERSION_HEX < 0x02070500\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-29T05:27:47Z",
            "diff_hunk": "@@ -1,27 +1,106 @@\n from cpython.object cimport PyObject\n+from cpython.version cimport PY_VERSION_HEX\n \n cdef extern from \"Python.h\":\n     ctypedef struct PyTypeObject:\n         pass\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n+    /* Backport for Python < 3.3 */\n+    #if PY_VERSION_HEX < 0x030100a1",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r622742454",
            "id": 622742454,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjc0MjQ1NA==",
            "original_commit_id": "24bfcf9a00f4b61ecf7b2bb1200c47344258ed25",
            "original_line": 11,
            "original_position": 13,
            "original_start_line": 10,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 647824055,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/622742454",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r622744689"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/622744689"
                }
            },
            "author_association": "MEMBER",
            "body": "Since we're defining our own local macros here, we don't need the guards.\r\n```suggestion\r\n    /* Backport for Python < 3.6 */\r\n    #if PY_VERSION_HEX < 0x030600a4\r\n        #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\\r\n            PyDateTimeAPI->DateTime_FromDateAndTime(year, month, day, hour, minute, second, \\\r\n                microsecond, tz, PyDateTimeAPI->DateTimeType)\r\n        #define __Pyx_DateTime_TimeWithFold(hour, minute, second, usecond, tz, fold) \\\r\n            PyDateTimeAPI->Time_FromTime(hour, minute, second, usecond, tz, PyDateTimeAPI->TimeType)\r\n    #else /* For Python 3.6+ so that we can pass tz */\r\n        #define __Pyx_PyDateTime_FromDateAndTimeAndFold(hour, minute, second, usecond, tz, fold) \\\r\n            PyDateTimeAPI->DateTime_FromDateAndTimeAndFold(year, month, day, hour, minute, second, \\\r\n                microsecond, tz, fold, PyDateTimeAPI->DateTimeType)\r\n        #define __Pyx_DateTime_TimeWithFold(hour, minute, second, usecond, tz, fold) \\\r\n            PyDateTimeAPI->Time_FromTimeAndFold(hour, minute, second, usecond, tz, fold, PyDateTimeAPI->TimeType)\r\n    #endif\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-29T05:34:18Z",
            "diff_hunk": "@@ -1,27 +1,106 @@\n from cpython.object cimport PyObject\n+from cpython.version cimport PY_VERSION_HEX\n \n cdef extern from \"Python.h\":\n     ctypedef struct PyTypeObject:\n         pass\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n+    /* Backport for Python < 3.3 */\n+    #if PY_VERSION_HEX < 0x030100a1\n+        #ifndef PyDateTime_DELTA_GET_DAYS\n+            #define PyDateTime_DELTA_GET_DAYS(o) (((PyDateTime_Delta*)o)->days)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_SECONDS\n+            #define PyDateTime_DELTA_GET_SECONDS(o) (((PyDateTime_Delta*)o)->seconds)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_MICROSECONDS\n+            #define PyDateTime_DELTA_GET_MICROSECONDS(o) (((PyDateTime_Delta*)o)->microseconds)\n+        #endif\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\n-    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #ifndef PyDateTime_TIME_GET_FOLD\n+            #define PyDateTime_TIME_GET_FOLD(o) 0\n+        #endif\n+        #ifndef PyDateTime_DATE_GET_FOLD\n+            #define PyDateTime_DATE_GET_FOLD(o) 0\n+        #endif\n+    #endif\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #ifndef __Pyx_DateTime_DateTimeWithFold\n+            #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\\n+                PyDateTimeAPI->DateTime_FromDateAndTime(year, month, day, hour, minute, second, \\\n+                    microsecond, tz, PyDateTimeAPI->DateTimeType)\n+        #endif\n+        #ifndef __Pyx_DateTime_TimeWithFold\n+            #define __Pyx_DateTime_TimeWithFold(hour, minute, second, usecond, tz, fold) \\\n+                PyDateTimeAPI->Time_FromTime(hour, minute, second, usecond, tz, PyDateTimeAPI->TimeType)\n+        #endif\n+    #else /* For Python 3.6+ so that we can pass tz */\n+        #ifndef __Pyx_DateTime_DateTimeWithFold\n+            #define PyDateTime_FromDateAndTimeAndFold(hour, minute, second, usecond, tz, fold) \\\n+                PyDateTimeAPI->DateTime_FromDateAndTimeAndFold(year, month, day, hour, minute, second, \\\n+                    microsecond, tz, fold, PyDateTimeAPI->DateTimeType)\n+        #endif\n+        #ifndef __Pyx_DateTime_TimeWithFold\n+            #define __Pyx_DateTime_TimeWithFold(hour, minute, second, usecond, tz, fold) \\\n+                PyDateTimeAPI->Time_FromTimeAndFold(hour, minute, second, usecond, tz, fold, PyDateTimeAPI->TimeType)\n+        #endif\n     #endif",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r622744689",
            "id": 622744689,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjc0NDY4OQ==",
            "original_commit_id": "24bfcf9a00f4b61ecf7b2bb1200c47344258ed25",
            "original_line": 54,
            "original_position": 58,
            "original_start_line": 33,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 647824055,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/622744689",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r622745480"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/622745480"
                }
            },
            "author_association": "MEMBER",
            "body": "Since these are incomplete/incorrect backports (e.g. they return `NULL` but don't set an exception), I'd also use `__Pyx_` macros here.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-29T05:36:36Z",
            "diff_hunk": "@@ -1,27 +1,106 @@\n from cpython.object cimport PyObject\n+from cpython.version cimport PY_VERSION_HEX\n \n cdef extern from \"Python.h\":\n     ctypedef struct PyTypeObject:\n         pass\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n+    /* Backport for Python < 3.3 */\n+    #if PY_VERSION_HEX < 0x030100a1\n+        #ifndef PyDateTime_DELTA_GET_DAYS\n+            #define PyDateTime_DELTA_GET_DAYS(o) (((PyDateTime_Delta*)o)->days)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_SECONDS\n+            #define PyDateTime_DELTA_GET_SECONDS(o) (((PyDateTime_Delta*)o)->seconds)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_MICROSECONDS\n+            #define PyDateTime_DELTA_GET_MICROSECONDS(o) (((PyDateTime_Delta*)o)->microseconds)\n+        #endif\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\n-    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #ifndef PyDateTime_TIME_GET_FOLD\n+            #define PyDateTime_TIME_GET_FOLD(o) 0\n+        #endif\n+        #ifndef PyDateTime_DATE_GET_FOLD\n+            #define PyDateTime_DATE_GET_FOLD(o) 0\n+        #endif\n+    #endif\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #ifndef __Pyx_DateTime_DateTimeWithFold\n+            #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\\n+                PyDateTimeAPI->DateTime_FromDateAndTime(year, month, day, hour, minute, second, \\\n+                    microsecond, tz, PyDateTimeAPI->DateTimeType)\n+        #endif\n+        #ifndef __Pyx_DateTime_TimeWithFold\n+            #define __Pyx_DateTime_TimeWithFold(hour, minute, second, usecond, tz, fold) \\\n+                PyDateTimeAPI->Time_FromTime(hour, minute, second, usecond, tz, PyDateTimeAPI->TimeType)\n+        #endif\n+    #else /* For Python 3.6+ so that we can pass tz */\n+        #ifndef __Pyx_DateTime_DateTimeWithFold\n+            #define PyDateTime_FromDateAndTimeAndFold(hour, minute, second, usecond, tz, fold) \\\n+                PyDateTimeAPI->DateTime_FromDateAndTimeAndFold(year, month, day, hour, minute, second, \\\n+                    microsecond, tz, fold, PyDateTimeAPI->DateTimeType)\n+        #endif\n+        #ifndef __Pyx_DateTime_TimeWithFold\n+            #define __Pyx_DateTime_TimeWithFold(hour, minute, second, usecond, tz, fold) \\\n+                PyDateTimeAPI->Time_FromTimeAndFold(hour, minute, second, usecond, tz, fold, PyDateTimeAPI->TimeType)\n+        #endif\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_MICROSECONDS)\n-    #define PyDateTime_DELTA_GET_MICROSECONDS(o)   (((PyDateTime_Delta*)o)->microseconds)\n+\n+    /* Backport for Python < 3.7 */\n+    #if PY_VERSION_HEX < 0x030700b1\n+        #ifndef PyDateTime_TimeZone_UTC\n+            #define PyDateTime_TimeZone_UTC NULL",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r622745480",
            "id": 622745480,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjc0NTQ4MA==",
            "original_commit_id": "24bfcf9a00f4b61ecf7b2bb1200c47344258ed25",
            "original_line": 59,
            "original_position": 65,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 647824055,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/622745480",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r622748676"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/622748676"
                }
            },
            "author_association": "MEMBER",
            "body": "We shouldn't require users to pass a `str` here _and_ require Cython to know or test it.\r\n```suggestion\r\n    object PyTimeZone_FromOffsetAndName(object offset, object name)\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-29T05:45:56Z",
            "diff_hunk": "@@ -119,21 +228,39 @@ cdef extern from \"datetime.h\":\n     int PyDateTime_DATE_GET_MINUTE(object o)\n     int PyDateTime_DATE_GET_SECOND(object o)\n     int PyDateTime_DATE_GET_MICROSECOND(object o)\n+    int PyDateTime_DATE_GET_FOLD(object o)\n+    object PyDateTime_DATE_GET_TZINFO(object o)\n \n     # Getters for time (C macros).\n     int PyDateTime_TIME_GET_HOUR(object o)\n     int PyDateTime_TIME_GET_MINUTE(object o)\n     int PyDateTime_TIME_GET_SECOND(object o)\n     int PyDateTime_TIME_GET_MICROSECOND(object o)\n+    int PyDateTime_TIME_GET_FOLD(object o)\n+    object PyDateTime_TIME_GET_TZINFO(object o)\n \n     # Getters for timedelta (C macros).\n     int PyDateTime_DELTA_GET_DAYS(object o)\n     int PyDateTime_DELTA_GET_SECONDS(object o)\n     int PyDateTime_DELTA_GET_MICROSECONDS(object o)\n \n+    # Constructors\n+    object PyTimeZone_FromOffset(object offset)\n+    object PyTimeZone_FromOffsetAndName(object offset, str name)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r622748676",
            "id": 622748676,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjc0ODY3Ng==",
            "original_commit_id": "24bfcf9a00f4b61ecf7b2bb1200c47344258ed25",
            "original_line": 249,
            "original_position": 199,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 647824055,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/622748676",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r622749947"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/622749947"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\ncdef inline object timezone_new(object offset, object name=None):\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-29T05:49:16Z",
            "diff_hunk": "@@ -161,11 +288,42 @@ cdef inline object datetime_new(int year, int month, int day, int hour, int minu\n cdef inline object timedelta_new(int days, int seconds, int useconds):\n     return PyDateTimeAPI.Delta_FromDelta(days, seconds, useconds, 1, PyDateTimeAPI.DeltaType)\n \n+# Create timedelta object using DateTime CAPI factory function.\n+cdef inline object timezone_new(object offset, str name=None):",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r622749947",
            "id": 622749947,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjc0OTk0Nw==",
            "original_commit_id": "24bfcf9a00f4b61ecf7b2bb1200c47344258ed25",
            "original_line": 292,
            "original_position": 222,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 647824055,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/622749947",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r622750247"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/622750247"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    return PyTimeZone_FromOffsetAndName(offset, name) if name is not None else PyTimeZone_FromOffset(offset)\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-29T05:50:09Z",
            "diff_hunk": "@@ -161,11 +288,42 @@ cdef inline object datetime_new(int year, int month, int day, int hour, int minu\n cdef inline object timedelta_new(int days, int seconds, int useconds):\n     return PyDateTimeAPI.Delta_FromDelta(days, seconds, useconds, 1, PyDateTimeAPI.DeltaType)\n \n+# Create timedelta object using DateTime CAPI factory function.\n+cdef inline object timezone_new(object offset, str name=None):\n+    if PY_VERSION_HEX < 0x030700b1:\n+        raise RuntimeError('Time zones are not available from the C-API.')\n+    return PyTimeZone_FromOffsetAndName(offset, name)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r622750247",
            "id": 622750247,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjc1MDI0Nw==",
            "original_commit_id": "24bfcf9a00f4b61ecf7b2bb1200c47344258ed25",
            "original_line": 295,
            "original_position": 225,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 647824055,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/622750247",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r622751709"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/622751709"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think we need these as new functions. Just add `fold=0` as a default argument to `datetime_new()` and `time_new()`, and let them call the new macros as implementation.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-29T05:53:50Z",
            "diff_hunk": "@@ -161,11 +288,42 @@ cdef inline object datetime_new(int year, int month, int day, int hour, int minu\n cdef inline object timedelta_new(int days, int seconds, int useconds):\n     return PyDateTimeAPI.Delta_FromDelta(days, seconds, useconds, 1, PyDateTimeAPI.DeltaType)\n \n+# Create timedelta object using DateTime CAPI factory function.\n+cdef inline object timezone_new(object offset, str name=None):\n+    if PY_VERSION_HEX < 0x030700b1:\n+        raise RuntimeError('Time zones are not available from the C-API.')\n+    return PyTimeZone_FromOffsetAndName(offset, name)\n+\n+# Create datetime object using PEP 495 constructor.\n+cdef inline object datetime_and_fold_new(\n+        int year, int month, int day, int hour, int minute, int second, int microsecond, object tz, int fold\n+    ):\n+    return __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold)\n+\n+# Create time object using PEP 495 constructor.\n+cdef inline object time_and_fold_new(int hour, int minute, int second, int microsecond, object tz, int fold):\n+    return __Pyx_DateTime_TimeWithFold(hour, minute, second, microsecond, tz, fold)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r622751709",
            "id": 622751709,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjc1MTcwOQ==",
            "original_commit_id": "24bfcf9a00f4b61ecf7b2bb1200c47344258ed25",
            "original_line": 305,
            "original_position": 235,
            "original_start_line": 297,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 647824055,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/622751709",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r622752948"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/622752948"
                }
            },
            "author_association": "MEMBER",
            "body": "This should be more explicit about what part is allowed to raise the exception. It's only `get_utc()` that we expect to fail, right? Then only that should be wrapped by try-except. Otherwise, we risk hiding bugs.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-29T05:57:02Z",
            "diff_hunk": "@@ -238,3 +239,31 @@ def test_datetime_attrs_inlined(datetime dt):\n         dt.second,\n         dt.microsecond,\n     )\n+\n+def test_date_from_utc_timestamp():\n+    \"\"\"\n+    >>> from datetime import datetime\n+    >>> tp, dt = test_date_from_utc_timestamp()\n+    >>> tp == dt\n+    True\n+    \"\"\"\n+    tp = date_from_timestamp(1518185542)\n+    dt = py_datetime.date(2018, 2, 9)\n+    return tp, dt\n+\n+def test_datetime_from_utc_timestamp():\n+    \"\"\"\n+    >>> from datetime import datetime\n+    >>> test_datetime_from_utc_timestamp()\n+    True\n+    \"\"\"\n+    try:\n+        tp = datetime_from_timestamp(1618770890, get_utc())\n+        dt = py_datetime.datetime(2021, 4, 18, 18, 34, 50, tzinfo=py_datetime.timezone.utc)\n+        return tp == dt\n+    except RuntimeError:",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r622752948",
            "id": 622752948,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjc1Mjk0OA==",
            "original_commit_id": "24bfcf9a00f4b61ecf7b2bb1200c47344258ed25",
            "original_line": 264,
            "original_position": 34,
            "original_start_line": 260,
            "path": "tests/run/datetime_pxd.pyx",
            "position": null,
            "pull_request_review_id": 647824055,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/622752948",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r623175561"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/623175561"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "They do in our inline functions, but yes not on the C level.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-29T15:44:54Z",
            "diff_hunk": "@@ -1,27 +1,106 @@\n from cpython.object cimport PyObject\n+from cpython.version cimport PY_VERSION_HEX\n \n cdef extern from \"Python.h\":\n     ctypedef struct PyTypeObject:\n         pass\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n+    /* Backport for Python < 3.3 */\n+    #if PY_VERSION_HEX < 0x030100a1\n+        #ifndef PyDateTime_DELTA_GET_DAYS\n+            #define PyDateTime_DELTA_GET_DAYS(o) (((PyDateTime_Delta*)o)->days)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_SECONDS\n+            #define PyDateTime_DELTA_GET_SECONDS(o) (((PyDateTime_Delta*)o)->seconds)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_MICROSECONDS\n+            #define PyDateTime_DELTA_GET_MICROSECONDS(o) (((PyDateTime_Delta*)o)->microseconds)\n+        #endif\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\n-    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #ifndef PyDateTime_TIME_GET_FOLD\n+            #define PyDateTime_TIME_GET_FOLD(o) 0\n+        #endif\n+        #ifndef PyDateTime_DATE_GET_FOLD\n+            #define PyDateTime_DATE_GET_FOLD(o) 0\n+        #endif\n+    #endif\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #ifndef __Pyx_DateTime_DateTimeWithFold\n+            #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\\n+                PyDateTimeAPI->DateTime_FromDateAndTime(year, month, day, hour, minute, second, \\\n+                    microsecond, tz, PyDateTimeAPI->DateTimeType)\n+        #endif\n+        #ifndef __Pyx_DateTime_TimeWithFold\n+            #define __Pyx_DateTime_TimeWithFold(hour, minute, second, usecond, tz, fold) \\\n+                PyDateTimeAPI->Time_FromTime(hour, minute, second, usecond, tz, PyDateTimeAPI->TimeType)\n+        #endif\n+    #else /* For Python 3.6+ so that we can pass tz */\n+        #ifndef __Pyx_DateTime_DateTimeWithFold\n+            #define PyDateTime_FromDateAndTimeAndFold(hour, minute, second, usecond, tz, fold) \\\n+                PyDateTimeAPI->DateTime_FromDateAndTimeAndFold(year, month, day, hour, minute, second, \\\n+                    microsecond, tz, fold, PyDateTimeAPI->DateTimeType)\n+        #endif\n+        #ifndef __Pyx_DateTime_TimeWithFold\n+            #define __Pyx_DateTime_TimeWithFold(hour, minute, second, usecond, tz, fold) \\\n+                PyDateTimeAPI->Time_FromTimeAndFold(hour, minute, second, usecond, tz, fold, PyDateTimeAPI->TimeType)\n+        #endif\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_MICROSECONDS)\n-    #define PyDateTime_DELTA_GET_MICROSECONDS(o)   (((PyDateTime_Delta*)o)->microseconds)\n+\n+    /* Backport for Python < 3.7 */\n+    #if PY_VERSION_HEX < 0x030700b1\n+        #ifndef PyDateTime_TimeZone_UTC\n+            #define PyDateTime_TimeZone_UTC NULL",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r623175561",
            "id": 623175561,
            "in_reply_to_id": 622745480,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzE3NTU2MQ==",
            "original_commit_id": "24bfcf9a00f4b61ecf7b2bb1200c47344258ed25",
            "original_line": 59,
            "original_position": 65,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 648370253,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/623175561",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r623283312"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/623283312"
                }
            },
            "author_association": "MEMBER",
            "body": "Please keep these so that they can be used by developers who target Python 3.7 and later.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-29T18:14:57Z",
            "diff_hunk": "@@ -237,12 +235,8 @@ cdef extern from \"datetime.h\":\n     int PyDateTime_DELTA_GET_MICROSECONDS(object o)\n \n     # Constructors\n-    object PyTimeZone_FromOffset(object offset)\n-    object PyTimeZone_FromOffsetAndName(object offset, object name)\n-\n-    # Constructors for the DB API\n-    object PyDateTime_FromTimeStamp(object args)\n-    object PyDate_FromTimeStamp(object args)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r623283312",
            "id": 623283312,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzI4MzMxMg==",
            "original_commit_id": "772519f9517c6c24dedbabf1200a7a3812ee8d1b",
            "original_line": 245,
            "original_position": 32,
            "original_start_line": 240,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 648512038,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "LEFT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/623283312",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r623283476"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/623283476"
                }
            },
            "author_association": "MEMBER",
            "body": "Please keep this as well.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-29T18:15:13Z",
            "diff_hunk": "@@ -251,7 +245,7 @@ cdef extern from \"datetime.h\":\n     # PyDateTime CAPI object.\n     PyDateTime_CAPI *PyDateTimeAPI\n \n-    PyObject* PyDateTime_TimeZone_UTC  # Requires Py3.7+ !",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r623283476",
            "id": 623283476,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzI4MzQ3Ng==",
            "original_commit_id": "772519f9517c6c24dedbabf1200a7a3812ee8d1b",
            "original_line": 254,
            "original_position": 42,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 648512038,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/623283476",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r623382964"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/623382964"
                }
            },
            "author_association": "MEMBER",
            "body": "And now, since we have our own internal macro here, let's simplify the usage for our purpose (and fix the usage further down while we're at it ;-) ).\r\n```suggestion\r\n    object __Pyx_TimeZone_FromOffsetAndName(object offset, PyObject* name)\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-29T20:40:09Z",
            "diff_hunk": "@@ -119,21 +218,46 @@ cdef extern from \"datetime.h\":\n     int PyDateTime_DATE_GET_MINUTE(object o)\n     int PyDateTime_DATE_GET_SECOND(object o)\n     int PyDateTime_DATE_GET_MICROSECOND(object o)\n+    int PyDateTime_DATE_GET_FOLD(object o)\n+    object PyDateTime_DATE_GET_TZINFO(object o)\n \n     # Getters for time (C macros).\n     int PyDateTime_TIME_GET_HOUR(object o)\n     int PyDateTime_TIME_GET_MINUTE(object o)\n     int PyDateTime_TIME_GET_SECOND(object o)\n     int PyDateTime_TIME_GET_MICROSECOND(object o)\n+    int PyDateTime_TIME_GET_FOLD(object o)\n+    object PyDateTime_TIME_GET_TZINFO(object o)\n \n     # Getters for timedelta (C macros).\n     int PyDateTime_DELTA_GET_DAYS(object o)\n     int PyDateTime_DELTA_GET_SECONDS(object o)\n     int PyDateTime_DELTA_GET_MICROSECONDS(object o)\n \n+    # Constructors\n+    object PyTimeZone_FromOffset(object offset)\n+    object PyTimeZone_FromOffsetAndName(object offset, object name)\n+\n+    # The above macros is Python 3.7+ so we use these instead\n+    object __Pyx_TimeZone_FromOffset(object offset)\n+    object __Pyx_TimeZone_FromOffsetAndName(object offset, object name)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r623382964",
            "id": 623382964,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzM4Mjk2NA==",
            "original_commit_id": "482164a664a45c2f509c34c7840b3db8a1488583",
            "original_line": 243,
            "original_position": 193,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 648637071,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/623382964",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r623384198"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/623384198"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    return __Pyx_TimeZone_FromOffsetAndName(offset, <PyObject*>name if name is not None else NULL)\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-29T20:42:05Z",
            "diff_hunk": "@@ -148,24 +272,45 @@ cdef inline object date_new(int year, int month, int day):\n \n # Create time object using DateTime CAPI factory function\n # Note, there are no range checks for any of the arguments.\n-cdef inline object time_new(int hour, int minute, int second, int microsecond, object tz):\n-    return PyDateTimeAPI.Time_FromTime(hour, minute, second, microsecond, tz, PyDateTimeAPI.TimeType)\n+cdef inline object time_new(int hour, int minute, int second, int microsecond, object tz, int fold=0):\n+    return __Pyx_DateTime_TimeWithFold(hour, minute, second, microsecond, tz, fold)\n \n # Create datetime object using DateTime CAPI factory function.\n # Note, there are no range checks for any of the arguments.\n-cdef inline object datetime_new(int year, int month, int day, int hour, int minute, int second, int microsecond, object tz):\n-    return PyDateTimeAPI.DateTime_FromDateAndTime(year, month, day, hour, minute, second, microsecond, tz, PyDateTimeAPI.DateTimeType)\n+cdef inline object datetime_new(int year, int month, int day, int hour, int minute, int second, int microsecond, object tz, int fold=0):\n+    return __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold)\n \n # Create timedelta object using DateTime CAPI factory function.\n # Note, there are no range checks for any of the arguments.\n cdef inline object timedelta_new(int days, int seconds, int useconds):\n     return PyDateTimeAPI.Delta_FromDelta(days, seconds, useconds, 1, PyDateTimeAPI.DeltaType)\n \n+# Create timedelta object using DateTime CAPI factory function.\n+cdef inline object timezone_new(object offset, object name=None):\n+    if PY_VERSION_HEX < 0x030700b1:\n+        raise RuntimeError('Time zones are not available from the C-API.')\n+    return __Pyx_TimeZone_FromOffsetAndName(offset, name) if name is not None else PyTimeZone_FromOffset(offset)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r623384198",
            "id": 623384198,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzM4NDE5OA==",
            "original_commit_id": "482164a664a45c2f509c34c7840b3db8a1488583",
            "original_line": 292,
            "original_position": 239,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 648637071,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/623384198",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r623387520"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/623387520"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    #if PY_VERSION_HEX < 0x030700b1\r\n        #define __Pyx_TimeZone_UTC NULL\r\n        #define __Pyx_TimeZone_FromOffsetAndName(offset, name) NULL\r\n    #else\r\n        #define __Pyx_TimeZone_UTC PyDateTime_TimeZone_UTC\r\n        #define __Pyx_TimeZone_FromOffsetAndName(offset, name) PyTimeZone_FromOffsetAndName(offset, name)\r\n    #endif\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-29T20:47:53Z",
            "diff_hunk": "@@ -1,27 +1,96 @@\n from cpython.object cimport PyObject\n+from cpython.version cimport PY_VERSION_HEX\n \n cdef extern from \"Python.h\":\n     ctypedef struct PyTypeObject:\n         pass\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n+    /* Backport for Python < 2.7.5 */\n+    #if PY_VERSION_HEX < 0x02070500\n+        #ifndef PyDateTime_DELTA_GET_DAYS\n+            #define PyDateTime_DELTA_GET_DAYS(o) (((PyDateTime_Delta*)o)->days)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_SECONDS\n+            #define PyDateTime_DELTA_GET_SECONDS(o) (((PyDateTime_Delta*)o)->seconds)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_MICROSECONDS\n+            #define PyDateTime_DELTA_GET_MICROSECONDS(o) (((PyDateTime_Delta*)o)->microseconds)\n+        #endif\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\n-    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #ifndef PyDateTime_TIME_GET_FOLD\n+            #define PyDateTime_TIME_GET_FOLD(o) 0\n+        #endif\n+        #ifndef PyDateTime_DATE_GET_FOLD\n+            #define PyDateTime_DATE_GET_FOLD(o) 0\n+        #endif\n+    #endif\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\\n+            PyDateTimeAPI->DateTime_FromDateAndTime(year, month, day, hour, minute, second, \\\n+                microsecond, tz, PyDateTimeAPI->DateTimeType)\n+        #define __Pyx_DateTime_TimeWithFold(hour, minute, second, usecond, tz, fold) \\\n+            PyDateTimeAPI->Time_FromTime(hour, minute, second, usecond, tz, PyDateTimeAPI->TimeType)\n+    #else /* For Python 3.6+ so that we can pass tz */\n+        #define __Pyx_PyDateTime_FromDateAndTimeAndFold(hour, minute, second, usecond, tz, fold) \\\n+            PyDateTimeAPI->DateTime_FromDateAndTimeAndFold(year, month, day, hour, minute, second, \\\n+                microsecond, tz, fold, PyDateTimeAPI->DateTimeType)\n+        #define __Pyx_DateTime_TimeWithFold(hour, minute, second, usecond, tz, fold) \\\n+            PyDateTimeAPI->Time_FromTimeAndFold(hour, minute, second, usecond, tz, fold, PyDateTimeAPI->TimeType)\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_MICROSECONDS)\n-    #define PyDateTime_DELTA_GET_MICROSECONDS(o)   (((PyDateTime_Delta*)o)->microseconds)\n+\n+    /* Backport for Python < 3.7 */\n+    #if PY_VERSION_HEX < 0x030700b1\n+        #define __Pyx_TimeZone_UTC NULL\n+        #define __Pyx_TimeZone_FromOffset(offset) NULL\n+        #define __Pyx_TimeZone_FromOffsetAndName(offset, name) PyTimeZone_FromOffset(offset)\n+    #else\n+        #define __Pyx_TimeZone_UTC PyDateTime_TimeZone_UTC\n+        #define __Pyx_TimeZone_FromOffset(offset) PyTimeZone_FromOffset(offset)\n+        #define __Pyx_TimeZone_FromOffsetAndName(offset, name) PyTimeZone_FromOffsetAndName(offset, name)\n     #endif",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r623387520",
            "id": 623387520,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzM4NzUyMA==",
            "original_commit_id": "57845a2f75be8e386493f9d8c61f695079704473",
            "original_line": 57,
            "original_position": 63,
            "original_start_line": 49,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 648642816,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/623387520",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r623387774"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/623387774"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-04-29T20:48:17Z",
            "diff_hunk": "@@ -119,21 +218,46 @@ cdef extern from \"datetime.h\":\n     int PyDateTime_DATE_GET_MINUTE(object o)\n     int PyDateTime_DATE_GET_SECOND(object o)\n     int PyDateTime_DATE_GET_MICROSECOND(object o)\n+    int PyDateTime_DATE_GET_FOLD(object o)\n+    object PyDateTime_DATE_GET_TZINFO(object o)\n \n     # Getters for time (C macros).\n     int PyDateTime_TIME_GET_HOUR(object o)\n     int PyDateTime_TIME_GET_MINUTE(object o)\n     int PyDateTime_TIME_GET_SECOND(object o)\n     int PyDateTime_TIME_GET_MICROSECOND(object o)\n+    int PyDateTime_TIME_GET_FOLD(object o)\n+    object PyDateTime_TIME_GET_TZINFO(object o)\n \n     # Getters for timedelta (C macros).\n     int PyDateTime_DELTA_GET_DAYS(object o)\n     int PyDateTime_DELTA_GET_SECONDS(object o)\n     int PyDateTime_DELTA_GET_MICROSECONDS(object o)\n \n+    # Constructors\n+    object PyTimeZone_FromOffset(object offset)\n+    object PyTimeZone_FromOffsetAndName(object offset, object name)\n+\n+    # The above macros is Python 3.7+ so we use these instead\n+    object __Pyx_TimeZone_FromOffset(object offset)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r623387774",
            "id": 623387774,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzM4Nzc3NA==",
            "original_commit_id": "57845a2f75be8e386493f9d8c61f695079704473",
            "original_line": 242,
            "original_position": 192,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 648642816,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-04-30T14:13:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/623387774",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624474216"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624474216"
                }
            },
            "author_association": "MEMBER",
            "body": "These don't declare the same functions. We must declare the names here that we use in the inline functions below.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-01T09:29:03Z",
            "diff_hunk": "@@ -1,27 +1,94 @@\n from cpython.object cimport PyObject\n+from cpython.version cimport PY_VERSION_HEX\n \n cdef extern from \"Python.h\":\n     ctypedef struct PyTypeObject:\n         pass\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n+    /* Backport for Python < 2.7.5 */\n+    #if PY_VERSION_HEX < 0x02070500\n+        #ifndef PyDateTime_DELTA_GET_DAYS\n+            #define PyDateTime_DELTA_GET_DAYS(o) (((PyDateTime_Delta*)o)->days)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_SECONDS\n+            #define PyDateTime_DELTA_GET_SECONDS(o) (((PyDateTime_Delta*)o)->seconds)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_MICROSECONDS\n+            #define PyDateTime_DELTA_GET_MICROSECONDS(o) (((PyDateTime_Delta*)o)->microseconds)\n+        #endif\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\n-    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #ifndef PyDateTime_TIME_GET_FOLD\n+            #define PyDateTime_TIME_GET_FOLD(o) 0\n+        #endif\n+        #ifndef PyDateTime_DATE_GET_FOLD\n+            #define PyDateTime_DATE_GET_FOLD(o) 0\n+        #endif\n+    #endif\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\\n+            PyDateTimeAPI->DateTime_FromDateAndTime(year, month, day, hour, minute, second, \\\n+                microsecond, tz, PyDateTimeAPI->DateTimeType)\n+        #define __Pyx_DateTime_TimeWithFold(hour, minute, second, usecond, tz, fold) \\\n+            PyDateTimeAPI->Time_FromTime(hour, minute, second, usecond, tz, PyDateTimeAPI->TimeType)\n+    #else /* For Python 3.6+ so that we can pass tz */\n+        #define __Pyx_PyDateTime_FromDateAndTimeAndFold(hour, minute, second, usecond, tz, fold) \\\n+            PyDateTimeAPI->DateTime_FromDateAndTimeAndFold(year, month, day, hour, minute, second, \\\n+                microsecond, tz, fold, PyDateTimeAPI->DateTimeType)\n+        #define __Pyx_DateTime_TimeWithFold(hour, minute, second, usecond, tz, fold) \\\n+            PyDateTimeAPI->Time_FromTimeAndFold(hour, minute, second, usecond, tz, fold, PyDateTimeAPI->TimeType)\n     #endif",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624474216",
            "id": 624474216,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDQ3NDIxNg==",
            "original_commit_id": "260fdc1b1a242f56c48106fb86086d89e43c5c6f",
            "original_line": 46,
            "original_position": 50,
            "original_start_line": 33,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 649761756,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-01T09:30:37Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624474216",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624636527"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624636527"
                }
            },
            "author_association": "MEMBER",
            "body": "These two should probably use the same timestamp and not two different (microsecond-)times.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T05:59:13Z",
            "diff_hunk": "@@ -276,6 +277,6 @@ def test_datetime_from_timestamp():\n     >>> tp == dt\n     True\n     \"\"\"\n-    tp = datetime_from_timestamp(1618770890)\n-    dt = py_datetime.datetime(2021, 4, 18, 20, 34, 50)\n+    tp = datetime_from_timestamp(py_time.time())\n+    dt = py_datetime.datetime.today()",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624636527",
            "id": 624636527,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDYzNjUyNw==",
            "original_commit_id": "8fbde7eb3ca7f3880eb183ab498ea02aa405738f",
            "original_line": 281,
            "original_position": 15,
            "original_start_line": 280,
            "path": "tests/run/datetime_pxd.pyx",
            "position": null,
            "pull_request_review_id": 649881669,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-02T05:59:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624636527",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624644303"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624644303"
                }
            },
            "author_association": "MEMBER",
            "body": "We shouldn't rely on specific output from CPython that may change in future versions. We are not testing CPython here but our own integration with it.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T07:06:45Z",
            "diff_hunk": "@@ -40,3 +42,19 @@ def test_timedelta(int days, int seconds, int useconds):\n     '''\n     val = timedelta(days, seconds, useconds)\n     return val\n+\n+def test_timezone(int days, int seconds, int useconds, str name):\n+    '''\n+    >>> val = test_timezone(0, 3600, 0, 'CET')\n+    >>> print(val)\n+    True\n+    '''\n+    try:\n+        val = timezone_new(timedelta(days, seconds, useconds), name)\n+        return repr(val) == \"datetime.timezone(datetime.timedelta(seconds=3600), 'CET')\"",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624644303",
            "id": 624644303,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDY0NDMwMw==",
            "original_commit_id": "8fbde7eb3ca7f3880eb183ab498ea02aa405738f",
            "original_line": 54,
            "original_position": 28,
            "original_start_line": null,
            "path": "tests/run/datetime_cimport.pyx",
            "position": null,
            "pull_request_review_id": 649885817,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-02T07:10:17Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624644303",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624673595"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624673595"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`datetime.today()` is actually defined in the docs as:\r\n> Return the current local datetime, with tzinfo None.\r\n> \r\n> Equivalent to:\r\n> ```py\r\n> datetime.fromtimestamp(time.time())\r\n> ```\r\n> See also now(), fromtimestamp().\r\n> \r\n> This method is functionally equivalent to now(), but without a tz parameter.\r\n\r\nThough I agree that it could be made more apparent.\r\n\r\nEDIT: I see what you mean now, the response from `time.time()` may be different for the two lines of code.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T10:48:38Z",
            "diff_hunk": "@@ -276,6 +277,6 @@ def test_datetime_from_timestamp():\n     >>> tp == dt\n     True\n     \"\"\"\n-    tp = datetime_from_timestamp(1618770890)\n-    dt = py_datetime.datetime(2021, 4, 18, 20, 34, 50)\n+    tp = datetime_from_timestamp(py_time.time())\n+    dt = py_datetime.datetime.today()",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624673595",
            "id": 624673595,
            "in_reply_to_id": 624636527,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDY3MzU5NQ==",
            "original_commit_id": "8fbde7eb3ca7f3880eb183ab498ea02aa405738f",
            "original_line": 281,
            "original_position": 15,
            "original_start_line": 280,
            "path": "tests/run/datetime_pxd.pyx",
            "position": null,
            "pull_request_review_id": 649903112,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-02T10:57:09Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624673595",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624673953"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624673953"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yeah I suppose you're right there. This is mostly how the other tests work though (albeit with `__str__`);\r\n```py\r\ndef test_timedelta(int days, int seconds, int useconds):\r\n    '''\r\n    >>> val = test_timedelta(30, 0, 0)\r\n    >>> print(val)\r\n    30 days, 0:00:00\r\n    '''\r\n    val = timedelta(days, seconds, useconds)\r\n    return val\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T10:51:28Z",
            "diff_hunk": "@@ -40,3 +42,19 @@ def test_timedelta(int days, int seconds, int useconds):\n     '''\n     val = timedelta(days, seconds, useconds)\n     return val\n+\n+def test_timezone(int days, int seconds, int useconds, str name):\n+    '''\n+    >>> val = test_timezone(0, 3600, 0, 'CET')\n+    >>> print(val)\n+    True\n+    '''\n+    try:\n+        val = timezone_new(timedelta(days, seconds, useconds), name)\n+        return repr(val) == \"datetime.timezone(datetime.timedelta(seconds=3600), 'CET')\"",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624673953",
            "id": 624673953,
            "in_reply_to_id": 624644303,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDY3Mzk1Mw==",
            "original_commit_id": "8fbde7eb3ca7f3880eb183ab498ea02aa405738f",
            "original_line": 54,
            "original_position": 28,
            "original_start_line": null,
            "path": "tests/run/datetime_cimport.pyx",
            "position": null,
            "pull_request_review_id": 649903335,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-02T10:51:28Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624673953",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624676911"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624676911"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Just tested and using `__str__` on a timezone returns the name, which is not exactly helpful. I am tempted to basically copy the code from `datetime_members` and test the members. But that's not exactly helpful since we already have that.\r\n\r\nI think I'll just use this test to make sure it raises an exception as expected.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T11:13:36Z",
            "diff_hunk": "@@ -40,3 +42,19 @@ def test_timedelta(int days, int seconds, int useconds):\n     '''\n     val = timedelta(days, seconds, useconds)\n     return val\n+\n+def test_timezone(int days, int seconds, int useconds, str name):\n+    '''\n+    >>> val = test_timezone(0, 3600, 0, 'CET')\n+    >>> print(val)\n+    True\n+    '''\n+    try:\n+        val = timezone_new(timedelta(days, seconds, useconds), name)\n+        return repr(val) == \"datetime.timezone(datetime.timedelta(seconds=3600), 'CET')\"",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624676911",
            "id": 624676911,
            "in_reply_to_id": 624644303,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDY3NjkxMQ==",
            "original_commit_id": "8fbde7eb3ca7f3880eb183ab498ea02aa405738f",
            "original_line": 54,
            "original_position": 28,
            "original_start_line": null,
            "path": "tests/run/datetime_cimport.pyx",
            "position": null,
            "pull_request_review_id": 649905140,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-02T11:13:36Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624676911",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624693009"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624693009"
                }
            },
            "author_association": "MEMBER",
            "body": "Let's not waste too much code on this.\r\n```suggestion\r\n        if sys.version_info >= (3, 7):\r\n            raise  # get_utc() is only supposed to raise on Python < 3.7\r\n    return True\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T13:13:05Z",
            "diff_hunk": "@@ -238,3 +241,43 @@ def test_datetime_attrs_inlined(datetime dt):\n         dt.second,\n         dt.microsecond,\n     )\n+\n+def test_date_from_timestamp():\n+    \"\"\"\n+    >>> from datetime import datetime\n+    >>> tp, dt = test_date_from_timestamp()\n+    >>> tp == dt\n+    True\n+    \"\"\"\n+    tp = date_from_timestamp(1518185542)\n+    dt = py_datetime.date(2018, 2, 9)\n+    return tp, dt\n+\n+def test_get_utc():\n+    \"\"\"\n+    >>> from datetime import datetime\n+    >>> test_get_utc()\n+    True\n+    \"\"\"\n+    try:\n+        utc = get_utc()\n+    except RuntimeError:\n+        if sys.version_info < (3, 7):\n+            return True\n+        else:\n+            # get_utc() is only supposed to raise on Python < 3.7\n+            raise\n+    else:\n+        return True",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624693009",
            "id": 624693009,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDY5MzAwOQ==",
            "original_commit_id": "3acc124d526d8379ef963e68ae4ae228e46d006f",
            "original_line": 271,
            "original_position": 51,
            "original_start_line": 265,
            "path": "tests/run/datetime_pxd.pyx",
            "position": null,
            "pull_request_review_id": 649915142,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-02T13:13:05Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624693009",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624698384"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624698384"
                }
            },
            "author_association": "MEMBER",
            "body": "Tests fail due to a missing macro. Let's just define this for all of Py2.\r\n```suggestion\r\n    /* Backport for Python 2.x */\r\n    #if PY_MAJOR_VERSION < 3\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T13:50:04Z",
            "diff_hunk": "@@ -1,27 +1,94 @@\n from cpython.object cimport PyObject\n+from cpython.version cimport PY_VERSION_HEX\n \n cdef extern from \"Python.h\":\n     ctypedef struct PyTypeObject:\n         pass\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n+    /* Backport for Python < 2.7.5 */\n+    #if PY_VERSION_HEX < 0x02070500",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624698384",
            "id": 624698384,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDY5ODM4NA==",
            "original_commit_id": "91efa19491f66f9c695d616d6c5d2ecff6d0522f",
            "original_line": 11,
            "original_position": 13,
            "original_start_line": 10,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 649918577,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-02T14:01:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624698384",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624698672"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624698672"
                }
            },
            "author_association": "MEMBER",
            "body": "We should avoid generating C compiler warnings about unused variables.\r\n```suggestion\r\n    #if PY_VERSION_HEX < 0x030600a4\r\n        #ifndef PyDateTime_TIME_GET_FOLD\r\n            #define PyDateTime_TIME_GET_FOLD(o) ((void)(o), 0)\r\n        #endif\r\n        #ifndef PyDateTime_DATE_GET_FOLD\r\n            #define PyDateTime_DATE_GET_FOLD(o) ((void)(o), 0)\r\n        #endif\r\n    #endif\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T13:52:05Z",
            "diff_hunk": "@@ -1,27 +1,94 @@\n from cpython.object cimport PyObject\n+from cpython.version cimport PY_VERSION_HEX\n \n cdef extern from \"Python.h\":\n     ctypedef struct PyTypeObject:\n         pass\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n+    /* Backport for Python < 2.7.5 */\n+    #if PY_VERSION_HEX < 0x02070500\n+        #ifndef PyDateTime_DELTA_GET_DAYS\n+            #define PyDateTime_DELTA_GET_DAYS(o) (((PyDateTime_Delta*)o)->days)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_SECONDS\n+            #define PyDateTime_DELTA_GET_SECONDS(o) (((PyDateTime_Delta*)o)->seconds)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_MICROSECONDS\n+            #define PyDateTime_DELTA_GET_MICROSECONDS(o) (((PyDateTime_Delta*)o)->microseconds)\n+        #endif\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\n-    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #ifndef PyDateTime_TIME_GET_FOLD\n+            #define PyDateTime_TIME_GET_FOLD(o) 0\n+        #endif\n+        #ifndef PyDateTime_DATE_GET_FOLD\n+            #define PyDateTime_DATE_GET_FOLD(o) 0\n+        #endif\n+    #endif",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624698672",
            "id": 624698672,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDY5ODY3Mg==",
            "original_commit_id": "91efa19491f66f9c695d616d6c5d2ecff6d0522f",
            "original_line": 31,
            "original_position": 35,
            "original_start_line": 24,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 649918577,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-02T14:01:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624698672",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624698909"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624698909"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\\r\n            ((void)(fold), PyDateTimeAPI->DateTime_FromDateAndTime(year, month, day, hour, minute, second, \\\r\n                microsecond, tz, PyDateTimeAPI->DateTimeType))\r\n        #define __Pyx_DateTime_TimeWithFold(hour, minute, second, microsecond, tz, fold) \\\r\n            ((void)(fold), PyDateTimeAPI->Time_FromTime(hour, minute, second, microsecond, tz, PyDateTimeAPI->TimeType))\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T13:53:57Z",
            "diff_hunk": "@@ -1,27 +1,94 @@\n from cpython.object cimport PyObject\n+from cpython.version cimport PY_VERSION_HEX\n \n cdef extern from \"Python.h\":\n     ctypedef struct PyTypeObject:\n         pass\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n+    /* Backport for Python < 2.7.5 */\n+    #if PY_VERSION_HEX < 0x02070500\n+        #ifndef PyDateTime_DELTA_GET_DAYS\n+            #define PyDateTime_DELTA_GET_DAYS(o) (((PyDateTime_Delta*)o)->days)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_SECONDS\n+            #define PyDateTime_DELTA_GET_SECONDS(o) (((PyDateTime_Delta*)o)->seconds)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_MICROSECONDS\n+            #define PyDateTime_DELTA_GET_MICROSECONDS(o) (((PyDateTime_Delta*)o)->microseconds)\n+        #endif\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\n-    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #ifndef PyDateTime_TIME_GET_FOLD\n+            #define PyDateTime_TIME_GET_FOLD(o) 0\n+        #endif\n+        #ifndef PyDateTime_DATE_GET_FOLD\n+            #define PyDateTime_DATE_GET_FOLD(o) 0\n+        #endif\n+    #endif\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\\n+            PyDateTimeAPI->DateTime_FromDateAndTime(year, month, day, hour, minute, second, \\\n+                microsecond, tz, PyDateTimeAPI->DateTimeType)\n+        #define __Pyx_DateTime_TimeWithFold(hour, minute, second, microsecond, tz, fold) \\\n+            PyDateTimeAPI->Time_FromTime(hour, minute, second, microsecond, tz, PyDateTimeAPI->TimeType)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624698909",
            "id": 624698909,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDY5ODkwOQ==",
            "original_commit_id": "91efa19491f66f9c695d616d6c5d2ecff6d0522f",
            "original_line": 39,
            "original_position": 43,
            "original_start_line": 35,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 649918577,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-02T14:01:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624698909",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624699014"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624699014"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        #define __Pyx_TimeZone_FromOffsetAndName(offset, name) ((void)(offset), (void)(name), NULL)\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T13:54:42Z",
            "diff_hunk": "@@ -1,27 +1,94 @@\n from cpython.object cimport PyObject\n+from cpython.version cimport PY_VERSION_HEX\n \n cdef extern from \"Python.h\":\n     ctypedef struct PyTypeObject:\n         pass\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n+    /* Backport for Python < 2.7.5 */\n+    #if PY_VERSION_HEX < 0x02070500\n+        #ifndef PyDateTime_DELTA_GET_DAYS\n+            #define PyDateTime_DELTA_GET_DAYS(o) (((PyDateTime_Delta*)o)->days)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_SECONDS\n+            #define PyDateTime_DELTA_GET_SECONDS(o) (((PyDateTime_Delta*)o)->seconds)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_MICROSECONDS\n+            #define PyDateTime_DELTA_GET_MICROSECONDS(o) (((PyDateTime_Delta*)o)->microseconds)\n+        #endif\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\n-    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #ifndef PyDateTime_TIME_GET_FOLD\n+            #define PyDateTime_TIME_GET_FOLD(o) 0\n+        #endif\n+        #ifndef PyDateTime_DATE_GET_FOLD\n+            #define PyDateTime_DATE_GET_FOLD(o) 0\n+        #endif\n+    #endif\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\\n+            PyDateTimeAPI->DateTime_FromDateAndTime(year, month, day, hour, minute, second, \\\n+                microsecond, tz, PyDateTimeAPI->DateTimeType)\n+        #define __Pyx_DateTime_TimeWithFold(hour, minute, second, microsecond, tz, fold) \\\n+            PyDateTimeAPI->Time_FromTime(hour, minute, second, microsecond, tz, PyDateTimeAPI->TimeType)\n+    #else /* For Python 3.6+ so that we can pass tz */\n+        #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\\n+            PyDateTimeAPI->DateTime_FromDateAndTimeAndFold(year, month, day, hour, minute, second, \\\n+                microsecond, tz, fold, PyDateTimeAPI->DateTimeType)\n+        #define __Pyx_DateTime_TimeWithFold(hour, minute, second, microsecond, tz, fold) \\\n+            PyDateTimeAPI->Time_FromTimeAndFold(hour, minute, second, microsecond, tz, fold, PyDateTimeAPI->TimeType)\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_MICROSECONDS)\n-    #define PyDateTime_DELTA_GET_MICROSECONDS(o)   (((PyDateTime_Delta*)o)->microseconds)\n+\n+    /* Backport for Python < 3.7 */\n+    #if PY_VERSION_HEX < 0x030700b1\n+        #define __Pyx_TimeZone_UTC NULL\n+        #define __Pyx_TimeZone_FromOffsetAndName(offset, name) NULL",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624699014",
            "id": 624699014,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDY5OTAxNA==",
            "original_commit_id": "91efa19491f66f9c695d616d6c5d2ecff6d0522f",
            "original_line": 51,
            "original_position": 57,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 649918577,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-02T14:01:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624699014",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624699500"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624699500"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    >>> test_time(12, 30, 59, 12345, 0)\r\n    (True, True, True, True, True)\r\n    >>> test_time(12, 30, 43, 5432, 1 if sys.version_info >= (3, 7) else 0)\r\n    (True, True, True, True, True)\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T13:57:41Z",
            "diff_hunk": "@@ -20,31 +21,35 @@ def test_date(int year, int month, int day):\n            o.month == date_month(o), \\\n            o.day == date_day(o)\n \n-def test_datetime(int year, int month, int day, \n-                  int hour, int minute, int second, int microsecond):\n+def test_datetime(int year, int month, int day, int hour,\n+                  int minute, int second, int microsecond, int fold):\n     '''\n-    >>> test_datetime(2012, 12, 31, 12, 30, 59, 12345)\n-    (True, True, True, True, True, True, True)\n+    >>> test_datetime(2012, 12, 31, 12, 30, 59, 12345, 0)\n+    (True, True, True, True, True, True, True, True)\n     '''\n-    o = datetime_new(year, month, day, hour, minute, second, microsecond, None)\n+    o = datetime_new(\n+        year, month, day, hour, minute, second, microsecond, None, fold\n+    )\n     return o.year == datetime_year(o), \\\n            o.month == datetime_month(o), \\\n            o.day == datetime_day(o), \\\n            o.hour == datetime_hour(o), \\\n            o.minute == datetime_minute(o), \\\n            o.second == datetime_second(o), \\\n-           o.microsecond == datetime_microsecond(o)\n+           o.microsecond == datetime_microsecond(o), \\\n+           o.fold == datetime_fold(o)\n \n-def test_time(int hour, int minute, int second, int microsecond):\n+def test_time(int hour, int minute, int second, int microsecond, int fold):\n     '''\n-    >>> test_time(12, 30, 59, 12345)\n-    (True, True, True, True)\n+    >>> test_time(12, 30, 59, 12345, 0)\n+    (True, True, True, True, True)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624699500",
            "id": 624699500,
            "line": 52,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDY5OTUwMA==",
            "original_commit_id": "91efa19491f66f9c695d616d6c5d2ecff6d0522f",
            "original_line": 45,
            "original_position": 49,
            "original_start_line": 44,
            "path": "tests/run/datetime_members.pyx",
            "position": 56,
            "pull_request_review_id": 649918577,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": 51,
            "start_side": "RIGHT",
            "updated_at": "2021-05-02T14:01:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624699500",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624699686"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624699686"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n# mode: run\r\n# tag: datetime\r\n\r\nimport sys\r\n\r\nfrom cpython.datetime cimport import_datetime\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T13:59:05Z",
            "diff_hunk": "@@ -1,11 +1,12 @@\n from cpython.datetime cimport import_datetime",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624699686",
            "id": 624699686,
            "line": 6,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDY5OTY4Ng==",
            "original_commit_id": "91efa19491f66f9c695d616d6c5d2ecff6d0522f",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "tests/run/datetime_members.pyx",
            "position": 6,
            "pull_request_review_id": 649918577,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-02T14:01:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624699686",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624699826"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624699826"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    >>> test_datetime(2012, 12, 31, 12, 30, 59, 12345, 0)\r\n    (True, True, True, True, True, True, True, True)\r\n    >>> test_datetime(2012, 12, 11, 12, 30, 59, 3322, 1 if sys.version_info >= (3, 7) else 0)\r\n    (True, True, True, True, True, True, True, True)\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T14:00:04Z",
            "diff_hunk": "@@ -20,31 +21,35 @@ def test_date(int year, int month, int day):\n            o.month == date_month(o), \\\n            o.day == date_day(o)\n \n-def test_datetime(int year, int month, int day, \n-                  int hour, int minute, int second, int microsecond):\n+def test_datetime(int year, int month, int day, int hour,\n+                  int minute, int second, int microsecond, int fold):\n     '''\n-    >>> test_datetime(2012, 12, 31, 12, 30, 59, 12345)\n-    (True, True, True, True, True, True, True)\n+    >>> test_datetime(2012, 12, 31, 12, 30, 59, 12345, 0)\n+    (True, True, True, True, True, True, True, True)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624699826",
            "id": 624699826,
            "line": 33,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDY5OTgyNg==",
            "original_commit_id": "91efa19491f66f9c695d616d6c5d2ecff6d0522f",
            "original_line": 28,
            "original_position": 27,
            "original_start_line": 27,
            "path": "tests/run/datetime_members.pyx",
            "position": 32,
            "pull_request_review_id": 649918577,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": 32,
            "start_side": "RIGHT",
            "updated_at": "2021-05-02T14:01:10Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624699826",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624701211"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624701211"
                }
            },
            "author_association": "MEMBER",
            "body": "Let's make these two match the other constructors, and pass the type as type pointer.\r\n```suggestion\r\n        datetime (*DateTime_FromTimestamp)(PyTypeObject*, object, PyObject*)\r\n        date (*Date_FromTimestamp)(PyTypeObject*, object)\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T14:08:57Z",
            "diff_hunk": "@@ -84,14 +168,27 @@ cdef extern from \"datetime.h\":\n         PyTypeObject *TZInfoType\n \n         # constructors\n-        object (*Date_FromDate)(int, int, int, PyTypeObject*)\n-        object (*DateTime_FromDateAndTime)(int, int, int, int, int, int, int, object, PyTypeObject*)\n-        object (*Time_FromTime)(int, int, int, int, object, PyTypeObject*)\n-        object (*Delta_FromDelta)(int, int, int, int, PyTypeObject*)\n+        date (*Date_FromDate)(int, int, int, PyTypeObject*)\n+        datetime (*DateTime_FromDateAndTime)(int, int, int, int, int, int, int, object, PyTypeObject*)\n+        time (*Time_FromTime)(int, int, int, int, object, PyTypeObject*)\n+        timedelta (*Delta_FromDelta)(int, int, int, int, PyTypeObject*)\n \n         # constructors for the DB API\n-        object (*DateTime_FromTimestamp)(object, object, object)\n-        object (*Date_FromTimestamp)(object, object)\n+        datetime (*DateTime_FromTimestamp)(object, object, PyObject*)\n+        date (*Date_FromTimestamp)(object, object)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624701211",
            "id": 624701211,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDcwMTIxMQ==",
            "original_commit_id": "d0cb61b646282be33743fc00b5c2f528b63c606b",
            "original_line": 178,
            "original_position": 158,
            "original_start_line": 177,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 649920395,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-02T14:10:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624701211",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624701300"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624701300"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\ncdef inline datetime datetime_from_timestamp(timestamp, tz=None):\r\n    return PyDateTimeAPI.DateTime_FromTimestamp(\r\n        PyDateTimeAPI.DateTimeType, (timestamp, tz) if tz is not None else (timestamp,), NULL)\r\n\r\n# Create date object using DB API constructor.\r\ncdef inline date date_from_timestamp(timestamp):\r\n    return PyDateTimeAPI.Date_FromTimestamp(PyDateTimeAPI.DateType, (timestamp,))\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T14:09:31Z",
            "diff_hunk": "@@ -143,29 +264,50 @@ cdef inline void import_datetime():\n \n # Create date object using DateTime CAPI factory function.\n # Note, there are no range checks for any of the arguments.\n-cdef inline object date_new(int year, int month, int day):\n+cdef inline date date_new(int year, int month, int day):\n     return PyDateTimeAPI.Date_FromDate(year, month, day, PyDateTimeAPI.DateType)\n \n # Create time object using DateTime CAPI factory function\n # Note, there are no range checks for any of the arguments.\n-cdef inline object time_new(int hour, int minute, int second, int microsecond, object tz):\n-    return PyDateTimeAPI.Time_FromTime(hour, minute, second, microsecond, tz, PyDateTimeAPI.TimeType)\n+cdef inline time time_new(int hour, int minute, int second, int microsecond, object tz, int fold=0):\n+    return __Pyx_DateTime_TimeWithFold(hour, minute, second, microsecond, tz, fold)\n \n # Create datetime object using DateTime CAPI factory function.\n # Note, there are no range checks for any of the arguments.\n-cdef inline object datetime_new(int year, int month, int day, int hour, int minute, int second, int microsecond, object tz):\n-    return PyDateTimeAPI.DateTime_FromDateAndTime(year, month, day, hour, minute, second, microsecond, tz, PyDateTimeAPI.DateTimeType)\n+cdef inline datetime datetime_new(int year, int month, int day, int hour, int minute, int second, int microsecond, object tz, int fold=0):\n+    return __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold)\n \n # Create timedelta object using DateTime CAPI factory function.\n # Note, there are no range checks for any of the arguments.\n-cdef inline object timedelta_new(int days, int seconds, int useconds):\n+cdef inline timedelta timedelta_new(int days, int seconds, int useconds):\n     return PyDateTimeAPI.Delta_FromDelta(days, seconds, useconds, 1, PyDateTimeAPI.DeltaType)\n \n+# Create timedelta object using DateTime CAPI factory function.\n+cdef inline object timezone_new(object offset, object name=None):\n+    if PY_VERSION_HEX < 0x030700b1:\n+        raise RuntimeError('Time zones are not available from the C-API.')\n+    return __Pyx_TimeZone_FromOffsetAndName(offset, <PyObject*>name if name is not None else NULL)\n+\n+# Create datetime object using DB API constructor.\n+cdef inline datetime datetime_from_timestamp(timestamp, tz=None):\n+    return PyDateTimeAPI.DateTime_FromTimestamp(\n+        <object>PyDateTimeAPI.DateTimeType, (timestamp, tz) if tz is not None else (timestamp,), NULL)\n+\n+# Create date object using DB API constructor.\n+cdef inline date date_from_timestamp(timestamp):\n+    return PyDateTimeAPI.Date_FromTimestamp(<object>PyDateTimeAPI.DateType, (timestamp,))",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624701300",
            "id": 624701300,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDcwMTMwMA==",
            "original_commit_id": "d0cb61b646282be33743fc00b5c2f528b63c606b",
            "original_line": 298,
            "original_position": 262,
            "original_start_line": 292,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 649920395,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-02T14:10:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624701300",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624704690"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624704690"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "```suggestion\r\n    >>> test_datetime(2012, 12, 31, 12, 30, 59, 12345, 1)\r\n    (True, True, True, True, True, True, True, True)\r\n```\r\nWe use `datetime_fold` and the `datetime.fold` property, both call `PyDateTime_DATE_GET_FOLD` which we've backported to return 0 when necessary. So in the case of Python > 3.7 both would return 0 and become True even when we pass 1 as the argument.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T14:35:00Z",
            "diff_hunk": "@@ -20,31 +21,35 @@ def test_date(int year, int month, int day):\n            o.month == date_month(o), \\\n            o.day == date_day(o)\n \n-def test_datetime(int year, int month, int day, \n-                  int hour, int minute, int second, int microsecond):\n+def test_datetime(int year, int month, int day, int hour,\n+                  int minute, int second, int microsecond, int fold):\n     '''\n-    >>> test_datetime(2012, 12, 31, 12, 30, 59, 12345)\n-    (True, True, True, True, True, True, True)\n+    >>> test_datetime(2012, 12, 31, 12, 30, 59, 12345, 0)\n+    (True, True, True, True, True, True, True, True)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624704690",
            "id": 624704690,
            "in_reply_to_id": 624699826,
            "line": 33,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDcwNDY5MA==",
            "original_commit_id": "91efa19491f66f9c695d616d6c5d2ecff6d0522f",
            "original_line": 28,
            "original_position": 27,
            "original_start_line": 27,
            "path": "tests/run/datetime_members.pyx",
            "position": 32,
            "pull_request_review_id": 649922651,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": 32,
            "start_side": "RIGHT",
            "updated_at": "2021-05-02T14:35:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624704690",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624705247"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624705247"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    return PyDateTime_TIME_GET_FOLD(o)\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T14:39:08Z",
            "diff_hunk": "@@ -220,6 +362,11 @@ cdef inline int time_second(object o):\n cdef inline int time_microsecond(object o):\n     return PyDateTime_TIME_GET_MICROSECOND(o)\n \n+# Get fold of time\n+cdef inline int time_fold(object o):\n+    # For Python < 3.6 this returns 0 no matter what\n+    return PyDateTime_DATE_GET_FOLD(o)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624705247",
            "id": 624705247,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDcwNTI0Nw==",
            "original_commit_id": "da0f98c477ff5c1033669892b678427192969c1a",
            "original_line": 368,
            "original_position": 285,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 649923020,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-02T14:39:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624705247",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624705765"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624705765"
                }
            },
            "author_association": "MEMBER",
            "body": "Looks like no-one has actually run these tests before…\r\n```suggestion\r\n    dt = py_datetime.datetime.fromtimestamp(time)\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T14:42:34Z",
            "diff_hunk": "@@ -238,3 +241,39 @@ def test_datetime_attrs_inlined(datetime dt):\n         dt.second,\n         dt.microsecond,\n     )\n+\n+def test_date_from_timestamp():\n+    \"\"\"\n+    >>> from datetime import datetime\n+    >>> tp, dt = test_date_from_timestamp()\n+    >>> tp == dt\n+    True\n+    \"\"\"\n+    tp = date_from_timestamp(1518185542)\n+    dt = py_datetime.date(2018, 2, 9)\n+    return tp, dt\n+\n+def test_get_utc():\n+    \"\"\"\n+    >>> from datetime import datetime\n+    >>> test_get_utc()\n+    True\n+    \"\"\"\n+    try:\n+        utc = get_utc()\n+    except RuntimeError:\n+        if sys.version_info >= (3, 7):\n+            raise  # get_utc() is only supposed to raise on Python < 3.7\n+    return True\n+\n+def test_datetime_from_timestamp():\n+    \"\"\"\n+    >>> from datetime import datetime\n+    >>> tp, dt = test_datetime_from_timestamp()\n+    >>> tp == dt\n+    True\n+    \"\"\"\n+    time = py_time.time()\n+    tp = datetime_from_timestamp(time)\n+    dt = py_datetime.datetime.from_timestamp(time)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624705765",
            "id": 624705765,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDcwNTc2NQ==",
            "original_commit_id": "8255384e796f662db8a6916d4b17df76eabea782",
            "original_line": 278,
            "original_position": 58,
            "original_start_line": null,
            "path": "tests/run/datetime_pxd.pyx",
            "position": null,
            "pull_request_review_id": 649923322,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-02T14:42:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624705765",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624707487"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624707487"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "That's embarrassing 😬\r\n\r\nI've played around with the test flags so that I don't need to run _all_ tests, which ones do you use to only run these tests?",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T14:55:25Z",
            "diff_hunk": "@@ -238,3 +241,39 @@ def test_datetime_attrs_inlined(datetime dt):\n         dt.second,\n         dt.microsecond,\n     )\n+\n+def test_date_from_timestamp():\n+    \"\"\"\n+    >>> from datetime import datetime\n+    >>> tp, dt = test_date_from_timestamp()\n+    >>> tp == dt\n+    True\n+    \"\"\"\n+    tp = date_from_timestamp(1518185542)\n+    dt = py_datetime.date(2018, 2, 9)\n+    return tp, dt\n+\n+def test_get_utc():\n+    \"\"\"\n+    >>> from datetime import datetime\n+    >>> test_get_utc()\n+    True\n+    \"\"\"\n+    try:\n+        utc = get_utc()\n+    except RuntimeError:\n+        if sys.version_info >= (3, 7):\n+            raise  # get_utc() is only supposed to raise on Python < 3.7\n+    return True\n+\n+def test_datetime_from_timestamp():\n+    \"\"\"\n+    >>> from datetime import datetime\n+    >>> tp, dt = test_datetime_from_timestamp()\n+    >>> tp == dt\n+    True\n+    \"\"\"\n+    time = py_time.time()\n+    tp = datetime_from_timestamp(time)\n+    dt = py_datetime.datetime.from_timestamp(time)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624707487",
            "id": 624707487,
            "in_reply_to_id": 624705765,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDcwNzQ4Nw==",
            "original_commit_id": "8255384e796f662db8a6916d4b17df76eabea782",
            "original_line": 278,
            "original_position": 58,
            "original_start_line": null,
            "path": "tests/run/datetime_pxd.pyx",
            "position": null,
            "pull_request_review_id": 649924467,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-02T14:55:26Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624707487",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624707756"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624707756"
                }
            },
            "author_association": "MEMBER",
            "body": "I think it's more explicit like this. We shouldn't test something that does something else under the hood.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T14:57:11Z",
            "diff_hunk": "@@ -20,31 +21,35 @@ def test_date(int year, int month, int day):\n            o.month == date_month(o), \\\n            o.day == date_day(o)\n \n-def test_datetime(int year, int month, int day, \n-                  int hour, int minute, int second, int microsecond):\n+def test_datetime(int year, int month, int day, int hour,\n+                  int minute, int second, int microsecond, int fold):\n     '''\n-    >>> test_datetime(2012, 12, 31, 12, 30, 59, 12345)\n-    (True, True, True, True, True, True, True)\n+    >>> test_datetime(2012, 12, 31, 12, 30, 59, 12345, 0)\n+    (True, True, True, True, True, True, True, True)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624707756",
            "id": 624707756,
            "in_reply_to_id": 624699826,
            "line": 33,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDcwNzc1Ng==",
            "original_commit_id": "91efa19491f66f9c695d616d6c5d2ecff6d0522f",
            "original_line": 28,
            "original_position": 27,
            "original_start_line": 27,
            "path": "tests/run/datetime_members.pyx",
            "position": 32,
            "pull_request_review_id": 649924628,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": 32,
            "start_side": "RIGHT",
            "updated_at": "2021-05-02T14:57:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624707756",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624708037"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624708037"
                }
            },
            "author_association": "MEMBER",
            "body": "You can pass a regex for the test name as argument, e.g. `python3 runtests.py --backend=c -vv datetime`.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T14:59:09Z",
            "diff_hunk": "@@ -238,3 +241,39 @@ def test_datetime_attrs_inlined(datetime dt):\n         dt.second,\n         dt.microsecond,\n     )\n+\n+def test_date_from_timestamp():\n+    \"\"\"\n+    >>> from datetime import datetime\n+    >>> tp, dt = test_date_from_timestamp()\n+    >>> tp == dt\n+    True\n+    \"\"\"\n+    tp = date_from_timestamp(1518185542)\n+    dt = py_datetime.date(2018, 2, 9)\n+    return tp, dt\n+\n+def test_get_utc():\n+    \"\"\"\n+    >>> from datetime import datetime\n+    >>> test_get_utc()\n+    True\n+    \"\"\"\n+    try:\n+        utc = get_utc()\n+    except RuntimeError:\n+        if sys.version_info >= (3, 7):\n+            raise  # get_utc() is only supposed to raise on Python < 3.7\n+    return True\n+\n+def test_datetime_from_timestamp():\n+    \"\"\"\n+    >>> from datetime import datetime\n+    >>> tp, dt = test_datetime_from_timestamp()\n+    >>> tp == dt\n+    True\n+    \"\"\"\n+    time = py_time.time()\n+    tp = datetime_from_timestamp(time)\n+    dt = py_datetime.datetime.from_timestamp(time)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624708037",
            "id": 624708037,
            "in_reply_to_id": 624705765,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDcwODAzNw==",
            "original_commit_id": "8255384e796f662db8a6916d4b17df76eabea782",
            "original_line": 278,
            "original_position": 58,
            "original_start_line": null,
            "path": "tests/run/datetime_pxd.pyx",
            "position": null,
            "pull_request_review_id": 649924814,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-02T14:59:09Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624708037",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624708786"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624708786"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Perfect! Thank you.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T15:04:21Z",
            "diff_hunk": "@@ -238,3 +241,39 @@ def test_datetime_attrs_inlined(datetime dt):\n         dt.second,\n         dt.microsecond,\n     )\n+\n+def test_date_from_timestamp():\n+    \"\"\"\n+    >>> from datetime import datetime\n+    >>> tp, dt = test_date_from_timestamp()\n+    >>> tp == dt\n+    True\n+    \"\"\"\n+    tp = date_from_timestamp(1518185542)\n+    dt = py_datetime.date(2018, 2, 9)\n+    return tp, dt\n+\n+def test_get_utc():\n+    \"\"\"\n+    >>> from datetime import datetime\n+    >>> test_get_utc()\n+    True\n+    \"\"\"\n+    try:\n+        utc = get_utc()\n+    except RuntimeError:\n+        if sys.version_info >= (3, 7):\n+            raise  # get_utc() is only supposed to raise on Python < 3.7\n+    return True\n+\n+def test_datetime_from_timestamp():\n+    \"\"\"\n+    >>> from datetime import datetime\n+    >>> tp, dt = test_datetime_from_timestamp()\n+    >>> tp == dt\n+    True\n+    \"\"\"\n+    time = py_time.time()\n+    tp = datetime_from_timestamp(time)\n+    dt = py_datetime.datetime.from_timestamp(time)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624708786",
            "id": 624708786,
            "in_reply_to_id": 624705765,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDcwODc4Ng==",
            "original_commit_id": "8255384e796f662db8a6916d4b17df76eabea782",
            "original_line": 278,
            "original_position": 58,
            "original_start_line": null,
            "path": "tests/run/datetime_pxd.pyx",
            "position": null,
            "pull_request_review_id": 649925267,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-02T15:04:21Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624708786",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624717774"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624717774"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        datetime (*DateTime_FromTimestamp)(PyObject*, object, PyObject*)\r\n        date (*Date_FromTimestamp)(PyObject*, object)\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T16:07:43Z",
            "diff_hunk": "@@ -84,14 +168,27 @@ cdef extern from \"datetime.h\":\n         PyTypeObject *TZInfoType\n \n         # constructors\n-        object (*Date_FromDate)(int, int, int, PyTypeObject*)\n-        object (*DateTime_FromDateAndTime)(int, int, int, int, int, int, int, object, PyTypeObject*)\n-        object (*Time_FromTime)(int, int, int, int, object, PyTypeObject*)\n-        object (*Delta_FromDelta)(int, int, int, int, PyTypeObject*)\n+        date (*Date_FromDate)(int, int, int, PyTypeObject*)\n+        datetime (*DateTime_FromDateAndTime)(int, int, int, int, int, int, int, object, PyTypeObject*)\n+        time (*Time_FromTime)(int, int, int, int, object, PyTypeObject*)\n+        timedelta (*Delta_FromDelta)(int, int, int, int, PyTypeObject*)\n \n         # constructors for the DB API\n-        object (*DateTime_FromTimestamp)(object, object, object)\n-        object (*Date_FromTimestamp)(object, object)\n+        datetime (*DateTime_FromTimestamp)(PyTypeObject*, object, PyObject*)\n+        date (*Date_FromTimestamp)(PyTypeObject*, object)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624717774",
            "id": 624717774,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDcxNzc3NA==",
            "original_commit_id": "fbb9da6c7cb12811ad409498b1ecd2f04ef81966",
            "original_line": 178,
            "original_position": 158,
            "original_start_line": 177,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 649930624,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-02T16:08:28Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624717774",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624717857"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624717857"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\ncdef inline datetime datetime_from_timestamp(timestamp, tz=None):\r\n    return PyDateTimeAPI.DateTime_FromTimestamp(\r\n        <PyObject*>PyDateTimeAPI.DateTimeType, (timestamp, tz) if tz is not None else (timestamp,), NULL)\r\n\r\n# Create date object using DB API constructor.\r\ncdef inline date date_from_timestamp(timestamp):\r\n    return PyDateTimeAPI.Date_FromTimestamp(<PyObject*>PyDateTimeAPI.DateType, (timestamp,))\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T16:08:14Z",
            "diff_hunk": "@@ -143,29 +264,50 @@ cdef inline void import_datetime():\n \n # Create date object using DateTime CAPI factory function.\n # Note, there are no range checks for any of the arguments.\n-cdef inline object date_new(int year, int month, int day):\n+cdef inline date date_new(int year, int month, int day):\n     return PyDateTimeAPI.Date_FromDate(year, month, day, PyDateTimeAPI.DateType)\n \n # Create time object using DateTime CAPI factory function\n # Note, there are no range checks for any of the arguments.\n-cdef inline object time_new(int hour, int minute, int second, int microsecond, object tz):\n-    return PyDateTimeAPI.Time_FromTime(hour, minute, second, microsecond, tz, PyDateTimeAPI.TimeType)\n+cdef inline time time_new(int hour, int minute, int second, int microsecond, object tz, int fold=0):\n+    return __Pyx_DateTime_TimeWithFold(hour, minute, second, microsecond, tz, fold)\n \n # Create datetime object using DateTime CAPI factory function.\n # Note, there are no range checks for any of the arguments.\n-cdef inline object datetime_new(int year, int month, int day, int hour, int minute, int second, int microsecond, object tz):\n-    return PyDateTimeAPI.DateTime_FromDateAndTime(year, month, day, hour, minute, second, microsecond, tz, PyDateTimeAPI.DateTimeType)\n+cdef inline datetime datetime_new(int year, int month, int day, int hour, int minute, int second, int microsecond, object tz, int fold=0):\n+    return __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold)\n \n # Create timedelta object using DateTime CAPI factory function.\n # Note, there are no range checks for any of the arguments.\n-cdef inline object timedelta_new(int days, int seconds, int useconds):\n+cdef inline timedelta timedelta_new(int days, int seconds, int useconds):\n     return PyDateTimeAPI.Delta_FromDelta(days, seconds, useconds, 1, PyDateTimeAPI.DeltaType)\n \n+# Create timedelta object using DateTime CAPI factory function.\n+cdef inline object timezone_new(object offset, object name=None):\n+    if PY_VERSION_HEX < 0x030700b1:\n+        raise RuntimeError('Time zones are not available from the C-API.')\n+    return __Pyx_TimeZone_FromOffsetAndName(offset, <PyObject*>name if name is not None else NULL)\n+\n+# Create datetime object using DB API constructor.\n+cdef inline datetime datetime_from_timestamp(timestamp, tz=None):\n+    return PyDateTimeAPI.DateTime_FromTimestamp(\n+        PyDateTimeAPI.DateTimeType, (timestamp, tz) if tz is not None else (timestamp,), NULL)\n+\n+# Create date object using DB API constructor.\n+cdef inline date date_from_timestamp(timestamp):\n+    return PyDateTimeAPI.Date_FromTimestamp(PyDateTimeAPI.DateType, (timestamp,))",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624717857",
            "id": 624717857,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDcxNzg1Nw==",
            "original_commit_id": "fbb9da6c7cb12811ad409498b1ecd2f04ef81966",
            "original_line": 298,
            "original_position": 262,
            "original_start_line": 292,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 649930624,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-05-02T16:08:28Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624717857",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624718480"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624718480"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        #define __Pyx_TimeZone_FromOffsetAndName(offset, name) ((void)(offset), (void)(name), (PyObject*)NULL)\r\n```",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T16:12:50Z",
            "diff_hunk": "@@ -1,27 +1,94 @@\n from cpython.object cimport PyObject\n+from cpython.version cimport PY_VERSION_HEX\n \n cdef extern from \"Python.h\":\n     ctypedef struct PyTypeObject:\n         pass\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n+    /* Backport for Python 2.x */\n+    #if PY_MAJOR_VERSION < 3\n+        #ifndef PyDateTime_DELTA_GET_DAYS\n+            #define PyDateTime_DELTA_GET_DAYS(o) (((PyDateTime_Delta*)o)->days)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_SECONDS\n+            #define PyDateTime_DELTA_GET_SECONDS(o) (((PyDateTime_Delta*)o)->seconds)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_MICROSECONDS\n+            #define PyDateTime_DELTA_GET_MICROSECONDS(o) (((PyDateTime_Delta*)o)->microseconds)\n+        #endif\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\n-    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #ifndef PyDateTime_TIME_GET_FOLD\n+            #define PyDateTime_TIME_GET_FOLD(o) ((void)(o), 0)\n+        #endif\n+        #ifndef PyDateTime_DATE_GET_FOLD\n+            #define PyDateTime_DATE_GET_FOLD(o) ((void)(o), 0)\n+        #endif\n+    #endif\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\\n+            ((void)(fold), PyDateTimeAPI->DateTime_FromDateAndTime(year, month, day, hour, minute, second, \\\n+                microsecond, tz, PyDateTimeAPI->DateTimeType))\n+        #define __Pyx_DateTime_TimeWithFold(hour, minute, second, microsecond, tz, fold) \\\n+            ((void)(fold), PyDateTimeAPI->Time_FromTime(hour, minute, second, microsecond, tz, PyDateTimeAPI->TimeType))\n+    #else /* For Python 3.6+ so that we can pass tz */\n+        #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\\n+            PyDateTimeAPI->DateTime_FromDateAndTimeAndFold(year, month, day, hour, minute, second, \\\n+                microsecond, tz, fold, PyDateTimeAPI->DateTimeType)\n+        #define __Pyx_DateTime_TimeWithFold(hour, minute, second, microsecond, tz, fold) \\\n+            PyDateTimeAPI->Time_FromTimeAndFold(hour, minute, second, microsecond, tz, fold, PyDateTimeAPI->TimeType)\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_MICROSECONDS)\n-    #define PyDateTime_DELTA_GET_MICROSECONDS(o)   (((PyDateTime_Delta*)o)->microseconds)\n+\n+    /* Backport for Python < 3.7 */\n+    #if PY_VERSION_HEX < 0x030700b1\n+        #define __Pyx_TimeZone_UTC NULL\n+        #define __Pyx_TimeZone_FromOffsetAndName(offset, name) ((void)(offset), (void)(name), NULL)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624718480",
            "id": 624718480,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDcxODQ4MA==",
            "original_commit_id": "fbb9da6c7cb12811ad409498b1ecd2f04ef81966",
            "original_line": 51,
            "original_position": 57,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": null,
            "pull_request_review_id": 649931065,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-02T16:12:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624718480",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624721444"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624721444"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "So far this seems to have fixed the compile failure, but instead of casting `NULL` to `PyObject*`. Perhaps we could use `Py_None`?",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T16:35:27Z",
            "diff_hunk": "@@ -1,27 +1,94 @@\n from cpython.object cimport PyObject\n+from cpython.version cimport PY_VERSION_HEX\n \n cdef extern from \"Python.h\":\n     ctypedef struct PyTypeObject:\n         pass\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n+    /* Backport for Python 2.x */\n+    #if PY_MAJOR_VERSION < 3\n+        #ifndef PyDateTime_DELTA_GET_DAYS\n+            #define PyDateTime_DELTA_GET_DAYS(o) (((PyDateTime_Delta*)o)->days)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_SECONDS\n+            #define PyDateTime_DELTA_GET_SECONDS(o) (((PyDateTime_Delta*)o)->seconds)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_MICROSECONDS\n+            #define PyDateTime_DELTA_GET_MICROSECONDS(o) (((PyDateTime_Delta*)o)->microseconds)\n+        #endif\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\n-    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #ifndef PyDateTime_TIME_GET_FOLD\n+            #define PyDateTime_TIME_GET_FOLD(o) ((void)(o), 0)\n+        #endif\n+        #ifndef PyDateTime_DATE_GET_FOLD\n+            #define PyDateTime_DATE_GET_FOLD(o) ((void)(o), 0)\n+        #endif\n+    #endif\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\\n+            ((void)(fold), PyDateTimeAPI->DateTime_FromDateAndTime(year, month, day, hour, minute, second, \\\n+                microsecond, tz, PyDateTimeAPI->DateTimeType))\n+        #define __Pyx_DateTime_TimeWithFold(hour, minute, second, microsecond, tz, fold) \\\n+            ((void)(fold), PyDateTimeAPI->Time_FromTime(hour, minute, second, microsecond, tz, PyDateTimeAPI->TimeType))\n+    #else /* For Python 3.6+ so that we can pass tz */\n+        #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\\n+            PyDateTimeAPI->DateTime_FromDateAndTimeAndFold(year, month, day, hour, minute, second, \\\n+                microsecond, tz, fold, PyDateTimeAPI->DateTimeType)\n+        #define __Pyx_DateTime_TimeWithFold(hour, minute, second, microsecond, tz, fold) \\\n+            PyDateTimeAPI->Time_FromTimeAndFold(hour, minute, second, microsecond, tz, fold, PyDateTimeAPI->TimeType)\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_MICROSECONDS)\n-    #define PyDateTime_DELTA_GET_MICROSECONDS(o)   (((PyDateTime_Delta*)o)->microseconds)\n+\n+    /* Backport for Python < 3.7 */\n+    #if PY_VERSION_HEX < 0x030700b1\n+        #define __Pyx_TimeZone_UTC NULL\n+        #define __Pyx_TimeZone_FromOffsetAndName(offset, name) ((void)(offset), (void)(name), (PyObject*)NULL)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624721444",
            "id": 624721444,
            "line": 51,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDcyMTQ0NA==",
            "original_commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "original_line": 51,
            "original_position": 57,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": 57,
            "pull_request_review_id": 649932844,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-02T16:35:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624721444",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4128#discussion_r624722700"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4128"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624722700"
                }
            },
            "author_association": "MEMBER",
            "body": "We used `NULL` before, and this is a purely internal macro. `None` would require reference counting the result to give it a clean interface (not returning a borrowed or owned reference in different cases), which would complicate it unnecessarily.\r\n\r\nI think casting `NULL`  here is just fine.",
            "commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "created_at": "2021-05-02T16:45:27Z",
            "diff_hunk": "@@ -1,27 +1,94 @@\n from cpython.object cimport PyObject\n+from cpython.version cimport PY_VERSION_HEX\n \n cdef extern from \"Python.h\":\n     ctypedef struct PyTypeObject:\n         pass\n \n cdef extern from \"datetime.h\":\n     \"\"\"\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_DAYS)\n-    #define PyDateTime_DELTA_GET_DAYS(o)         (((PyDateTime_Delta*)o)->days)\n+    /* Backport for Python 2.x */\n+    #if PY_MAJOR_VERSION < 3\n+        #ifndef PyDateTime_DELTA_GET_DAYS\n+            #define PyDateTime_DELTA_GET_DAYS(o) (((PyDateTime_Delta*)o)->days)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_SECONDS\n+            #define PyDateTime_DELTA_GET_SECONDS(o) (((PyDateTime_Delta*)o)->seconds)\n+        #endif\n+        #ifndef PyDateTime_DELTA_GET_MICROSECONDS\n+            #define PyDateTime_DELTA_GET_MICROSECONDS(o) (((PyDateTime_Delta*)o)->microseconds)\n+        #endif\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_SECONDS)\n-    #define PyDateTime_DELTA_GET_SECONDS(o)      (((PyDateTime_Delta*)o)->seconds)\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #ifndef PyDateTime_TIME_GET_FOLD\n+            #define PyDateTime_TIME_GET_FOLD(o) ((void)(o), 0)\n+        #endif\n+        #ifndef PyDateTime_DATE_GET_FOLD\n+            #define PyDateTime_DATE_GET_FOLD(o) ((void)(o), 0)\n+        #endif\n+    #endif\n+\n+    /* Backport for Python < 3.6 */\n+    #if PY_VERSION_HEX < 0x030600a4\n+        #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\\n+            ((void)(fold), PyDateTimeAPI->DateTime_FromDateAndTime(year, month, day, hour, minute, second, \\\n+                microsecond, tz, PyDateTimeAPI->DateTimeType))\n+        #define __Pyx_DateTime_TimeWithFold(hour, minute, second, microsecond, tz, fold) \\\n+            ((void)(fold), PyDateTimeAPI->Time_FromTime(hour, minute, second, microsecond, tz, PyDateTimeAPI->TimeType))\n+    #else /* For Python 3.6+ so that we can pass tz */\n+        #define __Pyx_DateTime_DateTimeWithFold(year, month, day, hour, minute, second, microsecond, tz, fold) \\\n+            PyDateTimeAPI->DateTime_FromDateAndTimeAndFold(year, month, day, hour, minute, second, \\\n+                microsecond, tz, fold, PyDateTimeAPI->DateTimeType)\n+        #define __Pyx_DateTime_TimeWithFold(hour, minute, second, microsecond, tz, fold) \\\n+            PyDateTimeAPI->Time_FromTimeAndFold(hour, minute, second, microsecond, tz, fold, PyDateTimeAPI->TimeType)\n     #endif\n-    #if PY_MAJOR_VERSION < 3 && !defined(PyDateTime_DELTA_GET_MICROSECONDS)\n-    #define PyDateTime_DELTA_GET_MICROSECONDS(o)   (((PyDateTime_Delta*)o)->microseconds)\n+\n+    /* Backport for Python < 3.7 */\n+    #if PY_VERSION_HEX < 0x030700b1\n+        #define __Pyx_TimeZone_UTC NULL\n+        #define __Pyx_TimeZone_FromOffsetAndName(offset, name) ((void)(offset), (void)(name), (PyObject*)NULL)",
            "html_url": "https://github.com/cython/cython/pull/4128#discussion_r624722700",
            "id": 624722700,
            "in_reply_to_id": 624721444,
            "line": 51,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDcyMjcwMA==",
            "original_commit_id": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "original_line": 51,
            "original_position": 57,
            "original_start_line": null,
            "path": "Cython/Includes/cpython/datetime.pxd",
            "position": 57,
            "pull_request_review_id": 649933586,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4128",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-05-02T16:45:27Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624722700",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4128/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2f627669e0042813bf8691d8e784b8ae5e741667/comments",
            "commit": {
                "author": {
                    "date": "2021-04-18T17:34:29Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-04-24T14:40:33Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "message": "Add missing datetime interfaces",
                "tree": {
                    "sha": "b930528ccc10b42012c5cc981c8aa1eb5dffbdd2",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/b930528ccc10b42012c5cc981c8aa1eb5dffbdd2"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2f627669e0042813bf8691d8e784b8ae5e741667",
                "verification": {
                    "payload": "tree b930528ccc10b42012c5cc981c8aa1eb5dffbdd2\nparent f3f7b612dc005abdac2e0a0a48dcf9be7b4b0122\nauthor Bluenix <bluenixdev@gmail.com> 1618767269 +0200\ncommitter Bluenix <bluenixdev@gmail.com> 1619275233 +0200\n\nAdd missing datetime interfaces\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEH7ydgueyqPMDBcwrHB7Qfm/IqkgFAmCELeYACgkQHB7Qfm/I\nqkgUsQ//b1Zcy/MLr4lscRKQKbQxpes5jepkI8HiNIGVyk5rY7OOHLdLQ+BPPvwr\nNdVtqSvSKfPvomsSjn3KpPh0sdSnZxq/O+Ke40RMTRU+TFsEdKcyjOytD6N/e10J\n6tBbDGLdN37rtvjiISux+h2wwnCoAe50AbA9vifZAp0ZfiG07GHkWTy8+obfEySE\nstp5NWmLJFhfXdNGwfeLKJucmW770ssfVZykBf2bRKxbQOUKkT+jpaARYl8fdh4+\nYNl7kW5Iw5oY3KzTIXLmwFEP1d+2TXkmwAsYy/wHaCKTMr1Len0LFSRtYXwekc82\nPck6PFS3rd2CocxmzwGTUgZHarYdrBiUNFzwJahPZ+/RVq9R34XJoybgsn9CmUg6\nK+BV4eCp0YwHTBc/ptbkN+zqEuVRUziw/OcJfHAJEoCboqFgOpAmTjphaDhtetKs\niIZvMUYLwYRe2rME5s3pYlSLo1Ar10RCd1URo+AKBNsUigguBd6vVsksVrq5EgWt\n/HpZR0WWJhhhZhIb8jjLhipniD7FYpV9Rz2FMrYtGmL1TeU3IoWuc3GD7PAWBXyk\nopxaR6RIy9Y5cv8/7vOjCGjDmflGLRNNdn8Mh6lWOnf6ZmFafewIWXZ5eqCq1E8Q\nzUmqoCFRtdmR1FttIQvRagqjgVGZi/aA5vNQujiWCNoNr1CWywA=\n=8m+B\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "html_url": "https://github.com/cython/cython/commit/2f627669e0042813bf8691d8e784b8ae5e741667",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjJmNjI3NjY5ZTAwNDI4MTNiZjg2OTFkOGU3ODRiOGFlNWU3NDE2Njc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f3f7b612dc005abdac2e0a0a48dcf9be7b4b0122",
                    "sha": "f3f7b612dc005abdac2e0a0a48dcf9be7b4b0122",
                    "url": "https://api.github.com/repos/cython/cython/commits/f3f7b612dc005abdac2e0a0a48dcf9be7b4b0122"
                }
            ],
            "sha": "2f627669e0042813bf8691d8e784b8ae5e741667",
            "url": "https://api.github.com/repos/cython/cython/commits/2f627669e0042813bf8691d8e784b8ae5e741667"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e41c44bb8bda8440cbd424280231644c47dc7670/comments",
            "commit": {
                "author": {
                    "date": "2021-04-27T19:23:10Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-04-27T19:23:10Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "message": "Do some C macro magic ;)\n\nThis will be squashed down",
                "tree": {
                    "sha": "f38f8b74706aaeeed1ff6d4ecd252e3bb168dfe9",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f38f8b74706aaeeed1ff6d4ecd252e3bb168dfe9"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e41c44bb8bda8440cbd424280231644c47dc7670",
                "verification": {
                    "payload": "tree f38f8b74706aaeeed1ff6d4ecd252e3bb168dfe9\nparent 2f627669e0042813bf8691d8e784b8ae5e741667\nauthor Bluenix <bluenixdev@gmail.com> 1619551390 +0200\ncommitter Bluenix <bluenixdev@gmail.com> 1619551390 +0200\n\nDo some C macro magic ;)\n\nThis will be squashed down\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEH7ydgueyqPMDBcwrHB7Qfm/IqkgFAmCIZKcACgkQHB7Qfm/I\nqkj1jg/+Pxw7gmiSZNlJlkin1S8c6SirjtDfxmnk9aCi/jKhHFjIoFPotAFDP9l9\nG2QmVwHDGPz5EC3JEfGUAlBYgEf1drgjB70Onhj2NVnAAn4cgAlA8BUqk7FpPg5V\ntsU44n9HXqNoA8jNGJxal1S2kkaoketaVWF/MRhkd6C8EPMC+G03O6ayfss/s0ei\n8gihb3v8t3rkIJUKmvDFhIbQ8Z+KJmplOHW/sCZ77kH8N++TQJ/wkdG2uX9yzQgg\nNb1JQhP+6peGV/CDxgnd//4g7kdlcTF2nrx2V1AqLBfNxHgXb9umc18KgC3ThSX/\n00KBJEtrtnpMLcu2qIilwcJWEJH03UvxtVuVBj0UCQgcIm64tHr7+x+DLPixVBJB\nBlT1WTY5bbWMECF5h8w0nX4wsMhqJTpPceOi02ua9pmHMwKkzcPpZFfiJqhUw+Vy\nEhTtux+Kf6H04gYYzUEv6dvdaLGimIDaJKfbcuQ3rqolxqdGyfpit8J5TvpLBQ70\nYSB77KA719hEToA3QAk65l3ghYdTWHLQN3JFGew1TzlVbFKa2b0nz/qzvDi2GJzQ\nT4sco+57EvlSn+gCySCPLawOzIyLqATsRsM4E1DsRi/NbcmBVxXsaFRmR6Tm54AE\nGdiTT1BUyRZwbmMtb9t3p4YvJPGGsr789YBKkWhOXbQ+iqcEtOc=\n=sjEd\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "html_url": "https://github.com/cython/cython/commit/e41c44bb8bda8440cbd424280231644c47dc7670",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOmU0MWM0NGJiOGJkYTg0NDBjYmQ0MjQyODAyMzE2NDRjNDdkYzc2NzA=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2f627669e0042813bf8691d8e784b8ae5e741667",
                    "sha": "2f627669e0042813bf8691d8e784b8ae5e741667",
                    "url": "https://api.github.com/repos/cython/cython/commits/2f627669e0042813bf8691d8e784b8ae5e741667"
                }
            ],
            "sha": "e41c44bb8bda8440cbd424280231644c47dc7670",
            "url": "https://api.github.com/repos/cython/cython/commits/e41c44bb8bda8440cbd424280231644c47dc7670"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1285b4a777a9735bfc477dfd853ca9670a83d017/comments",
            "commit": {
                "author": {
                    "date": "2021-04-27T19:26:49Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-04-27T19:26:49Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "message": "Move around timezone_new function",
                "tree": {
                    "sha": "6ab2c69237618a29ee76052cdf6367093b2ceac5",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/6ab2c69237618a29ee76052cdf6367093b2ceac5"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1285b4a777a9735bfc477dfd853ca9670a83d017",
                "verification": {
                    "payload": "tree 6ab2c69237618a29ee76052cdf6367093b2ceac5\nparent e41c44bb8bda8440cbd424280231644c47dc7670\nauthor Bluenix <bluenixdev@gmail.com> 1619551609 +0200\ncommitter Bluenix <bluenixdev@gmail.com> 1619551609 +0200\n\nMove around timezone_new function\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEH7ydgueyqPMDBcwrHB7Qfm/IqkgFAmCIZXoACgkQHB7Qfm/I\nqkil3g//a1E7WOj4DdVW7YlPriFGH5sBimBjQqmPFTVJx4FPBYngpOzpnFxwlpbS\nvZDoGvtMcKptWh9lv8UUzcvJ2wb1effUP21+uXlfMYoXrXC6FAsp4DN0g+RgPevR\nin8BxDi+j+Jgm3j/HS70yBsCyz8vrlt2UEOK5MvTQvU8ihotKC9DKx1gRw5cpBAO\nGtUdVzWRLWjmX2J99PgjwIr5WGR6zB6ewyCxp7PM1mWDe235Wo9UzBsfNFE/2YJp\nCD66vP3DIcFBm9/YrvyVzZAsRjrpy42noUH6RZUEBxcY7i6H2RvXkofJ7e7qh83C\njW7dR1hDTI51uSBjicoPQ+fOA7VVekMkmQFLHkgsiDEf38SPfgG9shzUezdaHEr3\nNnL8W4fdkbFqtktE4UFseal2Ks41lnhTViKjehYPUl/2BZfIWtcO8cxmz/S1265+\np/RJ/uuuoSdA3HksCpyV+oCFgOIJz1Dkr3I1EIut7iXDZyNrG+F69fOvD2RLNrf9\nEPgLnyAqIZo5W+8/yE4U5aY0waYRbBYP0QBPE3yYHZxxI5p1LSMDFejUr/oVLrx1\nVPFS+kic0GWKDuc4DonECSxQlE5JO7tlqcImjq2V0WYi5a0fjmcLuPAvfY6FLCam\nX29tguF+GaNITN6n7zD/yo5hlJyj57DGwnbUnF2Jm75xKU8Ieac=\n=2gp5\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "html_url": "https://github.com/cython/cython/commit/1285b4a777a9735bfc477dfd853ca9670a83d017",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjEyODViNGE3NzdhOTczNWJmYzQ3N2RmZDg1M2NhOTY3MGE4M2QwMTc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e41c44bb8bda8440cbd424280231644c47dc7670",
                    "sha": "e41c44bb8bda8440cbd424280231644c47dc7670",
                    "url": "https://api.github.com/repos/cython/cython/commits/e41c44bb8bda8440cbd424280231644c47dc7670"
                }
            ],
            "sha": "1285b4a777a9735bfc477dfd853ca9670a83d017",
            "url": "https://api.github.com/repos/cython/cython/commits/1285b4a777a9735bfc477dfd853ca9670a83d017"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a2ebdd32c8e7535a190fc617493ac9cd17bad12e/comments",
            "commit": {
                "author": {
                    "date": "2021-04-28T15:03:33Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-04-28T15:03:33Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "message": "Fix tests",
                "tree": {
                    "sha": "f47533dfd0c9ee56cddc8e51e284f209a9878177",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f47533dfd0c9ee56cddc8e51e284f209a9878177"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a2ebdd32c8e7535a190fc617493ac9cd17bad12e",
                "verification": {
                    "payload": "tree f47533dfd0c9ee56cddc8e51e284f209a9878177\nparent 1285b4a777a9735bfc477dfd853ca9670a83d017\nauthor Bluenix <bluenixdev@gmail.com> 1619622213 +0200\ncommitter Bluenix <bluenixdev@gmail.com> 1619622213 +0200\n\nFix tests\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEH7ydgueyqPMDBcwrHB7Qfm/IqkgFAmCJeU4ACgkQHB7Qfm/I\nqkiYVA//WxcQgxDoJz+7DPxXo+3rnY/cLpOz4jcD7Qp0A0TZADfW5ZWINhmkS4Bb\n/pQyHRP1lHGIi/HmuRI4hRoVvYTbQbzQKmX9PGektj9Jio7qLXNIymilVznC40Ga\nk5IiIqDYrjpGBHk0O4rYtD8UZPT3euzY25kBtV57FfGsriMyViGUxJ8PtdnfWW2f\nCnQzSGfRDKIE09OM/cGd7z92oxDx/GIy4qLKlWIwU/oP90RH9+qj1VEMd9ClQht+\nidOrbVZkgjnk64qRs+lJ+Mys3PPZfoKjQvRP3RRDmlX3tqCeshiqFY0nTCUhCv2C\nDekxIpSV8wSq1BttR4UKj1tfTCx+r4LqWk3U9gyI8OR3xRV0xWScNqdEOBvK+SnV\nutv0j0ouzGTsEgkLX5L8m8XosOc6i5wloJZFu0UuOg9Vivi1rt1j3CHw5wwxmJU5\nP0Y2FtnKJJq34J94dbg3HZ6IOTNj7HxmnD/ul+mNRe33F/ZgEmN7/nPGgKFjTZty\nQEC1rsxZ4NiTgZ/eBlyPuVNCuJNTMg+AAb85YsnV51wMURgR/XbR/70gqY1utOLO\nG5nG8I29kLDT2b0Vt9jpT921dO+WkmNGGVkjVOKSwvIaFnPuINHUB2UG5hh2fLhU\ns5ooWqLpRB8+3STxrZKhSsCvhoYvBpRvtmIyE1DFQ+9Wy/Eql4I=\n=b4GK\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "html_url": "https://github.com/cython/cython/commit/a2ebdd32c8e7535a190fc617493ac9cd17bad12e",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOmEyZWJkZDMyYzhlNzUzNWExOTBmYzYxNzQ5M2FjOWNkMTdiYWQxMmU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1285b4a777a9735bfc477dfd853ca9670a83d017",
                    "sha": "1285b4a777a9735bfc477dfd853ca9670a83d017",
                    "url": "https://api.github.com/repos/cython/cython/commits/1285b4a777a9735bfc477dfd853ca9670a83d017"
                }
            ],
            "sha": "a2ebdd32c8e7535a190fc617493ac9cd17bad12e",
            "url": "https://api.github.com/repos/cython/cython/commits/a2ebdd32c8e7535a190fc617493ac9cd17bad12e"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f5a4c90f576604ee89a33449433ab1bad5ae0166/comments",
            "commit": {
                "author": {
                    "date": "2021-04-28T16:31:35Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-04-28T16:31:35Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Fix mistake in if statement\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "4eaa32af65885a887e523ce201788aa05c2266ab",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/4eaa32af65885a887e523ce201788aa05c2266ab"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f5a4c90f576604ee89a33449433ab1bad5ae0166",
                "verification": {
                    "payload": "tree 4eaa32af65885a887e523ce201788aa05c2266ab\nparent a2ebdd32c8e7535a190fc617493ac9cd17bad12e\nauthor Bluenix <bluenixdev@gmail.com> 1619627495 +0200\ncommitter GitHub <noreply@github.com> 1619627495 +0200\n\nFix mistake in if statement\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgiY3nCRBK7hj4Ov3rIwAAxZsIAGd75P1V3JP02mEwAqu5XD0V\nsX8clk+rdJuKiE6muAyh+iS8auosREWjVY93DoH26xLGCn6RUj2wjwlf099/Acca\ntJbE2WpCRG+SLAe5UD1nQemSB/e3dIZGd+Tb71LiaEcT5dfrf6hlF5Vv1N9l5GZx\n1L6PMm3s2yr+lXVEIC+FS6+au4o36cw58Rlt8gVRsMUCoNKW94y4NfDpWiLv3rEv\n/lLqYVYy5LA9vZIqME68Mv3PBTjlnnOzXJ20YtkJyzsrhce/kLFgwnWzHKDNk6w8\nS/jcxUoF770m+itV6KjYgWCKIo38PATkW90dL6K0N1S0VKIqYzSj3fLBSKulpc4=\n=YoWP\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/f5a4c90f576604ee89a33449433ab1bad5ae0166",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOmY1YTRjOTBmNTc2NjA0ZWU4OWEzMzQ0OTQzM2FiMWJhZDVhZTAxNjY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a2ebdd32c8e7535a190fc617493ac9cd17bad12e",
                    "sha": "a2ebdd32c8e7535a190fc617493ac9cd17bad12e",
                    "url": "https://api.github.com/repos/cython/cython/commits/a2ebdd32c8e7535a190fc617493ac9cd17bad12e"
                }
            ],
            "sha": "f5a4c90f576604ee89a33449433ab1bad5ae0166",
            "url": "https://api.github.com/repos/cython/cython/commits/f5a4c90f576604ee89a33449433ab1bad5ae0166"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8da898e65d0d6e7c3d1f580d01e49837167191f6/comments",
            "commit": {
                "author": {
                    "date": "2021-04-28T16:33:12Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-04-28T16:33:12Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Fix import statement continuation\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "8f09c1a8cfec43dfaf4455397fc4c448174c2816",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8f09c1a8cfec43dfaf4455397fc4c448174c2816"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8da898e65d0d6e7c3d1f580d01e49837167191f6",
                "verification": {
                    "payload": "tree 8f09c1a8cfec43dfaf4455397fc4c448174c2816\nparent f5a4c90f576604ee89a33449433ab1bad5ae0166\nauthor Bluenix <bluenixdev@gmail.com> 1619627592 +0200\ncommitter GitHub <noreply@github.com> 1619627592 +0200\n\nFix import statement continuation\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgiY5ICRBK7hj4Ov3rIwAA6NcIAHyLs0ZwT4pz4psKc6VbdMrr\ner0Iiehl8TxPSBizcwX7avGEFAGz/QIFHIkKHaZDhDNI+XY+RJdvUPZFJj5BhNWn\nTeQYa1slh4urEj2GM5HgKH6XMcNZPfMt4AUUdR19WPoW1eUaUqwvGUPiT2aX6/yU\nCd6cp49kL5qeCP+LHg/xOgItgG16yVyG2SuVDkelpYltheTCXwu3oU7LdJb7N4Yt\nGDwcepsW2/1EZ8mdR3Ys9I8eL01tLw4Xr/0EXEiYSY0X3B9wji1LzfAytfkSsxYa\nezg0/DzdLAfaC5/IGIf2eiD7XAuA3lfD5ZmbKngcS4YD6DdMUqSWEShhH+Eo+cY=\n=nciI\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/8da898e65d0d6e7c3d1f580d01e49837167191f6",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjhkYTg5OGU2NWQwZDZlN2MzZDFmNTgwZDAxZTQ5ODM3MTY3MTkxZjY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f5a4c90f576604ee89a33449433ab1bad5ae0166",
                    "sha": "f5a4c90f576604ee89a33449433ab1bad5ae0166",
                    "url": "https://api.github.com/repos/cython/cython/commits/f5a4c90f576604ee89a33449433ab1bad5ae0166"
                }
            ],
            "sha": "8da898e65d0d6e7c3d1f580d01e49837167191f6",
            "url": "https://api.github.com/repos/cython/cython/commits/8da898e65d0d6e7c3d1f580d01e49837167191f6"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b7e0359496fdbde2fab2c7f2e85369c87d9fbeb0/comments",
            "commit": {
                "author": {
                    "date": "2021-04-28T19:29:03Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-04-28T19:29:03Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "message": "Fix code according to feedback\n\nThis will be squashed so message isn't that important",
                "tree": {
                    "sha": "48c790efc5235278da4efe8eee0b209313216d5c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/48c790efc5235278da4efe8eee0b209313216d5c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b7e0359496fdbde2fab2c7f2e85369c87d9fbeb0",
                "verification": {
                    "payload": "tree 48c790efc5235278da4efe8eee0b209313216d5c\nparent 8da898e65d0d6e7c3d1f580d01e49837167191f6\nauthor Bluenix <bluenixdev@gmail.com> 1619638143 +0200\ncommitter Bluenix <bluenixdev@gmail.com> 1619638143 +0200\n\nFix code according to feedback\n\nThis will be squashed so message isn't that important\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEH7ydgueyqPMDBcwrHB7Qfm/IqkgFAmCJt38ACgkQHB7Qfm/I\nqkjj6g/+OTQWQ/OPWf6khs7EaVfwz40/RfAHaaGpCd+O3gB9YhYaeZuXAdnHFiBO\ndwn2bzMc1ce6jT3QnfFtlEiO9TpKLRHprkw/S1SlsHhJfEFRRgQt+SFpK4d2oO7Q\nTrqkVfd7S8Tqho9xmyy48OK43haBS1gRhuKXs+tFYQvcVke990oU1Zj7XLVyRH7B\n5Y2TgPapPhPtx4NKJsog5PzglBr0NtyT4t0tHDKK2WYIMx+wL3LdJxo8cXF6snj0\no4erza0sm0r/18ulNDx1iQliq7kprysvULGzfBySBP9OQ/hNADgvOyBJUsrbea5E\n7e5buCflU8AF5bYqOOXENsgQOmMn/tj1gOprgWyzXS+//+isMEKSDio3TShBBQxq\nCnFhmlo+Hs4two0ecBhfddtOJd15jqSaINkceNFudP+49Fi/mwDJW+tQgbZnbvpV\nXqh016SeKSijyfZRyFUv1UzGa3xtRYHiIAESW7LcesoXQSa+gjV123ctvQkENtjt\np4ygcKKr4i77no7xth/0sHdsRQ/eNtwhLAYObIKt0q8V34oDaSYG2X7kr+L7SGxD\n5N6p68M9bLCQLiBzZHK7xWWVC1dfXea9udDjbNsE4UU85AWHeyhvd/9IOEuiJK9C\no8Nq8ZFh1RH+tpg+Nv6mEI2d3Wx0CUctjijtvDo9EANnMrJqNds=\n=F76G\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "html_url": "https://github.com/cython/cython/commit/b7e0359496fdbde2fab2c7f2e85369c87d9fbeb0",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOmI3ZTAzNTk0OTZmZGJkZTJmYWIyYzdmMmU4NTM2OWM4N2Q5ZmJlYjA=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8da898e65d0d6e7c3d1f580d01e49837167191f6",
                    "sha": "8da898e65d0d6e7c3d1f580d01e49837167191f6",
                    "url": "https://api.github.com/repos/cython/cython/commits/8da898e65d0d6e7c3d1f580d01e49837167191f6"
                }
            ],
            "sha": "b7e0359496fdbde2fab2c7f2e85369c87d9fbeb0",
            "url": "https://api.github.com/repos/cython/cython/commits/b7e0359496fdbde2fab2c7f2e85369c87d9fbeb0"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d28b6534d50a563fd4bb16a1d0da73ac3a020380/comments",
            "commit": {
                "author": {
                    "date": "2021-04-28T19:33:44Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-04-28T19:33:44Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "message": "Add last missing version if statement",
                "tree": {
                    "sha": "d3a56984b5c46957e7f450fee5f0c88711441dcf",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d3a56984b5c46957e7f450fee5f0c88711441dcf"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d28b6534d50a563fd4bb16a1d0da73ac3a020380",
                "verification": {
                    "payload": "tree d3a56984b5c46957e7f450fee5f0c88711441dcf\nparent b7e0359496fdbde2fab2c7f2e85369c87d9fbeb0\nauthor Bluenix <bluenixdev@gmail.com> 1619638424 +0200\ncommitter Bluenix <bluenixdev@gmail.com> 1619638424 +0200\n\nAdd last missing version if statement\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEH7ydgueyqPMDBcwrHB7Qfm/IqkgFAmCJuJgACgkQHB7Qfm/I\nqkhurQ/8Dew9WPl31STRmppSSeOntgQyNvFhP4N4dmod433IBDD0rWojxoUChQfx\n3gx2Ifrfg3pHM07YoMXgVsThW5wKK88x8MXPvw/TCiZMO3OJW888oXyEeOrPjLzU\nm30J+TggC9HkGS+gNbrxMg5lZw2fT0DaCumnyofB4AZzR8YmX2y+c0NZbF2J8Rhx\nzHgYk6cDk9aWP9fX2Nig0kmWL9drhMi6lB1UYAP2giINi0Ba5SPBQgKOVF8Dg1so\nNpUT2rRuwLVXBs5weYhS/VVRW5fx5/J9IyjFR+9eFsUgv/lPKFPFgBu66+YZcWvP\nrDgbjxlIwdR7/IuBh0KmkJt7sFDkRdb4W/vOVN0W7NqwZhUXG8YbVciOBit0wzls\nqm/D2h/XvalYOZhrfkWtYG6Gai5QrJj4+BzoYW0dKoa5cYW1NNBKk39kVJSlwKvz\nzXP+ZloG9UewWicdzhcR8IcHCSJLbnt8KFKwEu50i/Hfs/7h9hzRXSyZ9T0p6853\ngLLv/PllC0aACT3fsZOEiZ7npOBfMbU50N0GT8d1oBzcviy+P+4z+ZdiPGj+CcRv\nmSaau5LNheAhiQTN9fRIF/jeko/D5hf7uaUxeM2jd3Cz/zuT7SwWhw6cf5ay9Xph\nk3UiPp0YJQsSGUG7QqiaxrS5uWSFhI/ogj3WKccucixaOnpYsQ4=\n=pCDD\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "html_url": "https://github.com/cython/cython/commit/d28b6534d50a563fd4bb16a1d0da73ac3a020380",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOmQyOGI2NTM0ZDUwYTU2M2ZkNGJiMTZhMWQwZGE3M2FjM2EwMjAzODA=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b7e0359496fdbde2fab2c7f2e85369c87d9fbeb0",
                    "sha": "b7e0359496fdbde2fab2c7f2e85369c87d9fbeb0",
                    "url": "https://api.github.com/repos/cython/cython/commits/b7e0359496fdbde2fab2c7f2e85369c87d9fbeb0"
                }
            ],
            "sha": "d28b6534d50a563fd4bb16a1d0da73ac3a020380",
            "url": "https://api.github.com/repos/cython/cython/commits/d28b6534d50a563fd4bb16a1d0da73ac3a020380"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/24bfcf9a00f4b61ecf7b2bb1200c47344258ed25/comments",
            "commit": {
                "author": {
                    "date": "2021-04-28T20:26:16Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-04-28T20:26:16Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "message": "Revert change back to macro named __Pyx_DateTime_DateTimeWithFold",
                "tree": {
                    "sha": "431e541a6d063c311690d44b1e9bfcb193123a76",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/431e541a6d063c311690d44b1e9bfcb193123a76"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/24bfcf9a00f4b61ecf7b2bb1200c47344258ed25",
                "verification": {
                    "payload": "tree 431e541a6d063c311690d44b1e9bfcb193123a76\nparent d28b6534d50a563fd4bb16a1d0da73ac3a020380\nauthor Bluenix <bluenixdev@gmail.com> 1619641576 +0200\ncommitter Bluenix <bluenixdev@gmail.com> 1619641576 +0200\n\nRevert change back to macro named __Pyx_DateTime_DateTimeWithFold\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEH7ydgueyqPMDBcwrHB7Qfm/IqkgFAmCJxOgACgkQHB7Qfm/I\nqkiPVg/6AyAneyYu3x7YeZ4eRFCMocT3h1+whGol3wBuB+BYNWA6S0MjY2a2W491\nnQMWpVN7QcvnldstKIM2wiIz0UJcwpf8DEp4/wQJQOLqqvQZCT1HDzWkswAsFUAQ\nidb9CyMyteTniFYHzwk4rNDRBALgEryCaTUb8jyH51JDRgXM6H8qcUVYb498szHh\ngR2pjs09dGW9UNB+PU0dQWBeFK+tp54c3POk6FK2h7fGSIxvYnyv0fYsPUFx9wI5\nbqWCuCYhM+XX+C6EOlfNLQ8O69pbjcEF3F+nB6nGBkT+V/zd+3a6SAJ9wMHcSpuj\nKTue7dYaGSulb+M15j6V/yl2HYgstHJC2YnTZyooZaRIRKiN7mSuwXtgciRbHiIq\nx5zJvlN6RYyllHLRPsjOtE8tG2Sy44QecC36S+TB1H0uM/MO5AptxbNLdiaQEY1h\njFTym8MQ45fYaGpUAfi0p289g0lxi5GwlW+lxTzLz4JAmICUBeQDVfYj7OuYamrC\nes6L7Ea1klDr8gC0AcAA3+U3YipztvsNkfkjDNV77Fd661F0LSgAX8Ptye8lEvSr\n9w4WWzQANEiA9i7IqMitGq0rGsp6SCKZ4Ao+t4a69HhXEWwdyyL1RRLMK9jkiA+m\ntkVdOlhUqeK6aW5T+hRehoDcIdcfaFiEvY3ybYSEZeZWxBu0wc8=\n=s5s5\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "html_url": "https://github.com/cython/cython/commit/24bfcf9a00f4b61ecf7b2bb1200c47344258ed25",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjI0YmZjZjlhMDBmNGI2MWVjZjdiMmJiMTIwMGM0NzM0NDI1OGVkMjU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d28b6534d50a563fd4bb16a1d0da73ac3a020380",
                    "sha": "d28b6534d50a563fd4bb16a1d0da73ac3a020380",
                    "url": "https://api.github.com/repos/cython/cython/commits/d28b6534d50a563fd4bb16a1d0da73ac3a020380"
                }
            ],
            "sha": "24bfcf9a00f4b61ecf7b2bb1200c47344258ed25",
            "url": "https://api.github.com/repos/cython/cython/commits/24bfcf9a00f4b61ecf7b2bb1200c47344258ed25"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/40388bca4c310362d8ee02e47f44acbad9ec6a69/comments",
            "commit": {
                "author": {
                    "date": "2021-04-29T08:48:59Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-04-29T08:48:59Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Apply straight-forward suggestions from code review",
                "tree": {
                    "sha": "c0879af87789ba816275b035a438a93a35e54cb3",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c0879af87789ba816275b035a438a93a35e54cb3"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/40388bca4c310362d8ee02e47f44acbad9ec6a69",
                "verification": {
                    "payload": "tree c0879af87789ba816275b035a438a93a35e54cb3\nparent 24bfcf9a00f4b61ecf7b2bb1200c47344258ed25\nauthor scoder <stefan_ml@behnel.de> 1619686139 +0200\ncommitter GitHub <noreply@github.com> 1619686139 +0200\n\nApply straight-forward suggestions from code review",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJginL7CRBK7hj4Ov3rIwAAo1MIAHNVKY+15TwGdzUoP/QmXTx+\nJZq2nctjUkW7OqAoovxhp1EoAfYEFHG+kxKvDzL48pjXMBmyndwm7eJ1Cp0HAIMR\nQ1w7d71CuP1QqJg8LEqeTbAIyeEBqgPwveYAgZr5W3hZNtJgHPeOouznXQXDdl6X\nuif4po61TZ10fu+mzY4AnGvoxFvAeAaIvRqz5ib3YV8z+eCibK4k1itmSUc+xiK1\nN6vXIGoZGiDKlDt9O+U02IIjefoLj+rTzfw0V7u2vnEx+vifH8VDwJhFxauj/nYN\npQeJQ9bgPYyWobdEpOHTvJxOaicp7ZRqZ9YFK0zfvjeMRP048UGXtgZn+jii0FU=\n=WbVK\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/40388bca4c310362d8ee02e47f44acbad9ec6a69",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjQwMzg4YmNhNGMzMTAzNjJkOGVlMDJlNDdmNDRhY2JhZDllYzZhNjk=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/24bfcf9a00f4b61ecf7b2bb1200c47344258ed25",
                    "sha": "24bfcf9a00f4b61ecf7b2bb1200c47344258ed25",
                    "url": "https://api.github.com/repos/cython/cython/commits/24bfcf9a00f4b61ecf7b2bb1200c47344258ed25"
                }
            ],
            "sha": "40388bca4c310362d8ee02e47f44acbad9ec6a69",
            "url": "https://api.github.com/repos/cython/cython/commits/40388bca4c310362d8ee02e47f44acbad9ec6a69"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/772519f9517c6c24dedbabf1200a7a3812ee8d1b/comments",
            "commit": {
                "author": {
                    "date": "2021-04-29T17:51:14Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-04-29T17:51:14Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "message": "More fixing according to feedback",
                "tree": {
                    "sha": "196c1db9377525a481d10a832febd9411daad495",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/196c1db9377525a481d10a832febd9411daad495"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/772519f9517c6c24dedbabf1200a7a3812ee8d1b",
                "verification": {
                    "payload": "tree 196c1db9377525a481d10a832febd9411daad495\nparent 40388bca4c310362d8ee02e47f44acbad9ec6a69\nauthor Bluenix <bluenixdev@gmail.com> 1619718674 +0200\ncommitter Bluenix <bluenixdev@gmail.com> 1619718674 +0200\n\nMore fixing according to feedback\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEH7ydgueyqPMDBcwrHB7Qfm/IqkgFAmCK8hoACgkQHB7Qfm/I\nqkjJrRAAl15p67LnKnfoEmrzPErKF9HVRnGPPQ/aKFW/8L0NtW/j/c4uWiQDO4Cr\nbrHl+IH1Zm9k0tPk4Ty42J1OeY7/z36Kv7mBDTCJ5lIbrfDTE5PfUnQu0Ve4+BNW\n3k3H2wpa547FouRtSHdUrjdIDnDaALOjs0ZIdcd2nJgds0AsAX5dftkvjH/N2mk+\ny22gkbRwXAz0kcoj62JVmH0TQcOknGvpgCiZkFnBAoRo+St/55FtC834+JSA6EtR\n9ioflmYlBE3qwRTxuhQerTAC3K+nykrJGCAqrFdxVq3r37diWib3kB0gWm5qwcH9\nwuVGhApH0eOQg81NzxnTIGxrSk0hGdIJesowM9SwjNLErujWSBhvxhtRJ1/Y1kEF\nL7MZxcuA9P1Ey+q1GLACoL+AG2Vssh2ySzUyJXtbmpIUO/wtjBVLx3Nygd+41Hc5\nwdaVSJsEvVxKO1FA8UtJUiX3pV4V8Ex7nKu1i4o+8f1LoDxYYxoQSMRaqec1dQRm\nARf1kr8SwAKqw7/93QCCljR90CdhKBpCo9j9nSgLLc0bVVOcZEb1bri9arnduat7\nghQpOzdWSiJryoNnxNi1Y1dPMfzG8m7bGPhATYaQDoyBYpcdOS+tO7kewh8jd0CZ\nHHt9kRq7HY/qIW2ypl35F09YqPJfRO6MCmgSKNjDIR+x2wyqR9A=\n=iofr\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "html_url": "https://github.com/cython/cython/commit/772519f9517c6c24dedbabf1200a7a3812ee8d1b",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjc3MjUxOWY5NTE3YzZjMjRkZWRiYWJmMTIwMGE3YTM4MTJlZThkMWI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/40388bca4c310362d8ee02e47f44acbad9ec6a69",
                    "sha": "40388bca4c310362d8ee02e47f44acbad9ec6a69",
                    "url": "https://api.github.com/repos/cython/cython/commits/40388bca4c310362d8ee02e47f44acbad9ec6a69"
                }
            ],
            "sha": "772519f9517c6c24dedbabf1200a7a3812ee8d1b",
            "url": "https://api.github.com/repos/cython/cython/commits/772519f9517c6c24dedbabf1200a7a3812ee8d1b"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e4d4ba94ecde888fb56cd8ae54d784ad1b3e7d4f/comments",
            "commit": {
                "author": {
                    "date": "2021-04-29T17:53:18Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-04-29T17:53:18Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "message": "Fix bad continuation indentation",
                "tree": {
                    "sha": "5786e9a47e803b32d86f00be81d23c7f10ad5580",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/5786e9a47e803b32d86f00be81d23c7f10ad5580"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e4d4ba94ecde888fb56cd8ae54d784ad1b3e7d4f",
                "verification": {
                    "payload": "tree 5786e9a47e803b32d86f00be81d23c7f10ad5580\nparent 772519f9517c6c24dedbabf1200a7a3812ee8d1b\nauthor Bluenix <bluenixdev@gmail.com> 1619718798 +0200\ncommitter Bluenix <bluenixdev@gmail.com> 1619718798 +0200\n\nFix bad continuation indentation\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEH7ydgueyqPMDBcwrHB7Qfm/IqkgFAmCK8o4ACgkQHB7Qfm/I\nqki89A//UC+HYLzjspi7tc1DgjckqXk+z/Dz6+vJjAG6N+f9WOow8XUcdGFWsl6s\nd0DKSNnNqAojKBYzruHKz1rlokiBWfcejdzWa9hZdaC8ziAl1nEvwf+qmtR1yLd8\nvE/Es5Of15434GCdBQ5TeOITzvUcWciSPsWxOiOiiNmBR6FVRkfWj2582ARIPkgX\nIHTrfpuW2YNBAlsWyUDgos5HBCR2MQMYFnEcCgl67SFyzfHF5two1MYQe2HLzERJ\nM3qK1n8F1snkOBnVO/Vs+i+d1FuzgraFrHbxvhpW+62mDY7swqibtQCF4ifGbeNZ\nI7cYUtJI84o66TucfVzhMooc0btC4ZcE/tm7rWTCbb/9EcxSk40GyYOnS8Kq1vwJ\nC6PBFFExSyIOVxGp967RjTHAxPkh9x5LfMhIGUEWj1SPWNjgZK/iV1xH4E+/01uF\nkCOEmitnDn4RdhTRNABIa9rP1HCkOG6rb/F1byZt9mYDeCOMoo1bojIsrbGU84fE\nWcS358Uoglj+6u74ve708fTrH7wkRPgf3KdBkXZo0WtzZBTbU4dfwAB/oNiD08A3\nHiW9OL25AjRhG0FfldMA9X7YHa4cxFPsWn46ArwTAgQ4Ic5UYmdcGAWs0SOnh4h1\n41hHoOhLB+UY0amdIdeAoga0f3r1qc9FeTjD4G4esar1CH1LaLc=\n=BRsA\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "html_url": "https://github.com/cython/cython/commit/e4d4ba94ecde888fb56cd8ae54d784ad1b3e7d4f",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOmU0ZDRiYTk0ZWNkZTg4OGZiNTZjZDhhZTU0ZDc4NGFkMWIzZTdkNGY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/772519f9517c6c24dedbabf1200a7a3812ee8d1b",
                    "sha": "772519f9517c6c24dedbabf1200a7a3812ee8d1b",
                    "url": "https://api.github.com/repos/cython/cython/commits/772519f9517c6c24dedbabf1200a7a3812ee8d1b"
                }
            ],
            "sha": "e4d4ba94ecde888fb56cd8ae54d784ad1b3e7d4f",
            "url": "https://api.github.com/repos/cython/cython/commits/e4d4ba94ecde888fb56cd8ae54d784ad1b3e7d4f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/482164a664a45c2f509c34c7840b3db8a1488583/comments",
            "commit": {
                "author": {
                    "date": "2021-04-29T18:35:18Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-04-29T18:35:18Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "message": "Add back macros",
                "tree": {
                    "sha": "304de1174995d049ce27211f6a7f8b1f7db2dfbb",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/304de1174995d049ce27211f6a7f8b1f7db2dfbb"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/482164a664a45c2f509c34c7840b3db8a1488583",
                "verification": {
                    "payload": "tree 304de1174995d049ce27211f6a7f8b1f7db2dfbb\nparent e4d4ba94ecde888fb56cd8ae54d784ad1b3e7d4f\nauthor Bluenix <bluenixdev@gmail.com> 1619721318 +0200\ncommitter Bluenix <bluenixdev@gmail.com> 1619721318 +0200\n\nAdd back macros\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEH7ydgueyqPMDBcwrHB7Qfm/IqkgFAmCK/GYACgkQHB7Qfm/I\nqkgDSw/9EUNkgXkCcXmTNl+gYmHCtXy3+DFqPCQl1Yjv9U8mbssvpKrtP/1nDKeO\njYOKqhXA4P2saOZfJaLkoUwR9QruqdNGzq7HyZPyJb6f6nCLlS/iKk2pIeO1HGqa\n4QFPeLXj0EPFlAdFslvipmz8N0fIyTvzJ+7Bl7keZj8GERkAovIrU84h8j3Uffcz\nDKbRwfgfYM/1c2MOOqT7fdqKppJ24Fx66eSJlIYwij37DjkwilVHeChroV65bT8+\nRlc832pHUmhAmyJYEGVrEIxAnKzT2P2IuQVbSzqt2CKe1LZZGZNDbm/XQlhZWArD\n6UDEaOWe1MFEFjsH5Pf5/2kPGAOBb3CCwguONAs3V3jHv5kvKz5gNC+IpulbRn5i\nMP28xaDCO8rC2APKaWraRIguwEU2ddS4OuGWqGMKERZRz6ZRslKSrboujIknTskA\nbM5zN9i30tYipefD/xaYFV6GrJS6j5yxGq++LLRuODFBlKOJG8D/Come0rGk/MKA\nTsy8I4+Wgh/yNVAZBpHmPOgipKjdPwn6UuLQT3UNr6Zv4VoYRaawO+0/IQ+kuPXW\nA9ut2nY4bkM1SrWiynkPFob3G58hHOAgYuAe7msqycbbQ3tHYY2SoiHStIG2pbba\nsUHAC6tLpcKXC5xBIM85LadEOWaSWNv3j7f4H3xw6v6RUtEvZtQ=\n=NZif\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "html_url": "https://github.com/cython/cython/commit/482164a664a45c2f509c34c7840b3db8a1488583",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjQ4MjE2NGE2NjRhNDVjMmY1MDljMzRjNzg0MGIzZGI4YTE0ODg1ODM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e4d4ba94ecde888fb56cd8ae54d784ad1b3e7d4f",
                    "sha": "e4d4ba94ecde888fb56cd8ae54d784ad1b3e7d4f",
                    "url": "https://api.github.com/repos/cython/cython/commits/e4d4ba94ecde888fb56cd8ae54d784ad1b3e7d4f"
                }
            ],
            "sha": "482164a664a45c2f509c34c7840b3db8a1488583",
            "url": "https://api.github.com/repos/cython/cython/commits/482164a664a45c2f509c34c7840b3db8a1488583"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/57845a2f75be8e386493f9d8c61f695079704473/comments",
            "commit": {
                "author": {
                    "date": "2021-04-29T20:46:21Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-04-29T20:46:21Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Fix (non-)usage of internal macro.",
                "tree": {
                    "sha": "8d16faf52b48b68ec052b3901c243955aed3bfdb",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8d16faf52b48b68ec052b3901c243955aed3bfdb"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/57845a2f75be8e386493f9d8c61f695079704473",
                "verification": {
                    "payload": "tree 8d16faf52b48b68ec052b3901c243955aed3bfdb\nparent 482164a664a45c2f509c34c7840b3db8a1488583\nauthor scoder <stefan_ml@behnel.de> 1619729181 +0200\ncommitter GitHub <noreply@github.com> 1619729181 +0200\n\nFix (non-)usage of internal macro.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgixsdCRBK7hj4Ov3rIwAA0cQIACFwzIBz7iVZHAB4b+s0JOvR\nao/z7b7KiNAf+kml/gJPtnpkbJnElq5JP8qIYg2ymq5etLlxAxlBpLP2g8LfaYFY\ncJbLuBfJHOAI2uswQuMYs5I0fs86lBXlTWhINy/sZO6la48b+6PWb3Gk6LK0Hcft\nymToFa9aZFU1IY+/PTpvjKd5ancDH8NeMfmfMF5CTk2ZE502CJeaaJRygHKreW3L\n6B1rDPcvkbnZnqxaAEMqjfE+qpagbSbol/4Gc6tDA35NSxJeE4DGOREQ5DbRrvXh\nv8UIsVsD+dji/J3UsXEKrkioFVOfizOJadFd3Vll0YS6pACPDZ0W44fZrtjUkLg=\n=cN5p\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/57845a2f75be8e386493f9d8c61f695079704473",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjU3ODQ1YTJmNzViZThlMzg2NDkzZjlkOGM2MWY2OTUwNzk3MDQ0NzM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/482164a664a45c2f509c34c7840b3db8a1488583",
                    "sha": "482164a664a45c2f509c34c7840b3db8a1488583",
                    "url": "https://api.github.com/repos/cython/cython/commits/482164a664a45c2f509c34c7840b3db8a1488583"
                }
            ],
            "sha": "57845a2f75be8e386493f9d8c61f695079704473",
            "url": "https://api.github.com/repos/cython/cython/commits/57845a2f75be8e386493f9d8c61f695079704473"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/28d172f91bb11379f05f0455d843402b58c883c2/comments",
            "commit": {
                "author": {
                    "date": "2021-04-29T20:51:41Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-04-29T20:51:41Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Remove a now-unused internal macro (and fix the used one)",
                "tree": {
                    "sha": "4a43c4995faf5d380cab6e30739d3594e47dba35",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/4a43c4995faf5d380cab6e30739d3594e47dba35"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/28d172f91bb11379f05f0455d843402b58c883c2",
                "verification": {
                    "payload": "tree 4a43c4995faf5d380cab6e30739d3594e47dba35\nparent 57845a2f75be8e386493f9d8c61f695079704473\nauthor scoder <stefan_ml@behnel.de> 1619729501 +0200\ncommitter GitHub <noreply@github.com> 1619729501 +0200\n\nRemove a now-unused internal macro (and fix the used one)",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgixxdCRBK7hj4Ov3rIwAA8gkIAHXzrCT4wBn+HdLySwGbsgNp\nObqQS/AZ5YYIWr3e/ylTO+s3NwuTUdXj+4MuH9iMvVjN/uu5M3TTjhfwZ0Rd2dbB\nX/8mKv184TggU7eij8mOaABUpiQ0NmSNt8ByHMHVaXcihzM/aArRFaAx5J4BJdqu\nbf/x+16xKCPxwpw3tVbJvRNbEYHl0apVEUVaH/d8+ClcBWXYDsxQe8pCsn4RW0Pm\n52ijl26+lddHVdehXKFmLLNPr4tOuqaWIeOyvfiuOBlYQ1aAIjuqcQqlk36r9gL2\nqXeCqHKdCHy2h7RF1nDN3lW6v8pE5ztMxW+XHurOq20p/XJ3SYcevTUHAlZJNSc=\n=yhv6\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/28d172f91bb11379f05f0455d843402b58c883c2",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjI4ZDE3MmY5MWJiMTEzNzlmMDVmMDQ1NWQ4NDM0MDJiNThjODgzYzI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/57845a2f75be8e386493f9d8c61f695079704473",
                    "sha": "57845a2f75be8e386493f9d8c61f695079704473",
                    "url": "https://api.github.com/repos/cython/cython/commits/57845a2f75be8e386493f9d8c61f695079704473"
                }
            ],
            "sha": "28d172f91bb11379f05f0455d843402b58c883c2",
            "url": "https://api.github.com/repos/cython/cython/commits/28d172f91bb11379f05f0455d843402b58c883c2"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e59c64eb829331abc52c9fa48bc62d91beb286bd/comments",
            "commit": {
                "author": {
                    "date": "2021-04-30T14:13:04Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-04-30T14:13:04Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "message": "Fix test imports",
                "tree": {
                    "sha": "436a37a41cf5fc2e0fa5619a864df6d4be527343",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/436a37a41cf5fc2e0fa5619a864df6d4be527343"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e59c64eb829331abc52c9fa48bc62d91beb286bd",
                "verification": {
                    "payload": "tree 436a37a41cf5fc2e0fa5619a864df6d4be527343\nparent 482164a664a45c2f509c34c7840b3db8a1488583\nauthor Bluenix <bluenixdev@gmail.com> 1619791984 +0200\ncommitter Bluenix <bluenixdev@gmail.com> 1619791984 +0200\n\nFix test imports\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEH7ydgueyqPMDBcwrHB7Qfm/IqkgFAmCMEHkACgkQHB7Qfm/I\nqkil6A/+NegsqDlYgQPS2+JHndlFazO/ik1n3MEsiJKhOH1kjocblzzgrx3s0JmN\nShymtm3ULouZKpb/UocDbwJM1HmVCCum29B/fPI4m/txI3sUV9Jtm+AQWfTf9YvI\n+heuPOyh4bTMqMfxJdE7HdGpXTzVIbsu72cmv1gphOarMF4KDNzY+43O6fun6Q8Z\nb5MY3Knu3KvFuhocLoawQUTZpIUjU570UHiNB5JpaA8ulwCrz15u75ytiZgti0/H\ncS2dAvKZD1dzJuEF8oDGMYDiK3AvR0Df8GTx+eSYTIGVlphcgyORjBo1sUxz1+Rf\nUkH6wTs/+Qey1Zlscw7Xy0d+dGITkchkV/n5VFbDqEYL4giiDzQHHM0PNxXxMbSc\npHMrfkxBrl5LwEWBJ0hQn+HXWe7URRprx38ms6XVSd5FpNUhtveuUD6JdkPHzneu\nXhEvk7G3gQ4IgNcWkjFznsQeOFB2xi5GtElI4x4VzPVZDBTA8yIn5iEqOUR/HDLX\nZKj/194dmsKkb3rLU5a/TxhPdWnc/oHbQNCcPaqI2esITFv5DerIRYaezTiLwotp\nF/UUBjUiP5cWKoMymN/ucWD5LNkxavmKLwJHbj6p2bm3UtlDN4OexyJglZWvLCtU\nDsNaHoQkAfcJ/UkQoiWqNyLHnV1Ce4M8PGTsGMz1MDxLOzROzSI=\n=foc8\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "html_url": "https://github.com/cython/cython/commit/e59c64eb829331abc52c9fa48bc62d91beb286bd",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOmU1OWM2NGViODI5MzMxYWJjNTJjOWZhNDhiYzYyZDkxYmViMjg2YmQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/482164a664a45c2f509c34c7840b3db8a1488583",
                    "sha": "482164a664a45c2f509c34c7840b3db8a1488583",
                    "url": "https://api.github.com/repos/cython/cython/commits/482164a664a45c2f509c34c7840b3db8a1488583"
                }
            ],
            "sha": "e59c64eb829331abc52c9fa48bc62d91beb286bd",
            "url": "https://api.github.com/repos/cython/cython/commits/e59c64eb829331abc52c9fa48bc62d91beb286bd"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/260fdc1b1a242f56c48106fb86086d89e43c5c6f/comments",
            "commit": {
                "author": {
                    "date": "2021-04-30T14:13:37Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-04-30T14:13:37Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "message": "Merge branch 'fill-in-datetime' of https://github.com/Bluenix2/cython into fill-in-datetime",
                "tree": {
                    "sha": "422a7a40f387ab5dc5784456bca00a7c8ef41914",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/422a7a40f387ab5dc5784456bca00a7c8ef41914"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/260fdc1b1a242f56c48106fb86086d89e43c5c6f",
                "verification": {
                    "payload": "tree 422a7a40f387ab5dc5784456bca00a7c8ef41914\nparent e59c64eb829331abc52c9fa48bc62d91beb286bd\nparent 28d172f91bb11379f05f0455d843402b58c883c2\nauthor Bluenix <bluenixdev@gmail.com> 1619792017 +0200\ncommitter Bluenix <bluenixdev@gmail.com> 1619792017 +0200\n\nMerge branch 'fill-in-datetime' of https://github.com/Bluenix2/cython into fill-in-datetime\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEH7ydgueyqPMDBcwrHB7Qfm/IqkgFAmCMEJEACgkQHB7Qfm/I\nqkic4xAAmKCLzahXMQzbLV8wu+VQjN1+7waLUy/bpnjrW+UuUzbcfZyfb4BGGrGj\nOxO3Xx4rBRKASXmGDCm4/i/JhtPjucEF2SsLTIvf3jX6MZ3j8Ho0sP7FfCaATIcj\nTGYhPQ6SfKaLnlx/WgS3h/7JiZjo0xmQRaBrH6UL+3BBAWN1UODrWkIP+bPhTwEq\nvE2n/20SoUzGOq+LexGtRltH8oBtKMqlUbssI8m59iwDPLoWV3oN6CPEAak14Pup\nlME+Qh7Pv6lE3c6xpI8bXgxxFHx1aa51qqI1h6Y932GHT03ZkTMX9IeigLxtPTHh\nJuGB5LqZjreh/n99NTb/Yx6MHl/+QARD7vUdFGDe/bVz5SGv6Uz8vcZFNJKnlUrx\nn3Gu/IUMUstSXjtUiMEWfrX5GfCb6sHDFDinCEGhX/ePoq9xfbaQMiinnFYBp6ig\nozF5AxbHFkeITPnT57VoERZsoqXlFqU+87JIe7VKQu2JWKf249qAfyuJza/Wkfjv\n7dikeZ2YtdsVUSRMzzd/C0aQ8W9RDOlO8+8oy3OLYurlnJcbLNts1LXs1GPFNz8y\nYcS+db//h4iGRfSOUlSxD1L+V+bFqnXIsFdYmSSs9zjlYev7KpDDeKCr+jUV8s4H\nk8urnuuMV11XcUjD3KbJUYjEFGc5zazLi6tTGSVPIm00Mbe1QAw=\n=7pGb\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "html_url": "https://github.com/cython/cython/commit/260fdc1b1a242f56c48106fb86086d89e43c5c6f",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjI2MGZkYzFiMWEyNDJmNTZjNDgxMDZmYjg2MDg2ZDg5ZTQzYzVjNmY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e59c64eb829331abc52c9fa48bc62d91beb286bd",
                    "sha": "e59c64eb829331abc52c9fa48bc62d91beb286bd",
                    "url": "https://api.github.com/repos/cython/cython/commits/e59c64eb829331abc52c9fa48bc62d91beb286bd"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/28d172f91bb11379f05f0455d843402b58c883c2",
                    "sha": "28d172f91bb11379f05f0455d843402b58c883c2",
                    "url": "https://api.github.com/repos/cython/cython/commits/28d172f91bb11379f05f0455d843402b58c883c2"
                }
            ],
            "sha": "260fdc1b1a242f56c48106fb86086d89e43c5c6f",
            "url": "https://api.github.com/repos/cython/cython/commits/260fdc1b1a242f56c48106fb86086d89e43c5c6f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e653027dedd039ee88230e49a9c702dcd94b1122/comments",
            "commit": {
                "author": {
                    "date": "2021-05-01T19:47:52Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-01T19:47:52Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "message": "Fix macro and docstring typo",
                "tree": {
                    "sha": "9abe3d0353cddbeb09b32a7d663d1a6c89890ff2",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/9abe3d0353cddbeb09b32a7d663d1a6c89890ff2"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e653027dedd039ee88230e49a9c702dcd94b1122",
                "verification": {
                    "payload": "tree 9abe3d0353cddbeb09b32a7d663d1a6c89890ff2\nparent 260fdc1b1a242f56c48106fb86086d89e43c5c6f\nauthor Bluenix <bluenixdev@gmail.com> 1619898472 +0200\ncommitter Bluenix <bluenixdev@gmail.com> 1619898472 +0200\n\nFix macro and docstring typo\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEH7ydgueyqPMDBcwrHB7Qfm/IqkgFAmCNsG4ACgkQHB7Qfm/I\nqkguvRAAiyZ2yVyAHWoLphNLxZZv86qmPPkeBuV4yvEdv9j/7+SvRU9i9Cr2qlfD\nfgWsLZ3XhFJYfcKHASLzDs+FHu6AvUMpYo34CH4dc5NH0agwkPlxw2HSQvNME8ke\n5RG4j8gF7ob7HqPjDjQMei51IDMJod5gZYJUrptBPKnmwT+ZwLvBzsWctFFXwKuH\nF0KbktqwaGV0iopM5r98Fugm/ZO45syJAnITKKLCZInFKN2BF7QK/gTAgeCMrk7F\nHCvyj0AvIFBCOwwzmRMdzAx7YmeCFpZ6fVVykWkXLenmQcr0QPQ+7W/7Z85+RBSB\nJzOAUqExih1nOdVL877BBaIZsmxvDvFHYD/MKsCqD+0RZVSp2M1mevzaDMqfsXK9\nB+PhDRX38GHUfiwUhc8+Pm/5gMDCeCgX0l3rfs4hTpYBEHPh5pfPYM5aFjPXwi7a\nebDSB4MxNsmDZoMz7KFdvRsZrtx2/e0cmhNFjGkqCZASNV3+Yx8eyH78f3v+WKwI\nzAFnJkGU5gU52iQiu/+x60kc7hnXgd0W5LfztnVVaCtRqwWHi6PEggPguj+lwDtL\ng+vSlBESTawTyMD+kRYHDw2ltGn2jiSy82pMX+oPVGrz96xd+yLarq05Je5bzXna\nTuFqAYI+z/EU3chFB78HZ1oNSVSl+S/wCNNhK3MzbsvC7KUMyCs=\n=w/9V\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "html_url": "https://github.com/cython/cython/commit/e653027dedd039ee88230e49a9c702dcd94b1122",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOmU2NTMwMjdkZWRkMDM5ZWU4ODIzMGU0OWE5YzcwMmRjZDk0YjExMjI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/260fdc1b1a242f56c48106fb86086d89e43c5c6f",
                    "sha": "260fdc1b1a242f56c48106fb86086d89e43c5c6f",
                    "url": "https://api.github.com/repos/cython/cython/commits/260fdc1b1a242f56c48106fb86086d89e43c5c6f"
                }
            ],
            "sha": "e653027dedd039ee88230e49a9c702dcd94b1122",
            "url": "https://api.github.com/repos/cython/cython/commits/e653027dedd039ee88230e49a9c702dcd94b1122"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6c922c7ad543c9bc98eaa6ae296ef176d96dbf3e/comments",
            "commit": {
                "author": {
                    "date": "2021-05-01T21:31:21Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-01T21:31:21Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "message": "Fix macro and test issues",
                "tree": {
                    "sha": "46787a22c620e294c595fdc18598916773521962",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/46787a22c620e294c595fdc18598916773521962"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6c922c7ad543c9bc98eaa6ae296ef176d96dbf3e",
                "verification": {
                    "payload": "tree 46787a22c620e294c595fdc18598916773521962\nparent e653027dedd039ee88230e49a9c702dcd94b1122\nauthor Bluenix <bluenixdev@gmail.com> 1619904681 +0200\ncommitter Bluenix <bluenixdev@gmail.com> 1619904681 +0200\n\nFix macro and test issues\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEH7ydgueyqPMDBcwrHB7Qfm/IqkgFAmCNyKkACgkQHB7Qfm/I\nqkj9xA/+NCVEEiLzehzLLqHAxsPGLZK3Hb5rjX3PlxZVfS2svN98AwJlFLoCh8gC\n3W38Dnqi3jhhC3EkenkvmoMbnbqCKiSHHWLdD6xGv+QNujxBHISZqNAcasAFBWa+\n1Z8YJP5QDA5xOeUGJVwk4MCdq6VGUkt5aswMRFlyAWUiGtVOxOjf1PkNR34q4Y+t\ndbW4Pf/YRTCdYVgdrtgRWsezXJisUDrdCPP0MnQjBY9d1kDDkTAX2l0nlqv/AiJt\nn/pihC/F377KKGtLlnMpdsg4B9Hi2NO2JwWyVPj9FcgEE2F5hdNiwlCFj91UXCfe\n7GQBUW99zxUKGdjVO5TXxaz942/zYZKbjp2vGhoGTmMKRDvvRwrM6IN28W3d4ni5\nrAJVMdXrONAxYL0m/cg4S+WxQ3dgIRSg7WJ66PEA6Jordo9nZBMvT5Lv0/Hk7nvP\nJJrsyzpk44RoGfusJSQynUrNddIaleWTX+Wxd+ffUKmL47GG2GUQlFsPhmH1UgER\ncIggIrJ9qEaUg4jHnUiqGzOr7mV8jzdS0fEfTu5bfz3KB1ER/fBgxJE/1XtjXjwu\nAtKgrJw7hGWSkZeh1jNMju8k4aci7essO3vJ11lO/2D5wBbQlfMGXUgnIZLs8LXb\nyubkt+F3D/HQmgCM/iD6Y9PCjYNnXzq3zsCO9nHzKUe7MssrxSU=\n=p52u\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "html_url": "https://github.com/cython/cython/commit/6c922c7ad543c9bc98eaa6ae296ef176d96dbf3e",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjZjOTIyYzdhZDU0M2M5YmM5OGVhYTZhZTI5NmVmMTc2ZDk2ZGJmM2U=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e653027dedd039ee88230e49a9c702dcd94b1122",
                    "sha": "e653027dedd039ee88230e49a9c702dcd94b1122",
                    "url": "https://api.github.com/repos/cython/cython/commits/e653027dedd039ee88230e49a9c702dcd94b1122"
                }
            ],
            "sha": "6c922c7ad543c9bc98eaa6ae296ef176d96dbf3e",
            "url": "https://api.github.com/repos/cython/cython/commits/6c922c7ad543c9bc98eaa6ae296ef176d96dbf3e"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8fbde7eb3ca7f3880eb183ab498ea02aa405738f/comments",
            "commit": {
                "author": {
                    "date": "2021-05-01T23:30:33Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-01T23:30:33Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "message": "Fix tests\n\nOne test would only pass if ran in Sweden",
                "tree": {
                    "sha": "13ced3f6dd4dc81d77afa5c364380b850f61d53c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/13ced3f6dd4dc81d77afa5c364380b850f61d53c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8fbde7eb3ca7f3880eb183ab498ea02aa405738f",
                "verification": {
                    "payload": "tree 13ced3f6dd4dc81d77afa5c364380b850f61d53c\nparent 6c922c7ad543c9bc98eaa6ae296ef176d96dbf3e\nauthor Bluenix <bluenixdev@gmail.com> 1619911833 +0200\ncommitter Bluenix <bluenixdev@gmail.com> 1619911833 +0200\n\nFix tests\n\nOne test would only pass if ran in Sweden\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEH7ydgueyqPMDBcwrHB7Qfm/IqkgFAmCN5JkACgkQHB7Qfm/I\nqkjLABAAlDNQ2uJFhbAfCoBDxQ8FNG0el7r/UjuLqWJZojJJj6iY8QTnKf3Myv+M\n/vlC2khj1yczG/X02d8r4Ar+U/VVUI3sW/ttq/m7xU9EQHtzstIv8wRqWIqFuQ/C\nBM1A5NdgUS09V6XInhFvnWy2tZc4/kjtWLNOHxHLURCgW17rwtrlrvRAhmSougyw\nWu+T1/EBU9VHgo0JwSKP7x6KIpf85IxQrJuxK9vrheajB4ZrHU2fz5wLge2IRTD3\nofjHt/TdMCmIHCMa4Rc3EMcXAsGhwTY9Op5YqHTkgfunba9qKLOr9fa55TqYYRJU\nhb6uegUMXrZRzmu5qBimCRSUeSlKV0GkX/6jkkKAkjYD22jqU0v5F8IYL5USOKok\ndwYpoN4SVtpnhvpBSJ7fJja/5tdG01CpGBVLkucdEm3egInF2m2o3oVmRvVkypw/\nIiz17buZZHFY3Fkjd4grG/Dwr/znRwnv9/EGqqd51efRtGZsSlM9YPgIWVGZhODD\nI0ve19KIxmk3QQIEQVdE9Tev50cL22QwZb+DMjK5zkUCySJSpODMODZ+/TroNULA\nWlz9kIv9MM3zLq8WnNpvuGWHXwyWoiRcyOeku33AUx7Abia+aEAkKtEiOEikSdsN\naYzeOX7wjTIe9siaiPffPg9mk79xVpCl+NaD9GsXO1oNGgaVEzk=\n=HHDk\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "html_url": "https://github.com/cython/cython/commit/8fbde7eb3ca7f3880eb183ab498ea02aa405738f",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjhmYmRlN2ViM2NhN2YzODgwZWIxODNhYjQ5OGVhMDJhYTQwNTczOGY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6c922c7ad543c9bc98eaa6ae296ef176d96dbf3e",
                    "sha": "6c922c7ad543c9bc98eaa6ae296ef176d96dbf3e",
                    "url": "https://api.github.com/repos/cython/cython/commits/6c922c7ad543c9bc98eaa6ae296ef176d96dbf3e"
                }
            ],
            "sha": "8fbde7eb3ca7f3880eb183ab498ea02aa405738f",
            "url": "https://api.github.com/repos/cython/cython/commits/8fbde7eb3ca7f3880eb183ab498ea02aa405738f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/66e65fa3fa4cc7d97ec220637a5d05d239eb7d8f/comments",
            "commit": {
                "author": {
                    "date": "2021-05-02T07:05:18Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-02T07:05:18Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Mark specific return types to make Cython aware of them, now that they have helpful inline properties.",
                "tree": {
                    "sha": "61700f65745079d45c19e10b6cf6349a485d5c65",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/61700f65745079d45c19e10b6cf6349a485d5c65"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/66e65fa3fa4cc7d97ec220637a5d05d239eb7d8f",
                "verification": {
                    "payload": "tree 61700f65745079d45c19e10b6cf6349a485d5c65\nparent 8fbde7eb3ca7f3880eb183ab498ea02aa405738f\nauthor scoder <stefan_ml@behnel.de> 1619939118 +0200\ncommitter GitHub <noreply@github.com> 1619939118 +0200\n\nMark specific return types to make Cython aware of them, now that they have helpful inline properties.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgjk8uCRBK7hj4Ov3rIwAAUokIAFymB3OOXWivnSN2tUq1UHpp\n9myjIsARr/EiabJ7jvEeca9mgsbNUN2Nglpio8AY5Bpb8N4Z5LHRVKwSSI20MVBS\nVKLf4RRTfTZIwNP6gVC8kjswUg/eenhAW8+qV/KvU5pG+CHhsMlQcM4MQdATaDZQ\ncBXnfO7fB8Wx9lmjvNkbGEfkoAHL4ZmoM5dJn+/HSb1tZzoyQ4MRDuP2E5p6v66F\nAqtmI7r308+yMK8PlPDUuvwMS24LwWdxGhHR/g/fRw/Lx27ebv5pjC5wH6u7znB4\nrSDeOF+ocBK/cahlCSj3KehtMoefz9kWWKp/Dxwn29DqzKHZW9VinIQTSrVNTrg=\n=K5UU\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/66e65fa3fa4cc7d97ec220637a5d05d239eb7d8f",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjY2ZTY1ZmEzZmE0Y2M3ZDk3ZWMyMjA2MzdhNWQwNWQyMzllYjdkOGY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8fbde7eb3ca7f3880eb183ab498ea02aa405738f",
                    "sha": "8fbde7eb3ca7f3880eb183ab498ea02aa405738f",
                    "url": "https://api.github.com/repos/cython/cython/commits/8fbde7eb3ca7f3880eb183ab498ea02aa405738f"
                }
            ],
            "sha": "66e65fa3fa4cc7d97ec220637a5d05d239eb7d8f",
            "url": "https://api.github.com/repos/cython/cython/commits/66e65fa3fa4cc7d97ec220637a5d05d239eb7d8f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/df7c85ed8e4abc16765857395439628ae0959118/comments",
            "commit": {
                "author": {
                    "date": "2021-05-02T07:08:16Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-02T07:08:16Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Remove casts that should now be unnecessary after typing the function return values.",
                "tree": {
                    "sha": "8fd07371680290979109afa67315d44367f9599f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8fd07371680290979109afa67315d44367f9599f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/df7c85ed8e4abc16765857395439628ae0959118",
                "verification": {
                    "payload": "tree 8fd07371680290979109afa67315d44367f9599f\nparent 66e65fa3fa4cc7d97ec220637a5d05d239eb7d8f\nauthor scoder <stefan_ml@behnel.de> 1619939296 +0200\ncommitter GitHub <noreply@github.com> 1619939296 +0200\n\nRemove casts that should now be unnecessary after typing the function return values.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgjk/hCRBK7hj4Ov3rIwAAR3YIAFDEh3/RAWaru97eIv6bGHtx\nUTm/I+v+gtVL12EvH7xm2mcXpgRdxRLwSH7cOK8FdW1c1cX/ursXNPGrnjFcu3YP\nTIE+0u0wvU6yzCdYl4RqdudaCQgw5aZtOutpeK/eKTpfgvNdnAGJA9EoY5eJJmBB\nfkEHZZyJVvicimlYjhJulMCxUqMwAfPf45mJtf3YIZj7Tj8YXlgoFJhDviqRWDad\nOjbuZoU3AD4YSvjw1oWLgCdkCRyFgTzdc72nvXntY2bMKxeCIdm1c/wL+FK9DHzE\n/yhAIo369qQZHHurklVigr6S7wR2AfvEWMPMk1qVZY0v+rKwPgiyRdN3wJAZyaM=\n=pxjZ\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/df7c85ed8e4abc16765857395439628ae0959118",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOmRmN2M4NWVkOGU0YWJjMTY3NjU4NTczOTU0Mzk2MjhhZTA5NTkxMTg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/66e65fa3fa4cc7d97ec220637a5d05d239eb7d8f",
                    "sha": "66e65fa3fa4cc7d97ec220637a5d05d239eb7d8f",
                    "url": "https://api.github.com/repos/cython/cython/commits/66e65fa3fa4cc7d97ec220637a5d05d239eb7d8f"
                }
            ],
            "sha": "df7c85ed8e4abc16765857395439628ae0959118",
            "url": "https://api.github.com/repos/cython/cython/commits/df7c85ed8e4abc16765857395439628ae0959118"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2a2bf8b5fb2f008a8c6a836390b9f295023217a1/comments",
            "commit": {
                "author": {
                    "date": "2021-05-02T11:14:54Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-02T11:14:54Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "message": "Fix objects accidentally created with different timestamps",
                "tree": {
                    "sha": "a3b179e9008021e1063e7c9cbb4971e065f0131e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a3b179e9008021e1063e7c9cbb4971e065f0131e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2a2bf8b5fb2f008a8c6a836390b9f295023217a1",
                "verification": {
                    "payload": "tree a3b179e9008021e1063e7c9cbb4971e065f0131e\nparent df7c85ed8e4abc16765857395439628ae0959118\nauthor Bluenix <bluenixdev@gmail.com> 1619954094 +0200\ncommitter Bluenix <bluenixdev@gmail.com> 1619954094 +0200\n\nFix objects accidentally created with different timestamps\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEH7ydgueyqPMDBcwrHB7Qfm/IqkgFAmCOibUACgkQHB7Qfm/I\nqkigAg/+MaWxi/u31tJ4dkUgvasBxO0WSy5NmfzLxZsqk8NvW48hq49gdHg+K+jA\ns9xT2a2GxTPiIiP/awd77F+qUgxbbdIn7PZZgN50hOWbbuBcRw35aL1TMcLgNLJr\n1wkCv/praTbDjwwtixickJF6DSHWhBVopWROdxB6c8L11MFaXvm5Yuh7h82Ge1J1\njZAWbm0whFo3jR28Q8yjxH4YcrV9TIsXW+bQXgpXsow7MtpRfZAKPZTj6Dsgc9La\n4O79iGojWlevZAyY9MbNSPCfm+q3MenrQsqyIVhVefxmUTAPeqHe36U/vo8qmXC8\nRODrq1JphbYCPLxhtbXUald4ntzARLyDIVGzWQtopm7RydMPKjmE8C86UvH+9Erz\npg5jCnlR1suWAflUObQpJgqvkGvUte5By8FteMIjwxZ0Q1oXNr7ll+oBmNUcLAM0\naTSZfXxqCwxlBP9klzLKGxld+eOTxmR8niUDb/3M5slYpqfvvC4nHryK1NaJrOvK\nIAXZALg4lq9wULpc6PRpbHTOJuS9+DN/jWLaKxMhSrQSKvpr23pSF8FvgVF6xnFN\nTlDZh2Dx08bYZVzkIlUuoikRdpmCnJn/glQ7hv2DTRUGYZQfAV+cvhDCUxi0U83U\noh7zZ7ZO5URjE9mVXwY2LnxqyJ/MEq9Z3TvusumY5sYWvWaUZcY=\n=mWqy\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "html_url": "https://github.com/cython/cython/commit/2a2bf8b5fb2f008a8c6a836390b9f295023217a1",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjJhMmJmOGI1ZmIyZjAwOGE4YzZhODM2MzkwYjlmMjk1MDIzMjE3YTE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/df7c85ed8e4abc16765857395439628ae0959118",
                    "sha": "df7c85ed8e4abc16765857395439628ae0959118",
                    "url": "https://api.github.com/repos/cython/cython/commits/df7c85ed8e4abc16765857395439628ae0959118"
                }
            ],
            "sha": "2a2bf8b5fb2f008a8c6a836390b9f295023217a1",
            "url": "https://api.github.com/repos/cython/cython/commits/2a2bf8b5fb2f008a8c6a836390b9f295023217a1"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/3acc124d526d8379ef963e68ae4ae228e46d006f/comments",
            "commit": {
                "author": {
                    "date": "2021-05-02T11:17:29Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-02T11:17:29Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "message": "Stop relying on CPython repr\n\nAlso fixes an incorrect comment",
                "tree": {
                    "sha": "8ce7faa29c953556154dede89efd19c8fc4f9e5a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8ce7faa29c953556154dede89efd19c8fc4f9e5a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/3acc124d526d8379ef963e68ae4ae228e46d006f",
                "verification": {
                    "payload": "tree 8ce7faa29c953556154dede89efd19c8fc4f9e5a\nparent 2a2bf8b5fb2f008a8c6a836390b9f295023217a1\nauthor Bluenix <bluenixdev@gmail.com> 1619954249 +0200\ncommitter Bluenix <bluenixdev@gmail.com> 1619954249 +0200\n\nStop relying on CPython repr\n\nAlso fixes an incorrect comment\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEH7ydgueyqPMDBcwrHB7Qfm/IqkgFAmCOikkACgkQHB7Qfm/I\nqkjmpQ/9HVISkX5C7ufix7PL4dQFm4CeYP8VMKTxstTcMcofAiysa+f2h4Wmt0po\nqDdgj24rSLllFIv6Es/KRG1h7yPzkNWnmlvm2zlfpozZddDecMqUAXFmbJ+/v7Or\nvMAZ3mEcMPn0sf1lZ26G13136EDkyvfiDJKk8T6+a9jnSgIbckfOf4Lh19z9fexh\nkZzoBBuO6OZDSDMdLtaXJgozpH2LkqjjEJhVd3XlUwrrMlIe8e5lX1lC+J+pag/x\nRrP/TFNIEWVt3ro+IqzsnT01IzoeBe464QW6rJUoF5Xb7S7s6w6mGVcOH3XhFICv\nMtUvNiFvhRC2yrUmlA7N/RYzm9djGYYjcGDW6MHlu+SOy4zVFFaTeIIqcu/8Jzea\nZkcuAj5bBf9Ky4G1WxZ3d4cfzJ3uFKFj18azG5SZUabJ0AzGFgK3UpwuaZDbrfKo\nRJLtbbf0UrgD7eXsdiFOaBgLgowXIX0QOeMF9FQXY4MvWlCXZwlEK741gmljj10m\n96fLeHQs2sRNzwD+mkJYQRa53mOhFU6HXsb803prb7U4OFt76v1ah9QoGPRt8qEz\nJBbsQ+eZODUrwWpcWMDBme0qy3WcyWL5HCafc71LouNOyJ5G+O9fT7zF50/0B6z6\nOfU9QlB5IDhXtRciOPRgFT989YOEy4nFMK5zUtrIHtNXQNE0xYw=\n=kGDJ\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "html_url": "https://github.com/cython/cython/commit/3acc124d526d8379ef963e68ae4ae228e46d006f",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjNhY2MxMjRkNTI2ZDgzNzllZjk2M2U2OGFlNGFlMjI4ZTQ2ZDAwNmY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2a2bf8b5fb2f008a8c6a836390b9f295023217a1",
                    "sha": "2a2bf8b5fb2f008a8c6a836390b9f295023217a1",
                    "url": "https://api.github.com/repos/cython/cython/commits/2a2bf8b5fb2f008a8c6a836390b9f295023217a1"
                }
            ],
            "sha": "3acc124d526d8379ef963e68ae4ae228e46d006f",
            "url": "https://api.github.com/repos/cython/cython/commits/3acc124d526d8379ef963e68ae4ae228e46d006f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/91efa19491f66f9c695d616d6c5d2ecff6d0522f/comments",
            "commit": {
                "author": {
                    "date": "2021-05-02T13:13:20Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-02T13:13:20Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Simplify some test code.",
                "tree": {
                    "sha": "e6a23159714245c707ea9eeb4aa0aee95ee17627",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e6a23159714245c707ea9eeb4aa0aee95ee17627"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/91efa19491f66f9c695d616d6c5d2ecff6d0522f",
                "verification": {
                    "payload": "tree e6a23159714245c707ea9eeb4aa0aee95ee17627\nparent 3acc124d526d8379ef963e68ae4ae228e46d006f\nauthor scoder <stefan_ml@behnel.de> 1619961200 +0200\ncommitter GitHub <noreply@github.com> 1619961200 +0200\n\nSimplify some test code.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgjqVwCRBK7hj4Ov3rIwAABbcIAJBGt8HaHH8uwcTNJY07BqSr\nrAc70bQRYufKbErCa1oOG2/DX0DxAcw0zQEn7wGKyiEj6a4kL9ZB8sniT2MyKJg8\nHTUY5wHmlundmdK5dZ83GGVY/h/vkTOB4mHh0TQi0x6+A2rSw5UYiSUqs88bT5KK\ncQNBE0sRu0XWaJAIvUWQw3YlanxMiA8jQgtcmsSYUtMH35boXgPmRpQnpFGvcvYm\n1JfNZa87X7Hj7DyZAZF3PH4hB67xnHyG7+i7KQor8G69h0u3GIfcdTBFoIp0/9dV\nO1s63lV7Tdj6pDgLVnmattZ3iEidSEjjCEiPuqQvYx2R0QG7XacrWSqXJUFxSic=\n=6qIF\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/91efa19491f66f9c695d616d6c5d2ecff6d0522f",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjkxZWZhMTk0OTFmNjZmOWM2OTVkNjE2ZDZjNWQyZWNmZjZkMDUyMmY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3acc124d526d8379ef963e68ae4ae228e46d006f",
                    "sha": "3acc124d526d8379ef963e68ae4ae228e46d006f",
                    "url": "https://api.github.com/repos/cython/cython/commits/3acc124d526d8379ef963e68ae4ae228e46d006f"
                }
            ],
            "sha": "91efa19491f66f9c695d616d6c5d2ecff6d0522f",
            "url": "https://api.github.com/repos/cython/cython/commits/91efa19491f66f9c695d616d6c5d2ecff6d0522f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d0cb61b646282be33743fc00b5c2f528b63c606b/comments",
            "commit": {
                "author": {
                    "date": "2021-05-02T14:02:36Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-02T14:02:36Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Fix C compiler warnings, extend tests.",
                "tree": {
                    "sha": "633a9b403547d6dc114be2297c2d658f3365476b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/633a9b403547d6dc114be2297c2d658f3365476b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d0cb61b646282be33743fc00b5c2f528b63c606b",
                "verification": {
                    "payload": "tree 633a9b403547d6dc114be2297c2d658f3365476b\nparent 91efa19491f66f9c695d616d6c5d2ecff6d0522f\nauthor scoder <stefan_ml@behnel.de> 1619964156 +0200\ncommitter GitHub <noreply@github.com> 1619964156 +0200\n\nFix C compiler warnings, extend tests.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgjrD8CRBK7hj4Ov3rIwAAtC4IACQK1CZWf7W9VWOR+LEdyFTC\nPTKFHvAUSD5FsKHU5ip8QtCWwRUHUetKbMrkhILbwO8KASsLWM5Eozg70AfITcvH\n/ybFAyoxZaQS5B38a35AYYJNpzJDWTYlVNbqQHVNgONU8jJGSyiS07N5yGlEg6f9\nO8+60PEE5cvsDhLzaaAGNkB6KOzJxOOEbayhEFCQLwvNnIvdgGQ5eIq6PgSettap\n7OjiOgNj0gXJzKjDfvJ/GpWju0DWHZXUXnkvIYqbVQ6qYmHQxcrwaRoPB7+S1AeB\niaFPZZglv6C5O48/dQXI8ky6OY45s/Y7QxGZf8yeB4+SZ5xMCd1eB088UERmuVQ=\n=GtZ4\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/d0cb61b646282be33743fc00b5c2f528b63c606b",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOmQwY2I2MWI2NDYyODJiZTMzNzQzZmMwMGI1YzJmNTI4YjYzYzYwNmI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/91efa19491f66f9c695d616d6c5d2ecff6d0522f",
                    "sha": "91efa19491f66f9c695d616d6c5d2ecff6d0522f",
                    "url": "https://api.github.com/repos/cython/cython/commits/91efa19491f66f9c695d616d6c5d2ecff6d0522f"
                }
            ],
            "sha": "d0cb61b646282be33743fc00b5c2f528b63c606b",
            "url": "https://api.github.com/repos/cython/cython/commits/d0cb61b646282be33743fc00b5c2f528b63c606b"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/da0f98c477ff5c1033669892b678427192969c1a/comments",
            "commit": {
                "author": {
                    "date": "2021-05-02T14:11:58Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-02T14:11:58Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Make DB-API constructors less special.",
                "tree": {
                    "sha": "e921a906274758e9390f4cf825267291b048806d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e921a906274758e9390f4cf825267291b048806d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/da0f98c477ff5c1033669892b678427192969c1a",
                "verification": {
                    "payload": "tree e921a906274758e9390f4cf825267291b048806d\nparent d0cb61b646282be33743fc00b5c2f528b63c606b\nauthor scoder <stefan_ml@behnel.de> 1619964718 +0200\ncommitter GitHub <noreply@github.com> 1619964718 +0200\n\nMake DB-API constructors less special.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgjrMuCRBK7hj4Ov3rIwAA1NMIAK1Sy0/9d7TaslbQLd4qdqRu\nu8BKLmkk1ZrcwXCAtGYpeVeTMisDmO5ILgQ1I561rLzv+snGJHELmUQB7Wz3u2+9\noiWxkhlu7Ennz/3SOV52x9In6SvbBgEwBsRdmn9gLLNkaHgev1kyjSvm2Obne/ct\nOT4JTDX0i2SMpq/h4uhiwT8p0XUeeZ3O+VU23N29Ex8CC/8i4GCU/rv6KqvVJUGl\n1+Rkm2SaoKTiKbbR94oeavR/Ft+BjJk/eWHHhCby3JXYc0EtJ0wJ7Jc4HoVVp3F5\nq5CiE9P9mBulQ57W8q5koxaipG1xUa2NbEPsYbqZb4oZxWh4200M9c6I5kDssBY=\n=7Zeb\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/da0f98c477ff5c1033669892b678427192969c1a",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOmRhMGY5OGM0NzdmZjVjMTAzMzY2OTg5MmI2Nzg0MjcxOTI5NjljMWE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d0cb61b646282be33743fc00b5c2f528b63c606b",
                    "sha": "d0cb61b646282be33743fc00b5c2f528b63c606b",
                    "url": "https://api.github.com/repos/cython/cython/commits/d0cb61b646282be33743fc00b5c2f528b63c606b"
                }
            ],
            "sha": "da0f98c477ff5c1033669892b678427192969c1a",
            "url": "https://api.github.com/repos/cython/cython/commits/da0f98c477ff5c1033669892b678427192969c1a"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8255384e796f662db8a6916d4b17df76eabea782/comments",
            "commit": {
                "author": {
                    "date": "2021-05-02T14:39:44Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-02T14:39:44Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Fix wrong macro call for time fold\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "3402c3eb2f0edc21a64c1a7101415c4167441b7c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3402c3eb2f0edc21a64c1a7101415c4167441b7c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8255384e796f662db8a6916d4b17df76eabea782",
                "verification": {
                    "payload": "tree 3402c3eb2f0edc21a64c1a7101415c4167441b7c\nparent da0f98c477ff5c1033669892b678427192969c1a\nauthor Bluenix <bluenixdev@gmail.com> 1619966384 +0200\ncommitter GitHub <noreply@github.com> 1619966384 +0200\n\nFix wrong macro call for time fold\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgjrmwCRBK7hj4Ov3rIwAAWAkIAGmrCxy7NreLayaessLeE4mz\ntOgQNicNE8vG4izNB3z9S9yCvXTa87DOZWS2TU57ThhC6MjkD9oS9lxkkX8zccze\ngk4bKwj8hzN45HyeR8qnzZLkdNRXeDkT5U6blMtsAHBwyVSo9ObdRHXfFo3X/x1t\n/+WAGahr/65IlfjaK04B5+y9eHYjKooFR2JqSv1kzy3uvT1LGIuw1F2LJYqz+xJS\n05YyhF0Ws5/K2zQnMHFnpj/quzMEVulpbYBXJbrrOjHHTRXUK4nHJjKjVQmbSb6/\nmiV9lvKVEFmV3GgZS4u1Sdsywxya65OKIdBmb2PwXNaji9chMzv4V/nSKmZVtds=\n=khU5\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/8255384e796f662db8a6916d4b17df76eabea782",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjgyNTUzODRlNzk2ZjY2MmRiOGE2OTE2ZDRiMTdkZjc2ZWFiZWE3ODI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/da0f98c477ff5c1033669892b678427192969c1a",
                    "sha": "da0f98c477ff5c1033669892b678427192969c1a",
                    "url": "https://api.github.com/repos/cython/cython/commits/da0f98c477ff5c1033669892b678427192969c1a"
                }
            ],
            "sha": "8255384e796f662db8a6916d4b17df76eabea782",
            "url": "https://api.github.com/repos/cython/cython/commits/8255384e796f662db8a6916d4b17df76eabea782"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/bd36928f91bb80987572e6ff7241136b4df24432/comments",
            "commit": {
                "author": {
                    "date": "2021-05-02T14:42:53Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-02T14:42:53Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Fix test code.",
                "tree": {
                    "sha": "3dd12cb176c926f49c64aa34b494b2c16a9f83dc",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3dd12cb176c926f49c64aa34b494b2c16a9f83dc"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/bd36928f91bb80987572e6ff7241136b4df24432",
                "verification": {
                    "payload": "tree 3dd12cb176c926f49c64aa34b494b2c16a9f83dc\nparent 8255384e796f662db8a6916d4b17df76eabea782\nauthor scoder <stefan_ml@behnel.de> 1619966573 +0200\ncommitter GitHub <noreply@github.com> 1619966573 +0200\n\nFix test code.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgjrptCRBK7hj4Ov3rIwAAlyEIACpf4ZW19U/Mr2EoTo/hTEOu\niKwdt97vHj0yelVBWnoPUYn30vgbJnOi95Ur47T5sexNTmTSdYHZcyOSbV8MHm04\nNLuKg72T4WJIspOrmGnps7SLpXKfrmj8RQsMAzXXQF2rHx74cc6nRv0vbYuIlzZt\nq5Iz1OmvpyUWCdJGJRfTn/B6pouMg7OqOlXnn8m902TiZ4xsEHiyE4/zZp/4LNN3\nXjhQH4iFGFebEVNe2OorQBk6kxGC74nIRRTumgUQRBUQFomlshSO4UAj5X0rwoIN\nPTLLJrX4AHTomPDWldN2ybnQtJ3KWGxzAY4ImJm/W2d0crJBKUGzuULKwIH0XYc=\n=CSY2\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/bd36928f91bb80987572e6ff7241136b4df24432",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOmJkMzY5MjhmOTFiYjgwOTg3NTcyZTZmZjcyNDExMzZiNGRmMjQ0MzI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8255384e796f662db8a6916d4b17df76eabea782",
                    "sha": "8255384e796f662db8a6916d4b17df76eabea782",
                    "url": "https://api.github.com/repos/cython/cython/commits/8255384e796f662db8a6916d4b17df76eabea782"
                }
            ],
            "sha": "bd36928f91bb80987572e6ff7241136b4df24432",
            "url": "https://api.github.com/repos/cython/cython/commits/bd36928f91bb80987572e6ff7241136b4df24432"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/fbb9da6c7cb12811ad409498b1ecd2f04ef81966/comments",
            "commit": {
                "author": {
                    "date": "2021-05-02T15:42:09Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-02T15:42:09Z",
                    "email": "bluenixdev@gmail.com",
                    "name": "Bluenix"
                },
                "message": "Remove accidental unused variable in test",
                "tree": {
                    "sha": "ccc48f5a5bc7089043ee8cb0cdb35ba81452210a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ccc48f5a5bc7089043ee8cb0cdb35ba81452210a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/fbb9da6c7cb12811ad409498b1ecd2f04ef81966",
                "verification": {
                    "payload": "tree ccc48f5a5bc7089043ee8cb0cdb35ba81452210a\nparent bd36928f91bb80987572e6ff7241136b4df24432\nauthor Bluenix <bluenixdev@gmail.com> 1619970129 +0200\ncommitter Bluenix <bluenixdev@gmail.com> 1619970129 +0200\n\nRemove accidental unused variable in test\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEH7ydgueyqPMDBcwrHB7Qfm/IqkgFAmCOyFEACgkQHB7Qfm/I\nqkiZqQ//W37I+p5WSfRw9nbEcFhksNy3UlAmSH/SDbM5O8yVxU/mQ7NfKmOY8dMW\nKiddCHdECnsHk3DK0eklptiYRuIrYmbY4DagP/g/1242nelvgHp0kSYp72hhbS3I\nV3iJf+3MpTmGpxJoYyOIAchkTnNsr/IVXmi3ahJ9A5z2kFVhx48Lk7pHTALzlPGI\ne3ROEeA91OisOY2ZGuYZxjSpi6AqDBsPX4pzHk9HM97llonit7fzyuTKHVZvG47O\nwayn2pRd/eVT8AHcIcXAWnZhGzQfi0M9P5kCxEb+ljZr29vdIqTCG8NIDwhMxj6k\nr5qz/bG5yhkcCqrSJpM61C5+YnoHh+z/MAsfH96dFqqElJ0nDc+aq0Ta87wpdcOw\naX2if3jjQKvRAuFMgQh6zuszjlUH4yjZPvY673i9JK/nlEeBwmnKw09LYx2BdnfQ\noFjDiUKSMcMk6idamlcVBZqv0pyd82+47hQhcARvupKJsvAmrZ73OJnR21STpgGQ\neeyJc6uuYgpasyGJho+cj5DKjLpSXNrLuppVDz5n43qsl8RibC3OCWB/6FRof9H+\n2ML/saUEmvOKwRIrcQoShk5IbbN2JmJDpOApywmV0+IVZrXQZDEPAOZFSjg6+ndJ\nJu1EKHfbq0SIOZjsYlERbLTP377EygHWU0XTYVxYW7AUmWARGjw=\n=4RWf\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "html_url": "https://github.com/cython/cython/commit/fbb9da6c7cb12811ad409498b1ecd2f04ef81966",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOmZiYjlkYTZjN2NiMTI4MTFhZDQwOTQ5OGIxZWNkMmYwNGVmODE5NjY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/bd36928f91bb80987572e6ff7241136b4df24432",
                    "sha": "bd36928f91bb80987572e6ff7241136b4df24432",
                    "url": "https://api.github.com/repos/cython/cython/commits/bd36928f91bb80987572e6ff7241136b4df24432"
                }
            ],
            "sha": "fbb9da6c7cb12811ad409498b1ecd2f04ef81966",
            "url": "https://api.github.com/repos/cython/cython/commits/fbb9da6c7cb12811ad409498b1ecd2f04ef81966"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/883d048683c4ae7fc1da90c80f86694c6ea2428f/comments",
            "commit": {
                "author": {
                    "date": "2021-05-02T16:09:35Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-02T16:09:35Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Looks like my last type change here was incorrect.",
                "tree": {
                    "sha": "da6597d14e63bc3339933333225fc08d09cd1653",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/da6597d14e63bc3339933333225fc08d09cd1653"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/883d048683c4ae7fc1da90c80f86694c6ea2428f",
                "verification": {
                    "payload": "tree da6597d14e63bc3339933333225fc08d09cd1653\nparent fbb9da6c7cb12811ad409498b1ecd2f04ef81966\nauthor scoder <stefan_ml@behnel.de> 1619971775 +0200\ncommitter GitHub <noreply@github.com> 1619971775 +0200\n\nLooks like my last type change here was incorrect.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgjs6/CRBK7hj4Ov3rIwAAr2EIAAfYsoIhhJ9oYkBatvvavD1K\nW56ONFCRlK/a7sZGea4wFT7p+xIu+s3NgiZURvuL97Ls2q0h8cJtYEYLl0hnhCtd\n55hKZEgPDKTEyQwXdtUvtogYPX544OM57Yat9UVuz1XqBK3RKdYrURIhmRnK26Pf\n/Cfv8EU9iG1Ks2haE3Ul6JMcz7rgkoSzMhyatL6jGXXkgIHjW5u3MnSTUx2Qcwg3\nlOmHKxi7+VJs3VA/tU/lsUFMV5WhNNmoe1LZaQpufVUPusX/SX56wJMQ44a4fybJ\nxMy97m236BkrPU+Ep0dgGA25VXF6dopX9SFrHy1hCYxqfgdLH9LtX9RdmXRvdu4=\n=8m6N\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/883d048683c4ae7fc1da90c80f86694c6ea2428f",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjg4M2QwNDg2ODNjNGFlN2ZjMWRhOTBjODBmODY2OTRjNmVhMjQyOGY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/fbb9da6c7cb12811ad409498b1ecd2f04ef81966",
                    "sha": "fbb9da6c7cb12811ad409498b1ecd2f04ef81966",
                    "url": "https://api.github.com/repos/cython/cython/commits/fbb9da6c7cb12811ad409498b1ecd2f04ef81966"
                }
            ],
            "sha": "883d048683c4ae7fc1da90c80f86694c6ea2428f",
            "url": "https://api.github.com/repos/cython/cython/commits/883d048683c4ae7fc1da90c80f86694c6ea2428f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/0c413b01b60deee4d15768dcce28f2c238a58f91/comments",
            "commit": {
                "author": {
                    "date": "2021-05-02T16:13:22Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-02T16:13:22Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Try if casting resolves a compile failure.",
                "tree": {
                    "sha": "aff745cf7263947f49387115c9acaa2ffee7f2c6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/aff745cf7263947f49387115c9acaa2ffee7f2c6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/0c413b01b60deee4d15768dcce28f2c238a58f91",
                "verification": {
                    "payload": "tree aff745cf7263947f49387115c9acaa2ffee7f2c6\nparent 883d048683c4ae7fc1da90c80f86694c6ea2428f\nauthor scoder <stefan_ml@behnel.de> 1619972002 +0200\ncommitter GitHub <noreply@github.com> 1619972002 +0200\n\nTry if casting resolves a compile failure.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgjs+iCRBK7hj4Ov3rIwAARd8IAAavn94pEbGQ0ntffWZlOgzl\nKks2RCnZkGWPQUq4efjDm6Fg9Pg+m9unWdpWMy4eG3s00iNMT5cN/nSq+9yCctgH\n5TIoBiJwcDVj4/IEftHBOH//qd7Ewifom9SWv6y7jTbqcCugW8OqtnMo6zUW0Z9J\nbBL8yEH5WHDhKHwmOy4mForYxF3qnVRu1lyst1mV4FWIyE1UNOjykHKpbJwcT0Vz\nqrcLGeW3n2G41gLgjMipmOJpmUenuuxCFaLFidBEmAalIXbNRffYRngSe2RvDCSV\njljsLv6ofR0ooANWJLEB2DOYFyADv/JO81SnfAM/euuyH4qI1S6erpxKoOmZrwQ=\n=x90w\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/0c413b01b60deee4d15768dcce28f2c238a58f91",
            "node_id": "MDY6Q29tbWl0MzU5MTk5NzkyOjBjNDEzYjAxYjYwZGVlZTRkMTU3NjhkY2NlMjhmMmMyMzhhNThmOTE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/883d048683c4ae7fc1da90c80f86694c6ea2428f",
                    "sha": "883d048683c4ae7fc1da90c80f86694c6ea2428f",
                    "url": "https://api.github.com/repos/cython/cython/commits/883d048683c4ae7fc1da90c80f86694c6ea2428f"
                }
            ],
            "sha": "0c413b01b60deee4d15768dcce28f2c238a58f91",
            "url": "https://api.github.com/repos/cython/cython/commits/0c413b01b60deee4d15768dcce28f2c238a58f91"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/4128/commits",
    "created_at": "2021-04-18T17:59:59Z",
    "diff_url": "https://github.com/cython/cython/pull/4128.diff",
    "draft": false,
    "head": {
        "label": "Bluenix2:fill-in-datetime",
        "ref": "fill-in-datetime",
        "repo": {
            "archive_url": "https://api.github.com/repos/Bluenix2/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/Bluenix2/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/Bluenix2/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/Bluenix2/cython/branches{/branch}",
            "clone_url": "https://github.com/Bluenix2/cython.git",
            "collaborators_url": "https://api.github.com/repos/Bluenix2/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/Bluenix2/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/Bluenix2/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/Bluenix2/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/Bluenix2/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/Bluenix2/cython/contributors",
            "created_at": "2021-04-18T16:41:48Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/Bluenix2/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/Bluenix2/cython/downloads",
            "events_url": "https://api.github.com/repos/Bluenix2/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/Bluenix2/cython/forks",
            "full_name": "Bluenix2/cython",
            "git_commits_url": "https://api.github.com/repos/Bluenix2/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/Bluenix2/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/Bluenix2/cython/git/tags{/sha}",
            "git_url": "git://github.com/Bluenix2/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/Bluenix2/cython/hooks",
            "html_url": "https://github.com/Bluenix2/cython",
            "id": 359199792,
            "issue_comment_url": "https://api.github.com/repos/Bluenix2/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/Bluenix2/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/Bluenix2/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/Bluenix2/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/Bluenix2/cython/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/Bluenix2/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/Bluenix2/cython/merges",
            "milestones_url": "https://api.github.com/repos/Bluenix2/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNTkxOTk3OTI=",
            "notifications_url": "https://api.github.com/repos/Bluenix2/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
                "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bluenix2/followers",
                "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bluenix2",
                "id": 38372706,
                "login": "Bluenix2",
                "node_id": "MDQ6VXNlcjM4MzcyNzA2",
                "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
                "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
                "repos_url": "https://api.github.com/users/Bluenix2/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bluenix2"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/Bluenix2/cython/pulls{/number}",
            "pushed_at": "2021-05-02T16:58:22Z",
            "releases_url": "https://api.github.com/repos/Bluenix2/cython/releases{/id}",
            "size": 62066,
            "ssh_url": "git@github.com:Bluenix2/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/Bluenix2/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/Bluenix2/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/Bluenix2/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/Bluenix2/cython/subscription",
            "svn_url": "https://github.com/Bluenix2/cython",
            "tags_url": "https://api.github.com/repos/Bluenix2/cython/tags",
            "teams_url": "https://api.github.com/repos/Bluenix2/cython/teams",
            "trees_url": "https://api.github.com/repos/Bluenix2/cython/git/trees{/sha}",
            "updated_at": "2021-04-18T16:41:49Z",
            "url": "https://api.github.com/repos/Bluenix2/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "0c413b01b60deee4d15768dcce28f2c238a58f91",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
            "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
            "followers_url": "https://api.github.com/users/Bluenix2/followers",
            "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
            "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/Bluenix2",
            "id": 38372706,
            "login": "Bluenix2",
            "node_id": "MDQ6VXNlcjM4MzcyNzA2",
            "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
            "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
            "repos_url": "https://api.github.com/users/Bluenix2/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/Bluenix2"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/4128",
    "id": 617527074,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/4128",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "14559510a46605d0fe0d8098518e138b181dcd18",
    "merged_at": "2021-05-02T16:48:13Z",
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjE3NTI3MDc0",
    "number": 4128,
    "patch_url": "https://github.com/cython/cython/pull/4128.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/4128/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/0c413b01b60deee4d15768dcce28f2c238a58f91",
    "title": "Add missing datetime interfaces",
    "updated_at": "2021-05-02T16:58:58Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/4128",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38372706?v=4",
        "events_url": "https://api.github.com/users/Bluenix2/events{/privacy}",
        "followers_url": "https://api.github.com/users/Bluenix2/followers",
        "following_url": "https://api.github.com/users/Bluenix2/following{/other_user}",
        "gists_url": "https://api.github.com/users/Bluenix2/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Bluenix2",
        "id": 38372706,
        "login": "Bluenix2",
        "node_id": "MDQ6VXNlcjM4MzcyNzA2",
        "organizations_url": "https://api.github.com/users/Bluenix2/orgs",
        "received_events_url": "https://api.github.com/users/Bluenix2/received_events",
        "repos_url": "https://api.github.com/users/Bluenix2/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Bluenix2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Bluenix2/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Bluenix2"
    }
}