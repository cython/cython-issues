{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3939/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3939/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3939"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3939"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3939/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3939"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/5730a74418820400280cbbeee15627e9447df7e4"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1139,
            "forks_count": 1139,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 936,
            "open_issues_count": 936,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2021-05-03T05:40:56Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 62851,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 6042,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2021-05-03T05:40:59Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 6042,
            "watchers_count": 6042
        },
        "sha": "8609e0fa7d361f1392823ff6e1a618720cd62df3",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Fixes #3796",
    "closed_at": "2021-05-03T05:08:20Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r539526227"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/539526227"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "a) \"NOne\" -> None\r\nb) Maybe a clearer name (or at least a clearer comment) - `self_documenting_text`?",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2020-12-09T17:59:58Z",
            "diff_hunk": "@@ -3340,14 +3340,16 @@ class FormattedValueNode(ExprNode):\n     # {}-delimited portions of an f-string\n     #\n     # value           ExprNode                The expression itself\n-    # conversion_char str or None             Type conversion (!s, !r, !a, or none, or 'd' for integer conversion)\n+    # conversion_char str or None             Type conversion (!s, !r, !a, none, or 'd' for integer conversion)\n     # format_spec     JoinedStrNode or None   Format string passed to __format__\n+    # expr_text       str or NOne             If not None, the expression text",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r539526227",
            "id": 539526227,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUyNjIyNw==",
            "original_commit_id": "59823155abda9c3ac80ce959c3bfb53e316253f3",
            "original_line": 3345,
            "original_position": 7,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 548452589,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/539526227",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r539549892"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/539549892"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Will fix that `None` and fix the comment :+1: ",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2020-12-09T18:34:59Z",
            "diff_hunk": "@@ -3340,14 +3340,16 @@ class FormattedValueNode(ExprNode):\n     # {}-delimited portions of an f-string\n     #\n     # value           ExprNode                The expression itself\n-    # conversion_char str or None             Type conversion (!s, !r, !a, or none, or 'd' for integer conversion)\n+    # conversion_char str or None             Type conversion (!s, !r, !a, none, or 'd' for integer conversion)\n     # format_spec     JoinedStrNode or None   Format string passed to __format__\n+    # expr_text       str or NOne             If not None, the expression text",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r539549892",
            "id": 539549892,
            "in_reply_to_id": 539526227,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU0OTg5Mg==",
            "original_commit_id": "59823155abda9c3ac80ce959c3bfb53e316253f3",
            "original_line": 3345,
            "original_position": 7,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 548485642,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/539549892",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
                "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
                "followers_url": "https://api.github.com/users/davfsa/followers",
                "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
                "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/davfsa",
                "id": 29100934,
                "login": "davfsa",
                "node_id": "MDQ6VXNlcjI5MTAwOTM0",
                "organizations_url": "https://api.github.com/users/davfsa/orgs",
                "received_events_url": "https://api.github.com/users/davfsa/received_events",
                "repos_url": "https://api.github.com/users/davfsa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/davfsa"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r539567136"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/539567136"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I'm pretty sure this is leaking the result of `PyUnicode_FromStringAndSize`, and probably the result of `PyNumber_Add` too.\r\n\r\nI think this might have to be a new section in `Cython/Utility/Stringtools.c` similar to `PyObjectFormatAndDecref` etc. But this is the first time I've looked at the fstring implementation so I'm not complete confident about the best way to do it.",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2020-12-09T19:00:35Z",
            "diff_hunk": "@@ -3420,6 +3422,13 @@ def generate_result_code(self, code):\n             code.globalstate.use_utility_code(\n                 UtilityCode.load_cached(\"PyObjectFormatSimple\", \"StringTools.c\"))\n \n+        if self.expr_text:\n+            expr_text = self.expr_text + '='\n+            value_result = 'PyNumber_Add(PyUnicode_FromStringAndSize(\"%s\", %s), %s)' % (",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r539567136",
            "id": 539567136,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU2NzEzNg==",
            "original_commit_id": "58d0a7dcadad68aae33c0f0190ef3ec5ec0c74a0",
            "original_line": 3427,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 548512655,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/539567136",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r539574402"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/539574402"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "An alternative approach that might be worth a go is to generate a different set of nodes (probably at the `analyse_ expressions` stage). Something like:\r\n\r\n```\r\n# in analyse_expressions for FormattedValueNode:\r\nif self.expr_text:\r\n    return AddNode(self.pos, lhs=StringConstantNode(self.pos, value=self.expr_text+\"=\"),\r\n                                       rhs=<copy of self but without self.expr_text>).analyse_expressions(env)\r\n```\r\n\r\nThe advantage of doing something like that is that Cython's code generation should take care of most of the details. Note that the code above is a very vague outline...",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2020-12-09T19:11:57Z",
            "diff_hunk": "@@ -3420,6 +3422,13 @@ def generate_result_code(self, code):\n             code.globalstate.use_utility_code(\n                 UtilityCode.load_cached(\"PyObjectFormatSimple\", \"StringTools.c\"))\n \n+        if self.expr_text:\n+            expr_text = self.expr_text + '='\n+            value_result = 'PyNumber_Add(PyUnicode_FromStringAndSize(\"%s\", %s), %s)' % (",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r539574402",
            "id": 539574402,
            "in_reply_to_id": 539567136,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU3NDQwMg==",
            "original_commit_id": "58d0a7dcadad68aae33c0f0190ef3ec5ec0c74a0",
            "original_line": 3427,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 548523038,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/539574402",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r539614300"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/539614300"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Will have a try with that approach :+1: \r\n\r\nBtw, mind canceling all the old builds? They are taking for ever to complete:\r\nhttps://travis-ci.org/github/cython/cython/builds/748578596\r\nhttps://travis-ci.org/github/cython/cython/builds/748556005\r\n\r\nThanks again! ",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2020-12-09T20:14:02Z",
            "diff_hunk": "@@ -3420,6 +3422,13 @@ def generate_result_code(self, code):\n             code.globalstate.use_utility_code(\n                 UtilityCode.load_cached(\"PyObjectFormatSimple\", \"StringTools.c\"))\n \n+        if self.expr_text:\n+            expr_text = self.expr_text + '='\n+            value_result = 'PyNumber_Add(PyUnicode_FromStringAndSize(\"%s\", %s), %s)' % (",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r539614300",
            "id": 539614300,
            "in_reply_to_id": 539567136,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYxNDMwMA==",
            "original_commit_id": "58d0a7dcadad68aae33c0f0190ef3ec5ec0c74a0",
            "original_line": 3427,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 548569934,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/539614300",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
                "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
                "followers_url": "https://api.github.com/users/davfsa/followers",
                "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
                "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/davfsa",
                "id": 29100934,
                "login": "davfsa",
                "node_id": "MDQ6VXNlcjI5MTAwOTM0",
                "organizations_url": "https://api.github.com/users/davfsa/orgs",
                "received_events_url": "https://api.github.com/users/davfsa/received_events",
                "repos_url": "https://api.github.com/users/davfsa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/davfsa"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r539615969"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/539615969"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "> Btw, mind canceling all the old builds?\r\n\r\nI don't have the power I'm afraid.",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2020-12-09T20:16:37Z",
            "diff_hunk": "@@ -3420,6 +3422,13 @@ def generate_result_code(self, code):\n             code.globalstate.use_utility_code(\n                 UtilityCode.load_cached(\"PyObjectFormatSimple\", \"StringTools.c\"))\n \n+        if self.expr_text:\n+            expr_text = self.expr_text + '='\n+            value_result = 'PyNumber_Add(PyUnicode_FromStringAndSize(\"%s\", %s), %s)' % (",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r539615969",
            "id": 539615969,
            "in_reply_to_id": 539567136,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYxNTk2OQ==",
            "original_commit_id": "58d0a7dcadad68aae33c0f0190ef3ec5ec0c74a0",
            "original_line": 3427,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 548571863,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/539615969",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r539643550"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/539643550"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Oh, thought you did, nvm then :+1: ",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2020-12-09T20:59:55Z",
            "diff_hunk": "@@ -3420,6 +3422,13 @@ def generate_result_code(self, code):\n             code.globalstate.use_utility_code(\n                 UtilityCode.load_cached(\"PyObjectFormatSimple\", \"StringTools.c\"))\n \n+        if self.expr_text:\n+            expr_text = self.expr_text + '='\n+            value_result = 'PyNumber_Add(PyUnicode_FromStringAndSize(\"%s\", %s), %s)' % (",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r539643550",
            "id": 539643550,
            "in_reply_to_id": 539567136,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY0MzU1MA==",
            "original_commit_id": "58d0a7dcadad68aae33c0f0190ef3ec5ec0c74a0",
            "original_line": 3427,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 548604093,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/539643550",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
                "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
                "followers_url": "https://api.github.com/users/davfsa/followers",
                "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
                "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/davfsa",
                "id": 29100934,
                "login": "davfsa",
                "node_id": "MDQ6VXNlcjI5MTAwOTM0",
                "organizations_url": "https://api.github.com/users/davfsa/orgs",
                "received_events_url": "https://api.github.com/users/davfsa/received_events",
                "repos_url": "https://api.github.com/users/davfsa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/davfsa"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r540063822"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/540063822"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Implemented :smile: ",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2020-12-10T10:44:00Z",
            "diff_hunk": "@@ -3420,6 +3422,13 @@ def generate_result_code(self, code):\n             code.globalstate.use_utility_code(\n                 UtilityCode.load_cached(\"PyObjectFormatSimple\", \"StringTools.c\"))\n \n+        if self.expr_text:\n+            expr_text = self.expr_text + '='\n+            value_result = 'PyNumber_Add(PyUnicode_FromStringAndSize(\"%s\", %s), %s)' % (",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r540063822",
            "id": 540063822,
            "in_reply_to_id": 539567136,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA2MzgyMg==",
            "original_commit_id": "58d0a7dcadad68aae33c0f0190ef3ec5ec0c74a0",
            "original_line": 3427,
            "original_position": 24,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 549068531,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/540063822",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
                "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
                "followers_url": "https://api.github.com/users/davfsa/followers",
                "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
                "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/davfsa",
                "id": 29100934,
                "login": "davfsa",
                "node_id": "MDQ6VXNlcjI5MTAwOTM0",
                "organizations_url": "https://api.github.com/users/davfsa/orgs",
                "received_events_url": "https://api.github.com/users/davfsa/received_events",
                "repos_url": "https://api.github.com/users/davfsa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/davfsa"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r598274814"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/598274814"
                }
            },
            "author_association": "MEMBER",
            "body": "What does CPython do here? `' '` or `.isspace()`?",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-21T12:50:53Z",
            "diff_hunk": "@@ -1161,6 +1168,16 @@ def p_f_string_expr(s, unicode_value, pos, starting_index, is_raw):\n         error(_f_string_error_pos(pos, unicode_value, starting_index),\n               \"empty expression not allowed in f-string\")\n \n+    if terminal_char == '=':\n+        i += 1\n+        while unicode_value[i] == ' ':",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r598274814",
            "id": 598274814,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODI3NDgxNA==",
            "original_commit_id": "d43ba89728ec773ff01685cae722cc2f35a325ae",
            "original_line": 1173,
            "original_position": 37,
            "original_start_line": null,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 617016776,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/598274814",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r598275479"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/598275479"
                }
            },
            "author_association": "MEMBER",
            "body": "Why is this not done in the parser? It builds a sequence of strings – I don't see a need for an additional `AddNode`.",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-21T12:55:41Z",
            "diff_hunk": "@@ -3377,6 +3380,12 @@ def analyse_types(self, env):\n                 if self.value.type is unicode_type and not self.value.may_be_none():\n                     # value is definitely a unicode string and we don't format it any special\n                     return self.value\n+\n+        if self.expr_text:\n+            # strings are unicode in python, so we can safely do this\n+            string_node = StringNode(self.pos, value=StringEncoding.BytesLiteral(self.expr_text.encode('utf-8')))\n+            return AddNode(self.pos, operand1=string_node, operand2=self, operator='+', type=string_node.type, is_temp=True)",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r598275479",
            "id": 598275479,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODI3NTQ3OQ==",
            "original_commit_id": "d43ba89728ec773ff01685cae722cc2f35a325ae",
            "original_line": 3387,
            "original_position": 27,
            "original_start_line": 3384,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 617016776,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/598275479",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r598312165"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/598312165"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "They seem to do `.isspace()`. Will change\r\n\r\nhttps://github.com/python/cpython/pull/13123/files#diff-63309d32b22eaebd869b7ac0d2d4d02f95bd7ff5de2ba042d07c8e6962af8bbcR5206",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-21T17:33:44Z",
            "diff_hunk": "@@ -1161,6 +1168,16 @@ def p_f_string_expr(s, unicode_value, pos, starting_index, is_raw):\n         error(_f_string_error_pos(pos, unicode_value, starting_index),\n               \"empty expression not allowed in f-string\")\n \n+    if terminal_char == '=':\n+        i += 1\n+        while unicode_value[i] == ' ':",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r598312165",
            "id": 598312165,
            "in_reply_to_id": 598274814,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODMxMjE2NQ==",
            "original_commit_id": "d43ba89728ec773ff01685cae722cc2f35a325ae",
            "original_line": 1173,
            "original_position": 37,
            "original_start_line": null,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 617043900,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/598312165",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
                "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
                "followers_url": "https://api.github.com/users/davfsa/followers",
                "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
                "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/davfsa",
                "id": 29100934,
                "login": "davfsa",
                "node_id": "MDQ6VXNlcjI5MTAwOTM0",
                "organizations_url": "https://api.github.com/users/davfsa/orgs",
                "received_events_url": "https://api.github.com/users/davfsa/received_events",
                "repos_url": "https://api.github.com/users/davfsa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/davfsa"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r598312355"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/598312355"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This was suggested by @da-woods [here](https://github.com/cython/cython/pull/3939#discussion_r539574402) I'm kind of new to this and still trying to understand how all this works, so I don't know the best way to do this :sweat_smile: ",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-21T17:35:27Z",
            "diff_hunk": "@@ -3377,6 +3380,12 @@ def analyse_types(self, env):\n                 if self.value.type is unicode_type and not self.value.may_be_none():\n                     # value is definitely a unicode string and we don't format it any special\n                     return self.value\n+\n+        if self.expr_text:\n+            # strings are unicode in python, so we can safely do this\n+            string_node = StringNode(self.pos, value=StringEncoding.BytesLiteral(self.expr_text.encode('utf-8')))\n+            return AddNode(self.pos, operand1=string_node, operand2=self, operator='+', type=string_node.type, is_temp=True)",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r598312355",
            "id": 598312355,
            "in_reply_to_id": 598275479,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODMxMjM1NQ==",
            "original_commit_id": "d43ba89728ec773ff01685cae722cc2f35a325ae",
            "original_line": 3387,
            "original_position": 27,
            "original_start_line": 3384,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 617044036,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/598312355",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
                "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
                "followers_url": "https://api.github.com/users/davfsa/followers",
                "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
                "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/davfsa",
                "id": 29100934,
                "login": "davfsa",
                "node_id": "MDQ6VXNlcjI5MTAwOTM0",
                "organizations_url": "https://api.github.com/users/davfsa/orgs",
                "received_events_url": "https://api.github.com/users/davfsa/received_events",
                "repos_url": "https://api.github.com/users/davfsa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/davfsa"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r598314759"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/598314759"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I have been known to give bad advice.... Although I think this was still an improvement on the code that it replaced.\r\n\r\nBut yes, given that the `expr_text` is known as you parse it it's probably most efficient to handle it in the parser. Maybe if `p_f_string_expr` returned the index and a sequence instead (e.g. either `[expr_text, FormattedValueNode]` or `[FormattedValueNode]`)?",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-21T17:54:43Z",
            "diff_hunk": "@@ -3377,6 +3380,12 @@ def analyse_types(self, env):\n                 if self.value.type is unicode_type and not self.value.may_be_none():\n                     # value is definitely a unicode string and we don't format it any special\n                     return self.value\n+\n+        if self.expr_text:\n+            # strings are unicode in python, so we can safely do this\n+            string_node = StringNode(self.pos, value=StringEncoding.BytesLiteral(self.expr_text.encode('utf-8')))\n+            return AddNode(self.pos, operand1=string_node, operand2=self, operator='+', type=string_node.type, is_temp=True)",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r598314759",
            "id": 598314759,
            "in_reply_to_id": 598275479,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODMxNDc1OQ==",
            "original_commit_id": "d43ba89728ec773ff01685cae722cc2f35a325ae",
            "original_line": 3387,
            "original_position": 27,
            "original_start_line": 3384,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 617045628,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/598314759",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r598333033"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/598333033"
                }
            },
            "author_association": "MEMBER",
            "body": "> I have been known to give bad advice\r\n\r\nNew code means that we're solving a problem that we haven't solved before (at least not in this context). It's perfectly ok to try a couple of approaches until we understand the problem well enough to find a _good_ way to solve it. Every \"bad\" approach helps in making the \"obvious\" solution clearer, until we're able to see it (and then slap out foreheads, commit it, and start coding up our next \"bad\" approach for the next problem).",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-21T20:27:21Z",
            "diff_hunk": "@@ -3377,6 +3380,12 @@ def analyse_types(self, env):\n                 if self.value.type is unicode_type and not self.value.may_be_none():\n                     # value is definitely a unicode string and we don't format it any special\n                     return self.value\n+\n+        if self.expr_text:\n+            # strings are unicode in python, so we can safely do this\n+            string_node = StringNode(self.pos, value=StringEncoding.BytesLiteral(self.expr_text.encode('utf-8')))\n+            return AddNode(self.pos, operand1=string_node, operand2=self, operator='+', type=string_node.type, is_temp=True)",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r598333033",
            "id": 598333033,
            "in_reply_to_id": 598275479,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODMzMzAzMw==",
            "original_commit_id": "d43ba89728ec773ff01685cae722cc2f35a325ae",
            "original_line": 3387,
            "original_position": 27,
            "original_start_line": 3384,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 617058437,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/598333033",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r598338463"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/598338463"
                }
            },
            "author_association": "MEMBER",
            "body": "This looks like `i` might exceed the length of `unicode_value` here if the string ends with a `=` or spaces. This could trigger a compiler crash rather than an error report, either right in the `while` condition or further down when reading the new `terminal_char`.",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-21T21:10:36Z",
            "diff_hunk": "@@ -1161,6 +1168,16 @@ def p_f_string_expr(s, unicode_value, pos, starting_index, is_raw):\n         error(_f_string_error_pos(pos, unicode_value, starting_index),\n               \"empty expression not allowed in f-string\")\n \n+    if terminal_char == '=':\n+        i += 1\n+        while unicode_value[i].isspace():\n+            if i >= size:\n+                break  # error will be reported below\n+            i += 1",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r598338463",
            "id": 598338463,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODMzODQ2Mw==",
            "original_commit_id": "a34183f0921901499b8a8387656bf4dfbc8c7ed1",
            "original_line": 1177,
            "original_position": 40,
            "original_start_line": 1171,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 617062052,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/598338463",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r598339290"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/598339290"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> I have been known to give bad advice.\r\n\r\nI didnt mean to blame it on you :sweat_smile:. I just wanted to point out where I got the code from so that scoder could have a look at the discussion. I should have worded that better, sorry!\r\n\r\n> Maybe if p_f_string_expr returned the index and a sequence instead (e.g. either [expr_text, FormattedValueNode] or [FormattedValueNode])?\r\n\r\nWill try that!",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-21T21:17:32Z",
            "diff_hunk": "@@ -3377,6 +3380,12 @@ def analyse_types(self, env):\n                 if self.value.type is unicode_type and not self.value.may_be_none():\n                     # value is definitely a unicode string and we don't format it any special\n                     return self.value\n+\n+        if self.expr_text:\n+            # strings are unicode in python, so we can safely do this\n+            string_node = StringNode(self.pos, value=StringEncoding.BytesLiteral(self.expr_text.encode('utf-8')))\n+            return AddNode(self.pos, operand1=string_node, operand2=self, operator='+', type=string_node.type, is_temp=True)",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r598339290",
            "id": 598339290,
            "in_reply_to_id": 598275479,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODMzOTI5MA==",
            "original_commit_id": "d43ba89728ec773ff01685cae722cc2f35a325ae",
            "original_line": 3387,
            "original_position": 27,
            "original_start_line": 3384,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 617062628,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/598339290",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
                "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
                "followers_url": "https://api.github.com/users/davfsa/followers",
                "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
                "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/davfsa",
                "id": 29100934,
                "login": "davfsa",
                "node_id": "MDQ6VXNlcjI5MTAwOTM0",
                "organizations_url": "https://api.github.com/users/davfsa/orgs",
                "received_events_url": "https://api.github.com/users/davfsa/received_events",
                "repos_url": "https://api.github.com/users/davfsa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/davfsa"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r598340651"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/598340651"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "~~Ending with an `=` or ending with spaces (or a combination of both) works perfectly fine. I did notice however that a malformed string does cause a compiler crash. Will fix!~~\r\nI missunderstood the point, I thought you meant that the f-string expresion had to end in `=` or spaces. I have fixed this locally and will push later this afternoon.\r\n\r\nCode:\r\n```\r\na = \"test\"\r\nb = f\"{a=\"\r\n```",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-21T21:28:31Z",
            "diff_hunk": "@@ -1161,6 +1168,16 @@ def p_f_string_expr(s, unicode_value, pos, starting_index, is_raw):\n         error(_f_string_error_pos(pos, unicode_value, starting_index),\n               \"empty expression not allowed in f-string\")\n \n+    if terminal_char == '=':\n+        i += 1\n+        while unicode_value[i].isspace():\n+            if i >= size:\n+                break  # error will be reported below\n+            i += 1",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r598340651",
            "id": 598340651,
            "in_reply_to_id": 598338463,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODM0MDY1MQ==",
            "original_commit_id": "a34183f0921901499b8a8387656bf4dfbc8c7ed1",
            "original_line": 1177,
            "original_position": 40,
            "original_start_line": 1171,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 617063668,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/598340651",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
                "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
                "followers_url": "https://api.github.com/users/davfsa/followers",
                "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
                "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/davfsa",
                "id": 29100934,
                "login": "davfsa",
                "node_id": "MDQ6VXNlcjI5MTAwOTM0",
                "organizations_url": "https://api.github.com/users/davfsa/orgs",
                "received_events_url": "https://api.github.com/users/davfsa/received_events",
                "repos_url": "https://api.github.com/users/davfsa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/davfsa"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r598828191"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/598828191"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Fixed",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-22T15:33:39Z",
            "diff_hunk": "@@ -1161,6 +1168,16 @@ def p_f_string_expr(s, unicode_value, pos, starting_index, is_raw):\n         error(_f_string_error_pos(pos, unicode_value, starting_index),\n               \"empty expression not allowed in f-string\")\n \n+    if terminal_char == '=':\n+        i += 1\n+        while unicode_value[i].isspace():\n+            if i >= size:\n+                break  # error will be reported below\n+            i += 1",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r598828191",
            "id": 598828191,
            "in_reply_to_id": 598338463,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODgyODE5MQ==",
            "original_commit_id": "a34183f0921901499b8a8387656bf4dfbc8c7ed1",
            "original_line": 1177,
            "original_position": 40,
            "original_start_line": 1171,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 617668934,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/598828191",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
                "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
                "followers_url": "https://api.github.com/users/davfsa/followers",
                "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
                "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/davfsa",
                "id": 29100934,
                "login": "davfsa",
                "node_id": "MDQ6VXNlcjI5MTAwOTM0",
                "organizations_url": "https://api.github.com/users/davfsa/orgs",
                "received_events_url": "https://api.github.com/users/davfsa/received_events",
                "repos_url": "https://api.github.com/users/davfsa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/davfsa"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r598829419"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/598829419"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Moved to the parser",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-22T15:34:41Z",
            "diff_hunk": "@@ -3377,6 +3380,12 @@ def analyse_types(self, env):\n                 if self.value.type is unicode_type and not self.value.may_be_none():\n                     # value is definitely a unicode string and we don't format it any special\n                     return self.value\n+\n+        if self.expr_text:\n+            # strings are unicode in python, so we can safely do this\n+            string_node = StringNode(self.pos, value=StringEncoding.BytesLiteral(self.expr_text.encode('utf-8')))\n+            return AddNode(self.pos, operand1=string_node, operand2=self, operator='+', type=string_node.type, is_temp=True)",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r598829419",
            "id": 598829419,
            "in_reply_to_id": 598275479,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODgyOTQxOQ==",
            "original_commit_id": "d43ba89728ec773ff01685cae722cc2f35a325ae",
            "original_line": 3387,
            "original_position": 27,
            "original_start_line": 3384,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 617670156,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/598829419",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
                "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
                "followers_url": "https://api.github.com/users/davfsa/followers",
                "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
                "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/davfsa",
                "id": 29100934,
                "login": "davfsa",
                "node_id": "MDQ6VXNlcjI5MTAwOTM0",
                "organizations_url": "https://api.github.com/users/davfsa/orgs",
                "received_events_url": "https://api.github.com/users/davfsa/received_events",
                "repos_url": "https://api.github.com/users/davfsa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/davfsa"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r599001526"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/599001526"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "```suggestion\r\n                next_start, expr_nodes = p_f_string_expr(s, unicode_value, pos, next_start, is_raw)\r\n                values.extend(expr_nodes)\r\n```\r\n\r\nOther than this tiny comment I think this makes sense - it's does look simpler to do this in the parser.",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-22T19:07:47Z",
            "diff_hunk": "@@ -1082,7 +1082,7 @@ def p_f_string(s, unicode_value, pos, is_raw):\n                     values.append(ExprNodes.UnicodeNode(pos, value=builder.getstring()))\n                     builder = StringEncoding.UnicodeLiteralBuilder()\n                 next_start, expr_node = p_f_string_expr(s, unicode_value, pos, next_start, is_raw)\n-                values.append(expr_node)\n+                values.extend(expr_node)",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r599001526",
            "id": 599001526,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTAwMTUyNg==",
            "original_commit_id": "d4cf5d18b19a2ceb361aa5bf06d46080a209b96f",
            "original_line": 1085,
            "original_position": 5,
            "original_start_line": 1084,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 617889087,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/599001526",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r599004069"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/599004069"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yep, this looks like a much nicer way to do it. Thanks for the suggestion :)\r\n\r\nPS: Fixed",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-22T19:11:54Z",
            "diff_hunk": "@@ -1082,7 +1082,7 @@ def p_f_string(s, unicode_value, pos, is_raw):\n                     values.append(ExprNodes.UnicodeNode(pos, value=builder.getstring()))\n                     builder = StringEncoding.UnicodeLiteralBuilder()\n                 next_start, expr_node = p_f_string_expr(s, unicode_value, pos, next_start, is_raw)\n-                values.append(expr_node)\n+                values.extend(expr_node)",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r599004069",
            "id": 599004069,
            "in_reply_to_id": 599001526,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTAwNDA2OQ==",
            "original_commit_id": "d4cf5d18b19a2ceb361aa5bf06d46080a209b96f",
            "original_line": 1085,
            "original_position": 5,
            "original_start_line": 1084,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 617892328,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/599004069",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
                "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
                "followers_url": "https://api.github.com/users/davfsa/followers",
                "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
                "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/davfsa",
                "id": 29100934,
                "login": "davfsa",
                "node_id": "MDQ6VXNlcjI5MTAwOTM0",
                "organizations_url": "https://api.github.com/users/davfsa/orgs",
                "received_events_url": "https://api.github.com/users/davfsa/received_events",
                "repos_url": "https://api.github.com/users/davfsa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/davfsa"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r599095467"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/599095467"
                }
            },
            "author_association": "MEMBER",
            "body": "Let's simplify this a little.\r\n```suggestion\r\n        while i < size and unicode_value[i].isspace():\r\n            i += 1\r\n        if i < size:\r\n            expr_text = unicode_value[starting_index:i]\r\n            terminal_char = unicode_value[i]\r\n        # otherwise: error will be reported below\r\n```",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-22T21:43:52Z",
            "diff_hunk": "@@ -1161,6 +1171,21 @@ def p_f_string_expr(s, unicode_value, pos, starting_index, is_raw):\n         error(_f_string_error_pos(pos, unicode_value, starting_index),\n               \"empty expression not allowed in f-string\")\n \n+    if terminal_char == '=':\n+        i += 1\n+        while True:\n+            if i >= size:\n+                break  # error will be reported below\n+\n+            c = unicode_value[i]\n+            if c.isspace():\n+                i += 1\n+                continue\n+\n+            terminal_char = c\n+            expr_text = unicode_value[starting_index:i]\n+            break",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r599095467",
            "id": 599095467,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTA5NTQ2Nw==",
            "original_commit_id": "6855a39fa06aba85dd90e089f160366982ed8cce",
            "original_line": 1187,
            "original_position": 70,
            "original_start_line": 1176,
            "path": "Cython/Compiler/Parsing.py",
            "position": null,
            "pull_request_review_id": 618007178,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/599095467",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r599097033"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/599097033"
                }
            },
            "author_association": "MEMBER",
            "body": "Let's keep the order here. This file might get overwritten and manually merged from time to time with new copies from CPython's test suite. It's confusing if lines move around on our side.",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-22T21:46:45Z",
            "diff_hunk": "@@ -1169,9 +1168,10 @@ non-important content\n         self.assertEqual(f'{0!=1}', 'True')\n         self.assertEqual(f'{0<=1}', 'True')\n         self.assertEqual(f'{0>=1}', 'False')\n-        self.assertEqual(f'{(x:=\"5\")}', '5')\n+        # Walrus not implemented yet, skip\n+        #self.assertEqual(f'{(x:=\"5\")}', '5')\n+        #self.assertEqual(f'{(x:=5)}', '5')\n         self.assertEqual(x, '5')\n-        self.assertEqual(f'{(x:=5)}', '5')",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r599097033",
            "id": 599097033,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTA5NzAzMw==",
            "original_commit_id": "6855a39fa06aba85dd90e089f160366982ed8cce",
            "original_line": 1174,
            "original_position": 17,
            "original_start_line": 1172,
            "path": "tests/run/test_fstring.pyx",
            "position": null,
            "pull_request_review_id": 618007178,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "LEFT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/599097033",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r599115224"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/599115224"
                }
            },
            "author_association": "MEMBER",
            "body": "This looks like it should probably fail now.",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-22T22:23:45Z",
            "diff_hunk": "@@ -1169,9 +1168,11 @@ non-important content\n         self.assertEqual(f'{0!=1}', 'True')\n         self.assertEqual(f'{0<=1}', 'True')\n         self.assertEqual(f'{0>=1}', 'False')\n-        self.assertEqual(f'{(x:=\"5\")}', '5')\n+        # Walrus not implemented yet, skip\n+        #self.assertEqual(f'{(x:=\"5\")}', '5')\n         self.assertEqual(x, '5')",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r599115224",
            "id": 599115224,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTExNTIyNA==",
            "original_commit_id": "2367f04ef93a9faff9e9409d1c4f3d62b2497c09",
            "original_line": 1173,
            "original_position": 15,
            "original_start_line": null,
            "path": "tests/run/test_fstring.pyx",
            "position": null,
            "pull_request_review_id": 618030358,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/599115224",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r599379911"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/599379911"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It looks like the tests never ran due to the `__` in the name of the function. Should I remove them? (There are some other tests are also getting skipped because of this reason)\r\n\r\nEDIT:\r\nRemoving the `__` and having the tests run causes this issue, which I'm not sure if has to do with my code or not: \r\n```\r\nERROR: test_debug_conversion (test_fstring.TestCase)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tests/run/test_fstring.pyx\", line 1135, in test_fstring.TestCase.test_debug_conversion (test_fstring.cpp:44450)\r\n    self.assertEqual(f'{x=:.2f}', 'x=' + format(x, '.2f'))\r\nValueError: Unknown format code 'f' for object of type 'str'\r\n```\r\n\r\nEDIT 2:\r\nYep, seems to be with my code. I will have a try and fix it",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-23T08:58:30Z",
            "diff_hunk": "@@ -1169,9 +1168,11 @@ non-important content\n         self.assertEqual(f'{0!=1}', 'True')\n         self.assertEqual(f'{0<=1}', 'True')\n         self.assertEqual(f'{0>=1}', 'False')\n-        self.assertEqual(f'{(x:=\"5\")}', '5')\n+        # Walrus not implemented yet, skip\n+        #self.assertEqual(f'{(x:=\"5\")}', '5')\n         self.assertEqual(x, '5')",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r599379911",
            "id": 599379911,
            "in_reply_to_id": 599115224,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTM3OTkxMQ==",
            "original_commit_id": "2367f04ef93a9faff9e9409d1c4f3d62b2497c09",
            "original_line": 1173,
            "original_position": 15,
            "original_start_line": null,
            "path": "tests/run/test_fstring.pyx",
            "position": null,
            "pull_request_review_id": 618341097,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/599379911",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
                "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
                "followers_url": "https://api.github.com/users/davfsa/followers",
                "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
                "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/davfsa",
                "id": 29100934,
                "login": "davfsa",
                "node_id": "MDQ6VXNlcjI5MTAwOTM0",
                "organizations_url": "https://api.github.com/users/davfsa/orgs",
                "received_events_url": "https://api.github.com/users/davfsa/received_events",
                "repos_url": "https://api.github.com/users/davfsa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/davfsa"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r600227569"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/600227569"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Fixed and enabled tests",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-24T07:22:37Z",
            "diff_hunk": "@@ -1169,9 +1168,11 @@ non-important content\n         self.assertEqual(f'{0!=1}', 'True')\n         self.assertEqual(f'{0<=1}', 'True')\n         self.assertEqual(f'{0>=1}', 'False')\n-        self.assertEqual(f'{(x:=\"5\")}', '5')\n+        # Walrus not implemented yet, skip\n+        #self.assertEqual(f'{(x:=\"5\")}', '5')\n         self.assertEqual(x, '5')",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r600227569",
            "id": 600227569,
            "in_reply_to_id": 599115224,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDIyNzU2OQ==",
            "original_commit_id": "2367f04ef93a9faff9e9409d1c4f3d62b2497c09",
            "original_line": 1173,
            "original_position": 15,
            "original_start_line": null,
            "path": "tests/run/test_fstring.pyx",
            "position": null,
            "pull_request_review_id": 619391392,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/600227569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
                "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
                "followers_url": "https://api.github.com/users/davfsa/followers",
                "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
                "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/davfsa",
                "id": 29100934,
                "login": "davfsa",
                "node_id": "MDQ6VXNlcjI5MTAwOTM0",
                "organizations_url": "https://api.github.com/users/davfsa/orgs",
                "received_events_url": "https://api.github.com/users/davfsa/received_events",
                "repos_url": "https://api.github.com/users/davfsa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/davfsa"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r600902266"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/600902266"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I the comment is probably wrong (or at least I read it wrong) - i think `!a` in an f-string works on Cython on Py2, but it's the `ascii` builtin that's missing on Py2 (and thus it's hard to test). Skipping the test may still be reasonable though.",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-24T21:59:23Z",
            "diff_hunk": "@@ -1122,21 +1122,22 @@ non-important content\n         self.assertEqual(cy_eval('f\"\\\\\\n\"'), '')\n         self.assertEqual(cy_eval('f\"\\\\\\r\"'), '')\n \n-    \"\"\"\n-    def __test_debug_conversion(self):\n+    def test_debug_conversion(self):\n         x = 'A string'\n         self.assertEqual(f'{x=}', 'x=' + repr(x))\n         self.assertEqual(f'{x =}', 'x =' + repr(x))\n         self.assertEqual(f'{x=!s}', 'x=' + str(x))\n         self.assertEqual(f'{x=!r}', 'x=' + repr(x))\n-        self.assertEqual(f'{x=!a}', 'x=' + ascii(x))\n+        if not IS_PY2: # ASCII formatting only works on Python 3+",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r600902266",
            "id": 600902266,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDkwMjI2Ng==",
            "original_commit_id": "877fc39fc16fb18815cea00d7298bfc4f91c0c53",
            "original_line": 1131,
            "original_position": 13,
            "original_start_line": null,
            "path": "tests/run/test_fstring.pyx",
            "position": null,
            "pull_request_review_id": 620266349,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/600902266",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r600903446"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/600903446"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Re-worded :)",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-03-24T22:01:39Z",
            "diff_hunk": "@@ -1122,21 +1122,22 @@ non-important content\n         self.assertEqual(cy_eval('f\"\\\\\\n\"'), '')\n         self.assertEqual(cy_eval('f\"\\\\\\r\"'), '')\n \n-    \"\"\"\n-    def __test_debug_conversion(self):\n+    def test_debug_conversion(self):\n         x = 'A string'\n         self.assertEqual(f'{x=}', 'x=' + repr(x))\n         self.assertEqual(f'{x =}', 'x =' + repr(x))\n         self.assertEqual(f'{x=!s}', 'x=' + str(x))\n         self.assertEqual(f'{x=!r}', 'x=' + repr(x))\n-        self.assertEqual(f'{x=!a}', 'x=' + ascii(x))\n+        if not IS_PY2: # ASCII formatting only works on Python 3+",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r600903446",
            "id": 600903446,
            "in_reply_to_id": 600902266,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDkwMzQ0Ng==",
            "original_commit_id": "877fc39fc16fb18815cea00d7298bfc4f91c0c53",
            "original_line": 1131,
            "original_position": 13,
            "original_start_line": null,
            "path": "tests/run/test_fstring.pyx",
            "position": null,
            "pull_request_review_id": 620267763,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-03-26T20:38:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/600903446",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
                "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
                "followers_url": "https://api.github.com/users/davfsa/followers",
                "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
                "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/davfsa",
                "id": 29100934,
                "login": "davfsa",
                "node_id": "MDQ6VXNlcjI5MTAwOTM0",
                "organizations_url": "https://api.github.com/users/davfsa/orgs",
                "received_events_url": "https://api.github.com/users/davfsa/received_events",
                "repos_url": "https://api.github.com/users/davfsa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/davfsa"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3939#discussion_r624756822"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3939"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/624756822"
                }
            },
            "author_association": "MEMBER",
            "body": "We can avoid the string building here.\r\n```suggestion\r\n                if c in '!=><':\r\n                    if unicode_value[i + 1] == '=':\r\n                        i += 2  # we checked 2, so we can skip 2\r\n                        continue\r\n                    elif c in '><':  # allow single '<' and '>'\r\n                        i += 1\r\n                        continue\r\n```",
            "commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "created_at": "2021-05-02T21:18:15Z",
            "diff_hunk": "@@ -1143,11 +1147,17 @@ def p_f_string_expr(s, unicode_value, pos, starting_index, is_raw):\n         elif c == '#':\n             error(_f_string_error_pos(pos, unicode_value, i),\n                   \"format string cannot include #\")\n-        elif nested_depth == 0 and c in '!:}':\n-            # allow != as a special case\n-            if c == '!' and i + 1 < size and unicode_value[i + 1] == '=':\n-                i += 1\n-                continue\n+        elif nested_depth == 0 and c in '><=!:}':\n+            # allow special cases with '!' and '='\n+            if i + 1 < size:\n+                chars = c + unicode_value[i + 1]\n+                if chars in ('!=', '==', '>=', '<='):\n+                    i += 2  # we checked 2, so we can skip 2\n+                    continue\n+\n+                if c in '><':  # allow single '<' and '>'\n+                    i += 1\n+                    continue",
            "html_url": "https://github.com/cython/cython/pull/3939#discussion_r624756822",
            "id": 624756822,
            "line": 1160,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDc1NjgyMg==",
            "original_commit_id": "5730a74418820400280cbbeee15627e9447df7e4",
            "original_line": 1160,
            "original_position": 49,
            "original_start_line": 1153,
            "path": "Cython/Compiler/Parsing.py",
            "position": 49,
            "pull_request_review_id": 649952980,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3939",
            "side": "RIGHT",
            "start_line": 1153,
            "start_side": "RIGHT",
            "updated_at": "2021-05-02T21:31:08Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/624756822",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3939/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
                "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
                "followers_url": "https://api.github.com/users/davfsa/followers",
                "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
                "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/davfsa",
                "id": 29100934,
                "login": "davfsa",
                "node_id": "MDQ6VXNlcjI5MTAwOTM0",
                "organizations_url": "https://api.github.com/users/davfsa/orgs",
                "received_events_url": "https://api.github.com/users/davfsa/received_events",
                "repos_url": "https://api.github.com/users/davfsa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/davfsa"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5730a74418820400280cbbeee15627e9447df7e4/comments",
            "commit": {
                "author": {
                    "date": "2020-12-10T10:43:41Z",
                    "email": "davfsa@gmail.com",
                    "name": "davfsa"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-03-26T20:37:45Z",
                    "email": "davfsa@gmail.com",
                    "name": "davfsa"
                },
                "message": "Self documenting f-strings",
                "tree": {
                    "sha": "e382bf9a4aa622f6a93c170a241b860a975fd5fe",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e382bf9a4aa622f6a93c170a241b860a975fd5fe"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5730a74418820400280cbbeee15627e9447df7e4",
                "verification": {
                    "payload": "tree e382bf9a4aa622f6a93c170a241b860a975fd5fe\nparent cedbd5840fde2c63549b64c35cd05ea5fb9fc524\nauthor davfsa <davfsa@gmail.com> 1607597021 +0100\ncommitter davfsa <davfsa@gmail.com> 1616791065 +0100\n\nSelf documenting f-strings\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEnDRMrzWrVfgW0ubZiy2eADbWfBwFAmBeRhkACgkQiy2eADbW\nfBziDQ/9Es1Q58Few71kkHHwFx4jwR2Ty6/pNCY9xZyPNkRNg7bHxAzpIv3gfw1k\n3b9yFfyXlDwprTlHSDecLKrgfl55z+dosc7ao3XSQvzdcs11ihcn2sFzn8Nt7nHi\n4GqXv7hJlvSRJ65Y++CouK1+QMyrfjAsCIMCRaJ3T3gwMKWBqE3Q1812yUccWTbJ\navJh7GGMVHusKdY9HosRYSfRKAMfBg0/fZ8uodJHkQngM8DfRYXEkOvtOdmdBWx8\nbBTg+SA1pY+TS0gNoeWvoDmLoir7hYk0Y7mcLEd27dH7hsGLvDvZmpuzFO3g3w2D\n3D8z4rc1PlagZcuv4swI+gYx6fko//1v8rJV07nwBzmS9ZuWXuyfHz0kjvCK0AzJ\nKmiaSSHgg2HOV1WNsPKf7YTsneaEAJbaTvNqWieMeMPV4v+nniouRKEB5m0PQJUr\n06g2TgX+VSKGp7cNP+F55npR0bz13ueRisejgKvLuacdmCvrYIdqGURJb6cRNnda\nq2NC2RjS3TGDTKY1C1BWZB7kfEdOUmTPY8qfhh74UiCm/f8LVyHtKcr0o90BVRJ8\nmalLcLpiRvWPruUiaO1zg59HQyPqL4BJ+54vhbXwn24I7qbd3XDdBzZVhRSImw1Q\npCI71nFCYXE6JyH9koT0TDCcV8TrWWXAoBz/p7WqCkPDFtuBNFo=\n=sFdZ\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
                "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
                "followers_url": "https://api.github.com/users/davfsa/followers",
                "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
                "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/davfsa",
                "id": 29100934,
                "login": "davfsa",
                "node_id": "MDQ6VXNlcjI5MTAwOTM0",
                "organizations_url": "https://api.github.com/users/davfsa/orgs",
                "received_events_url": "https://api.github.com/users/davfsa/received_events",
                "repos_url": "https://api.github.com/users/davfsa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/davfsa"
            },
            "html_url": "https://github.com/cython/cython/commit/5730a74418820400280cbbeee15627e9447df7e4",
            "node_id": "MDY6Q29tbWl0MzE5MDkxOTI0OjU3MzBhNzQ0MTg4MjA0MDAyODBjYmJlZWUxNTYyN2U5NDQ3ZGY3ZTQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/cedbd5840fde2c63549b64c35cd05ea5fb9fc524",
                    "sha": "cedbd5840fde2c63549b64c35cd05ea5fb9fc524",
                    "url": "https://api.github.com/repos/cython/cython/commits/cedbd5840fde2c63549b64c35cd05ea5fb9fc524"
                }
            ],
            "sha": "5730a74418820400280cbbeee15627e9447df7e4",
            "url": "https://api.github.com/repos/cython/cython/commits/5730a74418820400280cbbeee15627e9447df7e4"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3939/commits",
    "created_at": "2020-12-09T14:06:48Z",
    "diff_url": "https://github.com/cython/cython/pull/3939.diff",
    "draft": false,
    "head": {
        "label": "davfsa:bugfix/3796-self-documenting-f-strings",
        "ref": "bugfix/3796-self-documenting-f-strings",
        "repo": {
            "archive_url": "https://api.github.com/repos/davfsa/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/davfsa/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/davfsa/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/davfsa/cython/branches{/branch}",
            "clone_url": "https://github.com/davfsa/cython.git",
            "collaborators_url": "https://api.github.com/repos/davfsa/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/davfsa/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/davfsa/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/davfsa/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/davfsa/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/davfsa/cython/contributors",
            "created_at": "2020-12-06T17:34:26Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/davfsa/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/davfsa/cython/downloads",
            "events_url": "https://api.github.com/repos/davfsa/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/davfsa/cython/forks",
            "full_name": "davfsa/cython",
            "git_commits_url": "https://api.github.com/repos/davfsa/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/davfsa/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/davfsa/cython/git/tags{/sha}",
            "git_url": "git://github.com/davfsa/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/davfsa/cython/hooks",
            "html_url": "https://github.com/davfsa/cython",
            "id": 319091924,
            "issue_comment_url": "https://api.github.com/repos/davfsa/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/davfsa/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/davfsa/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/davfsa/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/davfsa/cython/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/davfsa/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/davfsa/cython/merges",
            "milestones_url": "https://api.github.com/repos/davfsa/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMTkwOTE5MjQ=",
            "notifications_url": "https://api.github.com/repos/davfsa/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
                "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
                "followers_url": "https://api.github.com/users/davfsa/followers",
                "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
                "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/davfsa",
                "id": 29100934,
                "login": "davfsa",
                "node_id": "MDQ6VXNlcjI5MTAwOTM0",
                "organizations_url": "https://api.github.com/users/davfsa/orgs",
                "received_events_url": "https://api.github.com/users/davfsa/received_events",
                "repos_url": "https://api.github.com/users/davfsa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/davfsa"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/davfsa/cython/pulls{/number}",
            "pushed_at": "2021-05-02T17:03:58Z",
            "releases_url": "https://api.github.com/repos/davfsa/cython/releases{/id}",
            "size": 62479,
            "ssh_url": "git@github.com:davfsa/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/davfsa/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/davfsa/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/davfsa/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/davfsa/cython/subscription",
            "svn_url": "https://github.com/davfsa/cython",
            "tags_url": "https://api.github.com/repos/davfsa/cython/tags",
            "teams_url": "https://api.github.com/repos/davfsa/cython/teams",
            "trees_url": "https://api.github.com/repos/davfsa/cython/git/trees{/sha}",
            "updated_at": "2021-01-04T14:22:00Z",
            "url": "https://api.github.com/repos/davfsa/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "5730a74418820400280cbbeee15627e9447df7e4",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
            "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
            "followers_url": "https://api.github.com/users/davfsa/followers",
            "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
            "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/davfsa",
            "id": 29100934,
            "login": "davfsa",
            "node_id": "MDQ6VXNlcjI5MTAwOTM0",
            "organizations_url": "https://api.github.com/users/davfsa/orgs",
            "received_events_url": "https://api.github.com/users/davfsa/received_events",
            "repos_url": "https://api.github.com/users/davfsa/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/davfsa"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3939",
    "id": 535205316,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3939",
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553653,
            "name": "Parsing",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTM=",
            "url": "https://api.github.com/repos/cython/cython/labels/Parsing"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556315,
            "name": "Python Semantics",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMTU=",
            "url": "https://api.github.com/repos/cython/cython/labels/Python%20Semantics"
        },
        {
            "color": "c2e0c6",
            "default": false,
            "description": null,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        }
    ],
    "locked": false,
    "merge_commit_sha": "09628248e212ecb08a51d017bc67e4f37452d92a",
    "merged_at": "2021-05-03T05:08:20Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 357,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 23,
        "state": "open",
        "title": "3.0",
        "updated_at": "2021-05-03T05:13:39Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTM1MjA1MzE2",
    "number": 3939,
    "patch_url": "https://github.com/cython/cython/pull/3939.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3939/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/5730a74418820400280cbbeee15627e9447df7e4",
    "title": "Self documenting f-strings",
    "updated_at": "2021-05-03T05:13:27Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3939",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29100934?v=4",
        "events_url": "https://api.github.com/users/davfsa/events{/privacy}",
        "followers_url": "https://api.github.com/users/davfsa/followers",
        "following_url": "https://api.github.com/users/davfsa/following{/other_user}",
        "gists_url": "https://api.github.com/users/davfsa/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/davfsa",
        "id": 29100934,
        "login": "davfsa",
        "node_id": "MDQ6VXNlcjI5MTAwOTM0",
        "organizations_url": "https://api.github.com/users/davfsa/orgs",
        "received_events_url": "https://api.github.com/users/davfsa/received_events",
        "repos_url": "https://api.github.com/users/davfsa/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/davfsa/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davfsa/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/davfsa"
    }
}