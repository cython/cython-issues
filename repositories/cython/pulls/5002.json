{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/5002/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/5002/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/5002"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/5002"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/5002/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/5002"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/52bbe0ec9f405d413a32dc95dc1df826d395ae0d"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1320,
            "forks_count": 1320,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 1111,
            "open_issues_count": 1111,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2022-09-12T14:18:37Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 65822,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 7309,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "topics": [
                "big-data",
                "c",
                "cpp",
                "cpython",
                "cpython-extensions",
                "cython",
                "performance",
                "python"
            ],
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2022-09-12T06:31:45Z",
            "url": "https://api.github.com/repos/cython/cython",
            "visibility": "public",
            "watchers": 7309,
            "watchers_count": 7309,
            "web_commit_signoff_required": false
        },
        "sha": "77918c57b5f36bee708f625e2499bf05b23a87f1",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "This pull request aims to\r\n 1. support C++ classes with rbegin/rend implemented for reversed iteration, and\r\n 2. solve the compilation error when the type of temporary variable used to store the result of iterator has 'constness'.\r\nOne example of 2. is when iterating std::map, Cython uses std::map<Key, Value>::value_type as the type of temporary variable to store the value of an iterator. However, std::map<Key, Value>::value_type will deduce to std::pair<const Key, Value>, which cannot be reused within a loop as its first component is const.\r\n\r\nRelated to #2225",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r961367260"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/961367260"
                }
            },
            "author_association": "MEMBER",
            "body": "I think you need an extra check here. Not all `SimpleCallNode` hold names (some may be attributes for example)",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-02T07:24:12Z",
            "diff_hunk": "@@ -2899,12 +2899,30 @@ def analyse_types(self, env):\n         if self.expr_scope:\n             env = self.expr_scope  # actually evaluate sequence in this scope instead\n         self.sequence = self.sequence.analyse_types(env)\n+        def have_reversed_cpp_iteration():\n+            \"\"\"\n+            Returns True if it represents a reversed iteration over a C++ sequence.\n+\n+            This supports C++ classes with reversed_iterator implemented.\n+            \"\"\"\n+            reversed_cpp_iterable = False\n+            if isinstance(self.sequence, SimpleCallNode) and self.sequence.function.name == \"reversed\":",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r961367260",
            "id": 961367260,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45TUzc",
            "original_commit_id": "a1d6608a9eca57ffd458a142db86521ff19e8221",
            "original_line": 2909,
            "original_position": 20,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1094421739,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/961367260/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-02T07:24:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/961367260",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r961369012"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/961369012"
                }
            },
            "author_association": "MEMBER",
            "body": "We're still supporting Python 2 unfortunately so `super` needs to be spelled out. You actually don't need this `__init__` though - the default behaviour for a node is to add all keyword arguments as attributes",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-02T07:26:23Z",
            "diff_hunk": "@@ -3085,22 +3103,39 @@ class CppIteratorNode(ExprNode):\n \n     subexprs = ['sequence']\n \n+    def __init__(self, pos, reversed=False, **kw):\n+        super().__init__(pos, **kw)",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r961369012",
            "id": 961369012,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45TVO0",
            "original_commit_id": "a1d6608a9eca57ffd458a142db86521ff19e8221",
            "original_line": 3107,
            "original_position": 45,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1094424159,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/961369012/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-02T07:26:23Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/961369012",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r961862976"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/961862976"
                }
            },
            "author_association": "MEMBER",
            "body": "We generally prefer to check before doing things rather than catching exceptions. Especially with a bare `except` (which can catch anything). Specifically, if `env.find` calls `error` then it will cause some changes in Cython state and probably cause it to terminate even if you catch the exception.\r\n\r\nI suspect you can just do `self.sequence.arg_tuple.args[0].arg.entry` (or something very similar) rather than using `env.find`",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-02T16:56:48Z",
            "diff_hunk": "@@ -2899,12 +2899,31 @@ def analyse_types(self, env):\n         if self.expr_scope:\n             env = self.expr_scope  # actually evaluate sequence in this scope instead\n         self.sequence = self.sequence.analyse_types(env)\n+        def have_reversed_cpp_iteration():\n+            \"\"\"\n+            Returns True if it represents a reversed iteration over a C++ sequence.\n+\n+            This supports C++ classes with reversed_iterator implemented.\n+            \"\"\"\n+            reversed_cpp_iterable = False\n+            if isinstance(self.sequence, SimpleCallNode) and self.sequence.function.is_name and \\\n+                    self.sequence.function.name == \"reversed\":\n+                try:\n+                    arg = env.find(self.sequence.arg_tuple.args[0].arg.name, self.pos)\n+                    reversed_cpp_iterable = arg.type.is_cpp_class\n+                except:\n+                    pass",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r961862976",
            "id": 961862976,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45VN1A",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 2915,
            "original_position": 26,
            "original_start_line": 2911,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095136876,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/961862976/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-02T17:16:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/961862976",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r961863242"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/961863242"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```\r\n\r\nI don't think this is needed",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-02T16:57:11Z",
            "diff_hunk": "@@ -3082,25 +3101,42 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def __init__(self, pos, **kw):\n+        super(ExprNode, self).__init__(pos, **kw)",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r961863242",
            "id": 961863242,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45VN5K",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 3109,
            "original_position": 50,
            "original_start_line": 3108,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095136876,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/961863242/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-02T17:16:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/961863242",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r961864157"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/961864157"
                }
            },
            "author_association": "MEMBER",
            "body": "This might be better as a regular method rather than a nested function.",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-02T16:58:32Z",
            "diff_hunk": "@@ -2899,12 +2899,31 @@ def analyse_types(self, env):\n         if self.expr_scope:\n             env = self.expr_scope  # actually evaluate sequence in this scope instead\n         self.sequence = self.sequence.analyse_types(env)\n+        def have_reversed_cpp_iteration():",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r961864157",
            "id": 961864157,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45VOHd",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 2902,
            "original_position": 13,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095136876,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/961864157/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-02T17:16:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/961864157",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r961865452"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/961865452"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            if (isinstance(self.sequence, SimpleCallNode) and self.sequence.function.is_name and\r\n                    self.sequence.function.name == \"reversed\"):\r\n```\r\n\r\nPEP8 doesn't like trailing `\\`",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-02T17:00:28Z",
            "diff_hunk": "@@ -2899,12 +2899,31 @@ def analyse_types(self, env):\n         if self.expr_scope:\n             env = self.expr_scope  # actually evaluate sequence in this scope instead\n         self.sequence = self.sequence.analyse_types(env)\n+        def have_reversed_cpp_iteration():\n+            \"\"\"\n+            Returns True if it represents a reversed iteration over a C++ sequence.\n+\n+            This supports C++ classes with reversed_iterator implemented.\n+            \"\"\"\n+            reversed_cpp_iterable = False\n+            if isinstance(self.sequence, SimpleCallNode) and self.sequence.function.is_name and \\\n+                    self.sequence.function.name == \"reversed\":",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r961865452",
            "id": 961865452,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45VObs",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 2910,
            "original_position": 21,
            "original_start_line": 2909,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095136876,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/961865452/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-02T17:16:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/961865452",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r961870566"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/961870566"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't know if this should be in a `while` loop? I think that `item_type` out of a typedef could probably be const.",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-02T17:08:41Z",
            "diff_hunk": "@@ -3246,7 +3287,34 @@ def infer_type(self, env, iterator_type=None):\n             return fake_index_node.infer_type(env)\n \n     def analyse_types(self, env):\n+        def remove_const(item_type):\n+            \"\"\"\n+            Removes the constness of a given type and its underlying templates\n+            if any.\n+\n+            This is to solve the compilation error when the temporary variable used to\n+            store the result of an iterator cannot be changed due to its constness.\n+            For example, the value_type of std::map, which will also be the type of\n+            the temporarry variable, is std::pair<const Key, T>. This means the first\n+            component of the variable cannot be reused to store the result of each\n+            iteration, which leads to a compilation error.\n+            \"\"\"\n+            if item_type.is_const:\n+                item_type = item_type.cv_base_type\n+            if isinstance(item_type, CTypedefType):\n+                item_type = item_type.typedef_base_type",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r961870566",
            "id": 961870566,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45VPrm",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 3298,
            "original_position": 179,
            "original_start_line": 3302,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095136876,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/961870566/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-02T17:16:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/961870566",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r961874208"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/961874208"
                }
            },
            "author_association": "MEMBER",
            "body": "This feels dodgy - we reuse instances of types all over the place so you're probably modifying something that's used elsewhere.\r\n\r\nI'd do something like\r\n\r\n```\r\ntemplates = [ remove_const(t) if t.is_const else t for t in item_type.templates[i] ]\r\nitem_type = item_type.template_type.specialize(templates)\r\n```",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-02T17:14:18Z",
            "diff_hunk": "@@ -3246,7 +3287,34 @@ def infer_type(self, env, iterator_type=None):\n             return fake_index_node.infer_type(env)\n \n     def analyse_types(self, env):\n+        def remove_const(item_type):\n+            \"\"\"\n+            Removes the constness of a given type and its underlying templates\n+            if any.\n+\n+            This is to solve the compilation error when the temporary variable used to\n+            store the result of an iterator cannot be changed due to its constness.\n+            For example, the value_type of std::map, which will also be the type of\n+            the temporarry variable, is std::pair<const Key, T>. This means the first\n+            component of the variable cannot be reused to store the result of each\n+            iteration, which leads to a compilation error.\n+            \"\"\"\n+            if item_type.is_const:\n+                item_type = item_type.cv_base_type\n+            if isinstance(item_type, CTypedefType):\n+                item_type = item_type.typedef_base_type\n+            type_changed = False\n+            if item_type.is_cpp_class and item_type.templates:\n+                for i in range(len(item_type.templates)):\n+                    if item_type.templates[i].is_const:\n+                        item_type.templates[i] = remove_const(item_type.templates[i])\n+                        type_changed = True\n+            if type_changed:\n+                item_type._empty_declaration = item_type.declaration_code('')",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r961874208",
            "id": 961874208,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45VQkg",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 3313,
            "original_position": 187,
            "original_start_line": 3308,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095136876,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/961874208/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-02T17:16:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/961874208",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r962098299"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/962098299"
                }
            },
            "author_association": "NONE",
            "body": "Someone wrote it so I wasn't sure if it is needed. Sure, I will remove it.",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-03T03:47:34Z",
            "diff_hunk": "@@ -3082,25 +3101,42 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def __init__(self, pos, **kw):\n+        super(ExprNode, self).__init__(pos, **kw)",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r962098299",
            "id": 962098299,
            "in_reply_to_id": 961863242,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45WHR7",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 3109,
            "original_position": 50,
            "original_start_line": 3108,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095459541,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/962098299/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-03T03:47:34Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/962098299",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r962100384"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/962100384"
                }
            },
            "author_association": "NONE",
            "body": "I'm not sure if item_type refers to the type of temporary variable that is reused inside a loop to store the result of an iterator for each iteration. When I tried to iterate std::map it caused a compilation error due to item_type being std::map<K, V>::value_type, which deduces to std::pair<const K, V>. Not sure if there is a better way to deal with this.",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-03T04:10:57Z",
            "diff_hunk": "@@ -3246,7 +3287,34 @@ def infer_type(self, env, iterator_type=None):\n             return fake_index_node.infer_type(env)\n \n     def analyse_types(self, env):\n+        def remove_const(item_type):\n+            \"\"\"\n+            Removes the constness of a given type and its underlying templates\n+            if any.\n+\n+            This is to solve the compilation error when the temporary variable used to\n+            store the result of an iterator cannot be changed due to its constness.\n+            For example, the value_type of std::map, which will also be the type of\n+            the temporarry variable, is std::pair<const Key, T>. This means the first\n+            component of the variable cannot be reused to store the result of each\n+            iteration, which leads to a compilation error.\n+            \"\"\"\n+            if item_type.is_const:\n+                item_type = item_type.cv_base_type\n+            if isinstance(item_type, CTypedefType):\n+                item_type = item_type.typedef_base_type",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r962100384",
            "id": 962100384,
            "in_reply_to_id": 961870566,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45WHyg",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 3298,
            "original_position": 179,
            "original_start_line": 3302,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095461445,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/962100384/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-03T04:10:57Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/962100384",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r962100566"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/962100566"
                }
            },
            "author_association": "NONE",
            "body": "I see. Maybe I will create a new type variable using CppClassType's constructor to make sure there is no side effects.",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-03T04:13:43Z",
            "diff_hunk": "@@ -3246,7 +3287,34 @@ def infer_type(self, env, iterator_type=None):\n             return fake_index_node.infer_type(env)\n \n     def analyse_types(self, env):\n+        def remove_const(item_type):\n+            \"\"\"\n+            Removes the constness of a given type and its underlying templates\n+            if any.\n+\n+            This is to solve the compilation error when the temporary variable used to\n+            store the result of an iterator cannot be changed due to its constness.\n+            For example, the value_type of std::map, which will also be the type of\n+            the temporarry variable, is std::pair<const Key, T>. This means the first\n+            component of the variable cannot be reused to store the result of each\n+            iteration, which leads to a compilation error.\n+            \"\"\"\n+            if item_type.is_const:\n+                item_type = item_type.cv_base_type\n+            if isinstance(item_type, CTypedefType):\n+                item_type = item_type.typedef_base_type\n+            type_changed = False\n+            if item_type.is_cpp_class and item_type.templates:\n+                for i in range(len(item_type.templates)):\n+                    if item_type.templates[i].is_const:\n+                        item_type.templates[i] = remove_const(item_type.templates[i])\n+                        type_changed = True\n+            if type_changed:\n+                item_type._empty_declaration = item_type.declaration_code('')",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r962100566",
            "id": 962100566,
            "in_reply_to_id": 961874208,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45WH1W",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 3313,
            "original_position": 187,
            "original_start_line": 3308,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095461611,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/962100566/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-03T04:13:43Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/962100566",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r962117322"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/962117322"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah I don't think I explained very well. I was proposing something like\r\n\r\n```\r\nwhile True:\r\n    item_type_in = item_type\r\n    if item_type.is_const:\r\n        item_type = item_type.cv_base_type\r\n    if isinstance(item_type, CTypedefType):\r\n        item_type = item_type.typedef_base_type\r\n    if item_type == item_type_in: break\r\n```\r\n\r\nI just thought that you weren't guaranteed to remove all the consts in one go\r\n    ",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-03T07:23:04Z",
            "diff_hunk": "@@ -3246,7 +3287,34 @@ def infer_type(self, env, iterator_type=None):\n             return fake_index_node.infer_type(env)\n \n     def analyse_types(self, env):\n+        def remove_const(item_type):\n+            \"\"\"\n+            Removes the constness of a given type and its underlying templates\n+            if any.\n+\n+            This is to solve the compilation error when the temporary variable used to\n+            store the result of an iterator cannot be changed due to its constness.\n+            For example, the value_type of std::map, which will also be the type of\n+            the temporarry variable, is std::pair<const Key, T>. This means the first\n+            component of the variable cannot be reused to store the result of each\n+            iteration, which leads to a compilation error.\n+            \"\"\"\n+            if item_type.is_const:\n+                item_type = item_type.cv_base_type\n+            if isinstance(item_type, CTypedefType):\n+                item_type = item_type.typedef_base_type",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r962117322",
            "id": 962117322,
            "in_reply_to_id": 961870566,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45WL7K",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 3298,
            "original_position": 179,
            "original_start_line": 3302,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095475069,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/962117322/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-03T07:23:05Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/962117322",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r964372843"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/964372843"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I would propose to combine `scope.lookup` into those functions and rename them to something like `lookup_sequence_begin`\r\nThey seem to be useless for anything else\r\nAnd we can always split functions in the future",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-07T04:35:30Z",
            "diff_hunk": "@@ -3082,25 +3099,39 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def _get_begin_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the first iterator.\n+        \"\"\"\n+        return \"begin\" if not self.reversed else \"rbegin\"\n+\n+    def _get_end_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the last iterator.\n+        \"\"\"\n+        return \"end\" if not self.reversed else \"rend\"\n+",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r964372843",
            "id": 964372843,
            "line": 3117,
            "node_id": "PRRC_kwDOABDGAc45eylr",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3117,
            "original_position": 59,
            "original_start_line": 3106,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 50,
            "pull_request_review_id": 1098509736,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/964372843/reactions"
            },
            "side": "RIGHT",
            "start_line": 3106,
            "start_side": "RIGHT",
            "updated_at": "2022-09-07T04:35:31Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/964372843",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r964444383"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/964444383"
                }
            },
            "author_association": "NONE",
            "body": "Sure. Should I change the functions to something like this?\r\n```python\r\ndef lookup_sequence_begin(self):\r\n  begin_name = \"begin\" if not self.reversed else \"rbegin\"\r\n  begin = self.sequence.type.scope.lookup(begin_name)\r\n  return begin\r\n\r\ndef lookup_sequence_end(self):\r\n  end_name = \"end\" if not self.reversed else \"rend\"\r\n  end = self.sequence.type.scope.lookup(end_name)\r\n  return end\r\n```",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-07T06:45:52Z",
            "diff_hunk": "@@ -3082,25 +3099,39 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def _get_begin_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the first iterator.\n+        \"\"\"\n+        return \"begin\" if not self.reversed else \"rbegin\"\n+\n+    def _get_end_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the last iterator.\n+        \"\"\"\n+        return \"end\" if not self.reversed else \"rend\"\n+",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r964444383",
            "id": 964444383,
            "in_reply_to_id": 964372843,
            "line": 3117,
            "node_id": "PRRC_kwDOABDGAc45fEDf",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3117,
            "original_position": 59,
            "original_start_line": 3106,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 50,
            "pull_request_review_id": 1098607851,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/964444383/reactions"
            },
            "side": "RIGHT",
            "start_line": 3106,
            "start_side": "RIGHT",
            "updated_at": "2022-09-07T06:45:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/964444383",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r964446329"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/964446329"
                }
            },
            "author_association": "MEMBER",
            "body": "Personally I don't think so - the names are also used as strings in the code generation step. And to generate error messages.",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-07T06:48:23Z",
            "diff_hunk": "@@ -3082,25 +3099,39 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def _get_begin_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the first iterator.\n+        \"\"\"\n+        return \"begin\" if not self.reversed else \"rbegin\"\n+\n+    def _get_end_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the last iterator.\n+        \"\"\"\n+        return \"end\" if not self.reversed else \"rend\"\n+",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r964446329",
            "id": 964446329,
            "in_reply_to_id": 964372843,
            "line": 3117,
            "node_id": "PRRC_kwDOABDGAc45fEh5",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3117,
            "original_position": 59,
            "original_start_line": 3106,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 50,
            "pull_request_review_id": 1098610511,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/964446329/reactions"
            },
            "side": "RIGHT",
            "start_line": 3106,
            "start_side": "RIGHT",
            "updated_at": "2022-09-07T06:49:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/964446329",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r964908676"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/964908676"
                }
            },
            "author_association": "NONE",
            "body": "Thanks for the comments from both of you. I decided to keep my code unchanged unless there is a bug in my code or a better way to refactor it.",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-07T14:20:49Z",
            "diff_hunk": "@@ -3082,25 +3099,39 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def _get_begin_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the first iterator.\n+        \"\"\"\n+        return \"begin\" if not self.reversed else \"rbegin\"\n+\n+    def _get_end_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the last iterator.\n+        \"\"\"\n+        return \"end\" if not self.reversed else \"rend\"\n+",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r964908676",
            "id": 964908676,
            "in_reply_to_id": 964372843,
            "line": 3117,
            "node_id": "PRRC_kwDOABDGAc45g1aE",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3117,
            "original_position": 59,
            "original_start_line": 3106,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 50,
            "pull_request_review_id": 1099272231,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/964908676/reactions"
            },
            "side": "RIGHT",
            "start_line": 3106,
            "start_side": "RIGHT",
            "updated_at": "2022-09-07T14:20:49Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/964908676",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r965345994"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/965345994"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "We can `return begin_name, begin`, but it's not critical :]\r\nMostly I just didn't like the underscores in the function names",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-07T22:19:11Z",
            "diff_hunk": "@@ -3082,25 +3099,39 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def _get_begin_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the first iterator.\n+        \"\"\"\n+        return \"begin\" if not self.reversed else \"rbegin\"\n+\n+    def _get_end_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the last iterator.\n+        \"\"\"\n+        return \"end\" if not self.reversed else \"rend\"\n+",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r965345994",
            "id": 965345994,
            "in_reply_to_id": 964372843,
            "line": 3117,
            "node_id": "PRRC_kwDOABDGAc45igLK",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3117,
            "original_position": 59,
            "original_start_line": 3106,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 50,
            "pull_request_review_id": 1099884452,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/965345994/reactions"
            },
            "side": "RIGHT",
            "start_line": 3106,
            "start_side": "RIGHT",
            "updated_at": "2022-09-07T22:19:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/965345994",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r965681245"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/965681245"
                }
            },
            "author_association": "NONE",
            "body": "I see. I was just trying to use underscores to indicate the functions were for internal use only. I don't think these functions are required externally. And the only thing I've come up with to make the code cleaner is to merge these functions into one like this:\r\n\r\n```python\r\ndef _get_itr_func_names(self):\r\n  \"\"\"\r\n  Returns the names of functions that returns the first and the last iterator.\r\n  \"\"\"\r\n  return (\"begin\", \"end\") if not self.reversed else (\"rbegin\", \"rend\")\r\n```",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-08T08:48:26Z",
            "diff_hunk": "@@ -3082,25 +3099,39 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def _get_begin_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the first iterator.\n+        \"\"\"\n+        return \"begin\" if not self.reversed else \"rbegin\"\n+\n+    def _get_end_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the last iterator.\n+        \"\"\"\n+        return \"end\" if not self.reversed else \"rend\"\n+",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r965681245",
            "id": 965681245,
            "in_reply_to_id": 964372843,
            "line": 3117,
            "node_id": "PRRC_kwDOABDGAc45jyBd",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3117,
            "original_position": 59,
            "original_start_line": 3106,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 50,
            "pull_request_review_id": 1100342003,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/965681245/reactions"
            },
            "side": "RIGHT",
            "start_line": 3106,
            "start_side": "RIGHT",
            "updated_at": "2022-09-08T08:48:26Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/965681245",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r967594169"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/967594169"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Hmm, usually I also use underscores for implementation details, functions that should not be called outside the class/module\r\nI am just not sure if those functoins have a use outside of this class\r\n\r\nAs I see, there is a call to get only `end_name`, so it's probably better to have two separate functions",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-10T05:06:39Z",
            "diff_hunk": "@@ -3082,25 +3099,39 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def _get_begin_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the first iterator.\n+        \"\"\"\n+        return \"begin\" if not self.reversed else \"rbegin\"\n+\n+    def _get_end_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the last iterator.\n+        \"\"\"\n+        return \"end\" if not self.reversed else \"rend\"\n+",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r967594169",
            "id": 967594169,
            "in_reply_to_id": 964372843,
            "line": 3117,
            "node_id": "PRRC_kwDOABDGAc45rFC5",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3117,
            "original_position": 59,
            "original_start_line": 3106,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 50,
            "pull_request_review_id": 1103069505,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/967594169/reactions"
            },
            "side": "RIGHT",
            "start_line": 3106,
            "start_side": "RIGHT",
            "updated_at": "2022-09-10T05:06:39Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/967594169",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r967886134"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/967886134"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nfrom .PyrexTypes import py_object_type, typecast, error_type, \\\r\n```\r\n\r\nI'd propose to undo this, and just look up the names in `PyrexTypes`. The names that we deliberately import are the ones used often while these are only used once",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-11T20:47:05Z",
            "diff_hunk": "@@ -31,7 +31,7 @@\n from . import Nodes\n from .Nodes import Node, utility_code_for_imports, SingleAssignmentNode\n from . import PyrexTypes\n-from .PyrexTypes import py_object_type, typecast, error_type, \\\n+from .PyrexTypes import CTypedefType, CppClassType, py_object_type, typecast, error_type, \\",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r967886134",
            "id": 967886134,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45sMU2",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 34,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1103352237,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/967886134/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-11T20:59:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/967886134",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r967886161"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/967886161"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                item_type = PyrexTypes.CppClassType(\r\n```",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-11T20:47:28Z",
            "diff_hunk": "@@ -3246,7 +3282,33 @@ def infer_type(self, env, iterator_type=None):\n             return fake_index_node.infer_type(env)\n \n     def analyse_types(self, env):\n+        def remove_const(item_type):\n+            \"\"\"\n+            Removes the constness of a given type and its underlying templates\n+            if any.\n+\n+            This is to solve the compilation error when the temporary variable used to\n+            store the result of an iterator cannot be changed due to its constness.\n+            For example, the value_type of std::map, which will also be the type of\n+            the temporarry variable, is std::pair<const Key, T>. This means the first\n+            component of the variable cannot be reused to store the result of each\n+            iteration, which leads to a compilation error.\n+            \"\"\"\n+            if item_type.is_const:\n+                item_type = item_type.cv_base_type\n+            if isinstance(item_type, CTypedefType):\n+                item_type = remove_const(item_type.typedef_base_type)\n+            if item_type.is_cpp_class and item_type.templates:\n+                templates = [remove_const(t) if t.is_const else t for t in item_type.templates]\n+                template_type = item_type.template_type\n+                item_type = CppClassType(",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r967886161",
            "id": 967886161,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45sMVR",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3304,
            "original_position": 179,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1103352237,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/967886161/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-11T20:59:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/967886161",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r967886384"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/967886384"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            if isinstance(item_type, CTypedefType):\r\n            if item_type.is_typedef:\r\n```",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-11T20:49:52Z",
            "diff_hunk": "@@ -3246,7 +3282,33 @@ def infer_type(self, env, iterator_type=None):\n             return fake_index_node.infer_type(env)\n \n     def analyse_types(self, env):\n+        def remove_const(item_type):\n+            \"\"\"\n+            Removes the constness of a given type and its underlying templates\n+            if any.\n+\n+            This is to solve the compilation error when the temporary variable used to\n+            store the result of an iterator cannot be changed due to its constness.\n+            For example, the value_type of std::map, which will also be the type of\n+            the temporarry variable, is std::pair<const Key, T>. This means the first\n+            component of the variable cannot be reused to store the result of each\n+            iteration, which leads to a compilation error.\n+            \"\"\"\n+            if item_type.is_const:\n+                item_type = item_type.cv_base_type\n+            if isinstance(item_type, CTypedefType):",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r967886384",
            "id": 967886384,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45sMYw",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3299,
            "original_position": 174,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1103352237,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/967886384/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-11T20:59:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/967886384",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r967886904"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/967886904"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    >>> test_iteration_over_reversed_map([(1, 10), (2, 20), (3, 30)])\r\n    3 30\r\n    2 20\r\n    1 10\r\n```\r\n\r\nJust suggesting giving the keys and values different values - putting the same number as both gives an obvious way of failing",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-11T20:53:54Z",
            "diff_hunk": "@@ -268,3 +272,68 @@ def test_iteration_over_attribute_of_call():\n     for i in get_object_with_iterable_attribute().vec:\n         print(i)\n \n+def test_iteration_over_reversed_list(py_v):\n+    \"\"\"\n+    >>> test_iteration_over_reversed_list([2, 4, 6])\n+    6\n+    4\n+    2\n+    \"\"\"\n+    cdef stdlist[int] lint\n+    for e in py_v:\n+        lint.push_back(e)\n+    for e in reversed(lint):\n+        print(e)\n+\n+def test_iteration_over_reversed_map(py_v):\n+    \"\"\"\n+    >>> test_iteration_over_reversed_map([(1, 1), (2, 2), (3, 3)])\n+    3 3\n+    2 2\n+    1 1",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r967886904",
            "id": 967886904,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45sMg4",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 293,
            "original_position": 33,
            "original_start_line": 290,
            "path": "tests/run/cpp_iterators.pyx",
            "position": null,
            "pull_request_review_id": 1103352237,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/967886904/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-11T20:59:36Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/967886904",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r967887152"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/967887152"
                }
            },
            "author_association": "MEMBER",
            "body": "Still think this would be better as a non-nested function given that it doesn't capture anything",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-11T20:56:36Z",
            "diff_hunk": "@@ -3246,7 +3282,33 @@ def infer_type(self, env, iterator_type=None):\n             return fake_index_node.infer_type(env)\n \n     def analyse_types(self, env):\n+        def remove_const(item_type):",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r967887152",
            "id": 967887152,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45sMkw",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3285,
            "original_position": 160,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1103352237,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/967887152/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-11T20:59:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/967887152",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r967915247"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/967915247"
                }
            },
            "author_association": "NONE",
            "body": "Maybe it's hard to tell at this stage. I'll leave it to someone who needs to modify it or comes up with a better implementation if possible.",
            "commit_id": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "created_at": "2022-09-12T00:38:20Z",
            "diff_hunk": "@@ -3082,25 +3099,39 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def _get_begin_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the first iterator.\n+        \"\"\"\n+        return \"begin\" if not self.reversed else \"rbegin\"\n+\n+    def _get_end_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the last iterator.\n+        \"\"\"\n+        return \"end\" if not self.reversed else \"rend\"\n+",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r967915247",
            "id": 967915247,
            "in_reply_to_id": 964372843,
            "line": 3117,
            "node_id": "PRRC_kwDOABDGAc45sTbv",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3117,
            "original_position": 59,
            "original_start_line": 3106,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 50,
            "pull_request_review_id": 1103381923,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/967915247/reactions"
            },
            "side": "RIGHT",
            "start_line": 3106,
            "start_side": "RIGHT",
            "updated_at": "2022-09-12T00:38:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/967915247",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5002/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/52bbe0ec9f405d413a32dc95dc1df826d395ae0d/comments",
            "commit": {
                "author": {
                    "date": "2022-09-12T00:22:58Z",
                    "email": "cche0109@student.monash.edu",
                    "name": "cche0109"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-09-12T00:22:58Z",
                    "email": "cche0109@student.monash.edu",
                    "name": "cche0109"
                },
                "message": "Implement reversed C++ iteration",
                "tree": {
                    "sha": "d80d7e0fdbff8a4fe85555304ef85be032222c5e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d80d7e0fdbff8a4fe85555304ef85be032222c5e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            },
            "html_url": "https://github.com/cython/cython/commit/52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "node_id": "C_kwDOH6S3t9oAKDUyYmJlMGVjOWY0MDVkNDEzYTMyZGM5NWRjMWRmODI2ZDM5NWFlMGQ",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3424926e9c8f03061b55516d2516a9f98999399e",
                    "sha": "3424926e9c8f03061b55516d2516a9f98999399e",
                    "url": "https://api.github.com/repos/cython/cython/commits/3424926e9c8f03061b55516d2516a9f98999399e"
                }
            ],
            "sha": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
            "url": "https://api.github.com/repos/cython/cython/commits/52bbe0ec9f405d413a32dc95dc1df826d395ae0d"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/5002/commits",
    "created_at": "2022-09-02T06:32:20Z",
    "diff_url": "https://github.com/cython/cython/pull/5002.diff",
    "draft": false,
    "head": {
        "label": "garychia:reversed-cpp-iteration",
        "ref": "reversed-cpp-iteration",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/garychia/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/garychia/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/garychia/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/garychia/cython/branches{/branch}",
            "clone_url": "https://github.com/garychia/cython.git",
            "collaborators_url": "https://api.github.com/repos/garychia/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/garychia/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/garychia/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/garychia/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/garychia/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/garychia/cython/contributors",
            "created_at": "2022-08-31T01:09:14Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/garychia/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/garychia/cython/downloads",
            "events_url": "https://api.github.com/repos/garychia/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/garychia/cython/forks",
            "full_name": "garychia/cython",
            "git_commits_url": "https://api.github.com/repos/garychia/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/garychia/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/garychia/cython/git/tags{/sha}",
            "git_url": "git://github.com/garychia/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/garychia/cython/hooks",
            "html_url": "https://github.com/garychia/cython",
            "id": 530888631,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/garychia/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/garychia/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/garychia/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/garychia/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/garychia/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/garychia/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/garychia/cython/merges",
            "milestones_url": "https://api.github.com/repos/garychia/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "R_kgDOH6S3tw",
            "notifications_url": "https://api.github.com/repos/garychia/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/garychia/cython/pulls{/number}",
            "pushed_at": "2022-09-12T00:23:11Z",
            "releases_url": "https://api.github.com/repos/garychia/cython/releases{/id}",
            "size": 62568,
            "ssh_url": "git@github.com:garychia/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/garychia/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/garychia/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/garychia/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/garychia/cython/subscription",
            "svn_url": "https://github.com/garychia/cython",
            "tags_url": "https://api.github.com/repos/garychia/cython/tags",
            "teams_url": "https://api.github.com/repos/garychia/cython/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/garychia/cython/git/trees{/sha}",
            "updated_at": "2022-09-07T01:41:08Z",
            "url": "https://api.github.com/repos/garychia/cython",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
            "events_url": "https://api.github.com/users/garychia/events{/privacy}",
            "followers_url": "https://api.github.com/users/garychia/followers",
            "following_url": "https://api.github.com/users/garychia/following{/other_user}",
            "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/garychia",
            "id": 88014292,
            "login": "garychia",
            "node_id": "MDQ6VXNlcjg4MDE0Mjky",
            "organizations_url": "https://api.github.com/users/garychia/orgs",
            "received_events_url": "https://api.github.com/users/garychia/received_events",
            "repos_url": "https://api.github.com/users/garychia/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/garychia"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/5002",
    "id": 1044543352,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/5002",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "a3f825efaab7a2d92aaf27c0b1d530ff6f386164",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOABDGAc4-Qnd4",
    "number": 5002,
    "patch_url": "https://github.com/cython/cython/pull/5002.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/5002/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/52bbe0ec9f405d413a32dc95dc1df826d395ae0d",
    "title": "Implement reversed C++ iteration",
    "updated_at": "2022-09-12T00:38:20Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/5002",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
        "events_url": "https://api.github.com/users/garychia/events{/privacy}",
        "followers_url": "https://api.github.com/users/garychia/followers",
        "following_url": "https://api.github.com/users/garychia/following{/other_user}",
        "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/garychia",
        "id": 88014292,
        "login": "garychia",
        "node_id": "MDQ6VXNlcjg4MDE0Mjky",
        "organizations_url": "https://api.github.com/users/garychia/orgs",
        "received_events_url": "https://api.github.com/users/garychia/received_events",
        "repos_url": "https://api.github.com/users/garychia/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/garychia"
    }
}