{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/5002/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/5002/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/5002"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/5002"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/5002/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/5002"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/78443305d84fcba7bc5c8faa6f343794e16653bc"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1325,
            "forks_count": 1325,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 1109,
            "open_issues_count": 1109,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2022-10-02T13:17:05Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 65487,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 7359,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "topics": [
                "big-data",
                "c",
                "cpp",
                "cpython",
                "cpython-extensions",
                "cython",
                "performance",
                "python"
            ],
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2022-10-02T14:09:40Z",
            "url": "https://api.github.com/repos/cython/cython",
            "visibility": "public",
            "watchers": 7359,
            "watchers_count": 7359,
            "web_commit_signoff_required": false
        },
        "sha": "ba2269e1d40bdfe13cee35b79ebc7175b8648ebf",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "This pull request aims to\r\n 1. support C++ classes with rbegin/rend implemented for reversed iteration, and\r\n 2. solve the compilation error when the type of temporary variable used to store the result of iterator has 'constness'.\r\nOne example of 2. is when iterating std::map, Cython uses std::map<Key, Value>::value_type as the type of temporary variable to store the value of an iterator. However, std::map<Key, Value>::value_type will deduce to std::pair<const Key, Value>, which cannot be reused within a loop as its first component is const.\r\n\r\nRelated to #2225",
    "closed_at": "2022-10-01T12:47:41Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r961367260"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/961367260"
                }
            },
            "author_association": "MEMBER",
            "body": "I think you need an extra check here. Not all `SimpleCallNode` hold names (some may be attributes for example)",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-02T07:24:12Z",
            "diff_hunk": "@@ -2899,12 +2899,30 @@ def analyse_types(self, env):\n         if self.expr_scope:\n             env = self.expr_scope  # actually evaluate sequence in this scope instead\n         self.sequence = self.sequence.analyse_types(env)\n+        def have_reversed_cpp_iteration():\n+            \"\"\"\n+            Returns True if it represents a reversed iteration over a C++ sequence.\n+\n+            This supports C++ classes with reversed_iterator implemented.\n+            \"\"\"\n+            reversed_cpp_iterable = False\n+            if isinstance(self.sequence, SimpleCallNode) and self.sequence.function.name == \"reversed\":",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r961367260",
            "id": 961367260,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45TUzc",
            "original_commit_id": "a1d6608a9eca57ffd458a142db86521ff19e8221",
            "original_line": 2909,
            "original_position": 20,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1094421739,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/961367260/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-02T07:24:13Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/961367260",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r961369012"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/961369012"
                }
            },
            "author_association": "MEMBER",
            "body": "We're still supporting Python 2 unfortunately so `super` needs to be spelled out. You actually don't need this `__init__` though - the default behaviour for a node is to add all keyword arguments as attributes",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-02T07:26:23Z",
            "diff_hunk": "@@ -3085,22 +3103,39 @@ class CppIteratorNode(ExprNode):\n \n     subexprs = ['sequence']\n \n+    def __init__(self, pos, reversed=False, **kw):\n+        super().__init__(pos, **kw)",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r961369012",
            "id": 961369012,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45TVO0",
            "original_commit_id": "a1d6608a9eca57ffd458a142db86521ff19e8221",
            "original_line": 3107,
            "original_position": 45,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1094424159,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/961369012/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-02T07:26:23Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/961369012",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r961862976"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/961862976"
                }
            },
            "author_association": "MEMBER",
            "body": "We generally prefer to check before doing things rather than catching exceptions. Especially with a bare `except` (which can catch anything). Specifically, if `env.find` calls `error` then it will cause some changes in Cython state and probably cause it to terminate even if you catch the exception.\r\n\r\nI suspect you can just do `self.sequence.arg_tuple.args[0].arg.entry` (or something very similar) rather than using `env.find`",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-02T16:56:48Z",
            "diff_hunk": "@@ -2899,12 +2899,31 @@ def analyse_types(self, env):\n         if self.expr_scope:\n             env = self.expr_scope  # actually evaluate sequence in this scope instead\n         self.sequence = self.sequence.analyse_types(env)\n+        def have_reversed_cpp_iteration():\n+            \"\"\"\n+            Returns True if it represents a reversed iteration over a C++ sequence.\n+\n+            This supports C++ classes with reversed_iterator implemented.\n+            \"\"\"\n+            reversed_cpp_iterable = False\n+            if isinstance(self.sequence, SimpleCallNode) and self.sequence.function.is_name and \\\n+                    self.sequence.function.name == \"reversed\":\n+                try:\n+                    arg = env.find(self.sequence.arg_tuple.args[0].arg.name, self.pos)\n+                    reversed_cpp_iterable = arg.type.is_cpp_class\n+                except:\n+                    pass",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r961862976",
            "id": 961862976,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45VN1A",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 2915,
            "original_position": 26,
            "original_start_line": 2911,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095136876,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/961862976/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-02T17:16:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/961862976",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r961863242"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/961863242"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```\r\n\r\nI don't think this is needed",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-02T16:57:11Z",
            "diff_hunk": "@@ -3082,25 +3101,42 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def __init__(self, pos, **kw):\n+        super(ExprNode, self).__init__(pos, **kw)",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r961863242",
            "id": 961863242,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45VN5K",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 3109,
            "original_position": 50,
            "original_start_line": 3108,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095136876,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/961863242/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-02T17:16:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/961863242",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r961864157"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/961864157"
                }
            },
            "author_association": "MEMBER",
            "body": "This might be better as a regular method rather than a nested function.",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-02T16:58:32Z",
            "diff_hunk": "@@ -2899,12 +2899,31 @@ def analyse_types(self, env):\n         if self.expr_scope:\n             env = self.expr_scope  # actually evaluate sequence in this scope instead\n         self.sequence = self.sequence.analyse_types(env)\n+        def have_reversed_cpp_iteration():",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r961864157",
            "id": 961864157,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45VOHd",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 2902,
            "original_position": 13,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095136876,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/961864157/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-02T17:16:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/961864157",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r961865452"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/961865452"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            if (isinstance(self.sequence, SimpleCallNode) and self.sequence.function.is_name and\r\n                    self.sequence.function.name == \"reversed\"):\r\n```\r\n\r\nPEP8 doesn't like trailing `\\`",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-02T17:00:28Z",
            "diff_hunk": "@@ -2899,12 +2899,31 @@ def analyse_types(self, env):\n         if self.expr_scope:\n             env = self.expr_scope  # actually evaluate sequence in this scope instead\n         self.sequence = self.sequence.analyse_types(env)\n+        def have_reversed_cpp_iteration():\n+            \"\"\"\n+            Returns True if it represents a reversed iteration over a C++ sequence.\n+\n+            This supports C++ classes with reversed_iterator implemented.\n+            \"\"\"\n+            reversed_cpp_iterable = False\n+            if isinstance(self.sequence, SimpleCallNode) and self.sequence.function.is_name and \\\n+                    self.sequence.function.name == \"reversed\":",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r961865452",
            "id": 961865452,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45VObs",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 2910,
            "original_position": 21,
            "original_start_line": 2909,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095136876,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/961865452/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-02T17:16:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/961865452",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r961870566"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/961870566"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't know if this should be in a `while` loop? I think that `item_type` out of a typedef could probably be const.",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-02T17:08:41Z",
            "diff_hunk": "@@ -3246,7 +3287,34 @@ def infer_type(self, env, iterator_type=None):\n             return fake_index_node.infer_type(env)\n \n     def analyse_types(self, env):\n+        def remove_const(item_type):\n+            \"\"\"\n+            Removes the constness of a given type and its underlying templates\n+            if any.\n+\n+            This is to solve the compilation error when the temporary variable used to\n+            store the result of an iterator cannot be changed due to its constness.\n+            For example, the value_type of std::map, which will also be the type of\n+            the temporarry variable, is std::pair<const Key, T>. This means the first\n+            component of the variable cannot be reused to store the result of each\n+            iteration, which leads to a compilation error.\n+            \"\"\"\n+            if item_type.is_const:\n+                item_type = item_type.cv_base_type\n+            if isinstance(item_type, CTypedefType):\n+                item_type = item_type.typedef_base_type",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r961870566",
            "id": 961870566,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45VPrm",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 3298,
            "original_position": 179,
            "original_start_line": 3302,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095136876,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/961870566/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-02T17:16:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/961870566",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r961874208"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/961874208"
                }
            },
            "author_association": "MEMBER",
            "body": "This feels dodgy - we reuse instances of types all over the place so you're probably modifying something that's used elsewhere.\r\n\r\nI'd do something like\r\n\r\n```\r\ntemplates = [ remove_const(t) if t.is_const else t for t in item_type.templates[i] ]\r\nitem_type = item_type.template_type.specialize(templates)\r\n```",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-02T17:14:18Z",
            "diff_hunk": "@@ -3246,7 +3287,34 @@ def infer_type(self, env, iterator_type=None):\n             return fake_index_node.infer_type(env)\n \n     def analyse_types(self, env):\n+        def remove_const(item_type):\n+            \"\"\"\n+            Removes the constness of a given type and its underlying templates\n+            if any.\n+\n+            This is to solve the compilation error when the temporary variable used to\n+            store the result of an iterator cannot be changed due to its constness.\n+            For example, the value_type of std::map, which will also be the type of\n+            the temporarry variable, is std::pair<const Key, T>. This means the first\n+            component of the variable cannot be reused to store the result of each\n+            iteration, which leads to a compilation error.\n+            \"\"\"\n+            if item_type.is_const:\n+                item_type = item_type.cv_base_type\n+            if isinstance(item_type, CTypedefType):\n+                item_type = item_type.typedef_base_type\n+            type_changed = False\n+            if item_type.is_cpp_class and item_type.templates:\n+                for i in range(len(item_type.templates)):\n+                    if item_type.templates[i].is_const:\n+                        item_type.templates[i] = remove_const(item_type.templates[i])\n+                        type_changed = True\n+            if type_changed:\n+                item_type._empty_declaration = item_type.declaration_code('')",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r961874208",
            "id": 961874208,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45VQkg",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 3313,
            "original_position": 187,
            "original_start_line": 3308,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095136876,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/961874208/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-02T17:16:41Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/961874208",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r962098299"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/962098299"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Someone wrote it so I wasn't sure if it is needed. Sure, I will remove it.",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-03T03:47:34Z",
            "diff_hunk": "@@ -3082,25 +3101,42 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def __init__(self, pos, **kw):\n+        super(ExprNode, self).__init__(pos, **kw)",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r962098299",
            "id": 962098299,
            "in_reply_to_id": 961863242,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45WHR7",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 3109,
            "original_position": 50,
            "original_start_line": 3108,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095459541,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/962098299/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-03T03:47:34Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/962098299",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r962100384"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/962100384"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm not sure if item_type refers to the type of temporary variable that is reused inside a loop to store the result of an iterator for each iteration. When I tried to iterate std::map it caused a compilation error due to item_type being std::map<K, V>::value_type, which deduces to std::pair<const K, V>. Not sure if there is a better way to deal with this.",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-03T04:10:57Z",
            "diff_hunk": "@@ -3246,7 +3287,34 @@ def infer_type(self, env, iterator_type=None):\n             return fake_index_node.infer_type(env)\n \n     def analyse_types(self, env):\n+        def remove_const(item_type):\n+            \"\"\"\n+            Removes the constness of a given type and its underlying templates\n+            if any.\n+\n+            This is to solve the compilation error when the temporary variable used to\n+            store the result of an iterator cannot be changed due to its constness.\n+            For example, the value_type of std::map, which will also be the type of\n+            the temporarry variable, is std::pair<const Key, T>. This means the first\n+            component of the variable cannot be reused to store the result of each\n+            iteration, which leads to a compilation error.\n+            \"\"\"\n+            if item_type.is_const:\n+                item_type = item_type.cv_base_type\n+            if isinstance(item_type, CTypedefType):\n+                item_type = item_type.typedef_base_type",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r962100384",
            "id": 962100384,
            "in_reply_to_id": 961870566,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45WHyg",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 3298,
            "original_position": 179,
            "original_start_line": 3302,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095461445,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/962100384/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-03T04:10:57Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/962100384",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r962100566"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/962100566"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I see. Maybe I will create a new type variable using CppClassType's constructor to make sure there is no side effects.",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-03T04:13:43Z",
            "diff_hunk": "@@ -3246,7 +3287,34 @@ def infer_type(self, env, iterator_type=None):\n             return fake_index_node.infer_type(env)\n \n     def analyse_types(self, env):\n+        def remove_const(item_type):\n+            \"\"\"\n+            Removes the constness of a given type and its underlying templates\n+            if any.\n+\n+            This is to solve the compilation error when the temporary variable used to\n+            store the result of an iterator cannot be changed due to its constness.\n+            For example, the value_type of std::map, which will also be the type of\n+            the temporarry variable, is std::pair<const Key, T>. This means the first\n+            component of the variable cannot be reused to store the result of each\n+            iteration, which leads to a compilation error.\n+            \"\"\"\n+            if item_type.is_const:\n+                item_type = item_type.cv_base_type\n+            if isinstance(item_type, CTypedefType):\n+                item_type = item_type.typedef_base_type\n+            type_changed = False\n+            if item_type.is_cpp_class and item_type.templates:\n+                for i in range(len(item_type.templates)):\n+                    if item_type.templates[i].is_const:\n+                        item_type.templates[i] = remove_const(item_type.templates[i])\n+                        type_changed = True\n+            if type_changed:\n+                item_type._empty_declaration = item_type.declaration_code('')",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r962100566",
            "id": 962100566,
            "in_reply_to_id": 961874208,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45WH1W",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 3313,
            "original_position": 187,
            "original_start_line": 3308,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095461611,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/962100566/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-03T04:13:43Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/962100566",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r962117322"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/962117322"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah I don't think I explained very well. I was proposing something like\r\n\r\n```\r\nwhile True:\r\n    item_type_in = item_type\r\n    if item_type.is_const:\r\n        item_type = item_type.cv_base_type\r\n    if isinstance(item_type, CTypedefType):\r\n        item_type = item_type.typedef_base_type\r\n    if item_type == item_type_in: break\r\n```\r\n\r\nI just thought that you weren't guaranteed to remove all the consts in one go\r\n    ",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-03T07:23:04Z",
            "diff_hunk": "@@ -3246,7 +3287,34 @@ def infer_type(self, env, iterator_type=None):\n             return fake_index_node.infer_type(env)\n \n     def analyse_types(self, env):\n+        def remove_const(item_type):\n+            \"\"\"\n+            Removes the constness of a given type and its underlying templates\n+            if any.\n+\n+            This is to solve the compilation error when the temporary variable used to\n+            store the result of an iterator cannot be changed due to its constness.\n+            For example, the value_type of std::map, which will also be the type of\n+            the temporarry variable, is std::pair<const Key, T>. This means the first\n+            component of the variable cannot be reused to store the result of each\n+            iteration, which leads to a compilation error.\n+            \"\"\"\n+            if item_type.is_const:\n+                item_type = item_type.cv_base_type\n+            if isinstance(item_type, CTypedefType):\n+                item_type = item_type.typedef_base_type",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r962117322",
            "id": 962117322,
            "in_reply_to_id": 961870566,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45WL7K",
            "original_commit_id": "0f877ce35ef8e6a0f88f1957c9b56da3c27d72af",
            "original_line": 3298,
            "original_position": 179,
            "original_start_line": 3302,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1095475069,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/962117322/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-03T07:23:05Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/962117322",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r964372843"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/964372843"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I would propose to combine `scope.lookup` into those functions and rename them to something like `lookup_sequence_begin`\r\nThey seem to be useless for anything else\r\nAnd we can always split functions in the future",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-07T04:35:30Z",
            "diff_hunk": "@@ -3082,25 +3099,39 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def _get_begin_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the first iterator.\n+        \"\"\"\n+        return \"begin\" if not self.reversed else \"rbegin\"\n+\n+    def _get_end_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the last iterator.\n+        \"\"\"\n+        return \"end\" if not self.reversed else \"rend\"\n+",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r964372843",
            "id": 964372843,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45eylr",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3117,
            "original_position": 59,
            "original_start_line": 3106,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1098509736,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/964372843/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-07T04:35:31Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/964372843",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r964444383"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/964444383"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Sure. Should I change the functions to something like this?\r\n```python\r\ndef lookup_sequence_begin(self):\r\n  begin_name = \"begin\" if not self.reversed else \"rbegin\"\r\n  begin = self.sequence.type.scope.lookup(begin_name)\r\n  return begin\r\n\r\ndef lookup_sequence_end(self):\r\n  end_name = \"end\" if not self.reversed else \"rend\"\r\n  end = self.sequence.type.scope.lookup(end_name)\r\n  return end\r\n```",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-07T06:45:52Z",
            "diff_hunk": "@@ -3082,25 +3099,39 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def _get_begin_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the first iterator.\n+        \"\"\"\n+        return \"begin\" if not self.reversed else \"rbegin\"\n+\n+    def _get_end_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the last iterator.\n+        \"\"\"\n+        return \"end\" if not self.reversed else \"rend\"\n+",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r964444383",
            "id": 964444383,
            "in_reply_to_id": 964372843,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45fEDf",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3117,
            "original_position": 59,
            "original_start_line": 3106,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1098607851,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/964444383/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-07T06:45:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/964444383",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r964446329"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/964446329"
                }
            },
            "author_association": "MEMBER",
            "body": "Personally I don't think so - the names are also used as strings in the code generation step. And to generate error messages.",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-07T06:48:23Z",
            "diff_hunk": "@@ -3082,25 +3099,39 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def _get_begin_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the first iterator.\n+        \"\"\"\n+        return \"begin\" if not self.reversed else \"rbegin\"\n+\n+    def _get_end_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the last iterator.\n+        \"\"\"\n+        return \"end\" if not self.reversed else \"rend\"\n+",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r964446329",
            "id": 964446329,
            "in_reply_to_id": 964372843,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45fEh5",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3117,
            "original_position": 59,
            "original_start_line": 3106,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1098610511,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/964446329/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-07T06:49:30Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/964446329",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r964908676"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/964908676"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for the comments from both of you. I decided to keep my code unchanged unless there is a bug in my code or a better way to refactor it.",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-07T14:20:49Z",
            "diff_hunk": "@@ -3082,25 +3099,39 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def _get_begin_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the first iterator.\n+        \"\"\"\n+        return \"begin\" if not self.reversed else \"rbegin\"\n+\n+    def _get_end_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the last iterator.\n+        \"\"\"\n+        return \"end\" if not self.reversed else \"rend\"\n+",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r964908676",
            "id": 964908676,
            "in_reply_to_id": 964372843,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45g1aE",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3117,
            "original_position": 59,
            "original_start_line": 3106,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1099272231,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/964908676/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-07T14:20:49Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/964908676",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r965345994"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/965345994"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "We can `return begin_name, begin`, but it's not critical :]\r\nMostly I just didn't like the underscores in the function names",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-07T22:19:11Z",
            "diff_hunk": "@@ -3082,25 +3099,39 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def _get_begin_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the first iterator.\n+        \"\"\"\n+        return \"begin\" if not self.reversed else \"rbegin\"\n+\n+    def _get_end_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the last iterator.\n+        \"\"\"\n+        return \"end\" if not self.reversed else \"rend\"\n+",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r965345994",
            "id": 965345994,
            "in_reply_to_id": 964372843,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45igLK",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3117,
            "original_position": 59,
            "original_start_line": 3106,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1099884452,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/965345994/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-07T22:19:11Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/965345994",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r965681245"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/965681245"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I see. I was just trying to use underscores to indicate the functions were for internal use only. I don't think these functions are required externally. And the only thing I've come up with to make the code cleaner is to merge these functions into one like this:\r\n\r\n```python\r\ndef _get_itr_func_names(self):\r\n  \"\"\"\r\n  Returns the names of functions that returns the first and the last iterator.\r\n  \"\"\"\r\n  return (\"begin\", \"end\") if not self.reversed else (\"rbegin\", \"rend\")\r\n```",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-08T08:48:26Z",
            "diff_hunk": "@@ -3082,25 +3099,39 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def _get_begin_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the first iterator.\n+        \"\"\"\n+        return \"begin\" if not self.reversed else \"rbegin\"\n+\n+    def _get_end_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the last iterator.\n+        \"\"\"\n+        return \"end\" if not self.reversed else \"rend\"\n+",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r965681245",
            "id": 965681245,
            "in_reply_to_id": 964372843,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45jyBd",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3117,
            "original_position": 59,
            "original_start_line": 3106,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1100342003,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/965681245/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-08T08:48:26Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/965681245",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r967594169"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/967594169"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Hmm, usually I also use underscores for implementation details, functions that should not be called outside the class/module\r\nI am just not sure if those functoins have a use outside of this class\r\n\r\nAs I see, there is a call to get only `end_name`, so it's probably better to have two separate functions",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-10T05:06:39Z",
            "diff_hunk": "@@ -3082,25 +3099,39 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def _get_begin_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the first iterator.\n+        \"\"\"\n+        return \"begin\" if not self.reversed else \"rbegin\"\n+\n+    def _get_end_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the last iterator.\n+        \"\"\"\n+        return \"end\" if not self.reversed else \"rend\"\n+",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r967594169",
            "id": 967594169,
            "in_reply_to_id": 964372843,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45rFC5",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3117,
            "original_position": 59,
            "original_start_line": 3106,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1103069505,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/967594169/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-10T05:06:39Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/967594169",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52697657?v=4",
                "events_url": "https://api.github.com/users/0dminnimda/events{/privacy}",
                "followers_url": "https://api.github.com/users/0dminnimda/followers",
                "following_url": "https://api.github.com/users/0dminnimda/following{/other_user}",
                "gists_url": "https://api.github.com/users/0dminnimda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0dminnimda",
                "id": 52697657,
                "login": "0dminnimda",
                "node_id": "MDQ6VXNlcjUyNjk3NjU3",
                "organizations_url": "https://api.github.com/users/0dminnimda/orgs",
                "received_events_url": "https://api.github.com/users/0dminnimda/received_events",
                "repos_url": "https://api.github.com/users/0dminnimda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0dminnimda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0dminnimda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0dminnimda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r967886134"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/967886134"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nfrom .PyrexTypes import py_object_type, typecast, error_type, \\\r\n```\r\n\r\nI'd propose to undo this, and just look up the names in `PyrexTypes`. The names that we deliberately import are the ones used often while these are only used once",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-11T20:47:05Z",
            "diff_hunk": "@@ -31,7 +31,7 @@\n from . import Nodes\n from .Nodes import Node, utility_code_for_imports, SingleAssignmentNode\n from . import PyrexTypes\n-from .PyrexTypes import py_object_type, typecast, error_type, \\\n+from .PyrexTypes import CTypedefType, CppClassType, py_object_type, typecast, error_type, \\",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r967886134",
            "id": 967886134,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45sMU2",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 34,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1103352237,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/967886134/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-11T20:59:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/967886134",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r967886161"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/967886161"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                item_type = PyrexTypes.CppClassType(\r\n```",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-11T20:47:28Z",
            "diff_hunk": "@@ -3246,7 +3282,33 @@ def infer_type(self, env, iterator_type=None):\n             return fake_index_node.infer_type(env)\n \n     def analyse_types(self, env):\n+        def remove_const(item_type):\n+            \"\"\"\n+            Removes the constness of a given type and its underlying templates\n+            if any.\n+\n+            This is to solve the compilation error when the temporary variable used to\n+            store the result of an iterator cannot be changed due to its constness.\n+            For example, the value_type of std::map, which will also be the type of\n+            the temporarry variable, is std::pair<const Key, T>. This means the first\n+            component of the variable cannot be reused to store the result of each\n+            iteration, which leads to a compilation error.\n+            \"\"\"\n+            if item_type.is_const:\n+                item_type = item_type.cv_base_type\n+            if isinstance(item_type, CTypedefType):\n+                item_type = remove_const(item_type.typedef_base_type)\n+            if item_type.is_cpp_class and item_type.templates:\n+                templates = [remove_const(t) if t.is_const else t for t in item_type.templates]\n+                template_type = item_type.template_type\n+                item_type = CppClassType(",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r967886161",
            "id": 967886161,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45sMVR",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3304,
            "original_position": 179,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1103352237,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/967886161/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-11T20:59:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/967886161",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r967886384"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/967886384"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            if isinstance(item_type, CTypedefType):\r\n            if item_type.is_typedef:\r\n```",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-11T20:49:52Z",
            "diff_hunk": "@@ -3246,7 +3282,33 @@ def infer_type(self, env, iterator_type=None):\n             return fake_index_node.infer_type(env)\n \n     def analyse_types(self, env):\n+        def remove_const(item_type):\n+            \"\"\"\n+            Removes the constness of a given type and its underlying templates\n+            if any.\n+\n+            This is to solve the compilation error when the temporary variable used to\n+            store the result of an iterator cannot be changed due to its constness.\n+            For example, the value_type of std::map, which will also be the type of\n+            the temporarry variable, is std::pair<const Key, T>. This means the first\n+            component of the variable cannot be reused to store the result of each\n+            iteration, which leads to a compilation error.\n+            \"\"\"\n+            if item_type.is_const:\n+                item_type = item_type.cv_base_type\n+            if isinstance(item_type, CTypedefType):",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r967886384",
            "id": 967886384,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45sMYw",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3299,
            "original_position": 174,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1103352237,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/967886384/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-11T20:59:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/967886384",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r967886904"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/967886904"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    >>> test_iteration_over_reversed_map([(1, 10), (2, 20), (3, 30)])\r\n    3 30\r\n    2 20\r\n    1 10\r\n```\r\n\r\nJust suggesting giving the keys and values different values - putting the same number as both gives an obvious way of failing",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-11T20:53:54Z",
            "diff_hunk": "@@ -268,3 +272,68 @@ def test_iteration_over_attribute_of_call():\n     for i in get_object_with_iterable_attribute().vec:\n         print(i)\n \n+def test_iteration_over_reversed_list(py_v):\n+    \"\"\"\n+    >>> test_iteration_over_reversed_list([2, 4, 6])\n+    6\n+    4\n+    2\n+    \"\"\"\n+    cdef stdlist[int] lint\n+    for e in py_v:\n+        lint.push_back(e)\n+    for e in reversed(lint):\n+        print(e)\n+\n+def test_iteration_over_reversed_map(py_v):\n+    \"\"\"\n+    >>> test_iteration_over_reversed_map([(1, 1), (2, 2), (3, 3)])\n+    3 3\n+    2 2\n+    1 1",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r967886904",
            "id": 967886904,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45sMg4",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 293,
            "original_position": 33,
            "original_start_line": 290,
            "path": "tests/run/cpp_iterators.pyx",
            "position": null,
            "pull_request_review_id": 1103352237,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/967886904/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-11T20:59:36Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/967886904",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r967887152"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/967887152"
                }
            },
            "author_association": "MEMBER",
            "body": "Still think this would be better as a non-nested function given that it doesn't capture anything",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-11T20:56:36Z",
            "diff_hunk": "@@ -3246,7 +3282,33 @@ def infer_type(self, env, iterator_type=None):\n             return fake_index_node.infer_type(env)\n \n     def analyse_types(self, env):\n+        def remove_const(item_type):",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r967887152",
            "id": 967887152,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45sMkw",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3285,
            "original_position": 160,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1103352237,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/967887152/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-11T20:59:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/967887152",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r967915247"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/967915247"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Maybe it's hard to tell at this stage. I'll leave it to someone who needs to modify it or comes up with a better implementation if possible.",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-12T00:38:20Z",
            "diff_hunk": "@@ -3082,25 +3099,39 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def _get_begin_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the first iterator.\n+        \"\"\"\n+        return \"begin\" if not self.reversed else \"rbegin\"\n+\n+    def _get_end_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the last iterator.\n+        \"\"\"\n+        return \"end\" if not self.reversed else \"rend\"\n+",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r967915247",
            "id": 967915247,
            "in_reply_to_id": 964372843,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45sTbv",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3117,
            "original_position": 59,
            "original_start_line": 3106,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1103381923,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/967915247/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-12T00:38:20Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/967915247",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r972936165"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/972936165"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think this is enough. There might be a module global (or even local) function called `reversed`, so we need to check that this function refers to the builtin, additionally. That can be done through the function's `entry`, probably with it's `is_builtin` attribute. Please also add a test for such a case (a local function seems easiest).",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-16T11:43:10Z",
            "diff_hunk": "@@ -2919,6 +2922,20 @@ def analyse_types(self, env):\n             PyrexTypes.CFuncTypeArg(\"it\", PyrexTypes.py_object_type, None),\n             ]))\n \n+    def has_reversed_cpp_iteration(self):\n+        \"\"\"\n+        Returns True if the 'reversed' function is applied to a C++ iterable.\n+\n+        This supports C++ classes with reverse_iterator implemented.\n+        \"\"\"\n+        reversed_cpp_iterable = False\n+        if (isinstance(self.sequence, SimpleCallNode) and self.sequence.function.is_name and self.sequence.function.name == \"reversed\"):",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r972936165",
            "id": 972936165,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45_dPl",
            "original_commit_id": "1c6ff0aae0b765ff95f6454edf78d9ee7bf133a8",
            "original_line": 2932,
            "original_position": 21,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1110553894,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/972936165/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-16T12:07:34Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/972936165",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r972938176"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/972938176"
                }
            },
            "author_association": "MEMBER",
            "body": "To simplify this long condition, you can just say `if not isinstance(…): \\n return False` etc. Long conditions and deep indentation are really overrated.",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-16T11:45:46Z",
            "diff_hunk": "@@ -2919,6 +2922,20 @@ def analyse_types(self, env):\n             PyrexTypes.CFuncTypeArg(\"it\", PyrexTypes.py_object_type, None),\n             ]))\n \n+    def has_reversed_cpp_iteration(self):\n+        \"\"\"\n+        Returns True if the 'reversed' function is applied to a C++ iterable.\n+\n+        This supports C++ classes with reverse_iterator implemented.\n+        \"\"\"\n+        reversed_cpp_iterable = False\n+        if (isinstance(self.sequence, SimpleCallNode) and self.sequence.function.is_name and self.sequence.function.name == \"reversed\"):",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r972938176",
            "id": 972938176,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45_dvA",
            "original_commit_id": "1c6ff0aae0b765ff95f6454edf78d9ee7bf133a8",
            "original_line": 2932,
            "original_position": 21,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1110553894,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/972938176/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-16T12:07:34Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/972938176",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r972940930"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/972940930"
                }
            },
            "author_association": "MEMBER",
            "body": "Please adapt the indentation here. Same above.\r\nI generally prefer a dedent to leftmost+1 immediately after an opening (formatting) parenthesis if it spans more than one line, specifically to avoid having to change unrelated lines in cases like this.",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-16T11:49:28Z",
            "diff_hunk": "@@ -3159,17 +3192,20 @@ def generate_result_code(self, code):\n                 code.putln(\"%s = %s%s;\" % (self.cpp_sequence_cname,\n                                            \"&\" if temp_type.is_ptr else \"\",\n                                            self.sequence.move_result_rhs()))\n-                code.putln(\"%s = %s%sbegin();\" % (self.result(), self.cpp_sequence_cname,\n-                                                  self.cpp_attribute_op))\n+                code.putln(\"%s = %s%s%s();\" % (self.result(), self.cpp_sequence_cname,\n+                                                  self.cpp_attribute_op,\n+                                                  begin_name))",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r972940930",
            "id": 972940930,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45_eaC",
            "original_commit_id": "1c6ff0aae0b765ff95f6454edf78d9ee7bf133a8",
            "original_line": 3197,
            "original_position": 130,
            "original_start_line": 3195,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1110553894,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/972940930/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-16T12:07:34Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/972940930",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r972943974"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/972943974"
                }
            },
            "author_association": "MEMBER",
            "body": "This seems more appropriate as a helper function in `PyrexTypes.py` than a static method here.",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-16T11:53:46Z",
            "diff_hunk": "@@ -3245,8 +3281,35 @@ def infer_type(self, env, iterator_type=None):\n                               type=PyrexTypes.c_py_ssize_t_type))\n             return fake_index_node.infer_type(env)\n \n+    @staticmethod\n+    def remove_const(item_type):\n+        \"\"\"\n+        Removes the constness of a given type and its underlying templates",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r972943974",
            "id": 972943974,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45_fJm",
            "original_commit_id": "1c6ff0aae0b765ff95f6454edf78d9ee7bf133a8",
            "original_line": 3287,
            "original_position": 154,
            "original_start_line": 3284,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1110553894,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/972943974/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-16T12:07:34Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/972943974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r972946835"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/972946835"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think it's worth having two functions for this. Even if we need just one name, we can return both and drop the other. The mental code overhead of calling both functions seems more costly than that.",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-16T11:57:33Z",
            "diff_hunk": "@@ -3082,25 +3099,39 @@ class CppIteratorNode(ExprNode):\n     cpp_attribute_op = \".\"\n     extra_dereference = \"\"\n     is_temp = True\n+    reversed = False\n \n     subexprs = ['sequence']\n \n+    def _get_begin_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the first iterator.\n+        \"\"\"\n+        return \"begin\" if not self.reversed else \"rbegin\"\n+\n+    def _get_end_name(self):\n+        \"\"\"\n+        Returns the name of function that returns the last iterator.\n+        \"\"\"\n+        return \"end\" if not self.reversed else \"rend\"\n+",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r972946835",
            "id": 972946835,
            "in_reply_to_id": 964372843,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45_f2T",
            "original_commit_id": "b70885bd7d5190632caf28e2a86ee5d7b24e95de",
            "original_line": 3117,
            "original_position": 59,
            "original_start_line": 3106,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1110553894,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/972946835/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-16T12:07:34Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/972946835",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r972948030"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/972948030"
                }
            },
            "author_association": "MEMBER",
            "body": "I think `is` is more appropriate here than `has`.\r\n```suggestion\r\n    def is_reversed_cpp_iteration(self):\r\n```",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-16T11:59:01Z",
            "diff_hunk": "@@ -2919,6 +2922,20 @@ def analyse_types(self, env):\n             PyrexTypes.CFuncTypeArg(\"it\", PyrexTypes.py_object_type, None),\n             ]))\n \n+    def has_reversed_cpp_iteration(self):",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r972948030",
            "id": 972948030,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc45_gI-",
            "original_commit_id": "1c6ff0aae0b765ff95f6454edf78d9ee7bf133a8",
            "original_line": 2925,
            "original_position": 14,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1110553894,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/972948030/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-16T12:07:34Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/972948030",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r973537325"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/973537325"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I see. I'll add something like\r\n```python\r\nif not self.sequence.function.entry.is_builtin:\r\n  return False\r\n```\r\nI'm not pretty sure about the test. Is it going to be like this?\r\n```python\r\ndef test_non_builtin_reversed_function(py_v):\r\n    \"\"\"\r\n    >>> test_non_builtin_reversed_function([1, 3, 5])\r\n    Non-buitin reversed called.\r\n    5\r\n    3\r\n    1\r\n    \"\"\"\r\n    def reversed(arg):\r\n        print(\"Non-buitin reversed called.\")\r\n        return arg[::-1]\r\n\r\n    cdef vector[int] vint\r\n    for e in py_v:\r\n        vint.push_back(e)\r\n    for e in reversed(vint):\r\n        print(e)\r\n```",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-17T04:17:42Z",
            "diff_hunk": "@@ -2919,6 +2922,20 @@ def analyse_types(self, env):\n             PyrexTypes.CFuncTypeArg(\"it\", PyrexTypes.py_object_type, None),\n             ]))\n \n+    def has_reversed_cpp_iteration(self):\n+        \"\"\"\n+        Returns True if the 'reversed' function is applied to a C++ iterable.\n+\n+        This supports C++ classes with reverse_iterator implemented.\n+        \"\"\"\n+        reversed_cpp_iterable = False\n+        if (isinstance(self.sequence, SimpleCallNode) and self.sequence.function.is_name and self.sequence.function.name == \"reversed\"):",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r973537325",
            "id": 973537325,
            "in_reply_to_id": 972936165,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc46BwAt",
            "original_commit_id": "1c6ff0aae0b765ff95f6454edf78d9ee7bf133a8",
            "original_line": 2932,
            "original_position": 21,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1111398566,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/973537325/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-17T04:17:42Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/973537325",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r973537530"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/973537530"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Just to make sure, is it going to be like this (in the same way somebody else did)?\r\n```python\r\ncode.putln(\"%s = %s%s%s();\" % (\r\n  self.result(),\r\n  self.sequence.result(),\r\n  self.cpp_attribute_op,\r\n  begin_name))\r\n```",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-17T04:19:47Z",
            "diff_hunk": "@@ -3159,17 +3192,20 @@ def generate_result_code(self, code):\n                 code.putln(\"%s = %s%s;\" % (self.cpp_sequence_cname,\n                                            \"&\" if temp_type.is_ptr else \"\",\n                                            self.sequence.move_result_rhs()))\n-                code.putln(\"%s = %s%sbegin();\" % (self.result(), self.cpp_sequence_cname,\n-                                                  self.cpp_attribute_op))\n+                code.putln(\"%s = %s%s%s();\" % (self.result(), self.cpp_sequence_cname,\n+                                                  self.cpp_attribute_op,\n+                                                  begin_name))",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r973537530",
            "id": 973537530,
            "in_reply_to_id": 972940930,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc46BwD6",
            "original_commit_id": "1c6ff0aae0b765ff95f6454edf78d9ee7bf133a8",
            "original_line": 3197,
            "original_position": 130,
            "original_start_line": 3195,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1111398714,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/973537530/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-09-17T04:33:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/973537530",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r973537833"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/973537833"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'll merge these two functions into one.",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-17T04:23:53Z",
            "diff_hunk": "@@ -2919,6 +2922,20 @@ def analyse_types(self, env):\n             PyrexTypes.CFuncTypeArg(\"it\", PyrexTypes.py_object_type, None),\n             ]))\n \n+    def has_reversed_cpp_iteration(self):",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r973537833",
            "id": 973537833,
            "in_reply_to_id": 972948030,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc46BwIp",
            "original_commit_id": "1c6ff0aae0b765ff95f6454edf78d9ee7bf133a8",
            "original_line": 2925,
            "original_position": 14,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1111398992,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/973537833/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-17T04:23:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/973537833",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r973552470"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/973552470"
                }
            },
            "author_association": "MEMBER",
            "body": "You have almost exactly the right idea. I'd make the test so that your new `reversed` does something different and obvious (so that it's clear that it's being called instead of the built-in). Which you have done with the `print `",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-09-17T07:15:39Z",
            "diff_hunk": "@@ -2919,6 +2922,20 @@ def analyse_types(self, env):\n             PyrexTypes.CFuncTypeArg(\"it\", PyrexTypes.py_object_type, None),\n             ]))\n \n+    def has_reversed_cpp_iteration(self):\n+        \"\"\"\n+        Returns True if the 'reversed' function is applied to a C++ iterable.\n+\n+        This supports C++ classes with reverse_iterator implemented.\n+        \"\"\"\n+        reversed_cpp_iterable = False\n+        if (isinstance(self.sequence, SimpleCallNode) and self.sequence.function.is_name and self.sequence.function.name == \"reversed\"):",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r973552470",
            "id": 973552470,
            "in_reply_to_id": 972936165,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc46BztW",
            "original_commit_id": "1c6ff0aae0b765ff95f6454edf78d9ee7bf133a8",
            "original_line": 2932,
            "original_position": 21,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1111410933,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/973552470/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-09-17T07:16:37Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/973552470",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r985073031"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/985073031"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        if not (isinstance(self.sequence, SimpleCallNode) and \r\n                len(self.sequence.args) == 1):\r\n```\r\n\r\nI'm just going to add an extra check in that it matches what we expect. ",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-10-01T08:57:25Z",
            "diff_hunk": "@@ -2919,6 +2922,24 @@ def analyse_types(self, env):\n             PyrexTypes.CFuncTypeArg(\"it\", PyrexTypes.py_object_type, None),\n             ]))\n \n+    def is_reversed_cpp_iteration(self):\n+        \"\"\"\n+        Returns True if the 'reversed' function is applied to a C++ iterable.\n+\n+        This supports C++ classes with reverse_iterator implemented.\n+        \"\"\"\n+        if not isinstance(self.sequence, SimpleCallNode):",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r985073031",
            "id": 985073031,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc46twWH",
            "original_commit_id": "7eb773f6733fa0ba1135c89b1f09d2442837adf7",
            "original_line": 2931,
            "original_position": 20,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1127504375,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/985073031/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-10-01T08:57:26Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/985073031",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r985073341"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/985073341"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                self.sequence.args_tuple and len(self.sequence.args_tuple) == 1):\r\n```",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-10-01T09:00:56Z",
            "diff_hunk": "@@ -2919,6 +2922,25 @@ def analyse_types(self, env):\n             PyrexTypes.CFuncTypeArg(\"it\", PyrexTypes.py_object_type, None),\n             ]))\n \n+    def is_reversed_cpp_iteration(self):\n+        \"\"\"\n+        Returns True if the 'reversed' function is applied to a C++ iterable.\n+\n+        This supports C++ classes with reverse_iterator implemented.\n+        \"\"\"\n+        if not (isinstance(self.sequence, SimpleCallNode) and \n+                len(self.sequence.args) == 1):",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r985073341",
            "id": 985073341,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc46twa9",
            "original_commit_id": "bbd2faad5d13fe1e6b3e5e117c037ce665182b9f",
            "original_line": 2932,
            "original_position": 21,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1127504644,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/985073341/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-10-01T09:00:56Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/985073341",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r985073712"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/985073712"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                self.sequence.arg_tuple and len(self.sequence.arg_tuple) == 1):\r\n```",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-10-01T09:04:54Z",
            "diff_hunk": "@@ -2919,6 +2922,25 @@ def analyse_types(self, env):\n             PyrexTypes.CFuncTypeArg(\"it\", PyrexTypes.py_object_type, None),\n             ]))\n \n+    def is_reversed_cpp_iteration(self):\n+        \"\"\"\n+        Returns True if the 'reversed' function is applied to a C++ iterable.\n+\n+        This supports C++ classes with reverse_iterator implemented.\n+        \"\"\"\n+        if not (isinstance(self.sequence, SimpleCallNode) and \n+                self.sequence.args_tuple and len(self.sequence.args_tuple) == 1):",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r985073712",
            "id": 985073712,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc46twgw",
            "original_commit_id": "7d851940f7a4fcdcf91c31753c4f1d0a1c66c33d",
            "original_line": 2932,
            "original_position": 21,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1127504986,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/985073712/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-10-01T09:04:54Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/985073712",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r985074073"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/985074073"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                self.sequence.arg_tuple and len(self.sequence.arg_tuple.args) == 1):\r\n```",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-10-01T09:09:18Z",
            "diff_hunk": "@@ -2919,6 +2922,25 @@ def analyse_types(self, env):\n             PyrexTypes.CFuncTypeArg(\"it\", PyrexTypes.py_object_type, None),\n             ]))\n \n+    def is_reversed_cpp_iteration(self):\n+        \"\"\"\n+        Returns True if the 'reversed' function is applied to a C++ iterable.\n+\n+        This supports C++ classes with reverse_iterator implemented.\n+        \"\"\"\n+        if not (isinstance(self.sequence, SimpleCallNode) and \n+                self.sequence.arg_tuple and len(self.sequence.arg_tuple) == 1):",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r985074073",
            "id": 985074073,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc46twmZ",
            "original_commit_id": "35e2632a3718fb500a75db03762e9ecf87490407",
            "original_line": 2932,
            "original_position": 21,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1127505377,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/985074073/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2022-10-01T09:09:19Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/985074073",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5002#discussion_r985074691"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5002"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/985074691"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        if not (isinstance(self.sequence, SimpleCallNode) and\r\n                self.sequence.arg_tuple and len(self.sequence.arg_tuple.args) == 1):\r\n```",
            "commit_id": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "created_at": "2022-10-01T09:14:46Z",
            "diff_hunk": "@@ -2919,6 +2922,25 @@ def analyse_types(self, env):\n             PyrexTypes.CFuncTypeArg(\"it\", PyrexTypes.py_object_type, None),\n             ]))\n \n+    def is_reversed_cpp_iteration(self):\n+        \"\"\"\n+        Returns True if the 'reversed' function is applied to a C++ iterable.\n+\n+        This supports C++ classes with reverse_iterator implemented.\n+        \"\"\"\n+        if not (isinstance(self.sequence, SimpleCallNode) and \n+                self.sequence.arg_tuple and len(self.sequence.arg_tuple.args) == 1):",
            "html_url": "https://github.com/cython/cython/pull/5002#discussion_r985074691",
            "id": 985074691,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc46twwD",
            "original_commit_id": "6aad53647a718d1868abf38cea21524115f688d3",
            "original_line": 2932,
            "original_position": 21,
            "original_start_line": 2931,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 1127505910,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5002",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/985074691/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2022-10-01T09:14:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/985074691",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5002/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1c6ff0aae0b765ff95f6454edf78d9ee7bf133a8/comments",
            "commit": {
                "author": {
                    "date": "2022-09-15T13:54:55Z",
                    "email": "s940046@hotmail.com",
                    "name": "Chia-Hsiang Cheng"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-09-15T13:54:55Z",
                    "email": "s940046@hotmail.com",
                    "name": "Chia-Hsiang Cheng"
                },
                "message": "Implement reversed C++ iteration",
                "tree": {
                    "sha": "70fbaf31601bfcb2f47ba26fd730209b49422718",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/70fbaf31601bfcb2f47ba26fd730209b49422718"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1c6ff0aae0b765ff95f6454edf78d9ee7bf133a8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            },
            "html_url": "https://github.com/cython/cython/commit/1c6ff0aae0b765ff95f6454edf78d9ee7bf133a8",
            "node_id": "C_kwDOH6S3t9oAKDFjNmZmMGFhZTBiNzY1ZmY5NWY2NDU0ZWRmNzhkOWVlN2JmMTMzYTg",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3424926e9c8f03061b55516d2516a9f98999399e",
                    "sha": "3424926e9c8f03061b55516d2516a9f98999399e",
                    "url": "https://api.github.com/repos/cython/cython/commits/3424926e9c8f03061b55516d2516a9f98999399e"
                }
            ],
            "sha": "1c6ff0aae0b765ff95f6454edf78d9ee7bf133a8",
            "url": "https://api.github.com/repos/cython/cython/commits/1c6ff0aae0b765ff95f6454edf78d9ee7bf133a8"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/391f705ef426ee0b765148a9e8f6b1f4bd6e701d/comments",
            "commit": {
                "author": {
                    "date": "2022-09-18T08:16:06Z",
                    "email": "s940046@hotmail.com",
                    "name": "Chia-Hsiang Cheng"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-09-18T08:16:06Z",
                    "email": "s940046@hotmail.com",
                    "name": "Chia-Hsiang Cheng"
                },
                "message": "Format and refine code",
                "tree": {
                    "sha": "2e5bc1951522da067262f4dad381da7092a8c7f5",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2e5bc1951522da067262f4dad381da7092a8c7f5"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/391f705ef426ee0b765148a9e8f6b1f4bd6e701d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            },
            "html_url": "https://github.com/cython/cython/commit/391f705ef426ee0b765148a9e8f6b1f4bd6e701d",
            "node_id": "C_kwDOH6S3t9oAKDM5MWY3MDVlZjQyNmVlMGI3NjUxNDhhOWU4ZjZiMWY0YmQ2ZTcwMWQ",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1c6ff0aae0b765ff95f6454edf78d9ee7bf133a8",
                    "sha": "1c6ff0aae0b765ff95f6454edf78d9ee7bf133a8",
                    "url": "https://api.github.com/repos/cython/cython/commits/1c6ff0aae0b765ff95f6454edf78d9ee7bf133a8"
                }
            ],
            "sha": "391f705ef426ee0b765148a9e8f6b1f4bd6e701d",
            "url": "https://api.github.com/repos/cython/cython/commits/391f705ef426ee0b765148a9e8f6b1f4bd6e701d"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7eb773f6733fa0ba1135c89b1f09d2442837adf7/comments",
            "commit": {
                "author": {
                    "date": "2022-09-18T08:25:55Z",
                    "email": "s940046@hotmail.com",
                    "name": "Chia-Hsiang Cheng"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-09-18T08:25:55Z",
                    "email": "s940046@hotmail.com",
                    "name": "Chia-Hsiang Cheng"
                },
                "message": "Add a test for non-built-in \"reversed\" functions",
                "tree": {
                    "sha": "0a5b468cf00c79ffc0b194cadecf4031bda90703",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0a5b468cf00c79ffc0b194cadecf4031bda90703"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7eb773f6733fa0ba1135c89b1f09d2442837adf7",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            },
            "html_url": "https://github.com/cython/cython/commit/7eb773f6733fa0ba1135c89b1f09d2442837adf7",
            "node_id": "C_kwDOH6S3t9oAKDdlYjc3M2Y2NzMzZmEwYmExMTM1Yzg5YjFmMDlkMjQ0MjgzN2FkZjc",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/391f705ef426ee0b765148a9e8f6b1f4bd6e701d",
                    "sha": "391f705ef426ee0b765148a9e8f6b1f4bd6e701d",
                    "url": "https://api.github.com/repos/cython/cython/commits/391f705ef426ee0b765148a9e8f6b1f4bd6e701d"
                }
            ],
            "sha": "7eb773f6733fa0ba1135c89b1f09d2442837adf7",
            "url": "https://api.github.com/repos/cython/cython/commits/7eb773f6733fa0ba1135c89b1f09d2442837adf7"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/bbd2faad5d13fe1e6b3e5e117c037ce665182b9f/comments",
            "commit": {
                "author": {
                    "date": "2022-10-01T08:57:42Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-10-01T08:57:42Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Add args length check",
                "tree": {
                    "sha": "ac00e12f50e9287ae355cf0df7d38955ad4babe4",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ac00e12f50e9287ae355cf0df7d38955ad4babe4"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/bbd2faad5d13fe1e6b3e5e117c037ce665182b9f",
                "verification": {
                    "payload": "tree ac00e12f50e9287ae355cf0df7d38955ad4babe4\nparent 7eb773f6733fa0ba1135c89b1f09d2442837adf7\nauthor da-woods <dw-git@d-woods.co.uk> 1664614662 +0100\ncommitter GitHub <noreply@github.com> 1664614662 +0100\n\nAdd args length check",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjOAEGCRBK7hj4Ov3rIwAA8EIIALIRw+fyvjh2HEBjKVA7Pa76\nZaVNEDRqu5qRCGFgNoHsOlaC6LFuJa6dKoBrku2+A4wsE27czwyDGeT1Z9jYwWAt\n0DK9Ofh/3q3IdVOwnjgvt+xFpkA2oRDfSKhAEP7sbU1/yZZSZE0J0FWJK8pSx2qy\nK2lSgWkbX5Gns7troGyJxjv+VU2UwSoqR9rcQ7vd2Kyleyl9hUJ+r42jXiaZihPb\nwXHG49bp8aZegYB4ISaPkt15UcOFcRwRTUzbu/y+djl8yoQvANyPkPKaEM8p4nd7\n3LyJHILjVEPxUyVjBVdIjYMY4A5U4Nhayviy225iJh8/IFvy5/ZAdpJTx8+xFVY=\n=eD4C\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/bbd2faad5d13fe1e6b3e5e117c037ce665182b9f",
            "node_id": "C_kwDOH6S3t9oAKGJiZDJmYWFkNWQxM2ZlMWU2YjNlNWUxMTdjMDM3Y2U2NjUxODJiOWY",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7eb773f6733fa0ba1135c89b1f09d2442837adf7",
                    "sha": "7eb773f6733fa0ba1135c89b1f09d2442837adf7",
                    "url": "https://api.github.com/repos/cython/cython/commits/7eb773f6733fa0ba1135c89b1f09d2442837adf7"
                }
            ],
            "sha": "bbd2faad5d13fe1e6b3e5e117c037ce665182b9f",
            "url": "https://api.github.com/repos/cython/cython/commits/bbd2faad5d13fe1e6b3e5e117c037ce665182b9f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7d851940f7a4fcdcf91c31753c4f1d0a1c66c33d/comments",
            "commit": {
                "author": {
                    "date": "2022-10-01T09:01:11Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-10-01T09:01:11Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Fix length check",
                "tree": {
                    "sha": "b821b320fe1b0b5aa77463146c0c4a59ec6b41c0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/b821b320fe1b0b5aa77463146c0c4a59ec6b41c0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7d851940f7a4fcdcf91c31753c4f1d0a1c66c33d",
                "verification": {
                    "payload": "tree b821b320fe1b0b5aa77463146c0c4a59ec6b41c0\nparent bbd2faad5d13fe1e6b3e5e117c037ce665182b9f\nauthor da-woods <dw-git@d-woods.co.uk> 1664614871 +0100\ncommitter GitHub <noreply@github.com> 1664614871 +0100\n\nFix length check",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjOAHXCRBK7hj4Ov3rIwAAikoIAJK0RBJcM6Z14COZM6the4b3\nfHIIBZKEUixYj3ZnoLbQ4hT4f2vf7FvQPr8eDK+5GlKHPeyOsF9YjAwV9IhlnEVp\nXTO3i4TR0tL8vWlWb34sXSP/Uns5OWlqeQ5+6r5bfH/9jQ79txU9g+yvjidR23Jy\na/bUSfww6d1jHMy0A8+RONIhJ4nrDS1GRzz9Ys9mdGr4x/LHbgW9e4mqRKoNsHBX\nLrUHHaX4FnLXcqbHYlo/eYub95Q0nBizO3mrbQ7uafzzjqTG+K4glm4DJ68tx7bQ\nj39PLFaA2AMkdWaSvfB63aej5htyO7QGcJVsNCtrz5aEekRsiJr/6lhAXSdBsAg=\n=TFqE\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/7d851940f7a4fcdcf91c31753c4f1d0a1c66c33d",
            "node_id": "C_kwDOH6S3t9oAKDdkODUxOTQwZjdhNGZjZGNmOTFjMzE3NTNjNGYxZDBhMWM2NmMzM2Q",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/bbd2faad5d13fe1e6b3e5e117c037ce665182b9f",
                    "sha": "bbd2faad5d13fe1e6b3e5e117c037ce665182b9f",
                    "url": "https://api.github.com/repos/cython/cython/commits/bbd2faad5d13fe1e6b3e5e117c037ce665182b9f"
                }
            ],
            "sha": "7d851940f7a4fcdcf91c31753c4f1d0a1c66c33d",
            "url": "https://api.github.com/repos/cython/cython/commits/7d851940f7a4fcdcf91c31753c4f1d0a1c66c33d"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/35e2632a3718fb500a75db03762e9ecf87490407/comments",
            "commit": {
                "author": {
                    "date": "2022-10-01T09:05:06Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-10-01T09:05:06Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Second try at fix!",
                "tree": {
                    "sha": "fdae3c4dd80dcd3f58cb74307805ca3c1f8c41d5",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/fdae3c4dd80dcd3f58cb74307805ca3c1f8c41d5"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/35e2632a3718fb500a75db03762e9ecf87490407",
                "verification": {
                    "payload": "tree fdae3c4dd80dcd3f58cb74307805ca3c1f8c41d5\nparent 7d851940f7a4fcdcf91c31753c4f1d0a1c66c33d\nauthor da-woods <dw-git@d-woods.co.uk> 1664615106 +0100\ncommitter GitHub <noreply@github.com> 1664615106 +0100\n\nSecond try at fix!",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjOALCCRBK7hj4Ov3rIwAAjGUIAKufUoj6em57tPsSAXveUvQ5\napcSZ4lg0m0ZlFgly9GqpKg+Tx9f/n11dqBEGOzu+AC2chMG4bwsXhe4L14cKLpL\n9bScI/JrGmgK79+1LvSnC8P5Tloke7t8qdiTnmS4UPmpNFClnAcuGZFLSDV9qEuZ\nI/w0kaVyIAHKVX4hKuZHqB3Z+0TdElf9RC0WqNKW32hp148FnESVLVBBKhwFdQwy\nrjmI5bFfJgdOoV54C36GjV2PmtoYVVdyykM3Pjb/wcT1MiNNLwHRqGX04h/7RZr2\nGhdbFifjCJw3waP7dJLHqqgY0Py3+MmAr+fWkRYH57S5YxOy3PXfvH9jnGo1UEw=\n=6Hss\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/35e2632a3718fb500a75db03762e9ecf87490407",
            "node_id": "C_kwDOH6S3t9oAKDM1ZTI2MzJhMzcxOGZiNTAwYTc1ZGIwMzc2MmU5ZWNmODc0OTA0MDc",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7d851940f7a4fcdcf91c31753c4f1d0a1c66c33d",
                    "sha": "7d851940f7a4fcdcf91c31753c4f1d0a1c66c33d",
                    "url": "https://api.github.com/repos/cython/cython/commits/7d851940f7a4fcdcf91c31753c4f1d0a1c66c33d"
                }
            ],
            "sha": "35e2632a3718fb500a75db03762e9ecf87490407",
            "url": "https://api.github.com/repos/cython/cython/commits/35e2632a3718fb500a75db03762e9ecf87490407"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6aad53647a718d1868abf38cea21524115f688d3/comments",
            "commit": {
                "author": {
                    "date": "2022-10-01T09:09:37Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-10-01T09:09:37Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Third try at fixing my mess\r\n\r\nnot doing very well here...",
                "tree": {
                    "sha": "42461c071d974bebc373556ab7c11fed27927054",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/42461c071d974bebc373556ab7c11fed27927054"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6aad53647a718d1868abf38cea21524115f688d3",
                "verification": {
                    "payload": "tree 42461c071d974bebc373556ab7c11fed27927054\nparent 35e2632a3718fb500a75db03762e9ecf87490407\nauthor da-woods <dw-git@d-woods.co.uk> 1664615377 +0100\ncommitter GitHub <noreply@github.com> 1664615377 +0100\n\nThird try at fixing my mess\r\n\r\nnot doing very well here...",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjOAPRCRBK7hj4Ov3rIwAAz80IAFxw2n30rIAr/GZc/rh3wOhS\n/sUeV6I9vFQGHHapyMt5R87sDUL5CwbnFttxOZf+klW74A3kob9WQr2u2rNP5Q3r\n4Sg60N2FlgUiTj6W/9ERttzHKXP2e/PbebC/DCmbtfCwqKB2626KmlvkBc90/XLY\nmRUhT4EN4ODAMxXTkdpGxSTXNyZ8JlJQAibl/ZcA5FhcE8Yfx2sMux1MW0Oucmdv\nwpWi0BuO67QveiNPFl3RvRZc+vMdwLx40V64v6wiA7iGZ42uJEDfoXr6MAOZSY2c\n2L4ITor9esM1SavIexLwVUHRtqFeejsyzVraoywsv2hq0+BA7FDfmHtGVEzEY2A=\n=857g\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/6aad53647a718d1868abf38cea21524115f688d3",
            "node_id": "C_kwDOH6S3t9oAKDZhYWQ1MzY0N2E3MThkMTg2OGFiZjM4Y2VhMjE1MjQxMTVmNjg4ZDM",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/35e2632a3718fb500a75db03762e9ecf87490407",
                    "sha": "35e2632a3718fb500a75db03762e9ecf87490407",
                    "url": "https://api.github.com/repos/cython/cython/commits/35e2632a3718fb500a75db03762e9ecf87490407"
                }
            ],
            "sha": "6aad53647a718d1868abf38cea21524115f688d3",
            "url": "https://api.github.com/repos/cython/cython/commits/6aad53647a718d1868abf38cea21524115f688d3"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/78443305d84fcba7bc5c8faa6f343794e16653bc/comments",
            "commit": {
                "author": {
                    "date": "2022-10-01T09:14:59Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-10-01T09:14:59Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Trailing whitespace",
                "tree": {
                    "sha": "bc8f7f9e889f7c0b3728e203d1191b747d0cf6fe",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/bc8f7f9e889f7c0b3728e203d1191b747d0cf6fe"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/78443305d84fcba7bc5c8faa6f343794e16653bc",
                "verification": {
                    "payload": "tree bc8f7f9e889f7c0b3728e203d1191b747d0cf6fe\nparent 6aad53647a718d1868abf38cea21524115f688d3\nauthor da-woods <dw-git@d-woods.co.uk> 1664615699 +0100\ncommitter GitHub <noreply@github.com> 1664615699 +0100\n\nTrailing whitespace",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjOAUTCRBK7hj4Ov3rIwAA70EIAGdFhenCHU4Z4ib40Xk/Oyma\n0Q9tmYOnXnDn6mzRHEdIY2wJG8HBZzBeNQRrsvZlrHhe1R2qDHMY7KkT9bXYJrdw\n1d8Pwjo8xVs+m19mzsVwVZYcpRH8+9UwQJeLUCTSEjMv4wv0tRUSyof8nBB/qulu\nQrcjgR0axON2jG02JA5Oq1XRIpu785S/Ow+1dImBH4xASNIL+XF8EaQSmnfw1Kf5\n0CtoAnKfK06XeK6wAK5IxAjsD7kLj055nzByNWkNaLLASqd0xnNA9Red4AuciHRe\n3FHo65UFOpFsoF4pZ0qB7n+9sd0tCYRjgQCFmw9mukG0GZZpgY2wjsZCSv7kD4k=\n=Mekr\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/78443305d84fcba7bc5c8faa6f343794e16653bc",
            "node_id": "C_kwDOH6S3t9oAKDc4NDQzMzA1ZDg0ZmNiYTdiYzVjOGZhYTZmMzQzNzk0ZTE2NjUzYmM",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6aad53647a718d1868abf38cea21524115f688d3",
                    "sha": "6aad53647a718d1868abf38cea21524115f688d3",
                    "url": "https://api.github.com/repos/cython/cython/commits/6aad53647a718d1868abf38cea21524115f688d3"
                }
            ],
            "sha": "78443305d84fcba7bc5c8faa6f343794e16653bc",
            "url": "https://api.github.com/repos/cython/cython/commits/78443305d84fcba7bc5c8faa6f343794e16653bc"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/5002/commits",
    "created_at": "2022-09-02T06:32:20Z",
    "diff_url": "https://github.com/cython/cython/pull/5002.diff",
    "draft": false,
    "head": {
        "label": "garychia:reversed-cpp-iteration",
        "ref": "reversed-cpp-iteration",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/garychia/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/garychia/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/garychia/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/garychia/cython/branches{/branch}",
            "clone_url": "https://github.com/garychia/cython.git",
            "collaborators_url": "https://api.github.com/repos/garychia/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/garychia/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/garychia/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/garychia/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/garychia/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/garychia/cython/contributors",
            "created_at": "2022-08-31T01:09:14Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/garychia/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/garychia/cython/downloads",
            "events_url": "https://api.github.com/repos/garychia/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/garychia/cython/forks",
            "full_name": "garychia/cython",
            "git_commits_url": "https://api.github.com/repos/garychia/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/garychia/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/garychia/cython/git/tags{/sha}",
            "git_url": "git://github.com/garychia/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/garychia/cython/hooks",
            "html_url": "https://github.com/garychia/cython",
            "id": 530888631,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/garychia/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/garychia/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/garychia/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/garychia/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/garychia/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/garychia/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/garychia/cython/merges",
            "milestones_url": "https://api.github.com/repos/garychia/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "R_kgDOH6S3tw",
            "notifications_url": "https://api.github.com/repos/garychia/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
                "events_url": "https://api.github.com/users/garychia/events{/privacy}",
                "followers_url": "https://api.github.com/users/garychia/followers",
                "following_url": "https://api.github.com/users/garychia/following{/other_user}",
                "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/garychia",
                "id": 88014292,
                "login": "garychia",
                "node_id": "MDQ6VXNlcjg4MDE0Mjky",
                "organizations_url": "https://api.github.com/users/garychia/orgs",
                "received_events_url": "https://api.github.com/users/garychia/received_events",
                "repos_url": "https://api.github.com/users/garychia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/garychia"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/garychia/cython/pulls{/number}",
            "pushed_at": "2022-10-02T02:56:58Z",
            "releases_url": "https://api.github.com/repos/garychia/cython/releases{/id}",
            "size": 62234,
            "ssh_url": "git@github.com:garychia/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/garychia/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/garychia/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/garychia/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/garychia/cython/subscription",
            "svn_url": "https://github.com/garychia/cython",
            "tags_url": "https://api.github.com/repos/garychia/cython/tags",
            "teams_url": "https://api.github.com/repos/garychia/cython/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/garychia/cython/git/trees{/sha}",
            "updated_at": "2022-09-07T01:41:08Z",
            "url": "https://api.github.com/repos/garychia/cython",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "78443305d84fcba7bc5c8faa6f343794e16653bc",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
            "events_url": "https://api.github.com/users/garychia/events{/privacy}",
            "followers_url": "https://api.github.com/users/garychia/followers",
            "following_url": "https://api.github.com/users/garychia/following{/other_user}",
            "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/garychia",
            "id": 88014292,
            "login": "garychia",
            "node_id": "MDQ6VXNlcjg4MDE0Mjky",
            "organizations_url": "https://api.github.com/users/garychia/orgs",
            "received_events_url": "https://api.github.com/users/garychia/received_events",
            "repos_url": "https://api.github.com/users/garychia/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/garychia"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/5002",
    "id": 1044543352,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/5002",
    "labels": [
        {
            "color": "f9d0c4",
            "default": false,
            "description": null,
            "id": 414805136,
            "name": "C++",
            "node_id": "MDU6TGFiZWw0MTQ4MDUxMzY=",
            "url": "https://api.github.com/repos/cython/cython/labels/C++"
        },
        {
            "color": "c2e0c6",
            "default": false,
            "description": null,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        }
    ],
    "locked": false,
    "merge_commit_sha": "d329339ba05ac76e0a83f539f173996e80cc89e1",
    "merged_at": "2022-10-01T12:47:41Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 716,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3str`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 38,
        "state": "open",
        "title": "3.0",
        "updated_at": "2022-10-01T14:05:58Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "PR_kwDOABDGAc4-Qnd4",
    "number": 5002,
    "patch_url": "https://github.com/cython/cython/pull/5002.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/5002/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/78443305d84fcba7bc5c8faa6f343794e16653bc",
    "title": "Implement reversed C++ iteration",
    "updated_at": "2022-10-02T02:56:58Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/5002",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/88014292?v=4",
        "events_url": "https://api.github.com/users/garychia/events{/privacy}",
        "followers_url": "https://api.github.com/users/garychia/followers",
        "following_url": "https://api.github.com/users/garychia/following{/other_user}",
        "gists_url": "https://api.github.com/users/garychia/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/garychia",
        "id": 88014292,
        "login": "garychia",
        "node_id": "MDQ6VXNlcjg4MDE0Mjky",
        "organizations_url": "https://api.github.com/users/garychia/orgs",
        "received_events_url": "https://api.github.com/users/garychia/received_events",
        "repos_url": "https://api.github.com/users/garychia/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/garychia/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/garychia/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/garychia"
    }
}