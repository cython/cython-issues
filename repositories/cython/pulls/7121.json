{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/7121/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/7121/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/7121"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/7121"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/7121/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/7121"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/efa7cc669884eb816b561caada7c076afeae10ae"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1559,
            "forks_count": 1559,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 1466,
            "open_issues_count": 1466,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2025-09-06T13:11:39Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 76856,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 10256,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "topics": [
                "big-data",
                "c",
                "cpp",
                "cpython",
                "cpython-extensions",
                "cython",
                "performance",
                "python"
            ],
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2025-09-06T10:17:28Z",
            "url": "https://api.github.com/repos/cython/cython",
            "visibility": "public",
            "watchers": 10256,
            "watchers_count": 10256,
            "web_commit_signoff_required": false
        },
        "sha": "f8b2fcc1014bc9bdf2a849b997a1bd03fd6a8918",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython",
            "user_view_type": "public"
        }
    },
    "body": "Adds new syntax for function types (#4279) and C++ reference types:\r\n* `cython.pointer[cython.function_type([cython.int], cython.double)]` -> `double (*)(int) except *`\r\n* `cython.reference[T]` -> `T&`\r\n* `cython.rvalue_reference[T]` -> `T&&`",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/7121#discussion_r2310154725"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/7121"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/2310154725"
                }
            },
            "author_association": "MEMBER",
            "body": "A better error position would be the non-parsable argument.\r\n```suggestion\r\n            param_types = [arg.analyse_as_type(env) for arg in func_args]\r\n            if None in param_types:\r\n                error(func_args[param_types.index(None)].pos, \"Unknown type in parameter types\")\r\n```",
            "commit_id": "efa7cc669884eb816b561caada7c076afeae10ae",
            "created_at": "2025-08-29T13:22:55Z",
            "diff_hunk": "@@ -6158,6 +6164,53 @@ def set_py_result_type(self, function, func_type=None):\n             elif result_type.equivalent_type:\n                 self.type = result_type.equivalent_type\n \n+    def analyse_as_type(self, env):\n+        attr = self.function.as_cython_attribute()\n+        if attr == 'function_type':\n+            args, kwargs = self.explicit_args_kwds()\n+            if len(args) != 2:\n+                error(self.args.pos, \"function_type requires exactly two positional arguments.\")\n+                return None\n+            if not isinstance(args[0], ListNode):\n+                error(args[0].pos, \"First argument of function_type must be a list of parameter types.\")\n+                return None\n+            if kwargs is not None and not isinstance(kwargs, DictNode):\n+                error(kwargs.pos, \"function_type kwargs should be in a dictionary.\")\n+                return None\n+            param_types = [arg.analyse_as_type(env) for arg in args[0].args]\n+            if None in param_types:\n+                error(args[0].pos, \"Unknown type in parameter types\")",
            "html_url": "https://github.com/cython/cython/pull/7121#discussion_r2310154725",
            "id": 2310154725,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc6Jsinl",
            "original_commit_id": "a7bc96cb3efd8085e772689237ed520cbac020f3",
            "original_line": 6182,
            "original_position": 41,
            "original_start_line": 6180,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 1,
            "pull_request_review_id": 3168724793,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/7121",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/2310154725/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-29T19:26:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/2310154725",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/7121#discussion_r2310160194"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/7121"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/2310160194"
                }
            },
            "author_association": "MEMBER",
            "body": "Let's give names to the two arguments and then work from there.\r\n```suggestion\r\n            args, kwargs = self.explicit_args_kwds()\r\n            if len(args) != 2:\r\n                error(self.args.pos, \"function_type requires exactly two positional arguments.\")\r\n                return None\r\n            func_args, func_return = args\r\n```",
            "commit_id": "efa7cc669884eb816b561caada7c076afeae10ae",
            "created_at": "2025-08-29T13:25:19Z",
            "diff_hunk": "@@ -6158,6 +6164,53 @@ def set_py_result_type(self, function, func_type=None):\n             elif result_type.equivalent_type:\n                 self.type = result_type.equivalent_type\n \n+    def analyse_as_type(self, env):\n+        attr = self.function.as_cython_attribute()\n+        if attr == 'function_type':\n+            args, kwargs = self.explicit_args_kwds()\n+            if len(args) != 2:\n+                error(self.args.pos, \"function_type requires exactly two positional arguments.\")\n+                return None",
            "html_url": "https://github.com/cython/cython/pull/7121#discussion_r2310160194",
            "id": 2310160194,
            "line": 6173,
            "node_id": "PRRC_kwDOABDGAc6Jsj9C",
            "original_commit_id": "a7bc96cb3efd8085e772689237ed520cbac020f3",
            "original_line": 6173,
            "original_position": 32,
            "original_start_line": 6170,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 32,
            "pull_request_review_id": 3168724793,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/7121",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/2310160194/reactions"
            },
            "side": "RIGHT",
            "start_line": 6170,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-29T19:26:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/2310160194",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/7121#discussion_r2310163898"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/7121"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/2310163898"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            if not isinstance(func_args, ListNode):\r\n                error(func_args.pos, \"First argument of function_type must be a list of parameter types.\")\r\n                return None\r\n```",
            "commit_id": "efa7cc669884eb816b561caada7c076afeae10ae",
            "created_at": "2025-08-29T13:26:57Z",
            "diff_hunk": "@@ -6158,6 +6164,53 @@ def set_py_result_type(self, function, func_type=None):\n             elif result_type.equivalent_type:\n                 self.type = result_type.equivalent_type\n \n+    def analyse_as_type(self, env):\n+        attr = self.function.as_cython_attribute()\n+        if attr == 'function_type':\n+            args, kwargs = self.explicit_args_kwds()\n+            if len(args) != 2:\n+                error(self.args.pos, \"function_type requires exactly two positional arguments.\")\n+                return None\n+            if not isinstance(args[0], ListNode):\n+                error(args[0].pos, \"First argument of function_type must be a list of parameter types.\")\n+                return None",
            "html_url": "https://github.com/cython/cython/pull/7121#discussion_r2310163898",
            "id": 2310163898,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc6Jsk26",
            "original_commit_id": "a7bc96cb3efd8085e772689237ed520cbac020f3",
            "original_line": 6176,
            "original_position": 35,
            "original_start_line": 6174,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 1,
            "pull_request_review_id": 3168724793,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/7121",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/2310163898/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-29T19:26:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/2310163898",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/7121#discussion_r2310165479"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/7121"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/2310165479"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            ret_type = func_return.analyse_as_type(env)\r\n            if ret_type is None:\r\n                error(func_return.pos, \"Unknown return type\")\r\n```",
            "commit_id": "efa7cc669884eb816b561caada7c076afeae10ae",
            "created_at": "2025-08-29T13:27:38Z",
            "diff_hunk": "@@ -6158,6 +6164,53 @@ def set_py_result_type(self, function, func_type=None):\n             elif result_type.equivalent_type:\n                 self.type = result_type.equivalent_type\n \n+    def analyse_as_type(self, env):\n+        attr = self.function.as_cython_attribute()\n+        if attr == 'function_type':\n+            args, kwargs = self.explicit_args_kwds()\n+            if len(args) != 2:\n+                error(self.args.pos, \"function_type requires exactly two positional arguments.\")\n+                return None\n+            if not isinstance(args[0], ListNode):\n+                error(args[0].pos, \"First argument of function_type must be a list of parameter types.\")\n+                return None\n+            if kwargs is not None and not isinstance(kwargs, DictNode):\n+                error(kwargs.pos, \"function_type kwargs should be in a dictionary.\")\n+                return None\n+            param_types = [arg.analyse_as_type(env) for arg in args[0].args]\n+            if None in param_types:\n+                error(args[0].pos, \"Unknown type in parameter types\")\n+                return None\n+            ret_type = args[1].analyse_as_type(env)\n+            if ret_type is None:\n+                error(args[1].pos, \"Unknown return type\")",
            "html_url": "https://github.com/cython/cython/pull/7121#discussion_r2310165479",
            "id": 2310165479,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc6JslPn",
            "original_commit_id": "a7bc96cb3efd8085e772689237ed520cbac020f3",
            "original_line": 6186,
            "original_position": 45,
            "original_start_line": 6184,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 1,
            "pull_request_review_id": 3168724793,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/7121",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/2310165479/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-29T19:26:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/2310165479",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/7121#discussion_r2310879127"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/7121"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/2310879127"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            if kwargs is not None and not isinstance(kwargs.constant_result, dict):\r\n                error(kwargs.pos, \"function_type kwargs should be in a constant dictionary.\")\r\n                return None\r\n```",
            "commit_id": "efa7cc669884eb816b561caada7c076afeae10ae",
            "created_at": "2025-08-29T18:54:59Z",
            "diff_hunk": "@@ -6158,6 +6164,53 @@ def set_py_result_type(self, function, func_type=None):\n             elif result_type.equivalent_type:\n                 self.type = result_type.equivalent_type\n \n+    def analyse_as_type(self, env):\n+        attr = self.function.as_cython_attribute()\n+        if attr == 'function_type':\n+            args, kwargs = self.explicit_args_kwds()\n+            if len(args) != 2:\n+                error(self.args.pos, \"function_type requires exactly two positional arguments.\")\n+                return None\n+            if not isinstance(args[0], ListNode):\n+                error(args[0].pos, \"First argument of function_type must be a list of parameter types.\")\n+                return None\n+            if kwargs is not None and not isinstance(kwargs, DictNode):\n+                error(kwargs.pos, \"function_type kwargs should be in a dictionary.\")\n+                return None",
            "html_url": "https://github.com/cython/cython/pull/7121#discussion_r2310879127",
            "id": 2310879127,
            "line": 6180,
            "node_id": "PRRC_kwDOABDGAc6JvTeX",
            "original_commit_id": "a7bc96cb3efd8085e772689237ed520cbac020f3",
            "original_line": 6179,
            "original_position": 38,
            "original_start_line": 6177,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 39,
            "pull_request_review_id": 3168724793,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/7121",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/2310879127/reactions"
            },
            "side": "RIGHT",
            "start_line": 6178,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-29T19:26:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/2310879127",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/7121#discussion_r2310882978"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/7121"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/2310882978"
                }
            },
            "author_association": "MEMBER",
            "body": "`compile_time_value` is the `DEF` command support, only used inside of the parser. There is a separate \"constant folding\" phase in the compiler run that builds constants.\r\n```suggestion\r\n                for k, v in kwargs.constant_result.items():\r\n```",
            "commit_id": "efa7cc669884eb816b561caada7c076afeae10ae",
            "created_at": "2025-08-29T18:57:31Z",
            "diff_hunk": "@@ -6158,6 +6164,53 @@ def set_py_result_type(self, function, func_type=None):\n             elif result_type.equivalent_type:\n                 self.type = result_type.equivalent_type\n \n+    def analyse_as_type(self, env):\n+        attr = self.function.as_cython_attribute()\n+        if attr == 'function_type':\n+            args, kwargs = self.explicit_args_kwds()\n+            if len(args) != 2:\n+                error(self.args.pos, \"function_type requires exactly two positional arguments.\")\n+                return None\n+            if not isinstance(args[0], ListNode):\n+                error(args[0].pos, \"First argument of function_type must be a list of parameter types.\")\n+                return None\n+            if kwargs is not None and not isinstance(kwargs, DictNode):\n+                error(kwargs.pos, \"function_type kwargs should be in a dictionary.\")\n+                return None\n+            param_types = [arg.analyse_as_type(env) for arg in args[0].args]\n+            if None in param_types:\n+                error(args[0].pos, \"Unknown type in parameter types\")\n+                return None\n+            ret_type = args[1].analyse_as_type(env)\n+            if ret_type is None:\n+                error(args[1].pos, \"Unknown return type\")\n+            func_type_kwargs = {\n+                'exception_value': None,\n+                'exception_check': True\n+            }\n+            if kwargs is not None:\n+                kwargs = kwargs.compile_time_value(env)\n+                for k, v in (kwargs or {}).items():",
            "html_url": "https://github.com/cython/cython/pull/7121#discussion_r2310882978",
            "id": 2310882978,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc6JvUai",
            "original_commit_id": "a7bc96cb3efd8085e772689237ed520cbac020f3",
            "original_line": 6193,
            "original_position": 52,
            "original_start_line": 6192,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 1,
            "pull_request_review_id": 3168724793,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/7121",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/2310882978/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-29T19:26:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/2310882978",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/7121#discussion_r2314155894"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/7121"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/2314155894"
                }
            },
            "author_association": "NONE",
            "body": "This doesn't work, I'm getting `kwargs.constant_result == <object object at 0x000001EF1E2F3720>`, not a `dict`.\r\n`analyse_const_expression` also doesn't work on a whole `DictNode` at once.\r\n\r\nBut I can use `constant_result` on the individual keys/values, and avoid `compile_time_value` that way.",
            "commit_id": "efa7cc669884eb816b561caada7c076afeae10ae",
            "created_at": "2025-09-01T14:48:05Z",
            "diff_hunk": "@@ -6158,6 +6164,53 @@ def set_py_result_type(self, function, func_type=None):\n             elif result_type.equivalent_type:\n                 self.type = result_type.equivalent_type\n \n+    def analyse_as_type(self, env):\n+        attr = self.function.as_cython_attribute()\n+        if attr == 'function_type':\n+            args, kwargs = self.explicit_args_kwds()\n+            if len(args) != 2:\n+                error(self.args.pos, \"function_type requires exactly two positional arguments.\")\n+                return None\n+            if not isinstance(args[0], ListNode):\n+                error(args[0].pos, \"First argument of function_type must be a list of parameter types.\")\n+                return None\n+            if kwargs is not None and not isinstance(kwargs, DictNode):\n+                error(kwargs.pos, \"function_type kwargs should be in a dictionary.\")\n+                return None",
            "html_url": "https://github.com/cython/cython/pull/7121#discussion_r2314155894",
            "id": 2314155894,
            "in_reply_to_id": 2310879127,
            "line": 6180,
            "node_id": "PRRC_kwDOABDGAc6J7zd2",
            "original_commit_id": "a7bc96cb3efd8085e772689237ed520cbac020f3",
            "original_line": 6179,
            "original_position": 38,
            "original_start_line": 6177,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 39,
            "pull_request_review_id": 3173949235,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/7121",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/2314155894/reactions"
            },
            "side": "RIGHT",
            "start_line": 6178,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-01T14:48:05Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/2314155894",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/146099301?v=4",
                "events_url": "https://api.github.com/users/dgrunwald-qt/events{/privacy}",
                "followers_url": "https://api.github.com/users/dgrunwald-qt/followers",
                "following_url": "https://api.github.com/users/dgrunwald-qt/following{/other_user}",
                "gists_url": "https://api.github.com/users/dgrunwald-qt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dgrunwald-qt",
                "id": 146099301,
                "login": "dgrunwald-qt",
                "node_id": "U_kgDOCLVMZQ",
                "organizations_url": "https://api.github.com/users/dgrunwald-qt/orgs",
                "received_events_url": "https://api.github.com/users/dgrunwald-qt/received_events",
                "repos_url": "https://api.github.com/users/dgrunwald-qt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dgrunwald-qt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dgrunwald-qt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dgrunwald-qt",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/7121#discussion_r2315659937"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/7121"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/2315659937"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                for kv_pair in kwargs.key_value_pairs:\r\n                    if not kv_pair.value.has_constant_result():\r\n                        error(kv_pair.value.pos, \"Value of function type parameter is not a constant\")\r\n                    k = kv_pair.key.constant_result\r\n                    v = kv_pair.value.constant_result\r\n```",
            "commit_id": "efa7cc669884eb816b561caada7c076afeae10ae",
            "created_at": "2025-09-02T10:29:34Z",
            "diff_hunk": "@@ -6158,6 +6164,77 @@ def set_py_result_type(self, function, func_type=None):\n             elif result_type.equivalent_type:\n                 self.type = result_type.equivalent_type\n \n+    def analyse_as_type(self, env):\n+        attr = self.function.as_cython_attribute()\n+        if attr == 'function_type':\n+            args, kwargs = self.explicit_args_kwds()\n+            if len(args) != 2:\n+                error(self.args.pos, \"function_type requires exactly two positional arguments.\")\n+                return None\n+            func_args, func_return = args\n+            if not isinstance(func_args, ListNode):\n+                error(func_args.pos, \"First argument of function_type must be a list literal with parameter types.\")\n+                return None\n+            if kwargs is not None and not isinstance(kwargs, DictNode):\n+                error(kwargs.pos, \"function_type kwargs should be in a dictionary.\")\n+                return None\n+            param_types = [arg.analyse_as_type(env) for arg in func_args.args]\n+            if None in param_types:\n+                error(func_args.args[param_types.index(None)].pos, \"Unknown type in parameter types\")\n+                return None\n+            ret_type = func_return.analyse_as_type(env)\n+            if ret_type is None:\n+                error(func_return.pos, \"Unknown return type\")\n+            exc_value = None\n+            noexcept = False\n+            exc_check = False\n+            exc_clause = False\n+            func_type_kwargs = {}\n+            if kwargs is not None:\n+                for kv_pair in kwargs.key_value_pairs:\n+                    k = kv_pair.key.constant_result\n+                    v = kv_pair.value.constant_result",
            "html_url": "https://github.com/cython/cython/pull/7121#discussion_r2315659937",
            "id": 2315659937,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc6KBiqh",
            "original_commit_id": "76ecf0cb0368036fc86aa8fe7097959730c435b1",
            "original_line": 6196,
            "original_position": 55,
            "original_start_line": 6194,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 1,
            "pull_request_review_id": 3175918057,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/7121",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/2315659937/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-02T10:36:33Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/2315659937",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/7121#discussion_r2315661119"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/7121"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/2315661119"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                            error(kv_pair.value.pos, f\"Value for {k} must be boolean\")\r\n```",
            "commit_id": "efa7cc669884eb816b561caada7c076afeae10ae",
            "created_at": "2025-09-02T10:29:57Z",
            "diff_hunk": "@@ -6158,6 +6164,77 @@ def set_py_result_type(self, function, func_type=None):\n             elif result_type.equivalent_type:\n                 self.type = result_type.equivalent_type\n \n+    def analyse_as_type(self, env):\n+        attr = self.function.as_cython_attribute()\n+        if attr == 'function_type':\n+            args, kwargs = self.explicit_args_kwds()\n+            if len(args) != 2:\n+                error(self.args.pos, \"function_type requires exactly two positional arguments.\")\n+                return None\n+            func_args, func_return = args\n+            if not isinstance(func_args, ListNode):\n+                error(func_args.pos, \"First argument of function_type must be a list literal with parameter types.\")\n+                return None\n+            if kwargs is not None and not isinstance(kwargs, DictNode):\n+                error(kwargs.pos, \"function_type kwargs should be in a dictionary.\")\n+                return None\n+            param_types = [arg.analyse_as_type(env) for arg in func_args.args]\n+            if None in param_types:\n+                error(func_args.args[param_types.index(None)].pos, \"Unknown type in parameter types\")\n+                return None\n+            ret_type = func_return.analyse_as_type(env)\n+            if ret_type is None:\n+                error(func_return.pos, \"Unknown return type\")\n+            exc_value = None\n+            noexcept = False\n+            exc_check = False\n+            exc_clause = False\n+            func_type_kwargs = {}\n+            if kwargs is not None:\n+                for kv_pair in kwargs.key_value_pairs:\n+                    k = kv_pair.key.constant_result\n+                    v = kv_pair.value.constant_result\n+                    if k in ('nogil', 'has_varargs', 'noexcept', 'check_exception'):\n+                        if isinstance(v, bool):\n+                            if k == 'noexcept':\n+                                noexcept = v\n+                            elif k == 'check_exception':\n+                                exc_clause = True\n+                                exc_check = v\n+                            else:\n+                                func_type_kwargs[k] = v\n+                        else:\n+                            error(self.pos, f\"Value for {k} must be boolean\")",
            "html_url": "https://github.com/cython/cython/pull/7121#discussion_r2315661119",
            "id": 2315661119,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc6KBi8_",
            "original_commit_id": "76ecf0cb0368036fc86aa8fe7097959730c435b1",
            "original_line": 6207,
            "original_position": 66,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 1,
            "pull_request_review_id": 3175918057,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/7121",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/2315661119/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-02T10:36:33Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/2315661119",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/7121#discussion_r2315662028"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/7121"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/2315662028"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                            error(kv_pair.value.pos, f\"Value for {k} must be '*', string or boolean, was {v!r}\")\r\n```",
            "commit_id": "efa7cc669884eb816b561caada7c076afeae10ae",
            "created_at": "2025-09-02T10:30:14Z",
            "diff_hunk": "@@ -6158,6 +6164,77 @@ def set_py_result_type(self, function, func_type=None):\n             elif result_type.equivalent_type:\n                 self.type = result_type.equivalent_type\n \n+    def analyse_as_type(self, env):\n+        attr = self.function.as_cython_attribute()\n+        if attr == 'function_type':\n+            args, kwargs = self.explicit_args_kwds()\n+            if len(args) != 2:\n+                error(self.args.pos, \"function_type requires exactly two positional arguments.\")\n+                return None\n+            func_args, func_return = args\n+            if not isinstance(func_args, ListNode):\n+                error(func_args.pos, \"First argument of function_type must be a list literal with parameter types.\")\n+                return None\n+            if kwargs is not None and not isinstance(kwargs, DictNode):\n+                error(kwargs.pos, \"function_type kwargs should be in a dictionary.\")\n+                return None\n+            param_types = [arg.analyse_as_type(env) for arg in func_args.args]\n+            if None in param_types:\n+                error(func_args.args[param_types.index(None)].pos, \"Unknown type in parameter types\")\n+                return None\n+            ret_type = func_return.analyse_as_type(env)\n+            if ret_type is None:\n+                error(func_return.pos, \"Unknown return type\")\n+            exc_value = None\n+            noexcept = False\n+            exc_check = False\n+            exc_clause = False\n+            func_type_kwargs = {}\n+            if kwargs is not None:\n+                for kv_pair in kwargs.key_value_pairs:\n+                    k = kv_pair.key.constant_result\n+                    v = kv_pair.value.constant_result\n+                    if k in ('nogil', 'has_varargs', 'noexcept', 'check_exception'):\n+                        if isinstance(v, bool):\n+                            if k == 'noexcept':\n+                                noexcept = v\n+                            elif k == 'check_exception':\n+                                exc_clause = True\n+                                exc_check = v\n+                            else:\n+                                func_type_kwargs[k] = v\n+                        else:\n+                            error(self.pos, f\"Value for {k} must be boolean\")\n+                    elif k == 'exceptval':\n+                        exc_value = v\n+                        exc_clause = True\n+                    elif k == 'except_plus':\n+                        exc_clause = True\n+                        if v == '*':\n+                            exc_check = '+'\n+                            exc_value = CharNode(kv_pair.value.pos, value='*')\n+                        elif isinstance(v, str):\n+                            exc_check = '+'\n+                            exc_value = NameNode(kv_pair.value.pos, value=v)\n+                        elif isinstance(v, bool):\n+                            exc_check = '+' if v else False\n+                        else:\n+                            error(self.pos, f\"Value for {k} must be '*', string or boolean, was {v!r}\")",
            "html_url": "https://github.com/cython/cython/pull/7121#discussion_r2315662028",
            "id": 2315662028,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc6KBjLM",
            "original_commit_id": "76ecf0cb0368036fc86aa8fe7097959730c435b1",
            "original_line": 6222,
            "original_position": 81,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 1,
            "pull_request_review_id": 3175918057,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/7121",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/2315662028/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-02T10:36:33Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/2315662028",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/7121#discussion_r2315663611"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/7121"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/2315663611"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                        error(kv_pair.key.pos, f\"Unknown kwarg in function_type: {k}\")\r\n```",
            "commit_id": "efa7cc669884eb816b561caada7c076afeae10ae",
            "created_at": "2025-09-02T10:30:42Z",
            "diff_hunk": "@@ -6158,6 +6164,77 @@ def set_py_result_type(self, function, func_type=None):\n             elif result_type.equivalent_type:\n                 self.type = result_type.equivalent_type\n \n+    def analyse_as_type(self, env):\n+        attr = self.function.as_cython_attribute()\n+        if attr == 'function_type':\n+            args, kwargs = self.explicit_args_kwds()\n+            if len(args) != 2:\n+                error(self.args.pos, \"function_type requires exactly two positional arguments.\")\n+                return None\n+            func_args, func_return = args\n+            if not isinstance(func_args, ListNode):\n+                error(func_args.pos, \"First argument of function_type must be a list literal with parameter types.\")\n+                return None\n+            if kwargs is not None and not isinstance(kwargs, DictNode):\n+                error(kwargs.pos, \"function_type kwargs should be in a dictionary.\")\n+                return None\n+            param_types = [arg.analyse_as_type(env) for arg in func_args.args]\n+            if None in param_types:\n+                error(func_args.args[param_types.index(None)].pos, \"Unknown type in parameter types\")\n+                return None\n+            ret_type = func_return.analyse_as_type(env)\n+            if ret_type is None:\n+                error(func_return.pos, \"Unknown return type\")\n+            exc_value = None\n+            noexcept = False\n+            exc_check = False\n+            exc_clause = False\n+            func_type_kwargs = {}\n+            if kwargs is not None:\n+                for kv_pair in kwargs.key_value_pairs:\n+                    k = kv_pair.key.constant_result\n+                    v = kv_pair.value.constant_result\n+                    if k in ('nogil', 'has_varargs', 'noexcept', 'check_exception'):\n+                        if isinstance(v, bool):\n+                            if k == 'noexcept':\n+                                noexcept = v\n+                            elif k == 'check_exception':\n+                                exc_clause = True\n+                                exc_check = v\n+                            else:\n+                                func_type_kwargs[k] = v\n+                        else:\n+                            error(self.pos, f\"Value for {k} must be boolean\")\n+                    elif k == 'exceptval':\n+                        exc_value = v\n+                        exc_clause = True\n+                    elif k == 'except_plus':\n+                        exc_clause = True\n+                        if v == '*':\n+                            exc_check = '+'\n+                            exc_value = CharNode(kv_pair.value.pos, value='*')\n+                        elif isinstance(v, str):\n+                            exc_check = '+'\n+                            exc_value = NameNode(kv_pair.value.pos, value=v)\n+                        elif isinstance(v, bool):\n+                            exc_check = '+' if v else False\n+                        else:\n+                            error(self.pos, f\"Value for {k} must be '*', string or boolean, was {v!r}\")\n+\n+                    else:\n+                        error(self.pos, f\"Unknown kwarg in function_type: {k}\")",
            "html_url": "https://github.com/cython/cython/pull/7121#discussion_r2315663611",
            "id": 2315663611,
            "line": null,
            "node_id": "PRRC_kwDOABDGAc6KBjj7",
            "original_commit_id": "76ecf0cb0368036fc86aa8fe7097959730c435b1",
            "original_line": 6225,
            "original_position": 84,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 1,
            "pull_request_review_id": 3175918057,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/7121",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/2315663611/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-02T10:36:33Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/2315663611",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/7121#discussion_r2315666469"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/7121"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/2315666469"
                }
            },
            "author_association": "MEMBER",
            "body": "We could provide a better error position here if we detected this case inside of the loop rather than afterwards.",
            "commit_id": "efa7cc669884eb816b561caada7c076afeae10ae",
            "created_at": "2025-09-02T10:31:44Z",
            "diff_hunk": "@@ -6158,6 +6164,77 @@ def set_py_result_type(self, function, func_type=None):\n             elif result_type.equivalent_type:\n                 self.type = result_type.equivalent_type\n \n+    def analyse_as_type(self, env):\n+        attr = self.function.as_cython_attribute()\n+        if attr == 'function_type':\n+            args, kwargs = self.explicit_args_kwds()\n+            if len(args) != 2:\n+                error(self.args.pos, \"function_type requires exactly two positional arguments.\")\n+                return None\n+            func_args, func_return = args\n+            if not isinstance(func_args, ListNode):\n+                error(func_args.pos, \"First argument of function_type must be a list literal with parameter types.\")\n+                return None\n+            if kwargs is not None and not isinstance(kwargs, DictNode):\n+                error(kwargs.pos, \"function_type kwargs should be in a dictionary.\")\n+                return None\n+            param_types = [arg.analyse_as_type(env) for arg in func_args.args]\n+            if None in param_types:\n+                error(func_args.args[param_types.index(None)].pos, \"Unknown type in parameter types\")\n+                return None\n+            ret_type = func_return.analyse_as_type(env)\n+            if ret_type is None:\n+                error(func_return.pos, \"Unknown return type\")\n+            exc_value = None\n+            noexcept = False\n+            exc_check = False\n+            exc_clause = False\n+            func_type_kwargs = {}\n+            if kwargs is not None:\n+                for kv_pair in kwargs.key_value_pairs:\n+                    k = kv_pair.key.constant_result\n+                    v = kv_pair.value.constant_result\n+                    if k in ('nogil', 'has_varargs', 'noexcept', 'check_exception'):\n+                        if isinstance(v, bool):\n+                            if k == 'noexcept':\n+                                noexcept = v\n+                            elif k == 'check_exception':\n+                                exc_clause = True\n+                                exc_check = v\n+                            else:\n+                                func_type_kwargs[k] = v\n+                        else:\n+                            error(self.pos, f\"Value for {k} must be boolean\")\n+                    elif k == 'exceptval':\n+                        exc_value = v\n+                        exc_clause = True\n+                    elif k == 'except_plus':\n+                        exc_clause = True\n+                        if v == '*':\n+                            exc_check = '+'\n+                            exc_value = CharNode(kv_pair.value.pos, value='*')\n+                        elif isinstance(v, str):\n+                            exc_check = '+'\n+                            exc_value = NameNode(kv_pair.value.pos, value=v)\n+                        elif isinstance(v, bool):\n+                            exc_check = '+' if v else False\n+                        else:\n+                            error(self.pos, f\"Value for {k} must be '*', string or boolean, was {v!r}\")\n+\n+                    else:\n+                        error(self.pos, f\"Unknown kwarg in function_type: {k}\")\n+            if noexcept and exc_clause:\n+                error(self.pos, \"Cannot combine noexcept=True with another exception clause.\")",
            "html_url": "https://github.com/cython/cython/pull/7121#discussion_r2315666469",
            "id": 2315666469,
            "line": 6233,
            "node_id": "PRRC_kwDOABDGAc6KBkQl",
            "original_commit_id": "76ecf0cb0368036fc86aa8fe7097959730c435b1",
            "original_line": 6227,
            "original_position": 86,
            "original_start_line": 6226,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 92,
            "pull_request_review_id": 3175918057,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/7121",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/2315666469/reactions"
            },
            "side": "RIGHT",
            "start_line": 6232,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-02T10:36:33Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/2315666469",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/7121/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/146099301?v=4",
                "events_url": "https://api.github.com/users/dgrunwald-qt/events{/privacy}",
                "followers_url": "https://api.github.com/users/dgrunwald-qt/followers",
                "following_url": "https://api.github.com/users/dgrunwald-qt/following{/other_user}",
                "gists_url": "https://api.github.com/users/dgrunwald-qt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dgrunwald-qt",
                "id": 146099301,
                "login": "dgrunwald-qt",
                "node_id": "U_kgDOCLVMZQ",
                "organizations_url": "https://api.github.com/users/dgrunwald-qt/orgs",
                "received_events_url": "https://api.github.com/users/dgrunwald-qt/received_events",
                "repos_url": "https://api.github.com/users/dgrunwald-qt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dgrunwald-qt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dgrunwald-qt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dgrunwald-qt",
                "user_view_type": "public"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e846c296e0ad0a52b5da97cd3f88f40f527e8b74/comments",
            "commit": {
                "author": {
                    "date": "2025-08-29T08:29:34Z",
                    "email": "daniel.grunwald@qt.io",
                    "name": "Daniel Grunwald"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2025-08-29T08:29:34Z",
                    "email": "daniel.grunwald@qt.io",
                    "name": "Daniel Grunwald"
                },
                "message": "Add C++ reference types to Pure Python mode.",
                "tree": {
                    "sha": "d2b538ca70e8a67e4d8662136a32c38eae5ebdb6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d2b538ca70e8a67e4d8662136a32c38eae5ebdb6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e846c296e0ad0a52b5da97cd3f88f40f527e8b74",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false,
                    "verified_at": null
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/146099301?v=4",
                "events_url": "https://api.github.com/users/dgrunwald-qt/events{/privacy}",
                "followers_url": "https://api.github.com/users/dgrunwald-qt/followers",
                "following_url": "https://api.github.com/users/dgrunwald-qt/following{/other_user}",
                "gists_url": "https://api.github.com/users/dgrunwald-qt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dgrunwald-qt",
                "id": 146099301,
                "login": "dgrunwald-qt",
                "node_id": "U_kgDOCLVMZQ",
                "organizations_url": "https://api.github.com/users/dgrunwald-qt/orgs",
                "received_events_url": "https://api.github.com/users/dgrunwald-qt/received_events",
                "repos_url": "https://api.github.com/users/dgrunwald-qt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dgrunwald-qt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dgrunwald-qt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dgrunwald-qt",
                "user_view_type": "public"
            },
            "html_url": "https://github.com/cython/cython/commit/e846c296e0ad0a52b5da97cd3f88f40f527e8b74",
            "node_id": "C_kwDOPmYTXtoAKGU4NDZjMjk2ZTBhZDBhNTJiNWRhOTdjZDNmODhmNDBmNTI3ZThiNzQ",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f8b2fcc1014bc9bdf2a849b997a1bd03fd6a8918",
                    "sha": "f8b2fcc1014bc9bdf2a849b997a1bd03fd6a8918",
                    "url": "https://api.github.com/repos/cython/cython/commits/f8b2fcc1014bc9bdf2a849b997a1bd03fd6a8918"
                }
            ],
            "sha": "e846c296e0ad0a52b5da97cd3f88f40f527e8b74",
            "url": "https://api.github.com/repos/cython/cython/commits/e846c296e0ad0a52b5da97cd3f88f40f527e8b74"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/146099301?v=4",
                "events_url": "https://api.github.com/users/dgrunwald-qt/events{/privacy}",
                "followers_url": "https://api.github.com/users/dgrunwald-qt/followers",
                "following_url": "https://api.github.com/users/dgrunwald-qt/following{/other_user}",
                "gists_url": "https://api.github.com/users/dgrunwald-qt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dgrunwald-qt",
                "id": 146099301,
                "login": "dgrunwald-qt",
                "node_id": "U_kgDOCLVMZQ",
                "organizations_url": "https://api.github.com/users/dgrunwald-qt/orgs",
                "received_events_url": "https://api.github.com/users/dgrunwald-qt/received_events",
                "repos_url": "https://api.github.com/users/dgrunwald-qt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dgrunwald-qt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dgrunwald-qt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dgrunwald-qt",
                "user_view_type": "public"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a7bc96cb3efd8085e772689237ed520cbac020f3/comments",
            "commit": {
                "author": {
                    "date": "2025-08-29T10:39:47Z",
                    "email": "daniel.grunwald@qt.io",
                    "name": "Daniel Grunwald"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2025-08-29T10:39:47Z",
                    "email": "daniel.grunwald@qt.io",
                    "name": "Daniel Grunwald"
                },
                "message": "#4279: Add function types to Pure Python mode.",
                "tree": {
                    "sha": "d4d8074631fff357de8fc2016e2967b5df79d613",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d4d8074631fff357de8fc2016e2967b5df79d613"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a7bc96cb3efd8085e772689237ed520cbac020f3",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false,
                    "verified_at": null
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/146099301?v=4",
                "events_url": "https://api.github.com/users/dgrunwald-qt/events{/privacy}",
                "followers_url": "https://api.github.com/users/dgrunwald-qt/followers",
                "following_url": "https://api.github.com/users/dgrunwald-qt/following{/other_user}",
                "gists_url": "https://api.github.com/users/dgrunwald-qt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dgrunwald-qt",
                "id": 146099301,
                "login": "dgrunwald-qt",
                "node_id": "U_kgDOCLVMZQ",
                "organizations_url": "https://api.github.com/users/dgrunwald-qt/orgs",
                "received_events_url": "https://api.github.com/users/dgrunwald-qt/received_events",
                "repos_url": "https://api.github.com/users/dgrunwald-qt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dgrunwald-qt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dgrunwald-qt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dgrunwald-qt",
                "user_view_type": "public"
            },
            "html_url": "https://github.com/cython/cython/commit/a7bc96cb3efd8085e772689237ed520cbac020f3",
            "node_id": "C_kwDOPmYTXtoAKGE3YmM5NmNiM2VmZDgwODVlNzcyNjg5MjM3ZWQ1MjBjYmFjMDIwZjM",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e846c296e0ad0a52b5da97cd3f88f40f527e8b74",
                    "sha": "e846c296e0ad0a52b5da97cd3f88f40f527e8b74",
                    "url": "https://api.github.com/repos/cython/cython/commits/e846c296e0ad0a52b5da97cd3f88f40f527e8b74"
                }
            ],
            "sha": "a7bc96cb3efd8085e772689237ed520cbac020f3",
            "url": "https://api.github.com/repos/cython/cython/commits/a7bc96cb3efd8085e772689237ed520cbac020f3"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/146099301?v=4",
                "events_url": "https://api.github.com/users/dgrunwald-qt/events{/privacy}",
                "followers_url": "https://api.github.com/users/dgrunwald-qt/followers",
                "following_url": "https://api.github.com/users/dgrunwald-qt/following{/other_user}",
                "gists_url": "https://api.github.com/users/dgrunwald-qt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dgrunwald-qt",
                "id": 146099301,
                "login": "dgrunwald-qt",
                "node_id": "U_kgDOCLVMZQ",
                "organizations_url": "https://api.github.com/users/dgrunwald-qt/orgs",
                "received_events_url": "https://api.github.com/users/dgrunwald-qt/received_events",
                "repos_url": "https://api.github.com/users/dgrunwald-qt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dgrunwald-qt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dgrunwald-qt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dgrunwald-qt",
                "user_view_type": "public"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/76ecf0cb0368036fc86aa8fe7097959730c435b1/comments",
            "commit": {
                "author": {
                    "date": "2025-09-01T15:35:19Z",
                    "email": "daniel.grunwald@qt.io",
                    "name": "Daniel Grunwald"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2025-09-01T15:35:19Z",
                    "email": "daniel.grunwald@qt.io",
                    "name": "Daniel Grunwald"
                },
                "message": "Changed `function_type` API based on feedback; applied reviewer comments.",
                "tree": {
                    "sha": "6977f21ae5f8d4cf63dc67c2f928e1ad12831e86",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/6977f21ae5f8d4cf63dc67c2f928e1ad12831e86"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/76ecf0cb0368036fc86aa8fe7097959730c435b1",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false,
                    "verified_at": null
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/146099301?v=4",
                "events_url": "https://api.github.com/users/dgrunwald-qt/events{/privacy}",
                "followers_url": "https://api.github.com/users/dgrunwald-qt/followers",
                "following_url": "https://api.github.com/users/dgrunwald-qt/following{/other_user}",
                "gists_url": "https://api.github.com/users/dgrunwald-qt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dgrunwald-qt",
                "id": 146099301,
                "login": "dgrunwald-qt",
                "node_id": "U_kgDOCLVMZQ",
                "organizations_url": "https://api.github.com/users/dgrunwald-qt/orgs",
                "received_events_url": "https://api.github.com/users/dgrunwald-qt/received_events",
                "repos_url": "https://api.github.com/users/dgrunwald-qt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dgrunwald-qt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dgrunwald-qt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dgrunwald-qt",
                "user_view_type": "public"
            },
            "html_url": "https://github.com/cython/cython/commit/76ecf0cb0368036fc86aa8fe7097959730c435b1",
            "node_id": "C_kwDOPmYTXtoAKDc2ZWNmMGNiMDM2ODAzNmZjODZhYThmZTcwOTc5NTk3MzBjNDM1YjE",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a7bc96cb3efd8085e772689237ed520cbac020f3",
                    "sha": "a7bc96cb3efd8085e772689237ed520cbac020f3",
                    "url": "https://api.github.com/repos/cython/cython/commits/a7bc96cb3efd8085e772689237ed520cbac020f3"
                }
            ],
            "sha": "76ecf0cb0368036fc86aa8fe7097959730c435b1",
            "url": "https://api.github.com/repos/cython/cython/commits/76ecf0cb0368036fc86aa8fe7097959730c435b1"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/146099301?v=4",
                "events_url": "https://api.github.com/users/dgrunwald-qt/events{/privacy}",
                "followers_url": "https://api.github.com/users/dgrunwald-qt/followers",
                "following_url": "https://api.github.com/users/dgrunwald-qt/following{/other_user}",
                "gists_url": "https://api.github.com/users/dgrunwald-qt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dgrunwald-qt",
                "id": 146099301,
                "login": "dgrunwald-qt",
                "node_id": "U_kgDOCLVMZQ",
                "organizations_url": "https://api.github.com/users/dgrunwald-qt/orgs",
                "received_events_url": "https://api.github.com/users/dgrunwald-qt/received_events",
                "repos_url": "https://api.github.com/users/dgrunwald-qt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dgrunwald-qt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dgrunwald-qt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dgrunwald-qt",
                "user_view_type": "public"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4eb8f2a7401fa95e79beb1aa5ef1bdc98527215f/comments",
            "commit": {
                "author": {
                    "date": "2025-09-05T12:47:18Z",
                    "email": "daniel.grunwald@qt.io",
                    "name": "Daniel Grunwald"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2025-09-05T12:47:18Z",
                    "email": "daniel.grunwald@qt.io",
                    "name": "Daniel Grunwald"
                },
                "message": "Rename except_plus->except_cpp",
                "tree": {
                    "sha": "0dec52217321cd61d15111026838a578bf872252",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0dec52217321cd61d15111026838a578bf872252"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4eb8f2a7401fa95e79beb1aa5ef1bdc98527215f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false,
                    "verified_at": null
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/146099301?v=4",
                "events_url": "https://api.github.com/users/dgrunwald-qt/events{/privacy}",
                "followers_url": "https://api.github.com/users/dgrunwald-qt/followers",
                "following_url": "https://api.github.com/users/dgrunwald-qt/following{/other_user}",
                "gists_url": "https://api.github.com/users/dgrunwald-qt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dgrunwald-qt",
                "id": 146099301,
                "login": "dgrunwald-qt",
                "node_id": "U_kgDOCLVMZQ",
                "organizations_url": "https://api.github.com/users/dgrunwald-qt/orgs",
                "received_events_url": "https://api.github.com/users/dgrunwald-qt/received_events",
                "repos_url": "https://api.github.com/users/dgrunwald-qt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dgrunwald-qt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dgrunwald-qt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dgrunwald-qt",
                "user_view_type": "public"
            },
            "html_url": "https://github.com/cython/cython/commit/4eb8f2a7401fa95e79beb1aa5ef1bdc98527215f",
            "node_id": "C_kwDOPmYTXtoAKDRlYjhmMmE3NDAxZmE5NWU3OWJlYjFhYTVlZjFiZGM5ODUyNzIxNWY",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/76ecf0cb0368036fc86aa8fe7097959730c435b1",
                    "sha": "76ecf0cb0368036fc86aa8fe7097959730c435b1",
                    "url": "https://api.github.com/repos/cython/cython/commits/76ecf0cb0368036fc86aa8fe7097959730c435b1"
                }
            ],
            "sha": "4eb8f2a7401fa95e79beb1aa5ef1bdc98527215f",
            "url": "https://api.github.com/repos/cython/cython/commits/4eb8f2a7401fa95e79beb1aa5ef1bdc98527215f"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/146099301?v=4",
                "events_url": "https://api.github.com/users/dgrunwald-qt/events{/privacy}",
                "followers_url": "https://api.github.com/users/dgrunwald-qt/followers",
                "following_url": "https://api.github.com/users/dgrunwald-qt/following{/other_user}",
                "gists_url": "https://api.github.com/users/dgrunwald-qt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dgrunwald-qt",
                "id": 146099301,
                "login": "dgrunwald-qt",
                "node_id": "U_kgDOCLVMZQ",
                "organizations_url": "https://api.github.com/users/dgrunwald-qt/orgs",
                "received_events_url": "https://api.github.com/users/dgrunwald-qt/received_events",
                "repos_url": "https://api.github.com/users/dgrunwald-qt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dgrunwald-qt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dgrunwald-qt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dgrunwald-qt",
                "user_view_type": "public"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8a0a478985bb2edb65cd6cfe6d6d1452dc96e4d9/comments",
            "commit": {
                "author": {
                    "date": "2025-09-05T12:52:07Z",
                    "email": "daniel.grunwald@qt.io",
                    "name": "Daniel Grunwald"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2025-09-05T12:52:07Z",
                    "email": "daniel.grunwald@qt.io",
                    "name": "Daniel Grunwald"
                },
                "message": "Add comparison test.",
                "tree": {
                    "sha": "9d21c1e196c274f87e2153ea689d08caa96ab5a4",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/9d21c1e196c274f87e2153ea689d08caa96ab5a4"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8a0a478985bb2edb65cd6cfe6d6d1452dc96e4d9",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false,
                    "verified_at": null
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/146099301?v=4",
                "events_url": "https://api.github.com/users/dgrunwald-qt/events{/privacy}",
                "followers_url": "https://api.github.com/users/dgrunwald-qt/followers",
                "following_url": "https://api.github.com/users/dgrunwald-qt/following{/other_user}",
                "gists_url": "https://api.github.com/users/dgrunwald-qt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dgrunwald-qt",
                "id": 146099301,
                "login": "dgrunwald-qt",
                "node_id": "U_kgDOCLVMZQ",
                "organizations_url": "https://api.github.com/users/dgrunwald-qt/orgs",
                "received_events_url": "https://api.github.com/users/dgrunwald-qt/received_events",
                "repos_url": "https://api.github.com/users/dgrunwald-qt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dgrunwald-qt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dgrunwald-qt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dgrunwald-qt",
                "user_view_type": "public"
            },
            "html_url": "https://github.com/cython/cython/commit/8a0a478985bb2edb65cd6cfe6d6d1452dc96e4d9",
            "node_id": "C_kwDOPmYTXtoAKDhhMGE0Nzg5ODViYjJlZGI2NWNkNmNmZTZkNmQxNDUyZGM5NmU0ZDk",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4eb8f2a7401fa95e79beb1aa5ef1bdc98527215f",
                    "sha": "4eb8f2a7401fa95e79beb1aa5ef1bdc98527215f",
                    "url": "https://api.github.com/repos/cython/cython/commits/4eb8f2a7401fa95e79beb1aa5ef1bdc98527215f"
                }
            ],
            "sha": "8a0a478985bb2edb65cd6cfe6d6d1452dc96e4d9",
            "url": "https://api.github.com/repos/cython/cython/commits/8a0a478985bb2edb65cd6cfe6d6d1452dc96e4d9"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/146099301?v=4",
                "events_url": "https://api.github.com/users/dgrunwald-qt/events{/privacy}",
                "followers_url": "https://api.github.com/users/dgrunwald-qt/followers",
                "following_url": "https://api.github.com/users/dgrunwald-qt/following{/other_user}",
                "gists_url": "https://api.github.com/users/dgrunwald-qt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dgrunwald-qt",
                "id": 146099301,
                "login": "dgrunwald-qt",
                "node_id": "U_kgDOCLVMZQ",
                "organizations_url": "https://api.github.com/users/dgrunwald-qt/orgs",
                "received_events_url": "https://api.github.com/users/dgrunwald-qt/received_events",
                "repos_url": "https://api.github.com/users/dgrunwald-qt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dgrunwald-qt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dgrunwald-qt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dgrunwald-qt",
                "user_view_type": "public"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/bbd93537e2be8e21c44ed1c05d5fbc44452d33a4/comments",
            "commit": {
                "author": {
                    "date": "2025-09-05T13:10:35Z",
                    "email": "daniel.grunwald@qt.io",
                    "name": "Daniel Grunwald"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2025-09-05T13:10:35Z",
                    "email": "daniel.grunwald@qt.io",
                    "name": "Daniel Grunwald"
                },
                "message": "Fix implicit conversion of except_val to function return type",
                "tree": {
                    "sha": "3495f9e59d52446ac1e451a3e8dcb96aa8218472",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3495f9e59d52446ac1e451a3e8dcb96aa8218472"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/bbd93537e2be8e21c44ed1c05d5fbc44452d33a4",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false,
                    "verified_at": null
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/146099301?v=4",
                "events_url": "https://api.github.com/users/dgrunwald-qt/events{/privacy}",
                "followers_url": "https://api.github.com/users/dgrunwald-qt/followers",
                "following_url": "https://api.github.com/users/dgrunwald-qt/following{/other_user}",
                "gists_url": "https://api.github.com/users/dgrunwald-qt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dgrunwald-qt",
                "id": 146099301,
                "login": "dgrunwald-qt",
                "node_id": "U_kgDOCLVMZQ",
                "organizations_url": "https://api.github.com/users/dgrunwald-qt/orgs",
                "received_events_url": "https://api.github.com/users/dgrunwald-qt/received_events",
                "repos_url": "https://api.github.com/users/dgrunwald-qt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dgrunwald-qt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dgrunwald-qt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dgrunwald-qt",
                "user_view_type": "public"
            },
            "html_url": "https://github.com/cython/cython/commit/bbd93537e2be8e21c44ed1c05d5fbc44452d33a4",
            "node_id": "C_kwDOPmYTXtoAKGJiZDkzNTM3ZTJiZThlMjFjNDRlZDFjMDVkNWZiYzQ0NDUyZDMzYTQ",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8a0a478985bb2edb65cd6cfe6d6d1452dc96e4d9",
                    "sha": "8a0a478985bb2edb65cd6cfe6d6d1452dc96e4d9",
                    "url": "https://api.github.com/repos/cython/cython/commits/8a0a478985bb2edb65cd6cfe6d6d1452dc96e4d9"
                }
            ],
            "sha": "bbd93537e2be8e21c44ed1c05d5fbc44452d33a4",
            "url": "https://api.github.com/repos/cython/cython/commits/bbd93537e2be8e21c44ed1c05d5fbc44452d33a4"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/146099301?v=4",
                "events_url": "https://api.github.com/users/dgrunwald-qt/events{/privacy}",
                "followers_url": "https://api.github.com/users/dgrunwald-qt/followers",
                "following_url": "https://api.github.com/users/dgrunwald-qt/following{/other_user}",
                "gists_url": "https://api.github.com/users/dgrunwald-qt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dgrunwald-qt",
                "id": 146099301,
                "login": "dgrunwald-qt",
                "node_id": "U_kgDOCLVMZQ",
                "organizations_url": "https://api.github.com/users/dgrunwald-qt/orgs",
                "received_events_url": "https://api.github.com/users/dgrunwald-qt/received_events",
                "repos_url": "https://api.github.com/users/dgrunwald-qt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dgrunwald-qt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dgrunwald-qt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dgrunwald-qt",
                "user_view_type": "public"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/efa7cc669884eb816b561caada7c076afeae10ae/comments",
            "commit": {
                "author": {
                    "date": "2025-09-05T13:13:51Z",
                    "email": "daniel.grunwald@qt.io",
                    "name": "Daniel Grunwald"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2025-09-05T13:13:51Z",
                    "email": "daniel.grunwald@qt.io",
                    "name": "Daniel Grunwald"
                },
                "message": "Improve error positions",
                "tree": {
                    "sha": "1f7ef3e51982ab52b8c55cebdb195846708447c4",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1f7ef3e51982ab52b8c55cebdb195846708447c4"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/efa7cc669884eb816b561caada7c076afeae10ae",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false,
                    "verified_at": null
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/146099301?v=4",
                "events_url": "https://api.github.com/users/dgrunwald-qt/events{/privacy}",
                "followers_url": "https://api.github.com/users/dgrunwald-qt/followers",
                "following_url": "https://api.github.com/users/dgrunwald-qt/following{/other_user}",
                "gists_url": "https://api.github.com/users/dgrunwald-qt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dgrunwald-qt",
                "id": 146099301,
                "login": "dgrunwald-qt",
                "node_id": "U_kgDOCLVMZQ",
                "organizations_url": "https://api.github.com/users/dgrunwald-qt/orgs",
                "received_events_url": "https://api.github.com/users/dgrunwald-qt/received_events",
                "repos_url": "https://api.github.com/users/dgrunwald-qt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dgrunwald-qt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dgrunwald-qt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dgrunwald-qt",
                "user_view_type": "public"
            },
            "html_url": "https://github.com/cython/cython/commit/efa7cc669884eb816b561caada7c076afeae10ae",
            "node_id": "C_kwDOPmYTXtoAKGVmYTdjYzY2OTg4NGViODE2YjU2MWNhYWRhN2MwNzZhZmVhZTEwYWU",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/bbd93537e2be8e21c44ed1c05d5fbc44452d33a4",
                    "sha": "bbd93537e2be8e21c44ed1c05d5fbc44452d33a4",
                    "url": "https://api.github.com/repos/cython/cython/commits/bbd93537e2be8e21c44ed1c05d5fbc44452d33a4"
                }
            ],
            "sha": "efa7cc669884eb816b561caada7c076afeae10ae",
            "url": "https://api.github.com/repos/cython/cython/commits/efa7cc669884eb816b561caada7c076afeae10ae"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/7121/commits",
    "created_at": "2025-08-29T11:36:14Z",
    "diff_url": "https://github.com/cython/cython/pull/7121.diff",
    "draft": false,
    "head": {
        "label": "dgrunwald-qt:pure-python-reference-types",
        "ref": "pure-python-reference-types",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/dgrunwald-qt/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/dgrunwald-qt/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/dgrunwald-qt/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/dgrunwald-qt/cython/branches{/branch}",
            "clone_url": "https://github.com/dgrunwald-qt/cython.git",
            "collaborators_url": "https://api.github.com/repos/dgrunwald-qt/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/dgrunwald-qt/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/dgrunwald-qt/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/dgrunwald-qt/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/dgrunwald-qt/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/dgrunwald-qt/cython/contributors",
            "created_at": "2025-08-29T11:21:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/dgrunwald-qt/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/dgrunwald-qt/cython/downloads",
            "events_url": "https://api.github.com/repos/dgrunwald-qt/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/dgrunwald-qt/cython/forks",
            "full_name": "dgrunwald-qt/cython",
            "git_commits_url": "https://api.github.com/repos/dgrunwald-qt/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/dgrunwald-qt/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/dgrunwald-qt/cython/git/tags{/sha}",
            "git_url": "git://github.com/dgrunwald-qt/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/dgrunwald-qt/cython/hooks",
            "html_url": "https://github.com/dgrunwald-qt/cython",
            "id": 1046877022,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/dgrunwald-qt/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/dgrunwald-qt/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/dgrunwald-qt/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/dgrunwald-qt/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/dgrunwald-qt/cython/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/dgrunwald-qt/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/dgrunwald-qt/cython/merges",
            "milestones_url": "https://api.github.com/repos/dgrunwald-qt/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "R_kgDOPmYTXg",
            "notifications_url": "https://api.github.com/repos/dgrunwald-qt/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/146099301?v=4",
                "events_url": "https://api.github.com/users/dgrunwald-qt/events{/privacy}",
                "followers_url": "https://api.github.com/users/dgrunwald-qt/followers",
                "following_url": "https://api.github.com/users/dgrunwald-qt/following{/other_user}",
                "gists_url": "https://api.github.com/users/dgrunwald-qt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dgrunwald-qt",
                "id": 146099301,
                "login": "dgrunwald-qt",
                "node_id": "U_kgDOCLVMZQ",
                "organizations_url": "https://api.github.com/users/dgrunwald-qt/orgs",
                "received_events_url": "https://api.github.com/users/dgrunwald-qt/received_events",
                "repos_url": "https://api.github.com/users/dgrunwald-qt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dgrunwald-qt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dgrunwald-qt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dgrunwald-qt",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/dgrunwald-qt/cython/pulls{/number}",
            "pushed_at": "2025-09-05T13:13:59Z",
            "releases_url": "https://api.github.com/repos/dgrunwald-qt/cython/releases{/id}",
            "size": 73273,
            "ssh_url": "git@github.com:dgrunwald-qt/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/dgrunwald-qt/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/dgrunwald-qt/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/dgrunwald-qt/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/dgrunwald-qt/cython/subscription",
            "svn_url": "https://github.com/dgrunwald-qt/cython",
            "tags_url": "https://api.github.com/repos/dgrunwald-qt/cython/tags",
            "teams_url": "https://api.github.com/repos/dgrunwald-qt/cython/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/dgrunwald-qt/cython/git/trees{/sha}",
            "updated_at": "2025-08-29T11:21:44Z",
            "url": "https://api.github.com/repos/dgrunwald-qt/cython",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "efa7cc669884eb816b561caada7c076afeae10ae",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/146099301?v=4",
            "events_url": "https://api.github.com/users/dgrunwald-qt/events{/privacy}",
            "followers_url": "https://api.github.com/users/dgrunwald-qt/followers",
            "following_url": "https://api.github.com/users/dgrunwald-qt/following{/other_user}",
            "gists_url": "https://api.github.com/users/dgrunwald-qt/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/dgrunwald-qt",
            "id": 146099301,
            "login": "dgrunwald-qt",
            "node_id": "U_kgDOCLVMZQ",
            "organizations_url": "https://api.github.com/users/dgrunwald-qt/orgs",
            "received_events_url": "https://api.github.com/users/dgrunwald-qt/received_events",
            "repos_url": "https://api.github.com/users/dgrunwald-qt/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/dgrunwald-qt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dgrunwald-qt/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/dgrunwald-qt",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/7121",
    "id": 2784605082,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/7121",
    "labels": [
        {
            "color": "c2e0c6",
            "default": false,
            "description": null,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425558499,
            "name": "Pure Python Mode",
            "node_id": "MDU6TGFiZWw0MjU1NTg0OTk=",
            "url": "https://api.github.com/repos/cython/cython/labels/Pure%20Python%20Mode"
        }
    ],
    "locked": false,
    "merge_commit_sha": "e88e1447d1b64cb1a6ccd909eb7f992d55175038",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOABDGAc6l-bOa",
    "number": 7121,
    "patch_url": "https://github.com/cython/cython/pull/7121.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/7121/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/efa7cc669884eb816b561caada7c076afeae10ae",
    "title": "Add function types and C++ reference types to Pure Python mode",
    "updated_at": "2025-09-05T13:14:00Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/7121",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/146099301?v=4",
        "events_url": "https://api.github.com/users/dgrunwald-qt/events{/privacy}",
        "followers_url": "https://api.github.com/users/dgrunwald-qt/followers",
        "following_url": "https://api.github.com/users/dgrunwald-qt/following{/other_user}",
        "gists_url": "https://api.github.com/users/dgrunwald-qt/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dgrunwald-qt",
        "id": 146099301,
        "login": "dgrunwald-qt",
        "node_id": "U_kgDOCLVMZQ",
        "organizations_url": "https://api.github.com/users/dgrunwald-qt/orgs",
        "received_events_url": "https://api.github.com/users/dgrunwald-qt/received_events",
        "repos_url": "https://api.github.com/users/dgrunwald-qt/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dgrunwald-qt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dgrunwald-qt/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dgrunwald-qt",
        "user_view_type": "public"
    }
}