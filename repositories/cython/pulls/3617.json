{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3617/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3617/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3617"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3617"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3617/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3617"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/6f6607e79042568d73a771b5fc30f1225bea35e6"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "COLLABORATOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1024,
            "forks_count": 1024,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 831,
            "open_issues_count": 831,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2020-06-10T13:12:21Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 59138,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 5234,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2020-06-10T13:12:24Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 5234,
            "watchers_count": 5234
        },
        "sha": "cbe43273439f030acac13bf204b4c1bae66b37bf",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "A lot of tests aren't working though because they rely on\r\nno type inference of memoryviews.\r\n\r\n-------------------------\r\n\r\nThis is an initial attempt at https://github.com/cython/cython/issues/2227 (although not the more advanced borrowed reference parts of it). It defines an generic loop optimization that should work on any type that Cython knows how to index and to get a `len` for (currently applied to memoryviews, tuples and lists). If nothing else this should generally be useful because it can easily be applied to other types.\r\n\r\nWhere it falls down is that Cython previously didn't infer types that were memoryviews. Hence\r\n\r\n    cdef double[:,:] a = ...\r\n    b = a  # is a Python object\r\n    c = a[0,0]  # is also a Python object\r\n\r\nTyping the target variable of the loop relies on adding type inference for memoryviews. This potentially does change other behaviour.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r426300778"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/426300778"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        unpack_temp_node = UtilNodes.LetRefNode(\r\n            slice_node.as_none_safe_node(\"'NoneType' is not iterable\"),\r\n            may_hold_none=False)\r\n```",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-17T20:20:31Z",
            "diff_hunk": "@@ -333,6 +339,70 @@ def _transform_reversed_iteration(self, node, reversed_function):\n             PyrexTypes.CFuncTypeArg(\"s\", Builtin.bytes_type, None)\n             ])\n \n+    def _transform_indexable_iteration(self, node, slice_node, reversed=False):\n+        unpack_temp_node = UtilNodes.LetRefNode(\n+            slice_node.as_none_safe_node(\"'NoneType' is not iterable\"))\n+        unpack_temp_node.may_be_none = lambda: False",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r426300778",
            "id": 426300778,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMwMDc3OA==",
            "original_commit_id": "f857a56303471de2cb84c344fbf04c35e131120f",
            "original_line": 345,
            "original_position": 20,
            "original_start_line": 343,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 413195327,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/426300778",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r426300863"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/426300863"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        new_directives = dict(env.directives, boundscheck=False, wraparound=False)\r\n```",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-17T20:21:26Z",
            "diff_hunk": "@@ -333,6 +339,70 @@ def _transform_reversed_iteration(self, node, reversed_function):\n             PyrexTypes.CFuncTypeArg(\"s\", Builtin.bytes_type, None)\n             ])\n \n+    def _transform_indexable_iteration(self, node, slice_node, reversed=False):\n+        unpack_temp_node = UtilNodes.LetRefNode(\n+            slice_node.as_none_safe_node(\"'NoneType' is not iterable\"))\n+        unpack_temp_node.may_be_none = lambda: False\n+\n+        start_node = ExprNodes.IntNode(\n+            node.pos, value='0', constant_result=0, type=PyrexTypes.c_py_ssize_t_type)\n+        length_temp = UtilNodes.TempHandle(PyrexTypes.c_py_ssize_t_type)\n+        end_node = length_temp.ref(node.pos)\n+        if reversed:\n+            relation1, relation2 = '>', '>='\n+            start_node, end_node = end_node, start_node\n+        else:\n+            relation1, relation2 = '<=', '<'\n+\n+        counter_temp = UtilNodes.TempHandle(PyrexTypes.c_py_ssize_t_type)\n+\n+        target_value = ExprNodes.IndexNode(slice_node.pos, base=unpack_temp_node,\n+                                           index=counter_temp.ref(node.pos))\n+\n+        target_assign = Nodes.SingleAssignmentNode(\n+            pos = node.target.pos,\n+            lhs = node.target,\n+            rhs = target_value)\n+\n+        # analyse with boundscheck and wraparound\n+        # off (because we're confident we know the size)\n+        env = self.current_env()\n+        new_directives = copy.copy(env.directives)\n+        new_directives['boundscheck'] = False\n+        new_directives['wraparound'] = False",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r426300863",
            "id": 426300863,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMwMDg2Mw==",
            "original_commit_id": "f857a56303471de2cb84c344fbf04c35e131120f",
            "original_line": 372,
            "original_position": 47,
            "original_start_line": 370,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 413195398,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/426300863",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r426301367"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/426301367"
                }
            },
            "author_association": "MEMBER",
            "body": "There is already special-casing for these, both in the general \"don't know the type\" case as well as in the case that we know the type of the iterable to be tuple or list. Not sure which is better, but my guess is that at least the current code that this transformation produces isn't as tight as what we already generate.\r\n\r\nThat doesn't mean that it may not be worth removing the current special-casing, just that we shouldn't introduce a regression along the way.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-17T20:26:50Z",
            "diff_hunk": "@@ -228,6 +228,12 @@ def _optimise_for_loop(self, node, iterable, reversed=False):\n             return self._transform_bytes_iteration(node, iterable, reversed=reversed)\n         if iterable.type is Builtin.unicode_type:\n             return self._transform_unicode_iteration(node, iterable, reversed=reversed)\n+        if iterable.type in (Builtin.list_type, Builtin.tuple_type):\n+            return self._transform_indexable_iteration(node, iterable, reversed=reversed)",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r426301367",
            "id": 426301367,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMwMTM2Nw==",
            "original_commit_id": "f857a56303471de2cb84c344fbf04c35e131120f",
            "original_line": 232,
            "original_position": 5,
            "original_start_line": 231,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 413195793,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/426301367",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r426302507"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/426302507"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "The code from this PR currently likes to juggle every result between about 3 different unnecessary temps. I suspect that can be improved though.\r\n\r\nMostly, this was in there because it seemed like an easy place to start and check the general working; it can obviously be removed if it makes things worse.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-17T20:39:44Z",
            "diff_hunk": "@@ -228,6 +228,12 @@ def _optimise_for_loop(self, node, iterable, reversed=False):\n             return self._transform_bytes_iteration(node, iterable, reversed=reversed)\n         if iterable.type is Builtin.unicode_type:\n             return self._transform_unicode_iteration(node, iterable, reversed=reversed)\n+        if iterable.type in (Builtin.list_type, Builtin.tuple_type):\n+            return self._transform_indexable_iteration(node, iterable, reversed=reversed)",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r426302507",
            "id": 426302507,
            "in_reply_to_id": 426301367,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMwMjUwNw==",
            "original_commit_id": "f857a56303471de2cb84c344fbf04c35e131120f",
            "original_line": 232,
            "original_position": 5,
            "original_start_line": 231,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 413196751,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/426302507",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429561504"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429561504"
                }
            },
            "author_association": "MEMBER",
            "body": "I think it's better if we leave the unexpected cases out and only handle the non-breaking \"all indices handled\" case here.\r\n```suggestion\r\n            else:\r\n                return inferred_type\r\n```",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-23T16:54:08Z",
            "diff_hunk": "@@ -3615,6 +3617,23 @@ def infer_type(self, env):\n                         index += base_type.size\n                     if 0 <= index < base_type.size:\n                         return base_type.components[index]\n+            elif base_type.is_memoryviewslice:\n+                if base_type.ndim == 0:\n+                    pass # probably an error, but definitely don't know what to do - return pyobject for now\n+                if base_type.ndim == 1:\n+                    return base_type.dtype\n+                else:\n+                    return PyrexTypes.MemoryViewSliceType(base_type.dtype, base_type.axes[1:])\n+\n+        if self.index.is_sequence_constructor and base_type.is_memoryviewslice:\n+            inferred_type = base_type\n+            for a in self.index.args:\n+                if not inferred_type.is_memoryviewslice:\n+                    break  # something's gone wrong\n+                inferred_type = IndexNode(self.pos, base=ExprNode(self.base.pos, type=inferred_type),\n+                                          index=a).infer_type(env)\n+\n+            return inferred_type # error checking is probably unnecessary since it'll default to pyobject",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429561504",
            "id": 429561504,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2MTUwNA==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 3636,
            "original_position": 29,
            "original_start_line": 3635,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 417292723,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429561504",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429561924"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429561924"
                }
            },
            "author_association": "MEMBER",
            "body": "The methods tend to be (roughly) ordered by phases in the node classes, so please move this to the analysis methods, before the code generation methods.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-23T17:00:20Z",
            "diff_hunk": "@@ -13492,6 +13511,9 @@ def generate_result_code(self, code):\n                 code.put_incref_memoryviewslice(self.result(), self.type,\n                                             have_gil=not self.in_nogil_context)\n \n+    def may_be_none(self):",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429561924",
            "id": 429561924,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2MTkyNA==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 13514,
            "original_position": 37,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 417292723,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429561924",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429562688"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429562688"
                }
            },
            "author_association": "MEMBER",
            "body": "As you already guessed, this is not the best place to put this. ;)\r\n`entry.init` is set in a couple of places, but usually at declaration time. Type inference runs after the `analyse_declarations()` phase, so that's too early for this case. Maybe `NameNode.analyse_expressions()` can do it? This is about variable entries, which should always be names.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-23T17:12:58Z",
            "diff_hunk": "@@ -1821,6 +1821,10 @@ def generate_function_definitions(self, env, code):\n \n         for entry in lenv.var_entries:\n             if not (entry.in_closure or entry.is_arg):\n+                if entry.type.is_memoryviewslice and not entry.init:\n+                    # inferred memoryview slices don't get initialized anywhere otherwise\n+                    # it's not clear where the best place to put this is\n+                    entry.init = entry.type.default_value",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429562688",
            "id": 429562688,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2MjY4OA==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 1827,
            "original_position": 7,
            "original_start_line": 1825,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 417292723,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429562688",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429562878"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429562878"
                }
            },
            "author_association": "MEMBER",
            "body": "If both versions can work, then it's better to keep this a pure optimisation and not rely on it. It's very reasonable for an optimisation to unpack coerced values.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-23T17:15:48Z",
            "diff_hunk": "@@ -228,6 +228,12 @@ def _optimise_for_loop(self, node, iterable, reversed=False):\n             return self._transform_bytes_iteration(node, iterable, reversed=reversed)\n         if iterable.type is Builtin.unicode_type:\n             return self._transform_unicode_iteration(node, iterable, reversed=reversed)\n+        if iterable.type in (Builtin.list_type, Builtin.tuple_type):\n+            return self._transform_indexable_iteration(node, iterable, reversed=reversed)\n+        if isinstance(iterable, ExprNodes.CoerceToPyTypeNode) and iterable.arg.type.is_memoryviewslice:\n+            # TODO would it make sense to prevent the coercion? Or does it need to be there since\n+            # this is only an optimization stage (so it should work without this set)",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429562878",
            "id": 429562878,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2Mjg3OA==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 235,
            "original_position": 8,
            "original_start_line": 234,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 417292723,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429562878",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429563194"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429563194"
                }
            },
            "author_association": "MEMBER",
            "body": "I wonder if there should be a helper to do this. Maybe something like `Scope.new_directives(**kwargs)`? (Preferably, that would also check the directive names being passed. :) )\r\nIn any case, this code here shouldn't have to bother which directives it should delete for unrelated reasons.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-23T17:20:16Z",
            "diff_hunk": "@@ -333,6 +339,78 @@ def _transform_reversed_iteration(self, node, reversed_function):\n             PyrexTypes.CFuncTypeArg(\"s\", Builtin.bytes_type, None)\n             ])\n \n+    def _transform_indexable_iteration(self, node, slice_node, reversed=False):\n+        \"\"\"In principle can handle any iterable that Cython has a len() for and knows how to index\"\"\"\n+        unpack_temp_node = UtilNodes.LetRefNode(\n+            slice_node.as_none_safe_node(\"'NoneType' is not iterable\"),\n+            may_hold_none=False\n+            )\n+\n+        start_node = ExprNodes.IntNode(\n+            node.pos, value='0', constant_result=0, type=PyrexTypes.c_py_ssize_t_type)\n+        length_temp = UtilNodes.LetRefNode(ExprNodes.SimpleCallNode(node.pos,\n+                                    function = ExprNodes.NameNode(node.pos, name=\"len\"),\n+                                    args = [unpack_temp_node]\n+                                    ), type=PyrexTypes.c_py_ssize_t_type)\n+        end_node = length_temp\n+        if reversed:\n+            relation1, relation2 = '>', '>='\n+            start_node, end_node = end_node, start_node\n+        else:\n+            relation1, relation2 = '<=', '<'\n+\n+        counter_ref = UtilNodes.LetRefNode(pos=node.pos, type=PyrexTypes.c_py_ssize_t_type)\n+\n+        target_value = ExprNodes.IndexNode(slice_node.pos, base=unpack_temp_node,\n+                                           index=counter_ref)\n+\n+        target_assign = Nodes.SingleAssignmentNode(\n+            pos = node.target.pos,\n+            lhs = node.target,\n+            rhs = target_value)\n+\n+        # analyse with boundscheck and wraparound\n+        # off (because we're confident we know the size)\n+        env = self.current_env()\n+        new_directives = dict(env.directives, boundscheck=False, wraparound=False)\n+        new_directives.pop('test_assert_path_exists', None)\n+        new_directives.pop('test_fail_if_path_exists', None)",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429563194",
            "id": 429563194,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2MzE5NA==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 377,
            "original_position": 52,
            "original_start_line": 375,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 417292723,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429563194",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429563571"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429563571"
                }
            },
            "author_association": "MEMBER",
            "body": "There are a couple of other places in this PR where more consistent code formatting would help the readability.\r\nSorry, but when I see a red door, I want it painted black. ;)\r\n```suggestion\r\n        target_assign = Nodes.CompilerDirectivesNode(\r\n            target_assign.pos,\r\n            directives=new_directives,\r\n            body=target_assign,\r\n        )\r\n```",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-23T17:25:44Z",
            "diff_hunk": "@@ -333,6 +339,78 @@ def _transform_reversed_iteration(self, node, reversed_function):\n             PyrexTypes.CFuncTypeArg(\"s\", Builtin.bytes_type, None)\n             ])\n \n+    def _transform_indexable_iteration(self, node, slice_node, reversed=False):\n+        \"\"\"In principle can handle any iterable that Cython has a len() for and knows how to index\"\"\"\n+        unpack_temp_node = UtilNodes.LetRefNode(\n+            slice_node.as_none_safe_node(\"'NoneType' is not iterable\"),\n+            may_hold_none=False\n+            )\n+\n+        start_node = ExprNodes.IntNode(\n+            node.pos, value='0', constant_result=0, type=PyrexTypes.c_py_ssize_t_type)\n+        length_temp = UtilNodes.LetRefNode(ExprNodes.SimpleCallNode(node.pos,\n+                                    function = ExprNodes.NameNode(node.pos, name=\"len\"),\n+                                    args = [unpack_temp_node]\n+                                    ), type=PyrexTypes.c_py_ssize_t_type)\n+        end_node = length_temp\n+        if reversed:\n+            relation1, relation2 = '>', '>='\n+            start_node, end_node = end_node, start_node\n+        else:\n+            relation1, relation2 = '<=', '<'\n+\n+        counter_ref = UtilNodes.LetRefNode(pos=node.pos, type=PyrexTypes.c_py_ssize_t_type)\n+\n+        target_value = ExprNodes.IndexNode(slice_node.pos, base=unpack_temp_node,\n+                                           index=counter_ref)\n+\n+        target_assign = Nodes.SingleAssignmentNode(\n+            pos = node.target.pos,\n+            lhs = node.target,\n+            rhs = target_value)\n+\n+        # analyse with boundscheck and wraparound\n+        # off (because we're confident we know the size)\n+        env = self.current_env()\n+        new_directives = dict(env.directives, boundscheck=False, wraparound=False)\n+        new_directives.pop('test_assert_path_exists', None)\n+        new_directives.pop('test_fail_if_path_exists', None)\n+        target_assign = Nodes.CompilerDirectivesNode(target_assign.pos,\n+                                                        directives = new_directives,\n+                                                        body = target_assign)",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429563571",
            "id": 429563571,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2MzU3MQ==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 380,
            "original_position": 55,
            "original_start_line": 378,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 417292723,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429563571",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429564402"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429564402"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-23T17:38:50Z",
            "diff_hunk": "@@ -333,6 +339,78 @@ def _transform_reversed_iteration(self, node, reversed_function):\n             PyrexTypes.CFuncTypeArg(\"s\", Builtin.bytes_type, None)\n             ])\n \n+    def _transform_indexable_iteration(self, node, slice_node, reversed=False):\n+        \"\"\"In principle can handle any iterable that Cython has a len() for and knows how to index\"\"\"\n+        unpack_temp_node = UtilNodes.LetRefNode(\n+            slice_node.as_none_safe_node(\"'NoneType' is not iterable\"),\n+            may_hold_none=False\n+            )\n+\n+        start_node = ExprNodes.IntNode(\n+            node.pos, value='0', constant_result=0, type=PyrexTypes.c_py_ssize_t_type)\n+        length_temp = UtilNodes.LetRefNode(ExprNodes.SimpleCallNode(node.pos,\n+                                    function = ExprNodes.NameNode(node.pos, name=\"len\"),\n+                                    args = [unpack_temp_node]\n+                                    ), type=PyrexTypes.c_py_ssize_t_type)\n+        end_node = length_temp\n+        if reversed:\n+            relation1, relation2 = '>', '>='\n+            start_node, end_node = end_node, start_node\n+        else:\n+            relation1, relation2 = '<=', '<'\n+\n+        counter_ref = UtilNodes.LetRefNode(pos=node.pos, type=PyrexTypes.c_py_ssize_t_type)\n+\n+        target_value = ExprNodes.IndexNode(slice_node.pos, base=unpack_temp_node,\n+                                           index=counter_ref)\n+\n+        target_assign = Nodes.SingleAssignmentNode(\n+            pos = node.target.pos,\n+            lhs = node.target,\n+            rhs = target_value)\n+\n+        # analyse with boundscheck and wraparound\n+        # off (because we're confident we know the size)\n+        env = self.current_env()\n+        new_directives = dict(env.directives, boundscheck=False, wraparound=False)\n+        new_directives.pop('test_assert_path_exists', None)\n+        new_directives.pop('test_fail_if_path_exists', None)\n+        target_assign = Nodes.CompilerDirectivesNode(target_assign.pos,\n+                                                        directives = new_directives,\n+                                                        body = target_assign)\n+\n+        target_assign = target_assign",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429564402",
            "id": 429564402,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NDQwMg==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 382,
            "original_position": 57,
            "original_start_line": null,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 417292723,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429564402",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429564933"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429564933"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    cdef double sum = 0\r\n```",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-23T17:47:05Z",
            "diff_hunk": "@@ -413,6 +413,43 @@ def set_int_2d(int[:, :] mslice, int i, int j, int value):\n     buf[i, j] = value\n \n \n+#\n+# auto type inference\n+# (note that for most numeric types \"might_overflow\" stops the type inference from working well)\n+#\n+def type_infer(double[:, :] arg):\n+    \"\"\"\n+    type_infer(DoubleMockBuffer(\"C\", range(6), (2,3)))\n+    double\n+    double[:]\n+    double[:]\n+    double[:,;]\n+    \"\"\"\n+    a = arg[0,0]\n+    print(cython.typeof(a))\n+    b = arg[0]\n+    print(cython.typeof(b))\n+    c = arg[0,:]\n+    print(cython.typeof(c))\n+    d = arg[:,:]\n+    print(cython.typeof(d))\n+\n+#\n+# Loop optimization\n+#\n+@cython.test_fail_if_path_exists(\"//CoerceToPyTypeNode\")\n+def memview_iter(double[:, :] arg):\n+    \"\"\"\n+    memview_iter(DoubleMockBuffer(\"C\", range(6), (2,3)))\n+    True\n+    \"\"\"\n+    cdef double sum=0",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429564933",
            "id": 429564933,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NDkzMw==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 446,
            "original_position": 70,
            "original_start_line": null,
            "path": "tests/memoryview/memoryview.pyx",
            "position": null,
            "pull_request_review_id": 417292723,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429564933",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429564942"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429564942"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    if sum == 15:\r\n```",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-23T17:47:16Z",
            "diff_hunk": "@@ -413,6 +413,43 @@ def set_int_2d(int[:, :] mslice, int i, int j, int value):\n     buf[i, j] = value\n \n \n+#\n+# auto type inference\n+# (note that for most numeric types \"might_overflow\" stops the type inference from working well)\n+#\n+def type_infer(double[:, :] arg):\n+    \"\"\"\n+    type_infer(DoubleMockBuffer(\"C\", range(6), (2,3)))\n+    double\n+    double[:]\n+    double[:]\n+    double[:,;]\n+    \"\"\"\n+    a = arg[0,0]\n+    print(cython.typeof(a))\n+    b = arg[0]\n+    print(cython.typeof(b))\n+    c = arg[0,:]\n+    print(cython.typeof(c))\n+    d = arg[:,:]\n+    print(cython.typeof(d))\n+\n+#\n+# Loop optimization\n+#\n+@cython.test_fail_if_path_exists(\"//CoerceToPyTypeNode\")\n+def memview_iter(double[:, :] arg):\n+    \"\"\"\n+    memview_iter(DoubleMockBuffer(\"C\", range(6), (2,3)))\n+    True\n+    \"\"\"\n+    cdef double sum=0\n+    for mview1d in arg:\n+        for val in mview1d:\n+            sum += val\n+    if sum==15:",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429564942",
            "id": 429564942,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NDk0Mg==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 450,
            "original_position": 74,
            "original_start_line": null,
            "path": "tests/memoryview/memoryview.pyx",
            "position": null,
            "pull_request_review_id": 417292723,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429564942",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429565038"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429565038"
                }
            },
            "author_association": "MEMBER",
            "body": "`cdef object a` would make it clearer what the intention of the `cdef` is here.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-23T17:48:32Z",
            "diff_hunk": "@@ -744,7 +781,7 @@ def test_generic_slicing(arg, indirect=False):\n \n     \"\"\"\n     cdef int[::view.generic, ::view.generic, :] _a = arg\n-    a = _a\n+    cdef a = _a",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429565038",
            "id": 429565038,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NTAzOA==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 784,
            "original_position": 85,
            "original_start_line": null,
            "path": "tests/memoryview/memoryview.pyx",
            "position": null,
            "pull_request_review_id": 417292723,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429565038",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429565161"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429565161"
                }
            },
            "author_association": "MEMBER",
            "body": "But it's still a valid test, isn't it?",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-23T17:50:17Z",
            "diff_hunk": "@@ -75,21 +75,21 @@ def listcomp_over_multiplied_constant_tuple():\n         [i for i in (1, 2, 3) * 2],\n     ]\n \n-\n-@cython.test_assert_path_exists('//ReturnStatNode//ForInStatNode//TupleNode')\n-@cython.test_fail_if_path_exists('//ReturnStatNode//ForInStatNode//ListNode')\n-def listcomp_over_multiplied_constant_list():\n-    \"\"\"\n-    >>> listcomp_over_multiplied_constant_list()\n-    [[], [1, 2, 3], [1, 2, 3, 1, 2, 3], [1, 2, 3, 1, 2, 3, 1, 2, 3], [1, 2, 3, 1, 2, 3]]\n-    \"\"\"\n-    return [\n-        [i for i in [1, 2, 3] * 0],\n-        [i for i in [1, 2, 3] * 1],\n-        [i for i in [1, 2, 3] * 2],\n-        [i for i in [1, 2, 3] * 3],\n-        [i for i in [1, 2, 3] * 2],\n-    ]\n+# FIXME this is a nightmare to test with loops that are produced in IterationTransform",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429565161",
            "id": 429565161,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NTE2MQ==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 78,
            "original_position": 19,
            "original_start_line": null,
            "path": "tests/run/for_in_iter.py",
            "position": null,
            "pull_request_review_id": 417292723,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429565161",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429565268"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429565268"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n@cython.test_fail_if_path_exists(\r\n    \"//ForInStatNode\",\r\n    \"//ForFromStatNode//ForFromStatNode\",\r\n```",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-23T17:51:49Z",
            "diff_hunk": "@@ -305,9 +305,10 @@ def for_in_empty_nested_listcomp():\n \n @cython.test_fail_if_path_exists(\n     \"//ForInStatNode//ForInStatNode\",\n+    \"//ForFromStatNode//ForFromStatNode\",",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429565268",
            "id": 429565268,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NTI2OA==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 308,
            "original_position": 4,
            "original_start_line": 306,
            "path": "tests/run/constant_folding.py",
            "position": null,
            "pull_request_review_id": 417292723,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429565268",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429565452"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429565452"
                }
            },
            "author_association": "MEMBER",
            "body": "This is actually a pretty cool improvement. :)",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-23T17:54:50Z",
            "diff_hunk": "@@ -261,7 +261,7 @@ def nested_struct(NestedStruct[:] mslice):\n     \"\"\"\n     buf = mslice\n     d = buf[0]\n-    print d['x']['a'], d['x']['b'], d['y']['a'], d['y']['b'], d['z']\n+    print d.x.a, d.x.b, d.y.a, d.y.b, d.z",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429565452",
            "id": 429565452,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NTQ1Mg==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 264,
            "original_position": 5,
            "original_start_line": 262,
            "path": "tests/memoryview/memoryview.pyx",
            "position": null,
            "pull_request_review_id": 417292723,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429565452",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429565608"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429565608"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm having a hard time understanding what this part does. What is \"basically the right thing\"?",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-23T17:56:55Z",
            "diff_hunk": "@@ -333,6 +339,78 @@ def _transform_reversed_iteration(self, node, reversed_function):\n             PyrexTypes.CFuncTypeArg(\"s\", Builtin.bytes_type, None)\n             ])\n \n+    def _transform_indexable_iteration(self, node, slice_node, reversed=False):\n+        \"\"\"In principle can handle any iterable that Cython has a len() for and knows how to index\"\"\"\n+        unpack_temp_node = UtilNodes.LetRefNode(\n+            slice_node.as_none_safe_node(\"'NoneType' is not iterable\"),\n+            may_hold_none=False\n+            )\n+\n+        start_node = ExprNodes.IntNode(\n+            node.pos, value='0', constant_result=0, type=PyrexTypes.c_py_ssize_t_type)\n+        length_temp = UtilNodes.LetRefNode(ExprNodes.SimpleCallNode(node.pos,\n+                                    function = ExprNodes.NameNode(node.pos, name=\"len\"),\n+                                    args = [unpack_temp_node]\n+                                    ), type=PyrexTypes.c_py_ssize_t_type)\n+        end_node = length_temp\n+        if reversed:\n+            relation1, relation2 = '>', '>='\n+            start_node, end_node = end_node, start_node\n+        else:\n+            relation1, relation2 = '<=', '<'\n+\n+        counter_ref = UtilNodes.LetRefNode(pos=node.pos, type=PyrexTypes.c_py_ssize_t_type)\n+\n+        target_value = ExprNodes.IndexNode(slice_node.pos, base=unpack_temp_node,\n+                                           index=counter_ref)\n+\n+        target_assign = Nodes.SingleAssignmentNode(\n+            pos = node.target.pos,\n+            lhs = node.target,\n+            rhs = target_value)\n+\n+        # analyse with boundscheck and wraparound\n+        # off (because we're confident we know the size)\n+        env = self.current_env()\n+        new_directives = dict(env.directives, boundscheck=False, wraparound=False)\n+        new_directives.pop('test_assert_path_exists', None)\n+        new_directives.pop('test_fail_if_path_exists', None)\n+        target_assign = Nodes.CompilerDirectivesNode(target_assign.pos,\n+                                                        directives = new_directives,\n+                                                        body = target_assign)\n+\n+        target_assign = target_assign\n+        body = Nodes.StatListNode(\n+            node.pos,\n+            stats = [target_assign]) # exclude node.body for now to not reanalyse it\n+\n+        loop_node = Nodes.ForFromStatNode(\n+            node.pos,\n+            bound1=start_node, relation1=relation1,\n+            target=counter_ref,\n+            relation2=relation2, bound2=end_node,\n+            step=None, body=body,\n+            else_clause=node.else_clause,\n+            from_range=True)\n+\n+        ret = UtilNodes.LetNode(\n+                    unpack_temp_node,\n+                    UtilNodes.LetNode(\n+                        length_temp,\n+                        # we don't actually have any use for the result of \"counter_ref\"\n+                        # but the TempResultFromStatNode UtilNode already exists and does\n+                        # basically the right thing\n+                        Nodes.ExprStatNode(node.pos,\n+                            expr=UtilNodes.TempResultFromStatNode(\n+                                    counter_ref,\n+                                    loop_node\n+                            )\n+                        )\n+                    )\n+                ).analyse_expressions(env)",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429565608",
            "id": 429565608,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NTYwOA==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 410,
            "original_position": 85,
            "original_start_line": 396,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 417292723,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429565608",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429569091"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429569091"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "The inference is nice. But looking at it again I think I missed the point of the test: I think you could always do `memslice[0].x.a` etc. I think the test is actually look at whether a valid conversion of a Python structure exists, so I should add `cdef object buf = mslice` instead.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-23T18:45:02Z",
            "diff_hunk": "@@ -261,7 +261,7 @@ def nested_struct(NestedStruct[:] mslice):\n     \"\"\"\n     buf = mslice\n     d = buf[0]\n-    print d['x']['a'], d['x']['b'], d['y']['a'], d['y']['b'], d['z']\n+    print d.x.a, d.x.b, d.y.a, d.y.b, d.z",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429569091",
            "id": 429569091,
            "in_reply_to_id": 429565452,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2OTA5MQ==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 264,
            "original_position": 5,
            "original_start_line": 262,
            "path": "tests/memoryview/memoryview.pyx",
            "position": null,
            "pull_request_review_id": 417299973,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429569091",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429569291"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429569291"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "Don't agree with this change. The test is about whether constants are folded, not how it's optimized. The failure is that there are two loops (whether they're `ForInStatNode` or `ForFromStatNode` loops).",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-23T18:48:00Z",
            "diff_hunk": "@@ -305,9 +305,10 @@ def for_in_empty_nested_listcomp():\n \n @cython.test_fail_if_path_exists(\n     \"//ForInStatNode//ForInStatNode\",\n+    \"//ForFromStatNode//ForFromStatNode\",",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429569291",
            "id": 429569291,
            "in_reply_to_id": 429565268,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2OTI5MQ==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 308,
            "original_position": 4,
            "original_start_line": 306,
            "path": "tests/run/constant_folding.py",
            "position": null,
            "pull_request_review_id": 417299973,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429569291",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429569455"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429569455"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "It is a valid test. The problem goes away though if I don't apply this to tuples and lists (since optimized code for them exists elsewhere). It mainly useful to test it on tuples/lists while developing as a bug-finding exercise.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-23T18:50:21Z",
            "diff_hunk": "@@ -75,21 +75,21 @@ def listcomp_over_multiplied_constant_tuple():\n         [i for i in (1, 2, 3) * 2],\n     ]\n \n-\n-@cython.test_assert_path_exists('//ReturnStatNode//ForInStatNode//TupleNode')\n-@cython.test_fail_if_path_exists('//ReturnStatNode//ForInStatNode//ListNode')\n-def listcomp_over_multiplied_constant_list():\n-    \"\"\"\n-    >>> listcomp_over_multiplied_constant_list()\n-    [[], [1, 2, 3], [1, 2, 3, 1, 2, 3], [1, 2, 3, 1, 2, 3, 1, 2, 3], [1, 2, 3, 1, 2, 3]]\n-    \"\"\"\n-    return [\n-        [i for i in [1, 2, 3] * 0],\n-        [i for i in [1, 2, 3] * 1],\n-        [i for i in [1, 2, 3] * 2],\n-        [i for i in [1, 2, 3] * 3],\n-        [i for i in [1, 2, 3] * 2],\n-    ]\n+# FIXME this is a nightmare to test with loops that are produced in IterationTransform",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429569455",
            "id": 429569455,
            "in_reply_to_id": 429565161,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2OTQ1NQ==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 78,
            "original_position": 19,
            "original_start_line": null,
            "path": "tests/run/for_in_iter.py",
            "position": null,
            "pull_request_review_id": 417299973,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429569455",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429569970"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429569970"
                }
            },
            "author_association": "MEMBER",
            "body": "Ok, but there also shouldn't be a mix of the two types. I think that's what the assertion tried to cover.\r\n```suggestion\r\n@cython.test_fail_if_path_exists(\r\n    \"//LoopNode//LoopNode\",\r\n```",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-23T18:58:18Z",
            "diff_hunk": "@@ -305,9 +305,10 @@ def for_in_empty_nested_listcomp():\n \n @cython.test_fail_if_path_exists(\n     \"//ForInStatNode//ForInStatNode\",\n+    \"//ForFromStatNode//ForFromStatNode\",",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429569970",
            "id": 429569970,
            "in_reply_to_id": 429565268,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2OTk3MA==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 308,
            "original_position": 4,
            "original_start_line": 306,
            "path": "tests/run/constant_folding.py",
            "position": null,
            "pull_request_review_id": 417300847,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429569970",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429849203"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429849203"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "In `NameNode.analyse_declarations` it wasn't getting run there for the simple case `for xslice in x: pass` (`xslice` is apparently never analysed). I added it to type inference which I think is better.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-25T10:00:36Z",
            "diff_hunk": "@@ -1821,6 +1821,10 @@ def generate_function_definitions(self, env, code):\n \n         for entry in lenv.var_entries:\n             if not (entry.in_closure or entry.is_arg):\n+                if entry.type.is_memoryviewslice and not entry.init:\n+                    # inferred memoryview slices don't get initialized anywhere otherwise\n+                    # it's not clear where the best place to put this is\n+                    entry.init = entry.type.default_value",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429849203",
            "id": 429849203,
            "in_reply_to_id": 429562688,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0OTIwMw==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 1827,
            "original_position": 7,
            "original_start_line": 1825,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 417602977,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429849203",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429849350"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429849350"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "Added it to \"Options\" instead (because it seemed to fit better there). But yes.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-25T10:00:56Z",
            "diff_hunk": "@@ -333,6 +339,78 @@ def _transform_reversed_iteration(self, node, reversed_function):\n             PyrexTypes.CFuncTypeArg(\"s\", Builtin.bytes_type, None)\n             ])\n \n+    def _transform_indexable_iteration(self, node, slice_node, reversed=False):\n+        \"\"\"In principle can handle any iterable that Cython has a len() for and knows how to index\"\"\"\n+        unpack_temp_node = UtilNodes.LetRefNode(\n+            slice_node.as_none_safe_node(\"'NoneType' is not iterable\"),\n+            may_hold_none=False\n+            )\n+\n+        start_node = ExprNodes.IntNode(\n+            node.pos, value='0', constant_result=0, type=PyrexTypes.c_py_ssize_t_type)\n+        length_temp = UtilNodes.LetRefNode(ExprNodes.SimpleCallNode(node.pos,\n+                                    function = ExprNodes.NameNode(node.pos, name=\"len\"),\n+                                    args = [unpack_temp_node]\n+                                    ), type=PyrexTypes.c_py_ssize_t_type)\n+        end_node = length_temp\n+        if reversed:\n+            relation1, relation2 = '>', '>='\n+            start_node, end_node = end_node, start_node\n+        else:\n+            relation1, relation2 = '<=', '<'\n+\n+        counter_ref = UtilNodes.LetRefNode(pos=node.pos, type=PyrexTypes.c_py_ssize_t_type)\n+\n+        target_value = ExprNodes.IndexNode(slice_node.pos, base=unpack_temp_node,\n+                                           index=counter_ref)\n+\n+        target_assign = Nodes.SingleAssignmentNode(\n+            pos = node.target.pos,\n+            lhs = node.target,\n+            rhs = target_value)\n+\n+        # analyse with boundscheck and wraparound\n+        # off (because we're confident we know the size)\n+        env = self.current_env()\n+        new_directives = dict(env.directives, boundscheck=False, wraparound=False)\n+        new_directives.pop('test_assert_path_exists', None)\n+        new_directives.pop('test_fail_if_path_exists', None)",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429849350",
            "id": 429849350,
            "in_reply_to_id": 429563194,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0OTM1MA==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 377,
            "original_position": 52,
            "original_start_line": 375,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 417602977,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429849350",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429849627"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429849627"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "Unfortunately the test_*_path_exists decorators don't cover inheritance (and making them account for inheritance breaks a lot, e.g. assert PythonCapiCallNode, fail if SimpleCallNode). Since I'm no longer applying this to tuples and lists I think the easiest thing is to revert to what it was before.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-25T10:01:35Z",
            "diff_hunk": "@@ -305,9 +305,10 @@ def for_in_empty_nested_listcomp():\n \n @cython.test_fail_if_path_exists(\n     \"//ForInStatNode//ForInStatNode\",\n+    \"//ForFromStatNode//ForFromStatNode\",",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429849627",
            "id": 429849627,
            "in_reply_to_id": 429565268,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0OTYyNw==",
            "original_commit_id": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "original_line": 308,
            "original_position": 4,
            "original_start_line": 306,
            "path": "tests/run/constant_folding.py",
            "position": null,
            "pull_request_review_id": 417602977,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429849627",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429851705"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429851705"
                }
            },
            "author_association": "MEMBER",
            "body": "`entry.all_entries()` already includes `entry`, so the code was already redundant before.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-25T10:05:44Z",
            "diff_hunk": "@@ -359,9 +359,12 @@ class SimpleAssignmentTypeInferer(object):\n     applies to nested scopes in top-down order.\n     \"\"\"\n     def set_entry_type(self, entry, entry_type):\n-        entry.type = entry_type\n-        for e in entry.all_entries():\n+        for e in [entry] + entry.all_entries():",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429851705",
            "id": 429851705,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1MTcwNQ==",
            "original_commit_id": "7fade030fffcdeaadaf6d60494f54221d11572a8",
            "original_line": 362,
            "original_position": 6,
            "original_start_line": null,
            "path": "Cython/Compiler/TypeInference.py",
            "position": null,
            "pull_request_review_id": 417605907,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429851705",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429851820"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429851820"
                }
            },
            "author_association": "MEMBER",
            "body": ":)",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-25T10:06:02Z",
            "diff_hunk": "@@ -259,9 +259,9 @@ def nested_struct(NestedStruct[:] mslice):\n     >>> nested_struct(NestedStructMockBuffer(None, [(1, 2, 3, 4, 5)], format=\"T{ii}T{2i}i\"))\n     1 2 3 4 5\n     \"\"\"\n-    buf = mslice\n+    cdef object cdef object buf = mslice",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429851820",
            "id": 429851820,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1MTgyMA==",
            "original_commit_id": "7fade030fffcdeaadaf6d60494f54221d11572a8",
            "original_line": 262,
            "original_position": 14,
            "original_start_line": null,
            "path": "tests/memoryview/memoryview.pyx",
            "position": null,
            "pull_request_review_id": 417605907,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429851820",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429852261"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429852261"
                }
            },
            "author_association": "MEMBER",
            "body": "Yeah, this is a good place, I think.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-25T10:07:03Z",
            "diff_hunk": "@@ -359,9 +359,12 @@ class SimpleAssignmentTypeInferer(object):\n     applies to nested scopes in top-down order.\n     \"\"\"\n     def set_entry_type(self, entry, entry_type):\n-        entry.type = entry_type\n-        for e in entry.all_entries():\n+        for e in [entry] + entry.all_entries():\n             e.type = entry_type\n+            if not e.init and e.type.default_value:\n+                # This is specifically for memoryview slices which crash if they don't get\n+                # initialized, but makes sense to apply generally",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429852261",
            "id": 429852261,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1MjI2MQ==",
            "original_commit_id": "7fade030fffcdeaadaf6d60494f54221d11572a8",
            "original_line": 366,
            "original_position": 10,
            "original_start_line": 365,
            "path": "Cython/Compiler/TypeInference.py",
            "position": null,
            "pull_request_review_id": 417605907,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429852261",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429852768"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429852768"
                }
            },
            "author_association": "MEMBER",
            "body": "`**new_directives` ? There seems to be a use case for this. :)",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-25T10:08:12Z",
            "diff_hunk": "@@ -167,6 +167,15 @@ def get_directive_defaults():\n                 _directive_defaults[old_option.directive_name] = value\n     return _directive_defaults\n \n+def copy_inherited_directives(outer_directives):",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429852768",
            "id": 429852768,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1Mjc2OA==",
            "original_commit_id": "7fade030fffcdeaadaf6d60494f54221d11572a8",
            "original_line": 170,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Compiler/Options.py",
            "position": null,
            "pull_request_review_id": 417605907,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429852768",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429854351"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429854351"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "Ooops. I did ~one~ four, and then decided that I was too lazy for the rest so did a \"find and replace\"",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-25T10:11:49Z",
            "diff_hunk": "@@ -259,9 +259,9 @@ def nested_struct(NestedStruct[:] mslice):\n     >>> nested_struct(NestedStructMockBuffer(None, [(1, 2, 3, 4, 5)], format=\"T{ii}T{2i}i\"))\n     1 2 3 4 5\n     \"\"\"\n-    buf = mslice\n+    cdef object cdef object buf = mslice",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429854351",
            "id": 429854351,
            "in_reply_to_id": 429851820,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1NDM1MQ==",
            "original_commit_id": "7fade030fffcdeaadaf6d60494f54221d11572a8",
            "original_line": 262,
            "original_position": 14,
            "original_start_line": null,
            "path": "tests/memoryview/memoryview.pyx",
            "position": null,
            "pull_request_review_id": 417609223,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429854351",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429858568"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429858568"
                }
            },
            "author_association": "MEMBER",
            "body": "Removed by accident, I guess.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-25T10:21:44Z",
            "diff_hunk": "@@ -372,14 +372,12 @@ def _transform_indexable_iteration(self, node, slice_node, reversed=False):\n         # analyse with boundscheck and wraparound\n         # off (because we're confident we know the size)\n         env = self.current_env()\n-        new_directives = dict(env.directives, boundscheck=False, wraparound=False)\n-        new_directives.pop('test_assert_path_exists', None)\n-        new_directives.pop('test_fail_if_path_exists', None)\n+        new_directives = Options.copy_inherited_directives(env.directives)\n+        new_directives.update(boundscheck=False, wraparound=False)\n         target_assign = Nodes.CompilerDirectivesNode(\n             target_assign.pos,\n             directives=new_directives,\n             body=target_assign,\n-        )",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429858568",
            "id": 429858568,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1ODU2OA==",
            "original_commit_id": "7fade030fffcdeaadaf6d60494f54221d11572a8",
            "original_line": 382,
            "original_position": 28,
            "original_start_line": null,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 417614923,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429858568",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r429990186"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/429990186"
                }
            },
            "author_association": "MEMBER",
            "body": "Since it's only one specific type now that we care about, I think it's ok to just always set `e.init`.\r\n```suggestion\r\n            if e.type.is_memoryviewslice:\r\n```",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-05-25T15:27:17Z",
            "diff_hunk": "@@ -361,9 +361,8 @@ class SimpleAssignmentTypeInferer(object):\n     def set_entry_type(self, entry, entry_type):\n         for e in entry.all_entries():\n             e.type = entry_type\n-            if not e.init and e.type.default_value:\n-                # This is specifically for memoryview slices which crash if they don't get\n-                # initialized, but makes sense to apply generally\n+            if e.type.is_memoryviewslice and not e.init and e.type.default_value:",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r429990186",
            "id": 429990186,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk5MDE4Ng==",
            "original_commit_id": "73fdd86fa8745b439cc81887934cb9bbe4e86be2",
            "original_line": 364,
            "original_position": 7,
            "original_start_line": null,
            "path": "Cython/Compiler/TypeInference.py",
            "position": null,
            "pull_request_review_id": 417778376,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/429990186",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r436774951"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/436774951"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    cdef double total = 0\r\n    for mview1d in arg:\r\n        for val in mview1d:\r\n            total += val\r\n    if total == 15:\r\n```",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-06-08T14:58:33Z",
            "diff_hunk": "@@ -409,10 +409,47 @@ def set_int_2d(int[:, :] mslice, int i, int j, int value):\n     IndexError: Out of bounds on buffer access (axis 1)\n \n     \"\"\"\n-    buf = mslice\n+    cdef object buf = mslice\n     buf[i, j] = value\n \n \n+#\n+# auto type inference\n+# (note that for most numeric types \"might_overflow\" stops the type inference from working well)\n+#\n+def type_infer(double[:, :] arg):\n+    \"\"\"\n+    type_infer(DoubleMockBuffer(\"C\", range(6), (2,3)))\n+    double\n+    double[:]\n+    double[:]\n+    double[:,;]\n+    \"\"\"\n+    a = arg[0,0]\n+    print(cython.typeof(a))\n+    b = arg[0]\n+    print(cython.typeof(b))\n+    c = arg[0,:]\n+    print(cython.typeof(c))\n+    d = arg[:,:]\n+    print(cython.typeof(d))\n+\n+#\n+# Loop optimization\n+#\n+@cython.test_fail_if_path_exists(\"//CoerceToPyTypeNode\")\n+def memview_iter(double[:, :] arg):\n+    \"\"\"\n+    memview_iter(DoubleMockBuffer(\"C\", range(6), (2,3)))\n+    True\n+    \"\"\"\n+    cdef double sum = 0\n+    for mview1d in arg:\n+        for val in mview1d:\n+            sum += val\n+    if sum == 15:",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r436774951",
            "id": 436774951,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3NDk1MQ==",
            "original_commit_id": "3021b7d33fe428928e8cd453eaf957f3b414ffbe",
            "original_line": 450,
            "original_position": 115,
            "original_start_line": 446,
            "path": "tests/memoryview/memoryview.pyx",
            "position": null,
            "pull_request_review_id": 426329852,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/436774951",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r436775433"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/436775433"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    >>> type_infer(DoubleMockBuffer(\"C\", range(6), (2,3)))\r\n```",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-06-08T14:59:14Z",
            "diff_hunk": "@@ -409,10 +409,47 @@ def set_int_2d(int[:, :] mslice, int i, int j, int value):\n     IndexError: Out of bounds on buffer access (axis 1)\n \n     \"\"\"\n-    buf = mslice\n+    cdef object buf = mslice\n     buf[i, j] = value\n \n \n+#\n+# auto type inference\n+# (note that for most numeric types \"might_overflow\" stops the type inference from working well)\n+#\n+def type_infer(double[:, :] arg):\n+    \"\"\"\n+    type_infer(DoubleMockBuffer(\"C\", range(6), (2,3)))",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r436775433",
            "id": 436775433,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3NTQzMw==",
            "original_commit_id": "3021b7d33fe428928e8cd453eaf957f3b414ffbe",
            "original_line": 422,
            "original_position": 87,
            "original_start_line": null,
            "path": "tests/memoryview/memoryview.pyx",
            "position": null,
            "pull_request_review_id": 426329852,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/436775433",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r436780803"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/436780803"
                }
            },
            "author_association": "MEMBER",
            "body": "This is ok for now, but there are some more that shouldn't be inherited, e.g. `returns`, `ccall`, etc.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-06-08T15:07:03Z",
            "diff_hunk": "@@ -167,6 +167,16 @@ def get_directive_defaults():\n                 _directive_defaults[old_option.directive_name] = value\n     return _directive_defaults\n \n+def copy_inherited_directives(outer_directives, **new_directives):\n+    # A few directives are not copied downwards and this function removes them.\n+    # For example, test_assert_path_exists and test_fail_if_path_exists should not be inherited\n+    #  otherwise they can produce very misleading test failures\n+    new_directives_out = dict(outer_directives)\n+    for name in ('test_assert_path_exists', 'test_fail_if_path_exists'):\n+        new_directives_out.pop(name, None)",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r436780803",
            "id": 436780803,
            "line": 176,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc4MDgwMw==",
            "original_commit_id": "3021b7d33fe428928e8cd453eaf957f3b414ffbe",
            "original_line": 176,
            "original_position": 10,
            "original_start_line": 175,
            "path": "Cython/Compiler/Options.py",
            "position": 10,
            "pull_request_review_id": 426329852,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": 175,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/436780803",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r437018916"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/437018916"
                }
            },
            "author_association": "MEMBER",
            "body": "Is this actually tested anywhere? Including changes to the bytearray while iterating over it? This works in Python, for example:\r\n```python\r\n>>> b = bytearray(b'abcdefg')\r\n>>> b\r\nbytearray(b'abcdefg')\r\n>>> for x in b:\r\n...   print(x, b)\r\n...   del b[-1]\r\n97 bytearray(b'abcdefg')\r\n98 bytearray(b'abcdef')\r\n99 bytearray(b'abcde')\r\n100 bytearray(b'abcd')\r\n>>> b = bytearray(b'abcdefg')\r\n>>> for x in b:\r\n...   print(chr(x), b)\r\n...   del b[0]\r\na bytearray(b'abcdefg')\r\nc bytearray(b'bcdefg')\r\ne bytearray(b'cdefg')\r\ng bytearray(b'defg')\r\n\r\n```",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-06-08T21:44:48Z",
            "diff_hunk": "@@ -228,6 +228,12 @@ def _optimise_for_loop(self, node, iterable, reversed=False):\n             return self._transform_bytes_iteration(node, iterable, reversed=reversed)\n         if iterable.type is Builtin.unicode_type:\n             return self._transform_unicode_iteration(node, iterable, reversed=reversed)\n+        # in principle _transform_indexable_iteration would work on most of the above, and\n+        # also tuple and list. However, it probably isn't quite as optimized\n+        if iterable.type is Builtin.bytearray_type:\n+            return self._transform_indexable_iteration(node, iterable, reversed=reversed)",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r437018916",
            "id": 437018916,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAxODkxNg==",
            "original_commit_id": "189182db01d3f0ff18cb6b9d5c233d8775e74916",
            "original_line": 234,
            "original_position": 7,
            "original_start_line": 233,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 426644024,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/437018916",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r437020061"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/437020061"
                }
            },
            "author_association": "MEMBER",
            "body": "We may not know the length of a `bytearray` object (or any mutable type, really) after executing arbitrary user code on each iteration. Maybe we should pass an `is_mutable` flag to this method?",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-06-08T21:47:26Z",
            "diff_hunk": "@@ -333,6 +339,77 @@ def _transform_reversed_iteration(self, node, reversed_function):\n             PyrexTypes.CFuncTypeArg(\"s\", Builtin.bytes_type, None)\n             ])\n \n+    def _transform_indexable_iteration(self, node, slice_node, reversed=False):\n+        \"\"\"In principle can handle any iterable that Cython has a len() for and knows how to index\"\"\"\n+        unpack_temp_node = UtilNodes.LetRefNode(\n+            slice_node.as_none_safe_node(\"'NoneType' is not iterable\"),\n+            may_hold_none=False\n+            )\n+\n+        start_node = ExprNodes.IntNode(\n+            node.pos, value='0', constant_result=0, type=PyrexTypes.c_py_ssize_t_type)\n+        length_temp = UtilNodes.LetRefNode(ExprNodes.SimpleCallNode(node.pos,\n+                                    function = ExprNodes.NameNode(node.pos, name=\"len\"),\n+                                    args = [unpack_temp_node]\n+                                    ), type=PyrexTypes.c_py_ssize_t_type)\n+        end_node = length_temp\n+        if reversed:\n+            relation1, relation2 = '>', '>='\n+            start_node, end_node = end_node, start_node\n+        else:\n+            relation1, relation2 = '<=', '<'\n+\n+        counter_ref = UtilNodes.LetRefNode(pos=node.pos, type=PyrexTypes.c_py_ssize_t_type)\n+\n+        target_value = ExprNodes.IndexNode(slice_node.pos, base=unpack_temp_node,\n+                                           index=counter_ref)\n+\n+        target_assign = Nodes.SingleAssignmentNode(\n+            pos = node.target.pos,\n+            lhs = node.target,\n+            rhs = target_value)\n+\n+        # analyse with boundscheck and wraparound\n+        # off (because we're confident we know the size)",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r437020061",
            "id": 437020061,
            "line": 379,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAyMDA2MQ==",
            "original_commit_id": "189182db01d3f0ff18cb6b9d5c233d8775e74916",
            "original_line": 373,
            "original_position": 48,
            "original_start_line": 372,
            "path": "Cython/Compiler/Optimize.py",
            "position": 54,
            "pull_request_review_id": 426644024,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": 378,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/437020061",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r437189484"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/437189484"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I think I did write originally some simple tests and then failed to add it to git (which is obviously no use all at...)\r\n\r\nIt's now tested properly, including modifying it.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-06-09T07:21:37Z",
            "diff_hunk": "@@ -228,6 +228,12 @@ def _optimise_for_loop(self, node, iterable, reversed=False):\n             return self._transform_bytes_iteration(node, iterable, reversed=reversed)\n         if iterable.type is Builtin.unicode_type:\n             return self._transform_unicode_iteration(node, iterable, reversed=reversed)\n+        # in principle _transform_indexable_iteration would work on most of the above, and\n+        # also tuple and list. However, it probably isn't quite as optimized\n+        if iterable.type is Builtin.bytearray_type:\n+            return self._transform_indexable_iteration(node, iterable, reversed=reversed)",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r437189484",
            "id": 437189484,
            "in_reply_to_id": 437018916,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE4OTQ4NA==",
            "original_commit_id": "189182db01d3f0ff18cb6b9d5c233d8775e74916",
            "original_line": 234,
            "original_position": 7,
            "original_start_line": 233,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 426853986,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/437189484",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r437303870"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/437303870"
                }
            },
            "author_association": "MEMBER",
            "body": "I wonder what happens if users override `len` in their code with something else. We should probably make sure that this is identified as the builtin, by setting the right entry here.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-06-09T10:23:27Z",
            "diff_hunk": "@@ -339,20 +339,22 @@ def _transform_reversed_iteration(self, node, reversed_function):\n             PyrexTypes.CFuncTypeArg(\"s\", Builtin.bytes_type, None)\n             ])\n \n-    def _transform_indexable_iteration(self, node, slice_node, reversed=False):\n+    def _transform_indexable_iteration(self, node, slice_node, is_mutable, reversed=False):\n         \"\"\"In principle can handle any iterable that Cython has a len() for and knows how to index\"\"\"\n         unpack_temp_node = UtilNodes.LetRefNode(\n             slice_node.as_none_safe_node(\"'NoneType' is not iterable\"),\n-            may_hold_none=False\n+            may_hold_none=False, is_temp=True\n             )\n \n         start_node = ExprNodes.IntNode(\n             node.pos, value='0', constant_result=0, type=PyrexTypes.c_py_ssize_t_type)\n-        length_temp = UtilNodes.LetRefNode(ExprNodes.SimpleCallNode(node.pos,\n+        length_call = ExprNodes.SimpleCallNode(node.pos,\n                                     function = ExprNodes.NameNode(node.pos, name=\"len\"),",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r437303870",
            "id": 437303870,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMwMzg3MA==",
            "original_commit_id": "a5f0dc772f5b89f36114544dba13a760991056ce",
            "original_line": 352,
            "original_position": 29,
            "original_start_line": null,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 427001331,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/437303870",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r437304550"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/437304550"
                }
            },
            "author_association": "MEMBER",
            "body": "There are helper methods `.coerce_to_simple()` and `.coerce_to_temp()` for this need.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-06-09T10:24:40Z",
            "diff_hunk": "@@ -339,20 +339,22 @@ def _transform_reversed_iteration(self, node, reversed_function):\n             PyrexTypes.CFuncTypeArg(\"s\", Builtin.bytes_type, None)\n             ])\n \n-    def _transform_indexable_iteration(self, node, slice_node, reversed=False):\n+    def _transform_indexable_iteration(self, node, slice_node, is_mutable, reversed=False):\n         \"\"\"In principle can handle any iterable that Cython has a len() for and knows how to index\"\"\"\n         unpack_temp_node = UtilNodes.LetRefNode(\n             slice_node.as_none_safe_node(\"'NoneType' is not iterable\"),\n-            may_hold_none=False\n+            may_hold_none=False, is_temp=True",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r437304550",
            "id": 437304550,
            "line": 346,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMwNDU1MA==",
            "original_commit_id": "a5f0dc772f5b89f36114544dba13a760991056ce",
            "original_line": 346,
            "original_position": 22,
            "original_start_line": null,
            "path": "Cython/Compiler/Optimize.py",
            "position": 21,
            "pull_request_review_id": 427001331,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/437304550",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r437314033"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/437314033"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm not a big fan of copying nodes. It works here, but only because special care was taken before, and future changes in other places can easily break these assumptions. I'd rather create a new node even here. Or push the  \"mutable end boundary\" down into the `ForFromStatNode`?",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-06-09T10:42:35Z",
            "diff_hunk": "@@ -382,6 +384,15 @@ def _transform_indexable_iteration(self, node, slice_node, reversed=False):\n         body = Nodes.StatListNode(\n             node.pos,\n             stats = [target_assign]) # exclude node.body for now to not reanalyse it\n+        if is_mutable:\n+            # We need to be slightly careful here that we are actually modifying the loop\n+            # bounds and not a temp copy of it. Setting is_temp=True on length_temp seems\n+            # to ensure this.\n+            # If this starts to fail then we could insert an \"if out_of_bounds: break\" instead\n+            loop_length_reassign = Nodes.SingleAssignmentNode(node.pos,\n+                                                        lhs = length_temp,\n+                                                        rhs = copy.copy(length_call))",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r437314033",
            "id": 437314033,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMxNDAzMw==",
            "original_commit_id": "a5f0dc772f5b89f36114544dba13a760991056ce",
            "original_line": 394,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 427001331,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T16:58:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/437314033",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r437582786"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/437582786"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I think pushing the mutable end boundary is probably a bigger change than I really want to do. I've created a new node.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-06-09T17:00:43Z",
            "diff_hunk": "@@ -382,6 +384,15 @@ def _transform_indexable_iteration(self, node, slice_node, reversed=False):\n         body = Nodes.StatListNode(\n             node.pos,\n             stats = [target_assign]) # exclude node.body for now to not reanalyse it\n+        if is_mutable:\n+            # We need to be slightly careful here that we are actually modifying the loop\n+            # bounds and not a temp copy of it. Setting is_temp=True on length_temp seems\n+            # to ensure this.\n+            # If this starts to fail then we could insert an \"if out_of_bounds: break\" instead\n+            loop_length_reassign = Nodes.SingleAssignmentNode(node.pos,\n+                                                        lhs = length_temp,\n+                                                        rhs = copy.copy(length_call))",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r437582786",
            "id": 437582786,
            "in_reply_to_id": 437314033,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4Mjc4Ng==",
            "original_commit_id": "a5f0dc772f5b89f36114544dba13a760991056ce",
            "original_line": 394,
            "original_position": 50,
            "original_start_line": null,
            "path": "Cython/Compiler/Optimize.py",
            "position": null,
            "pull_request_review_id": 427364741,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T17:05:45Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/437582786",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r437585298"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/437585298"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "It's possible I'm missing something but: `is_temp` is part of the constructor interface for `LetRefNode` so I think it's a valid thing to set. In this case I'm setting it as true because the `LetNode` ensures that it does end up as a temp. If I don't set it then it gets coerced to a temp (again) elsewhere, and generates a lot of unnecessary increfs and decrefs before each use..\r\n\r\nI suspect the really correct thing to do would be to get `LetNode` to mark it as a temp correctly. However, when I tried that it broke other code in confusing ways...",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-06-09T17:05:10Z",
            "diff_hunk": "@@ -339,20 +339,22 @@ def _transform_reversed_iteration(self, node, reversed_function):\n             PyrexTypes.CFuncTypeArg(\"s\", Builtin.bytes_type, None)\n             ])\n \n-    def _transform_indexable_iteration(self, node, slice_node, reversed=False):\n+    def _transform_indexable_iteration(self, node, slice_node, is_mutable, reversed=False):\n         \"\"\"In principle can handle any iterable that Cython has a len() for and knows how to index\"\"\"\n         unpack_temp_node = UtilNodes.LetRefNode(\n             slice_node.as_none_safe_node(\"'NoneType' is not iterable\"),\n-            may_hold_none=False\n+            may_hold_none=False, is_temp=True",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r437585298",
            "id": 437585298,
            "in_reply_to_id": 437304550,
            "line": 346,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NTI5OA==",
            "original_commit_id": "a5f0dc772f5b89f36114544dba13a760991056ce",
            "original_line": 346,
            "original_position": 22,
            "original_start_line": null,
            "path": "Cython/Compiler/Optimize.py",
            "position": 21,
            "pull_request_review_id": 427364741,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T17:05:46Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/437585298",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r437615099"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/437615099"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah, yes, you're right. It should be set to `True`.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-06-09T17:55:54Z",
            "diff_hunk": "@@ -339,20 +339,22 @@ def _transform_reversed_iteration(self, node, reversed_function):\n             PyrexTypes.CFuncTypeArg(\"s\", Builtin.bytes_type, None)\n             ])\n \n-    def _transform_indexable_iteration(self, node, slice_node, reversed=False):\n+    def _transform_indexable_iteration(self, node, slice_node, is_mutable, reversed=False):\n         \"\"\"In principle can handle any iterable that Cython has a len() for and knows how to index\"\"\"\n         unpack_temp_node = UtilNodes.LetRefNode(\n             slice_node.as_none_safe_node(\"'NoneType' is not iterable\"),\n-            may_hold_none=False\n+            may_hold_none=False, is_temp=True",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r437615099",
            "id": 437615099,
            "in_reply_to_id": 437304550,
            "line": 346,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzYxNTA5OQ==",
            "original_commit_id": "a5f0dc772f5b89f36114544dba13a760991056ce",
            "original_line": 346,
            "original_position": 22,
            "original_start_line": null,
            "path": "Cython/Compiler/Optimize.py",
            "position": 21,
            "pull_request_review_id": 427406962,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T17:55:54Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/437615099",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3617#discussion_r437616623"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3617"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/437616623"
                }
            },
            "author_association": "MEMBER",
            "body": "I actually wonder why it's not always true – or at least in most cases… Something to revisit in the places where it's being used currently.",
            "commit_id": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "created_at": "2020-06-09T17:58:29Z",
            "diff_hunk": "@@ -339,20 +339,22 @@ def _transform_reversed_iteration(self, node, reversed_function):\n             PyrexTypes.CFuncTypeArg(\"s\", Builtin.bytes_type, None)\n             ])\n \n-    def _transform_indexable_iteration(self, node, slice_node, reversed=False):\n+    def _transform_indexable_iteration(self, node, slice_node, is_mutable, reversed=False):\n         \"\"\"In principle can handle any iterable that Cython has a len() for and knows how to index\"\"\"\n         unpack_temp_node = UtilNodes.LetRefNode(\n             slice_node.as_none_safe_node(\"'NoneType' is not iterable\"),\n-            may_hold_none=False\n+            may_hold_none=False, is_temp=True",
            "html_url": "https://github.com/cython/cython/pull/3617#discussion_r437616623",
            "id": 437616623,
            "in_reply_to_id": 437304550,
            "line": 346,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzYxNjYyMw==",
            "original_commit_id": "a5f0dc772f5b89f36114544dba13a760991056ce",
            "original_line": 346,
            "original_position": 22,
            "original_start_line": null,
            "path": "Cython/Compiler/Optimize.py",
            "position": 21,
            "pull_request_review_id": 427408928,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3617",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-09T17:58:29Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/437616623",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3617/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f857a56303471de2cb84c344fbf04c35e131120f/comments",
            "commit": {
                "author": {
                    "date": "2020-05-17T19:16:49Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-17T19:16:49Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "[WIP] generic optimized loop iterator; type inference of memoryviews\n\nA lot of tests aren't working though because they rely on\nno type inference of memoryviews.",
                "tree": {
                    "sha": "50a4054ba5df75a453e0675f3a40e205754c0a6f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/50a4054ba5df75a453e0675f3a40e205754c0a6f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f857a56303471de2cb84c344fbf04c35e131120f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/f857a56303471de2cb84c344fbf04c35e131120f",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6Zjg1N2E1NjMwMzQ3MWRlMmNiODRjMzQ0ZmJmMDRjMzVlMTMxMTIwZg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4bfd93544d706f5f683232c9aea78538ec84f11b",
                    "sha": "4bfd93544d706f5f683232c9aea78538ec84f11b",
                    "url": "https://api.github.com/repos/cython/cython/commits/4bfd93544d706f5f683232c9aea78538ec84f11b"
                }
            ],
            "sha": "f857a56303471de2cb84c344fbf04c35e131120f",
            "url": "https://api.github.com/repos/cython/cython/commits/f857a56303471de2cb84c344fbf04c35e131120f"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5b2ca137b102c4a1090f5cfded777c736f2b5eae/comments",
            "commit": {
                "author": {
                    "date": "2020-05-17T20:46:39Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-17T20:46:39Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Apply suggestions from code review\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "60d68a0a5f0107d8181048df5674c91df797d9f2",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/60d68a0a5f0107d8181048df5674c91df797d9f2"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5b2ca137b102c4a1090f5cfded777c736f2b5eae",
                "verification": {
                    "payload": "tree 60d68a0a5f0107d8181048df5674c91df797d9f2\nparent f857a56303471de2cb84c344fbf04c35e131120f\nauthor da-woods <dw-git@d-woods.co.uk> 1589748399 +0100\ncommitter GitHub <noreply@github.com> 1589748399 +0100\n\nApply suggestions from code review\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJewaKvCRBK7hj4Ov3rIwAAdHIIAI6hZUbEZ55bhmKYGDnjdkeq\nfHLrCEye3FMS/jZR2HsHsCkQupjtdhd/TFifkRZhv36v6694TQ4NAt/vo1XpIaPQ\nJWu+w/cs+e30vbBMGFsQ5W+neUCRkiBNXvwe4zg+klrq52sXIpGANqo3k8v2NDD8\nrPGuU6+IrkUv/tv95E9FNcNsEuwoOHpPDv9Iwbmf1UXlC5O7HQn6xbbna7vCC7NI\n+4cZ3sX7JA9e259Nc3HRFstHO0gW1RLb1lv0k5EyGaEEQFLMZkfzjCcXWQJEhvBR\nD8t2W/1MOD7thXDg9LpwNbtUMkLirvbtbAF+jw5ysRqMRv8/RT4Qu4GlYlvEd2Q=\n=Sk9C\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/5b2ca137b102c4a1090f5cfded777c736f2b5eae",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NWIyY2ExMzdiMTAyYzRhMTA5MGY1Y2ZkZWQ3NzdjNzM2ZjJiNWVhZQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f857a56303471de2cb84c344fbf04c35e131120f",
                    "sha": "f857a56303471de2cb84c344fbf04c35e131120f",
                    "url": "https://api.github.com/repos/cython/cython/commits/f857a56303471de2cb84c344fbf04c35e131120f"
                }
            ],
            "sha": "5b2ca137b102c4a1090f5cfded777c736f2b5eae",
            "url": "https://api.github.com/repos/cython/cython/commits/5b2ca137b102c4a1090f5cfded777c736f2b5eae"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8a89d396e106656f11789d26ab1e96791928c861/comments",
            "commit": {
                "author": {
                    "date": "2020-05-18T18:37:22Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-18T18:37:22Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Used non-deprecated UtilNodes; reduced unnecessary temps",
                "tree": {
                    "sha": "53db45b111a45b908976bda9b4fbb08c31ae35bc",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/53db45b111a45b908976bda9b4fbb08c31ae35bc"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8a89d396e106656f11789d26ab1e96791928c861",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/8a89d396e106656f11789d26ab1e96791928c861",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6OGE4OWQzOTZlMTA2NjU2ZjExNzg5ZDI2YWIxZTk2NzkxOTI4Yzg2MQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/5b2ca137b102c4a1090f5cfded777c736f2b5eae",
                    "sha": "5b2ca137b102c4a1090f5cfded777c736f2b5eae",
                    "url": "https://api.github.com/repos/cython/cython/commits/5b2ca137b102c4a1090f5cfded777c736f2b5eae"
                }
            ],
            "sha": "8a89d396e106656f11789d26ab1e96791928c861",
            "url": "https://api.github.com/repos/cython/cython/commits/8a89d396e106656f11789d26ab1e96791928c861"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/791c70113933547f4a0a43e2c4f71b014400346a/comments",
            "commit": {
                "author": {
                    "date": "2020-05-20T06:59:58Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-20T06:59:58Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'master' into indexloops",
                "tree": {
                    "sha": "2304bcde5f609b21ed457f7d73fff1f9faa4351d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2304bcde5f609b21ed457f7d73fff1f9faa4351d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/791c70113933547f4a0a43e2c4f71b014400346a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/791c70113933547f4a0a43e2c4f71b014400346a",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NzkxYzcwMTEzOTMzNTQ3ZjRhMGE0M2UyYzRmNzFiMDE0NDAwMzQ2YQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8a89d396e106656f11789d26ab1e96791928c861",
                    "sha": "8a89d396e106656f11789d26ab1e96791928c861",
                    "url": "https://api.github.com/repos/cython/cython/commits/8a89d396e106656f11789d26ab1e96791928c861"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/cbe43273439f030acac13bf204b4c1bae66b37bf",
                    "sha": "cbe43273439f030acac13bf204b4c1bae66b37bf",
                    "url": "https://api.github.com/repos/cython/cython/commits/cbe43273439f030acac13bf204b4c1bae66b37bf"
                }
            ],
            "sha": "791c70113933547f4a0a43e2c4f71b014400346a",
            "url": "https://api.github.com/repos/cython/cython/commits/791c70113933547f4a0a43e2c4f71b014400346a"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4de097ed34866ebf216933c9286e7ba60dc5ac93/comments",
            "commit": {
                "author": {
                    "date": "2020-05-20T07:41:05Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-20T07:41:05Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Made memoryview tests work\n\n(+ reverted a change to temps that was causing unrelated crashes)",
                "tree": {
                    "sha": "9b28d1ba64a3be3332ed1f8edf5c16ae998da67c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/9b28d1ba64a3be3332ed1f8edf5c16ae998da67c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4de097ed34866ebf216933c9286e7ba60dc5ac93",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/4de097ed34866ebf216933c9286e7ba60dc5ac93",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NGRlMDk3ZWQzNDg2NmViZjIxNjkzM2M5Mjg2ZTdiYTYwZGM1YWM5Mw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/791c70113933547f4a0a43e2c4f71b014400346a",
                    "sha": "791c70113933547f4a0a43e2c4f71b014400346a",
                    "url": "https://api.github.com/repos/cython/cython/commits/791c70113933547f4a0a43e2c4f71b014400346a"
                }
            ],
            "sha": "4de097ed34866ebf216933c9286e7ba60dc5ac93",
            "url": "https://api.github.com/repos/cython/cython/commits/4de097ed34866ebf216933c9286e7ba60dc5ac93"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1d9633ebded307e1ada4d2ef7f697d062c5fac24/comments",
            "commit": {
                "author": {
                    "date": "2020-05-20T18:25:48Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-20T18:25:48Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed more test failure issues, and stopped Py2 looping endlessly\n\nNot 100% happy - had to disable at least one test that\nshould be left running",
                "tree": {
                    "sha": "119a25146ab71c2403582960c415785f52f12d11",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/119a25146ab71c2403582960c415785f52f12d11"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1d9633ebded307e1ada4d2ef7f697d062c5fac24",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/1d9633ebded307e1ada4d2ef7f697d062c5fac24",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MWQ5NjMzZWJkZWQzMDdlMWFkYTRkMmVmN2Y2OTdkMDYyYzVmYWMyNA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4de097ed34866ebf216933c9286e7ba60dc5ac93",
                    "sha": "4de097ed34866ebf216933c9286e7ba60dc5ac93",
                    "url": "https://api.github.com/repos/cython/cython/commits/4de097ed34866ebf216933c9286e7ba60dc5ac93"
                }
            ],
            "sha": "1d9633ebded307e1ada4d2ef7f697d062c5fac24",
            "url": "https://api.github.com/repos/cython/cython/commits/1d9633ebded307e1ada4d2ef7f697d062c5fac24"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/74f8408084df4e72f618c271f08aac7bf612672b/comments",
            "commit": {
                "author": {
                    "date": "2020-05-21T19:15:14Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-21T19:15:14Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fix missing function definitions for TempResultFromStatNode",
                "tree": {
                    "sha": "71df2c26b8c85369090b68e74165df1f807507e3",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/71df2c26b8c85369090b68e74165df1f807507e3"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/74f8408084df4e72f618c271f08aac7bf612672b",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/74f8408084df4e72f618c271f08aac7bf612672b",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NzRmODQwODA4NGRmNGU3MmY2MThjMjcxZjA4YWFjN2JmNjEyNjcyYg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1d9633ebded307e1ada4d2ef7f697d062c5fac24",
                    "sha": "1d9633ebded307e1ada4d2ef7f697d062c5fac24",
                    "url": "https://api.github.com/repos/cython/cython/commits/1d9633ebded307e1ada4d2ef7f697d062c5fac24"
                }
            ],
            "sha": "74f8408084df4e72f618c271f08aac7bf612672b",
            "url": "https://api.github.com/repos/cython/cython/commits/74f8408084df4e72f618c271f08aac7bf612672b"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/51bccfb10a0a73326062e45ba063aaec45909cb7/comments",
            "commit": {
                "author": {
                    "date": "2020-05-21T20:25:50Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-21T20:25:50Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Put back return inside a function body",
                "tree": {
                    "sha": "1cb46a67de8705b216ae408175f3c94f7edf7c75",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1cb46a67de8705b216ae408175f3c94f7edf7c75"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/51bccfb10a0a73326062e45ba063aaec45909cb7",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/51bccfb10a0a73326062e45ba063aaec45909cb7",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NTFiY2NmYjEwYTBhNzMzMjYwNjJlNDViYTA2M2FhZWM0NTkwOWNiNw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/74f8408084df4e72f618c271f08aac7bf612672b",
                    "sha": "74f8408084df4e72f618c271f08aac7bf612672b",
                    "url": "https://api.github.com/repos/cython/cython/commits/74f8408084df4e72f618c271f08aac7bf612672b"
                }
            ],
            "sha": "51bccfb10a0a73326062e45ba063aaec45909cb7",
            "url": "https://api.github.com/repos/cython/cython/commits/51bccfb10a0a73326062e45ba063aaec45909cb7"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/44fe89964852d16c00c12aa6ad0475204ea8d258/comments",
            "commit": {
                "author": {
                    "date": "2020-05-21T21:21:07Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-21T21:21:07Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Removed a PrintTree that shouldn't have been left in pipeline",
                "tree": {
                    "sha": "67b884874723c2abc6385b585ac52b207d45e20a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/67b884874723c2abc6385b585ac52b207d45e20a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/44fe89964852d16c00c12aa6ad0475204ea8d258",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/44fe89964852d16c00c12aa6ad0475204ea8d258",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NDRmZTg5OTY0ODUyZDE2YzAwYzEyYWE2YWQwNDc1MjA0ZWE4ZDI1OA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/51bccfb10a0a73326062e45ba063aaec45909cb7",
                    "sha": "51bccfb10a0a73326062e45ba063aaec45909cb7",
                    "url": "https://api.github.com/repos/cython/cython/commits/51bccfb10a0a73326062e45ba063aaec45909cb7"
                }
            ],
            "sha": "44fe89964852d16c00c12aa6ad0475204ea8d258",
            "url": "https://api.github.com/repos/cython/cython/commits/44fe89964852d16c00c12aa6ad0475204ea8d258"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9e5c1ae6703eb569d5291b1d14a2138ee5357d20/comments",
            "commit": {
                "author": {
                    "date": "2020-05-23T18:42:36Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-23T18:42:36Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Apply suggestions from code review\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "d4fa84e73189af52d68f0a0de9c3e9b21a882c1c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d4fa84e73189af52d68f0a0de9c3e9b21a882c1c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9e5c1ae6703eb569d5291b1d14a2138ee5357d20",
                "verification": {
                    "payload": "tree d4fa84e73189af52d68f0a0de9c3e9b21a882c1c\nparent 44fe89964852d16c00c12aa6ad0475204ea8d258\nauthor da-woods <dw-git@d-woods.co.uk> 1590259356 +0100\ncommitter GitHub <noreply@github.com> 1590259356 +0100\n\nApply suggestions from code review\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeyW6cCRBK7hj4Ov3rIwAAdHIIAGmjcpLGg3BJxY5pCVPaQIFs\nXw3rNBz461ClSY4dLLmpUcePkGw21+/wkQbB+UcXMM/mhHUBYYaQ2SPQ6l3+auHU\nj1QCNv7rwf3QaB/uGldByFokeopMZWn/0HrOzphYfBhFG2xs2XdZBqyZfNPKiEIz\nZ+InySJQhXpCf2YH/u+bM66emvvXbVwEGxjDDEw5cVFcH76dwlLe6IYDfphvG+ls\nhzfyQi/Hi0hdfiZ3HJxeZ7qsOwITA5GbuFDictrxdDzWoBrDsSd8tROLjspuAZ4Y\nZG5G9dpTBskTP7/673OxuOcZ772dXztllYf0wWV5GW8s9Fw7Z/PMaWK7LYl3+18=\n=o0Yq\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/9e5c1ae6703eb569d5291b1d14a2138ee5357d20",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6OWU1YzFhZTY3MDNlYjU2OWQ1MjkxYjFkMTRhMjEzOGVlNTM1N2QyMA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/44fe89964852d16c00c12aa6ad0475204ea8d258",
                    "sha": "44fe89964852d16c00c12aa6ad0475204ea8d258",
                    "url": "https://api.github.com/repos/cython/cython/commits/44fe89964852d16c00c12aa6ad0475204ea8d258"
                }
            ],
            "sha": "9e5c1ae6703eb569d5291b1d14a2138ee5357d20",
            "url": "https://api.github.com/repos/cython/cython/commits/9e5c1ae6703eb569d5291b1d14a2138ee5357d20"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7fade030fffcdeaadaf6d60494f54221d11572a8/comments",
            "commit": {
                "author": {
                    "date": "2020-05-25T09:58:33Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-25T09:58:33Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Comments from review, bytearray",
                "tree": {
                    "sha": "8ed63c14a7864ade1ebe73ec4d37ba8f34a292c2",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8ed63c14a7864ade1ebe73ec4d37ba8f34a292c2"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7fade030fffcdeaadaf6d60494f54221d11572a8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/7fade030fffcdeaadaf6d60494f54221d11572a8",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6N2ZhZGUwMzBmZmZjZGVhYWRhZjZkNjA0OTRmNTQyMjFkMTE1NzJhOA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9e5c1ae6703eb569d5291b1d14a2138ee5357d20",
                    "sha": "9e5c1ae6703eb569d5291b1d14a2138ee5357d20",
                    "url": "https://api.github.com/repos/cython/cython/commits/9e5c1ae6703eb569d5291b1d14a2138ee5357d20"
                }
            ],
            "sha": "7fade030fffcdeaadaf6d60494f54221d11572a8",
            "url": "https://api.github.com/repos/cython/cython/commits/7fade030fffcdeaadaf6d60494f54221d11572a8"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/aff89dcaf14d7698724978655c316e42edf5cae2/comments",
            "commit": {
                "author": {
                    "date": "2020-05-25T10:15:39Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-25T10:15:39Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "More fixes",
                "tree": {
                    "sha": "3508e1fbd259d96045459ada2bf12a040fb4949a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3508e1fbd259d96045459ada2bf12a040fb4949a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/aff89dcaf14d7698724978655c316e42edf5cae2",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/aff89dcaf14d7698724978655c316e42edf5cae2",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YWZmODlkY2FmMTRkNzY5ODcyNDk3ODY1NWMzMTZlNDJlZGY1Y2FlMg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7fade030fffcdeaadaf6d60494f54221d11572a8",
                    "sha": "7fade030fffcdeaadaf6d60494f54221d11572a8",
                    "url": "https://api.github.com/repos/cython/cython/commits/7fade030fffcdeaadaf6d60494f54221d11572a8"
                }
            ],
            "sha": "aff89dcaf14d7698724978655c316e42edf5cae2",
            "url": "https://api.github.com/repos/cython/cython/commits/aff89dcaf14d7698724978655c316e42edf5cae2"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c1959718e8130e1346501fd33d5da44539fb83f9/comments",
            "commit": {
                "author": {
                    "date": "2020-05-25T10:45:03Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-25T10:46:40Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Typos and a literal_code fix",
                "tree": {
                    "sha": "a6d50c7bd98b1b13da2640294b67de398747d2bd",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a6d50c7bd98b1b13da2640294b67de398747d2bd"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c1959718e8130e1346501fd33d5da44539fb83f9",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/c1959718e8130e1346501fd33d5da44539fb83f9",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YzE5NTk3MThlODEzMGUxMzQ2NTAxZmQzM2Q1ZGE0NDUzOWZiODNmOQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/aff89dcaf14d7698724978655c316e42edf5cae2",
                    "sha": "aff89dcaf14d7698724978655c316e42edf5cae2",
                    "url": "https://api.github.com/repos/cython/cython/commits/aff89dcaf14d7698724978655c316e42edf5cae2"
                }
            ],
            "sha": "c1959718e8130e1346501fd33d5da44539fb83f9",
            "url": "https://api.github.com/repos/cython/cython/commits/c1959718e8130e1346501fd33d5da44539fb83f9"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/73fdd86fa8745b439cc81887934cb9bbe4e86be2/comments",
            "commit": {
                "author": {
                    "date": "2020-05-25T11:13:54Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-25T11:13:54Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Only set e.init for memoryviewslice\n\nC types are confusing it because \"0\" on a string type is\ninterpretted as a literal string 0, but otherwise it's\ninterpretted as a null_ptr",
                "tree": {
                    "sha": "567fbb870c26d208212f52a0431e11657eff8ec3",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/567fbb870c26d208212f52a0431e11657eff8ec3"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/73fdd86fa8745b439cc81887934cb9bbe4e86be2",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/73fdd86fa8745b439cc81887934cb9bbe4e86be2",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NzNmZGQ4NmZhODc0NWI0MzljYzgxODg3OTM0Y2I5YmJlNGU4NmJlMg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c1959718e8130e1346501fd33d5da44539fb83f9",
                    "sha": "c1959718e8130e1346501fd33d5da44539fb83f9",
                    "url": "https://api.github.com/repos/cython/cython/commits/c1959718e8130e1346501fd33d5da44539fb83f9"
                }
            ],
            "sha": "73fdd86fa8745b439cc81887934cb9bbe4e86be2",
            "url": "https://api.github.com/repos/cython/cython/commits/73fdd86fa8745b439cc81887934cb9bbe4e86be2"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/3021b7d33fe428928e8cd453eaf957f3b414ffbe/comments",
            "commit": {
                "author": {
                    "date": "2020-05-25T15:32:54Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-25T15:32:54Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Update Cython/Compiler/TypeInference.py\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "63e3a0cba7cfa568dcb7e48b7cd19252511e670b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/63e3a0cba7cfa568dcb7e48b7cd19252511e670b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/3021b7d33fe428928e8cd453eaf957f3b414ffbe",
                "verification": {
                    "payload": "tree 63e3a0cba7cfa568dcb7e48b7cd19252511e670b\nparent 73fdd86fa8745b439cc81887934cb9bbe4e86be2\nauthor da-woods <dw-git@d-woods.co.uk> 1590420774 +0100\ncommitter GitHub <noreply@github.com> 1590420774 +0100\n\nUpdate Cython/Compiler/TypeInference.py\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJey+UmCRBK7hj4Ov3rIwAAdHIIAKtmCZ1ok/iy5dLM8R3kP+I4\nafQY68JMOnm+KtN5Ew5LGRcVg7ATGHDmqeVZOLvpVJhC0hAtFUjWK8rCQvQeBQhX\neYTjl87y+5eRnRN/j01RzNbLaH84PsCmzsbQrJu9HcriDZNQCK5dgmxulqEYbrp4\nKzkn5K4nYIZOINBGrUV8pzyfc6VKN+ofMU49qYH7+AnWmxbnjfybXFROY2AXw5bx\nQXTf/uAthC2jdQJ6yxrRknKWPPhUUhVrH6NB4DZFj7xU3kcR9QcrFv2bssf7g3i9\nwHFiMlBPc4Gs5jWF4o1oDznikxTu4RCmQR6woxc9qlmPyM5l36UypwoXsfzKW6I=\n=wd73\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/3021b7d33fe428928e8cd453eaf957f3b414ffbe",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MzAyMWI3ZDMzZmU0Mjg5MjhlOGNkNDUzZWFmOTU3ZjNiNDE0ZmZiZQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/73fdd86fa8745b439cc81887934cb9bbe4e86be2",
                    "sha": "73fdd86fa8745b439cc81887934cb9bbe4e86be2",
                    "url": "https://api.github.com/repos/cython/cython/commits/73fdd86fa8745b439cc81887934cb9bbe4e86be2"
                }
            ],
            "sha": "3021b7d33fe428928e8cd453eaf957f3b414ffbe",
            "url": "https://api.github.com/repos/cython/cython/commits/3021b7d33fe428928e8cd453eaf957f3b414ffbe"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/70cf9d1c100b674ae7a85a477ea1b48cf1065452/comments",
            "commit": {
                "author": {
                    "date": "2020-06-08T15:11:54Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-08T15:11:54Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Move type inference for memory view slices next to the concrete type cases.",
                "tree": {
                    "sha": "65bd1fed606b338e3cb8b19dd2b4cb58bf08a005",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/65bd1fed606b338e3cb8b19dd2b4cb58bf08a005"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/70cf9d1c100b674ae7a85a477ea1b48cf1065452",
                "verification": {
                    "payload": "tree 65bd1fed606b338e3cb8b19dd2b4cb58bf08a005\nparent 3021b7d33fe428928e8cd453eaf957f3b414ffbe\nauthor scoder <stefan_ml@behnel.de> 1591629114 +0200\ncommitter GitHub <noreply@github.com> 1591629114 +0200\n\nMove type inference for memory view slices next to the concrete type cases.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe3lU6CRBK7hj4Ov3rIwAAdHIIADUVXjjFjzM15TfIOpICUF3q\nqvkSuxJ1JFl8fhy62sdpMRSS3QMIY2DBfnR9BKmAA22Xxifb9PF3uQGltMQ/4pqc\n4+bTMX4paGgD0hveaYKRqKCn6wUHpjzvbjo1Kck0P9/vxggC5YMrcmSSPRKEk0oj\n/KcJ333DoRxLqOytinA8JT2sitSIOudIaWC2vqmMOn5kYL51Dt79T7217z+1l7pt\nxSpOVJ1IySY9RyszDf3uunTVO1TDMPVGing561J0Hqx5MrqzThc4jxBGM7y1diKo\nBjwQEerh8vy0pwr9snuJxVS4UbYx+jldwIAxMvK4KsZ2a1u/keDvbXl4oVfciQY=\n=1say\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/70cf9d1c100b674ae7a85a477ea1b48cf1065452",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NzBjZjlkMWMxMDBiNjc0YWU3YTg1YTQ3N2VhMWI0OGNmMTA2NTQ1Mg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3021b7d33fe428928e8cd453eaf957f3b414ffbe",
                    "sha": "3021b7d33fe428928e8cd453eaf957f3b414ffbe",
                    "url": "https://api.github.com/repos/cython/cython/commits/3021b7d33fe428928e8cd453eaf957f3b414ffbe"
                }
            ],
            "sha": "70cf9d1c100b674ae7a85a477ea1b48cf1065452",
            "url": "https://api.github.com/repos/cython/cython/commits/70cf9d1c100b674ae7a85a477ea1b48cf1065452"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/cf35f61b6079f8d4a05d3ba49af1b260e4167b15/comments",
            "commit": {
                "author": {
                    "date": "2020-06-08T15:13:56Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-08T15:13:56Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Apply suggestions from code review",
                "tree": {
                    "sha": "a572e82571cc2cd596b528ff04b416a62c1699b2",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a572e82571cc2cd596b528ff04b416a62c1699b2"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/cf35f61b6079f8d4a05d3ba49af1b260e4167b15",
                "verification": {
                    "payload": "tree a572e82571cc2cd596b528ff04b416a62c1699b2\nparent 70cf9d1c100b674ae7a85a477ea1b48cf1065452\nauthor scoder <stefan_ml@behnel.de> 1591629236 +0200\ncommitter GitHub <noreply@github.com> 1591629236 +0200\n\nApply suggestions from code review",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe3lW0CRBK7hj4Ov3rIwAAdHIIABONMwieQqOqmTQ4Nud4/Yt9\nCO63ZjBKugp+zO/5vsTefh2PcEC4hAfH0Cuiyu+d8vcfJlT4BZ+4OMqb4zeIJLlq\nyqHq7QcYb9qYYEt7lwL25fmanWMW8qPCjx761zkofMG/8miRkHtEN4/AcUjB1ihW\nflLOu13pnJicpdq/jHmxJNXlv8V1UmM1zNqMECtrkSEFmQpZw5Jdmccn4cxWs3+m\npi9TvvM4yqvwUxYpkCMEcC0i3Y9f3jFkKUogi7xEYF1+mZ4uANz/L8z+Al0C+HRZ\n0DeX5LV1e7yQ2Qvu1qP95TAvnWXW2TFbHEnI5XIupC7kukwzrmcH93rdPiublYw=\n=3PJt\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/cf35f61b6079f8d4a05d3ba49af1b260e4167b15",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6Y2YzNWY2MWI2MDc5ZjhkNGEwNWQzYmE0OWFmMWIyNjBlNDE2N2IxNQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/70cf9d1c100b674ae7a85a477ea1b48cf1065452",
                    "sha": "70cf9d1c100b674ae7a85a477ea1b48cf1065452",
                    "url": "https://api.github.com/repos/cython/cython/commits/70cf9d1c100b674ae7a85a477ea1b48cf1065452"
                }
            ],
            "sha": "cf35f61b6079f8d4a05d3ba49af1b260e4167b15",
            "url": "https://api.github.com/repos/cython/cython/commits/cf35f61b6079f8d4a05d3ba49af1b260e4167b15"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/680c2b86ee7ca083f48b272113bada994f6b498d/comments",
            "commit": {
                "author": {
                    "date": "2020-06-08T17:09:37Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-08T17:09:37Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Set buffer label to None\n\nThe test isn't really interested in when it's acquired or released",
                "tree": {
                    "sha": "4dffa2e15e8e3aba318be065bf69ccaf97f4c9cc",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/4dffa2e15e8e3aba318be065bf69ccaf97f4c9cc"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/680c2b86ee7ca083f48b272113bada994f6b498d",
                "verification": {
                    "payload": "tree 4dffa2e15e8e3aba318be065bf69ccaf97f4c9cc\nparent cf35f61b6079f8d4a05d3ba49af1b260e4167b15\nauthor da-woods <dw-git@d-woods.co.uk> 1591636177 +0100\ncommitter GitHub <noreply@github.com> 1591636177 +0100\n\nSet buffer label to None\n\nThe test isn't really interested in when it's acquired or released",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe3nDRCRBK7hj4Ov3rIwAAdHIIADzl6TghewQ5/RhoGtL0VGms\n2PvhXh059rJZxzVHAZylR4U5SSolcbyKjD8698RlGjv07tJ5jK5u2hGFVIaPwyXy\ntqViIhS8btGcLXz2FOKyQRCosyR802VUnTXDVk32YqcqyMVoN0r84o2B6LUzxQhl\nrv83Bjd4h83+a5n9AuPOcmH7aM9g9xK1ghrrkbe7GueVfo50W8BH5Lfs+kYdS5HG\ndWVfLENuigidw6I/ujiS9/j1J+inDv/J9x87+zrgAKY3g3nBcBmkPtizQYedFOpZ\ndCYv5wu1LExddhvRZ4fZ+JSJL6FYgosP8owkBlnpuJdGa4tQIFCO4HW1U1gPUr0=\n=ous+\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/680c2b86ee7ca083f48b272113bada994f6b498d",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NjgwYzJiODZlZTdjYTA4M2Y0OGIyNzIxMTNiYWRhOTk0ZjZiNDk4ZA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/cf35f61b6079f8d4a05d3ba49af1b260e4167b15",
                    "sha": "cf35f61b6079f8d4a05d3ba49af1b260e4167b15",
                    "url": "https://api.github.com/repos/cython/cython/commits/cf35f61b6079f8d4a05d3ba49af1b260e4167b15"
                }
            ],
            "sha": "680c2b86ee7ca083f48b272113bada994f6b498d",
            "url": "https://api.github.com/repos/cython/cython/commits/680c2b86ee7ca083f48b272113bada994f6b498d"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/189182db01d3f0ff18cb6b9d5c233d8775e74916/comments",
            "commit": {
                "author": {
                    "date": "2020-06-08T17:50:58Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-08T17:50:58Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Semi-colon typo",
                "tree": {
                    "sha": "5481e3087101465c95e51382138ae96a259ba5ba",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/5481e3087101465c95e51382138ae96a259ba5ba"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/189182db01d3f0ff18cb6b9d5c233d8775e74916",
                "verification": {
                    "payload": "tree 5481e3087101465c95e51382138ae96a259ba5ba\nparent 680c2b86ee7ca083f48b272113bada994f6b498d\nauthor da-woods <dw-git@d-woods.co.uk> 1591638658 +0100\ncommitter GitHub <noreply@github.com> 1591638658 +0100\n\nSemi-colon typo",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe3nqCCRBK7hj4Ov3rIwAAdHIIAK4gZj2qApTZA5JlCt3gRZUh\nxOB3i0tYOh0cmuabz1Z1IP35A4nxhMtzSoA7vCdrx2HiZe1Cu24Mc5QTpZoDzEew\neKlSk1dTkLs1440gY8UM7L1U0+ajmP3iu8eLixSlxILVuXBfmc41eMDlXfgN8mck\n81MgTH4bu5tpOnXYU2cpfn1YO9C/7OoblesNZ0JPOvjagFwOVTA1BwYBOoidgMoq\nCJ6za1RG1uwkQBmtXf4FGn++i5mY3dbrckAvq5cn/KNI+qYRt8rfX1kkZFhp9aTM\n2M17MgIn8GsYZvoc9fni1EZA+ln0Gqv6qvkH5neoppSDCUvflyTLUZXp9Twuf8I=\n=QNgU\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/189182db01d3f0ff18cb6b9d5c233d8775e74916",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MTg5MTgyZGIwMWQzZjBmZjE4Y2I2YjlkNWMyMzNkODc3NWU3NDkxNg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/680c2b86ee7ca083f48b272113bada994f6b498d",
                    "sha": "680c2b86ee7ca083f48b272113bada994f6b498d",
                    "url": "https://api.github.com/repos/cython/cython/commits/680c2b86ee7ca083f48b272113bada994f6b498d"
                }
            ],
            "sha": "189182db01d3f0ff18cb6b9d5c233d8775e74916",
            "url": "https://api.github.com/repos/cython/cython/commits/189182db01d3f0ff18cb6b9d5c233d8775e74916"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a5f0dc772f5b89f36114544dba13a760991056ce/comments",
            "commit": {
                "author": {
                    "date": "2020-06-09T07:13:52Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-09T07:13:52Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Test bytearray, handle mutable types",
                "tree": {
                    "sha": "96197b1d44aadc4d3b2ff90b9a4c861c299d6ed3",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/96197b1d44aadc4d3b2ff90b9a4c861c299d6ed3"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a5f0dc772f5b89f36114544dba13a760991056ce",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/a5f0dc772f5b89f36114544dba13a760991056ce",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YTVmMGRjNzcyZjViODlmMzYxMTQ1NDRkYmExM2E3NjA5OTEwNTZjZQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3021b7d33fe428928e8cd453eaf957f3b414ffbe",
                    "sha": "3021b7d33fe428928e8cd453eaf957f3b414ffbe",
                    "url": "https://api.github.com/repos/cython/cython/commits/3021b7d33fe428928e8cd453eaf957f3b414ffbe"
                }
            ],
            "sha": "a5f0dc772f5b89f36114544dba13a760991056ce",
            "url": "https://api.github.com/repos/cython/cython/commits/a5f0dc772f5b89f36114544dba13a760991056ce"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b4c1c7579093911b4cc61bd9ee2ef093b0064830/comments",
            "commit": {
                "author": {
                    "date": "2020-06-09T07:17:20Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-09T07:17:20Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'indexloops' of https://github.com/da-woods/cython into indexloops",
                "tree": {
                    "sha": "58bfd12ec24fdfac31b9ea1d31e30a1dd3691554",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/58bfd12ec24fdfac31b9ea1d31e30a1dd3691554"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b4c1c7579093911b4cc61bd9ee2ef093b0064830",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/b4c1c7579093911b4cc61bd9ee2ef093b0064830",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YjRjMWM3NTc5MDkzOTExYjRjYzYxYmQ5ZWUyZWYwOTNiMDA2NDgzMA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a5f0dc772f5b89f36114544dba13a760991056ce",
                    "sha": "a5f0dc772f5b89f36114544dba13a760991056ce",
                    "url": "https://api.github.com/repos/cython/cython/commits/a5f0dc772f5b89f36114544dba13a760991056ce"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/189182db01d3f0ff18cb6b9d5c233d8775e74916",
                    "sha": "189182db01d3f0ff18cb6b9d5c233d8775e74916",
                    "url": "https://api.github.com/repos/cython/cython/commits/189182db01d3f0ff18cb6b9d5c233d8775e74916"
                }
            ],
            "sha": "b4c1c7579093911b4cc61bd9ee2ef093b0064830",
            "url": "https://api.github.com/repos/cython/cython/commits/b4c1c7579093911b4cc61bd9ee2ef093b0064830"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6f6607e79042568d73a771b5fc30f1225bea35e6/comments",
            "commit": {
                "author": {
                    "date": "2020-06-09T16:57:52Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-09T16:57:52Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Avoided copying node, ensured len comes from builtins",
                "tree": {
                    "sha": "0b23af966f9ac9d0109869cc89cc49f5846e6fed",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0b23af966f9ac9d0109869cc89cc49f5846e6fed"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6f6607e79042568d73a771b5fc30f1225bea35e6",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/6f6607e79042568d73a771b5fc30f1225bea35e6",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NmY2NjA3ZTc5MDQyNTY4ZDczYTc3MWI1ZmMzMGYxMjI1YmVhMzVlNg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b4c1c7579093911b4cc61bd9ee2ef093b0064830",
                    "sha": "b4c1c7579093911b4cc61bd9ee2ef093b0064830",
                    "url": "https://api.github.com/repos/cython/cython/commits/b4c1c7579093911b4cc61bd9ee2ef093b0064830"
                }
            ],
            "sha": "6f6607e79042568d73a771b5fc30f1225bea35e6",
            "url": "https://api.github.com/repos/cython/cython/commits/6f6607e79042568d73a771b5fc30f1225bea35e6"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3617/commits",
    "created_at": "2020-05-17T19:28:02Z",
    "diff_url": "https://github.com/cython/cython/pull/3617.diff",
    "draft": false,
    "head": {
        "label": "da-woods:indexloops",
        "ref": "indexloops",
        "repo": {
            "archive_url": "https://api.github.com/repos/da-woods/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/da-woods/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/da-woods/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/da-woods/cython/branches{/branch}",
            "clone_url": "https://github.com/da-woods/cython.git",
            "collaborators_url": "https://api.github.com/repos/da-woods/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/da-woods/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/da-woods/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/da-woods/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/da-woods/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/da-woods/cython/contributors",
            "created_at": "2015-05-09T08:55:00Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/da-woods/cython/deployments",
            "description": "A Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/da-woods/cython/downloads",
            "events_url": "https://api.github.com/repos/da-woods/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/da-woods/cython/forks",
            "full_name": "da-woods/cython",
            "git_commits_url": "https://api.github.com/repos/da-woods/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/da-woods/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/da-woods/cython/git/tags{/sha}",
            "git_url": "git://github.com/da-woods/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/da-woods/cython/hooks",
            "html_url": "https://github.com/da-woods/cython",
            "id": 35321967,
            "issue_comment_url": "https://api.github.com/repos/da-woods/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/da-woods/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/da-woods/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/da-woods/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/da-woods/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/da-woods/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/da-woods/cython/merges",
            "milestones_url": "https://api.github.com/repos/da-woods/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNTMyMTk2Nw==",
            "notifications_url": "https://api.github.com/repos/da-woods/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/da-woods/cython/pulls{/number}",
            "pushed_at": "2020-06-10T07:21:36Z",
            "releases_url": "https://api.github.com/repos/da-woods/cython/releases{/id}",
            "size": 60094,
            "ssh_url": "git@github.com:da-woods/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/da-woods/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/da-woods/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/da-woods/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/da-woods/cython/subscription",
            "svn_url": "https://github.com/da-woods/cython",
            "tags_url": "https://api.github.com/repos/da-woods/cython/tags",
            "teams_url": "https://api.github.com/repos/da-woods/cython/teams",
            "trees_url": "https://api.github.com/repos/da-woods/cython/git/trees{/sha}",
            "updated_at": "2019-10-24T09:38:07Z",
            "url": "https://api.github.com/repos/da-woods/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "6f6607e79042568d73a771b5fc30f1225bea35e6",
        "user": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
            "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
            "followers_url": "https://api.github.com/users/da-woods/followers",
            "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
            "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/da-woods",
            "id": 10536947,
            "login": "da-woods",
            "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
            "organizations_url": "https://api.github.com/users/da-woods/orgs",
            "received_events_url": "https://api.github.com/users/da-woods/received_events",
            "repos_url": "https://api.github.com/users/da-woods/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/da-woods"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3617",
    "id": 419161230,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3617",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "11f2ccf8b14b51de125e881227300e6ac5044d04",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDE5MTYxMjMw",
    "number": 3617,
    "patch_url": "https://github.com/cython/cython/pull/3617.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3617/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/6f6607e79042568d73a771b5fc30f1225bea35e6",
    "title": "Implement generic optimized loop iterator with indexing and type inference for memoryviews",
    "updated_at": "2020-06-09T17:58:29Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3617",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}