{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/6652/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/6652/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/6652"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/6652"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/6652/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/6652"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/437b44a766c43782a50c87f62d59f1966ff01e61"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1501,
            "forks_count": 1501,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 1410,
            "open_issues_count": 1410,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2025-02-07T13:20:29Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 74953,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 9753,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "topics": [
                "big-data",
                "c",
                "cpp",
                "cpython",
                "cpython-extensions",
                "cython",
                "performance",
                "python"
            ],
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2025-02-07T15:04:29Z",
            "url": "https://api.github.com/repos/cython/cython",
            "visibility": "public",
            "watchers": 9753,
            "watchers_count": 9753,
            "web_commit_signoff_required": false
        },
        "sha": "bf4e9a3a7b80f80eead0ee5621c74a0807b9a57e",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython",
            "user_view_type": "public"
        }
    },
    "body": "Closes #6651.",
    "closed_at": "2025-02-06T19:07:09Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6652#discussion_r1943400550"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6652"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1943400550"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Does this look right @da-woods ?",
            "commit_id": "437b44a766c43782a50c87f62d59f1966ff01e61",
            "created_at": "2025-02-05T17:45:37Z",
            "diff_hunk": "@@ -0,0 +1,181 @@\n+from libcpp.string cimport string\n+\n+cdef extern from \"<string_view>\" namespace \"std::string_view\" nogil:\n+    const size_t npos\n+\n+cdef extern from \"<string_view>\" namespace \"std\" nogil:\n+\n+    cdef cppclass string_view:\n+        ctypedef char value_type\n+        ctypedef size_t size_type\n+        ctypedef ptrdiff_t difference_type\n+\n+        bint operator==(string_view)\n+        bint operator!= (string_view)\n+        bint operator< (string_view)\n+        bint operator> (string_view)\n+        bint operator<= (string_view)\n+        bint operator>= (string_view)\n+\n+        cppclass const_iterator:\n+            const_iterator()\n+            const_iterator(const_iterator&)\n+            operator=(const_iterator&)\n+            const value_type& operator*()\n+            const_iterator operator++()\n+            const_iterator operator--()\n+            const_iterator operator++(int)\n+            const_iterator operator--(int)\n+            const_iterator operator+(size_type)\n+            const_iterator operator-(size_type)\n+            difference_type operator-(const_iterator)\n+            bint operator==(const_iterator)\n+            bint operator!=(const_iterator)\n+            bint operator<(const_iterator)\n+            bint operator>(const_iterator)\n+            bint operator<=(const_iterator)\n+            bint operator>=(const_iterator)\n+\n+        ctypedef const_iterator iterator\n+\n+        cppclass const_reverse_iterator:\n+            const_reverse_iterator()\n+            const_reverse_iterator(const_reverse_iterator&)\n+            operator=(const_reverse_iterator&)\n+            const value_type& operator*()\n+            const_reverse_iterator operator++()\n+            const_reverse_iterator operator--()\n+            const_reverse_iterator operator++(int)\n+            const_reverse_iterator operator--(int)\n+            const_reverse_iterator operator+(size_type)\n+            const_reverse_iterator operator-(size_type)\n+            difference_type operator-(const_reverse_iterator)\n+            bint operator==(const_reverse_iterator)\n+            bint operator!=(const_reverse_iterator)\n+            bint operator<(const_reverse_iterator)\n+            bint operator>(const_reverse_iterator)\n+            bint operator<=(const_reverse_iterator)\n+            bint operator>=(const_reverse_iterator)\n+\n+        ctypedef const_reverse_iterator reverse_iterator\n+\n+        # Constructors\n+        string_view()  # (1)\n+        string_view(string_view s)  # (2)\n+        string_view(const char* s, size_t n)  # (3)\n+        string_view(const char* s)  # (4)\n+        string_view& string_view[InputIt](InputIt, InputIt)  # (5)\n+\n+        # This should be `operator string_view()` on std::string, but\n+        # Cython doesn't yet allow declaring it.\n+        string_view(const string&)",
            "html_url": "https://github.com/cython/cython/pull/6652#discussion_r1943400550",
            "id": 1943400550,
            "line": 71,
            "node_id": "PRRC_kwDOABDGAc5z1fBm",
            "original_commit_id": "437b44a766c43782a50c87f62d59f1966ff01e61",
            "original_line": 71,
            "original_position": 71,
            "original_start_line": 69,
            "path": "Cython/Includes/libcpp/string_view.pxd",
            "position": 71,
            "pull_request_review_id": 2596535189,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6652",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1943400550/reactions"
            },
            "side": "RIGHT",
            "start_line": 69,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-05T17:45:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1943400550",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6652#discussion_r1943437680"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6652"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1943437680"
                }
            },
            "author_association": "MEMBER",
            "body": "We've got `bool operator bool()` declarations elsewhere. Which makes me thing it is possible to declare operators like that. Although maybe bool is special-cased.\r\n\r\nWith that said, I'm fairly sure we don't support the implicit conversion so this is as clear as anything.",
            "commit_id": "437b44a766c43782a50c87f62d59f1966ff01e61",
            "created_at": "2025-02-05T18:09:40Z",
            "diff_hunk": "@@ -0,0 +1,181 @@\n+from libcpp.string cimport string\n+\n+cdef extern from \"<string_view>\" namespace \"std::string_view\" nogil:\n+    const size_t npos\n+\n+cdef extern from \"<string_view>\" namespace \"std\" nogil:\n+\n+    cdef cppclass string_view:\n+        ctypedef char value_type\n+        ctypedef size_t size_type\n+        ctypedef ptrdiff_t difference_type\n+\n+        bint operator==(string_view)\n+        bint operator!= (string_view)\n+        bint operator< (string_view)\n+        bint operator> (string_view)\n+        bint operator<= (string_view)\n+        bint operator>= (string_view)\n+\n+        cppclass const_iterator:\n+            const_iterator()\n+            const_iterator(const_iterator&)\n+            operator=(const_iterator&)\n+            const value_type& operator*()\n+            const_iterator operator++()\n+            const_iterator operator--()\n+            const_iterator operator++(int)\n+            const_iterator operator--(int)\n+            const_iterator operator+(size_type)\n+            const_iterator operator-(size_type)\n+            difference_type operator-(const_iterator)\n+            bint operator==(const_iterator)\n+            bint operator!=(const_iterator)\n+            bint operator<(const_iterator)\n+            bint operator>(const_iterator)\n+            bint operator<=(const_iterator)\n+            bint operator>=(const_iterator)\n+\n+        ctypedef const_iterator iterator\n+\n+        cppclass const_reverse_iterator:\n+            const_reverse_iterator()\n+            const_reverse_iterator(const_reverse_iterator&)\n+            operator=(const_reverse_iterator&)\n+            const value_type& operator*()\n+            const_reverse_iterator operator++()\n+            const_reverse_iterator operator--()\n+            const_reverse_iterator operator++(int)\n+            const_reverse_iterator operator--(int)\n+            const_reverse_iterator operator+(size_type)\n+            const_reverse_iterator operator-(size_type)\n+            difference_type operator-(const_reverse_iterator)\n+            bint operator==(const_reverse_iterator)\n+            bint operator!=(const_reverse_iterator)\n+            bint operator<(const_reverse_iterator)\n+            bint operator>(const_reverse_iterator)\n+            bint operator<=(const_reverse_iterator)\n+            bint operator>=(const_reverse_iterator)\n+\n+        ctypedef const_reverse_iterator reverse_iterator\n+\n+        # Constructors\n+        string_view()  # (1)\n+        string_view(string_view s)  # (2)\n+        string_view(const char* s, size_t n)  # (3)\n+        string_view(const char* s)  # (4)\n+        string_view& string_view[InputIt](InputIt, InputIt)  # (5)\n+\n+        # This should be `operator string_view()` on std::string, but\n+        # Cython doesn't yet allow declaring it.\n+        string_view(const string&)",
            "html_url": "https://github.com/cython/cython/pull/6652#discussion_r1943437680",
            "id": 1943437680,
            "in_reply_to_id": 1943400550,
            "line": 71,
            "node_id": "PRRC_kwDOABDGAc5z1oFw",
            "original_commit_id": "437b44a766c43782a50c87f62d59f1966ff01e61",
            "original_line": 71,
            "original_position": 71,
            "original_start_line": 69,
            "path": "Cython/Includes/libcpp/string_view.pxd",
            "position": 71,
            "pull_request_review_id": 2596597140,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6652",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1943437680/reactions"
            },
            "side": "RIGHT",
            "start_line": 69,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-05T18:09:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1943437680",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6652#discussion_r1944293890"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6652"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1944293890"
                }
            },
            "author_association": "MEMBER",
            "body": "We don't look to have defined this for std::string - they're commented out there\r\n\r\nhttps://github.com/cython/cython/blob/bf4e9a3a7b80f80eead0ee5621c74a0807b9a57e/Cython/Includes/libcpp/string.pxd#L188-L190\r\n\r\nI suspect that's because they get in the way of the auto-conversion.",
            "commit_id": "437b44a766c43782a50c87f62d59f1966ff01e61",
            "created_at": "2025-02-06T08:22:59Z",
            "diff_hunk": "@@ -0,0 +1,181 @@\n+from libcpp.string cimport string\n+\n+cdef extern from \"<string_view>\" namespace \"std::string_view\" nogil:\n+    const size_t npos\n+\n+cdef extern from \"<string_view>\" namespace \"std\" nogil:\n+\n+    cdef cppclass string_view:\n+        ctypedef char value_type\n+        ctypedef size_t size_type\n+        ctypedef ptrdiff_t difference_type\n+\n+        bint operator==(string_view)\n+        bint operator!= (string_view)\n+        bint operator< (string_view)\n+        bint operator> (string_view)\n+        bint operator<= (string_view)\n+        bint operator>= (string_view)\n+\n+        cppclass const_iterator:\n+            const_iterator()\n+            const_iterator(const_iterator&)\n+            operator=(const_iterator&)\n+            const value_type& operator*()\n+            const_iterator operator++()\n+            const_iterator operator--()\n+            const_iterator operator++(int)\n+            const_iterator operator--(int)\n+            const_iterator operator+(size_type)\n+            const_iterator operator-(size_type)\n+            difference_type operator-(const_iterator)\n+            bint operator==(const_iterator)\n+            bint operator!=(const_iterator)\n+            bint operator<(const_iterator)\n+            bint operator>(const_iterator)\n+            bint operator<=(const_iterator)\n+            bint operator>=(const_iterator)\n+\n+        ctypedef const_iterator iterator\n+\n+        cppclass const_reverse_iterator:\n+            const_reverse_iterator()\n+            const_reverse_iterator(const_reverse_iterator&)\n+            operator=(const_reverse_iterator&)\n+            const value_type& operator*()\n+            const_reverse_iterator operator++()\n+            const_reverse_iterator operator--()\n+            const_reverse_iterator operator++(int)\n+            const_reverse_iterator operator--(int)\n+            const_reverse_iterator operator+(size_type)\n+            const_reverse_iterator operator-(size_type)\n+            difference_type operator-(const_reverse_iterator)\n+            bint operator==(const_reverse_iterator)\n+            bint operator!=(const_reverse_iterator)\n+            bint operator<(const_reverse_iterator)\n+            bint operator>(const_reverse_iterator)\n+            bint operator<=(const_reverse_iterator)\n+            bint operator>=(const_reverse_iterator)\n+\n+        ctypedef const_reverse_iterator reverse_iterator\n+\n+        # Constructors\n+        string_view()  # (1)\n+        string_view(string_view s)  # (2)\n+        string_view(const char* s, size_t n)  # (3)\n+        string_view(const char* s)  # (4)\n+        string_view& string_view[InputIt](InputIt, InputIt)  # (5)\n+\n+        # This should be `operator string_view()` on std::string, but\n+        # Cython doesn't yet allow declaring it.\n+        string_view(const string&)\n+\n+        # Assignment\n+        string_view& operator=(string_view)",
            "html_url": "https://github.com/cython/cython/pull/6652#discussion_r1944293890",
            "id": 1944293890,
            "line": 74,
            "node_id": "PRRC_kwDOABDGAc5z45IC",
            "original_commit_id": "437b44a766c43782a50c87f62d59f1966ff01e61",
            "original_line": 74,
            "original_position": 74,
            "original_start_line": null,
            "path": "Cython/Includes/libcpp/string_view.pxd",
            "position": 74,
            "pull_request_review_id": 2597963591,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6652",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1944293890/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-06T08:23:00Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1944293890",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6652#discussion_r1944303213"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6652"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1944303213"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Perhaps, but it's necessary here to get the tests to pass.",
            "commit_id": "437b44a766c43782a50c87f62d59f1966ff01e61",
            "created_at": "2025-02-06T08:29:53Z",
            "diff_hunk": "@@ -0,0 +1,181 @@\n+from libcpp.string cimport string\n+\n+cdef extern from \"<string_view>\" namespace \"std::string_view\" nogil:\n+    const size_t npos\n+\n+cdef extern from \"<string_view>\" namespace \"std\" nogil:\n+\n+    cdef cppclass string_view:\n+        ctypedef char value_type\n+        ctypedef size_t size_type\n+        ctypedef ptrdiff_t difference_type\n+\n+        bint operator==(string_view)\n+        bint operator!= (string_view)\n+        bint operator< (string_view)\n+        bint operator> (string_view)\n+        bint operator<= (string_view)\n+        bint operator>= (string_view)\n+\n+        cppclass const_iterator:\n+            const_iterator()\n+            const_iterator(const_iterator&)\n+            operator=(const_iterator&)\n+            const value_type& operator*()\n+            const_iterator operator++()\n+            const_iterator operator--()\n+            const_iterator operator++(int)\n+            const_iterator operator--(int)\n+            const_iterator operator+(size_type)\n+            const_iterator operator-(size_type)\n+            difference_type operator-(const_iterator)\n+            bint operator==(const_iterator)\n+            bint operator!=(const_iterator)\n+            bint operator<(const_iterator)\n+            bint operator>(const_iterator)\n+            bint operator<=(const_iterator)\n+            bint operator>=(const_iterator)\n+\n+        ctypedef const_iterator iterator\n+\n+        cppclass const_reverse_iterator:\n+            const_reverse_iterator()\n+            const_reverse_iterator(const_reverse_iterator&)\n+            operator=(const_reverse_iterator&)\n+            const value_type& operator*()\n+            const_reverse_iterator operator++()\n+            const_reverse_iterator operator--()\n+            const_reverse_iterator operator++(int)\n+            const_reverse_iterator operator--(int)\n+            const_reverse_iterator operator+(size_type)\n+            const_reverse_iterator operator-(size_type)\n+            difference_type operator-(const_reverse_iterator)\n+            bint operator==(const_reverse_iterator)\n+            bint operator!=(const_reverse_iterator)\n+            bint operator<(const_reverse_iterator)\n+            bint operator>(const_reverse_iterator)\n+            bint operator<=(const_reverse_iterator)\n+            bint operator>=(const_reverse_iterator)\n+\n+        ctypedef const_reverse_iterator reverse_iterator\n+\n+        # Constructors\n+        string_view()  # (1)\n+        string_view(string_view s)  # (2)\n+        string_view(const char* s, size_t n)  # (3)\n+        string_view(const char* s)  # (4)\n+        string_view& string_view[InputIt](InputIt, InputIt)  # (5)\n+\n+        # This should be `operator string_view()` on std::string, but\n+        # Cython doesn't yet allow declaring it.\n+        string_view(const string&)\n+\n+        # Assignment\n+        string_view& operator=(string_view)",
            "html_url": "https://github.com/cython/cython/pull/6652#discussion_r1944303213",
            "id": 1944303213,
            "in_reply_to_id": 1944293890,
            "line": 74,
            "node_id": "PRRC_kwDOABDGAc5z47Zt",
            "original_commit_id": "437b44a766c43782a50c87f62d59f1966ff01e61",
            "original_line": 74,
            "original_position": 74,
            "original_start_line": null,
            "path": "Cython/Includes/libcpp/string_view.pxd",
            "position": 74,
            "pull_request_review_id": 2597978840,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6652",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1944303213/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-06T08:29:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1944303213",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6652#discussion_r1944304245"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6652"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1944304245"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "If I disable it, I get:\r\n```\r\n45:29: Cannot assign type 'string' to 'string_view'\r\n```\r\n(which is slightly amusing)",
            "commit_id": "437b44a766c43782a50c87f62d59f1966ff01e61",
            "created_at": "2025-02-06T08:30:34Z",
            "diff_hunk": "@@ -0,0 +1,181 @@\n+from libcpp.string cimport string\n+\n+cdef extern from \"<string_view>\" namespace \"std::string_view\" nogil:\n+    const size_t npos\n+\n+cdef extern from \"<string_view>\" namespace \"std\" nogil:\n+\n+    cdef cppclass string_view:\n+        ctypedef char value_type\n+        ctypedef size_t size_type\n+        ctypedef ptrdiff_t difference_type\n+\n+        bint operator==(string_view)\n+        bint operator!= (string_view)\n+        bint operator< (string_view)\n+        bint operator> (string_view)\n+        bint operator<= (string_view)\n+        bint operator>= (string_view)\n+\n+        cppclass const_iterator:\n+            const_iterator()\n+            const_iterator(const_iterator&)\n+            operator=(const_iterator&)\n+            const value_type& operator*()\n+            const_iterator operator++()\n+            const_iterator operator--()\n+            const_iterator operator++(int)\n+            const_iterator operator--(int)\n+            const_iterator operator+(size_type)\n+            const_iterator operator-(size_type)\n+            difference_type operator-(const_iterator)\n+            bint operator==(const_iterator)\n+            bint operator!=(const_iterator)\n+            bint operator<(const_iterator)\n+            bint operator>(const_iterator)\n+            bint operator<=(const_iterator)\n+            bint operator>=(const_iterator)\n+\n+        ctypedef const_iterator iterator\n+\n+        cppclass const_reverse_iterator:\n+            const_reverse_iterator()\n+            const_reverse_iterator(const_reverse_iterator&)\n+            operator=(const_reverse_iterator&)\n+            const value_type& operator*()\n+            const_reverse_iterator operator++()\n+            const_reverse_iterator operator--()\n+            const_reverse_iterator operator++(int)\n+            const_reverse_iterator operator--(int)\n+            const_reverse_iterator operator+(size_type)\n+            const_reverse_iterator operator-(size_type)\n+            difference_type operator-(const_reverse_iterator)\n+            bint operator==(const_reverse_iterator)\n+            bint operator!=(const_reverse_iterator)\n+            bint operator<(const_reverse_iterator)\n+            bint operator>(const_reverse_iterator)\n+            bint operator<=(const_reverse_iterator)\n+            bint operator>=(const_reverse_iterator)\n+\n+        ctypedef const_reverse_iterator reverse_iterator\n+\n+        # Constructors\n+        string_view()  # (1)\n+        string_view(string_view s)  # (2)\n+        string_view(const char* s, size_t n)  # (3)\n+        string_view(const char* s)  # (4)\n+        string_view& string_view[InputIt](InputIt, InputIt)  # (5)\n+\n+        # This should be `operator string_view()` on std::string, but\n+        # Cython doesn't yet allow declaring it.\n+        string_view(const string&)\n+\n+        # Assignment\n+        string_view& operator=(string_view)",
            "html_url": "https://github.com/cython/cython/pull/6652#discussion_r1944304245",
            "id": 1944304245,
            "in_reply_to_id": 1944293890,
            "line": 74,
            "node_id": "PRRC_kwDOABDGAc5z47p1",
            "original_commit_id": "437b44a766c43782a50c87f62d59f1966ff01e61",
            "original_line": 74,
            "original_position": 74,
            "original_start_line": null,
            "path": "Cython/Includes/libcpp/string_view.pxd",
            "position": 74,
            "pull_request_review_id": 2597980504,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6652",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1944304245/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-06T08:30:34Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1944304245",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/6652#discussion_r1944310291"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/6652"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1944310291"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we shouldn't worry then. You look to be blocked (albeit accidentally) from assigning a string_view from a temporary python object. So that's fine. Thanks for looking at it.\r\n\r\nI'll have a last thorough check later today, but should it looks basically good.",
            "commit_id": "437b44a766c43782a50c87f62d59f1966ff01e61",
            "created_at": "2025-02-06T08:35:01Z",
            "diff_hunk": "@@ -0,0 +1,181 @@\n+from libcpp.string cimport string\n+\n+cdef extern from \"<string_view>\" namespace \"std::string_view\" nogil:\n+    const size_t npos\n+\n+cdef extern from \"<string_view>\" namespace \"std\" nogil:\n+\n+    cdef cppclass string_view:\n+        ctypedef char value_type\n+        ctypedef size_t size_type\n+        ctypedef ptrdiff_t difference_type\n+\n+        bint operator==(string_view)\n+        bint operator!= (string_view)\n+        bint operator< (string_view)\n+        bint operator> (string_view)\n+        bint operator<= (string_view)\n+        bint operator>= (string_view)\n+\n+        cppclass const_iterator:\n+            const_iterator()\n+            const_iterator(const_iterator&)\n+            operator=(const_iterator&)\n+            const value_type& operator*()\n+            const_iterator operator++()\n+            const_iterator operator--()\n+            const_iterator operator++(int)\n+            const_iterator operator--(int)\n+            const_iterator operator+(size_type)\n+            const_iterator operator-(size_type)\n+            difference_type operator-(const_iterator)\n+            bint operator==(const_iterator)\n+            bint operator!=(const_iterator)\n+            bint operator<(const_iterator)\n+            bint operator>(const_iterator)\n+            bint operator<=(const_iterator)\n+            bint operator>=(const_iterator)\n+\n+        ctypedef const_iterator iterator\n+\n+        cppclass const_reverse_iterator:\n+            const_reverse_iterator()\n+            const_reverse_iterator(const_reverse_iterator&)\n+            operator=(const_reverse_iterator&)\n+            const value_type& operator*()\n+            const_reverse_iterator operator++()\n+            const_reverse_iterator operator--()\n+            const_reverse_iterator operator++(int)\n+            const_reverse_iterator operator--(int)\n+            const_reverse_iterator operator+(size_type)\n+            const_reverse_iterator operator-(size_type)\n+            difference_type operator-(const_reverse_iterator)\n+            bint operator==(const_reverse_iterator)\n+            bint operator!=(const_reverse_iterator)\n+            bint operator<(const_reverse_iterator)\n+            bint operator>(const_reverse_iterator)\n+            bint operator<=(const_reverse_iterator)\n+            bint operator>=(const_reverse_iterator)\n+\n+        ctypedef const_reverse_iterator reverse_iterator\n+\n+        # Constructors\n+        string_view()  # (1)\n+        string_view(string_view s)  # (2)\n+        string_view(const char* s, size_t n)  # (3)\n+        string_view(const char* s)  # (4)\n+        string_view& string_view[InputIt](InputIt, InputIt)  # (5)\n+\n+        # This should be `operator string_view()` on std::string, but\n+        # Cython doesn't yet allow declaring it.\n+        string_view(const string&)\n+\n+        # Assignment\n+        string_view& operator=(string_view)",
            "html_url": "https://github.com/cython/cython/pull/6652#discussion_r1944310291",
            "id": 1944310291,
            "in_reply_to_id": 1944293890,
            "line": 74,
            "node_id": "PRRC_kwDOABDGAc5z49IT",
            "original_commit_id": "437b44a766c43782a50c87f62d59f1966ff01e61",
            "original_line": 74,
            "original_position": 74,
            "original_start_line": null,
            "path": "Cython/Includes/libcpp/string_view.pxd",
            "position": 74,
            "pull_request_review_id": 2597990211,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/6652",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1944310291/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-06T08:35:01Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1944310291",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/6652/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou",
                "user_view_type": "public"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/437b44a766c43782a50c87f62d59f1966ff01e61/comments",
            "commit": {
                "author": {
                    "date": "2025-02-05T17:19:23Z",
                    "email": "antoine@python.org",
                    "name": "Antoine Pitrou"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2025-02-05T17:22:50Z",
                    "email": "antoine@python.org",
                    "name": "Antoine Pitrou"
                },
                "message": "[ENH][C++] Add std::string_view support\n\nCloses #6651.",
                "tree": {
                    "sha": "e32073c1851ff09fd4bc5094853aebe568c3f792",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e32073c1851ff09fd4bc5094853aebe568c3f792"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/437b44a766c43782a50c87f62d59f1966ff01e61",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false,
                    "verified_at": null
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou",
                "user_view_type": "public"
            },
            "html_url": "https://github.com/cython/cython/commit/437b44a766c43782a50c87f62d59f1966ff01e61",
            "node_id": "C_kwDOBtLQ-NoAKDQzN2I0NGE3NjZjNDM3ODJhNTBjODdmNjJkNTlmMTk2NmZmMDFlNjE",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/bf4e9a3a7b80f80eead0ee5621c74a0807b9a57e",
                    "sha": "bf4e9a3a7b80f80eead0ee5621c74a0807b9a57e",
                    "url": "https://api.github.com/repos/cython/cython/commits/bf4e9a3a7b80f80eead0ee5621c74a0807b9a57e"
                }
            ],
            "sha": "437b44a766c43782a50c87f62d59f1966ff01e61",
            "url": "https://api.github.com/repos/cython/cython/commits/437b44a766c43782a50c87f62d59f1966ff01e61"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/6652/commits",
    "created_at": "2025-02-05T17:22:54Z",
    "diff_url": "https://github.com/cython/cython/pull/6652.diff",
    "draft": false,
    "head": {
        "label": "pitrou:gh6651-string-view",
        "ref": "gh6651-string-view",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/pitrou/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/pitrou/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/pitrou/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/pitrou/cython/branches{/branch}",
            "clone_url": "https://github.com/pitrou/cython.git",
            "collaborators_url": "https://api.github.com/repos/pitrou/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/pitrou/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/pitrou/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/pitrou/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/pitrou/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/pitrou/cython/contributors",
            "created_at": "2017-12-16T17:45:39Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/pitrou/cython/deployments",
            "description": "A Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/pitrou/cython/downloads",
            "events_url": "https://api.github.com/repos/pitrou/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/pitrou/cython/forks",
            "full_name": "pitrou/cython",
            "git_commits_url": "https://api.github.com/repos/pitrou/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/pitrou/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/pitrou/cython/git/tags{/sha}",
            "git_url": "git://github.com/pitrou/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/pitrou/cython/hooks",
            "html_url": "https://github.com/pitrou/cython",
            "id": 114479352,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/pitrou/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/pitrou/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/pitrou/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/pitrou/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/pitrou/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/pitrou/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/pitrou/cython/merges",
            "milestones_url": "https://api.github.com/repos/pitrou/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMTQ0NzkzNTI=",
            "notifications_url": "https://api.github.com/repos/pitrou/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
                "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
                "followers_url": "https://api.github.com/users/pitrou/followers",
                "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
                "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pitrou",
                "id": 1721820,
                "login": "pitrou",
                "node_id": "MDQ6VXNlcjE3MjE4MjA=",
                "organizations_url": "https://api.github.com/users/pitrou/orgs",
                "received_events_url": "https://api.github.com/users/pitrou/received_events",
                "repos_url": "https://api.github.com/users/pitrou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pitrou",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/pitrou/cython/pulls{/number}",
            "pushed_at": "2025-02-06T19:49:14Z",
            "releases_url": "https://api.github.com/repos/pitrou/cython/releases{/id}",
            "size": 49633,
            "ssh_url": "git@github.com:pitrou/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/pitrou/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/pitrou/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/pitrou/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/pitrou/cython/subscription",
            "svn_url": "https://github.com/pitrou/cython",
            "tags_url": "https://api.github.com/repos/pitrou/cython/tags",
            "teams_url": "https://api.github.com/repos/pitrou/cython/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/pitrou/cython/git/trees{/sha}",
            "updated_at": "2017-12-16T17:45:44Z",
            "url": "https://api.github.com/repos/pitrou/cython",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "437b44a766c43782a50c87f62d59f1966ff01e61",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
            "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
            "followers_url": "https://api.github.com/users/pitrou/followers",
            "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
            "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/pitrou",
            "id": 1721820,
            "login": "pitrou",
            "node_id": "MDQ6VXNlcjE3MjE4MjA=",
            "organizations_url": "https://api.github.com/users/pitrou/orgs",
            "received_events_url": "https://api.github.com/users/pitrou/received_events",
            "repos_url": "https://api.github.com/users/pitrou/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/pitrou",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/6652",
    "id": 2318148847,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/6652",
    "labels": [
        {
            "color": "f9d0c4",
            "default": false,
            "description": null,
            "id": 414805136,
            "name": "C++",
            "node_id": "MDU6TGFiZWw0MTQ4MDUxMzY=",
            "url": "https://api.github.com/repos/cython/cython/labels/C++"
        }
    ],
    "locked": false,
    "merge_commit_sha": "8254beaa9f52757d27cc12dfdf4d07434027c5c5",
    "merged_at": "2025-02-06T19:07:09Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 334,
        "created_at": "2019-02-24T14:21:23Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder",
            "user_view_type": "public"
        },
        "description": "* Remove code for Python 2 and Python < 3.8.\r\n* Integrate better with Python 3.\r\n* Improve support for the Limited API.\r\n* Start supporting GIL-free Python 3.13.\r\n* Support the Py3.13 `sys.monitoring` API.\r\n* Support and use `am_send` for coroutines.",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/65",
        "id": 4082235,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/65/labels",
        "node_id": "MDk6TWlsZXN0b25lNDA4MjIzNQ==",
        "number": 65,
        "open_issues": 19,
        "state": "open",
        "title": "3.1",
        "updated_at": "2025-02-07T13:20:29Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/65"
    },
    "node_id": "PR_kwDOABDGAc6KLCTv",
    "number": 6652,
    "patch_url": "https://github.com/cython/cython/pull/6652.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/6652/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/437b44a766c43782a50c87f62d59f1966ff01e61",
    "title": "[ENH][C++] Add std::string_view support",
    "updated_at": "2025-02-07T09:46:19Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/6652",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
        "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
        "followers_url": "https://api.github.com/users/pitrou/followers",
        "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
        "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pitrou",
        "id": 1721820,
        "login": "pitrou",
        "node_id": "MDQ6VXNlcjE3MjE4MjA=",
        "organizations_url": "https://api.github.com/users/pitrou/orgs",
        "received_events_url": "https://api.github.com/users/pitrou/received_events",
        "repos_url": "https://api.github.com/users/pitrou/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pitrou",
        "user_view_type": "public"
    }
}