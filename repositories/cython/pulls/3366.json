{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3366/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3366/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3366"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3366"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3366/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3366"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/4efffdaabdae3f11283d966bf58fbc84603f946d"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 991,
            "forks_count": 991,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 802,
            "open_issues_count": 802,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2020-02-26T13:19:22Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 56324,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 4918,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2020-02-26T06:27:10Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 4918,
            "watchers_count": 4918
        },
        "sha": "61d606ace1bfad42a55586de57f96ab4f1ede5b2",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "- Ameliorates issue #1385.\r\n\r\n## Performance\r\n\r\n- `O(k**n)` for the first call, where `n` is the number of unique fused arguments in the signature and `k` is the number of specializations per type.\r\n\r\n- `O(n)` for all subsequent calls.\r\n\r\n- Apparently ranges from about 40% faster for fused `cpdef` functions with only one argument that accepts only two types, to about 200X faster for fused `cpdef` functions with three unique fused elements that each combine eight types:\r\n\r\n#### This PR:\r\n\r\n```\r\nno_overhead:\r\n3.1438998121302575e-05\r\npy_overhead:\r\n2.9656999686267227e-05\r\nfused_type_overhead:\r\n0.00020451199816307053\r\nfused_type_staticwrapped:\r\n2.9185001039877534e-05\r\nfused_type_multisig:\r\n0.00030890099878888577\r\nbigfused_type_overhead:\r\n0.00020855500042671338\r\nbigfused_type_multisig:\r\n0.0004058320009789895\r\n```\r\n\r\n\r\n#### Cython 0.29.14:\r\n\r\n```\r\nno_overhead:\r\n4.333199831307866e-05\r\npy_overhead:\r\n4.144299964536913e-05\r\nfused_type_overhead:\r\n0.00034416899870848283\r\nfused_type_staticwrapped:\r\n4.47450001956895e-05\r\nfused_type_multisig:\r\n0.0007079640017764177\r\nbigfused_type_overhead:\r\n0.0009713090003060643\r\nbigfused_type_multisig:\r\n0.08197269000083907\r\n```\r\n\r\n[fusedtest.py](https://gist.github.com/will-ca/a06203fe9b3c54ad8e05fede1e2cbb49)\r\n[fusedtest.pxd](https://gist.github.com/will-ca/b93bc5814a0f26681f2b26b80e0432f1)\r\n\r\n- Should produce results identical to the original code, given a couple of assumptions.\r\n\r\n\r\n## Assumptions\r\n\r\n- The available signatures/keys passed to `__pyx_fused_cpdef()` must remain the same between all calls.\r\n\r\n- The available signatures/keys passed to `__pyx_fused_cpdef()` must all be of the same length.\r\n\r\n\r\n## Known Issues\r\n\r\n- Constructs signature index dynamically on first call of `cpdef` function.\r\n-- It shouldn't be difficult to do it at compile time instead, but I wasn't sure where the best place to get the signature names would be (`specialized_type_name`/`.specialization_string`? `FusedCFuncDefNode().__signatures__`?), and an extra hundred nanoseconds of execution time once per program load was worth making sure the index is built using the exact same keys and parsing as those passed in the signature mapping.\r\n\r\n- Arguably abuses a hidden default keyword argument in order to make the signature index dictionary persistent across different calls of the function.\r\n-- I'm not really sure where else to keep it.\r\n--- The obvious-seeming solution would be to bake it into the generated code as a literal— but in that case, I assume Python would still have to allocate the memory and otherwise do everything required for constructing a new object every time the function is run.\r\n---- In absolute terms, the performance impact of that should be minimal­— but in principle, it would mean re-introducing an `O(k**n)` element to the code due to the size of the index dictionary.\r\n--- Since it should be the same object kept between all calls of the same function, the other option would be to keep it somewhere in the global namespace. I don't know the Cython codebase well enough to try to do that. \r\n\r\n- Test suite?\r\n-- I'm not sure how to implement this, or if it'd even make sense to do so, for an issue that's only an enhancement of existing behaviour. \r\n--- Run a fused `cpdef` and a static `cpdef`, and compare that their execution times are within a specific factor? Compile and run fused `cpdef`s with different numbers of unique types, and check that their execution times don't look like they're growing exponentially/quadratically? All the potential tests seem like they'd be somewhat arbitrary and unreliable.\r\n\r\n- Organization, coding style, etc.\r\n-- This is not just my first attempt at contributing to Cython, but also my first attempt at contributing code to any open source project, or any group project, at all. I tried to use approximately the same conventions that were in the existing code, so just let me know if there's anything that I can fix.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381866547"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381866547"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The code-style test is complaining about long lines.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T09:07:39Z",
            "diff_hunk": "@@ -580,6 +580,45 @@ def _unpack_argument(self, pyx_code):\n                 {{endif}}\n             \"\"\")\n \n+    def _fused_signature_index(self, pyx_code):\n+        \"\"\"\n+        Generate Cython code for constructing a persistent nested dictionary index of\n+        fused type specialization signatures.\n+        \"\"\"\n+        pyx_code.put_chunk(\n+            u\"\"\"\n+                # CONSTRUCTING NESTED DICTIONARY INDEX OF SPECIALIZED SIGNATURES\n+                if not _fused_sigindex:\n+                    for sig in <dict>signatures:\n+                        sigindex_node = _fused_sigindex\n+                        sig_series = sig.strip('()').split('|')\n+                        for sig_type in sig_series[:-1]:\n+                            if sig_type not in sigindex_node:\n+                                sigindex_node[sig_type] = {}\n+                            sigindex_node = sigindex_node[sig_type]\n+                        sigindex_node[sig_series[-1]] = sig\n+            \"\"\"\n+        )\n+    def _get_unique_identifier_base(self):\n+        \"\"\"\n+        Try to generate a unique identifier string that will likely\n+        never be repeated for different nodes, in different processes,\n+        on different machines, or in different projects.\n+        \"\"\"\n+        # FIXME: Replace and remove this.\n+        import time, random, sys\n+        return '{time_ns!s}-{id!s}-{randint!s}'.format(time_ns=int(time.time()*1e9), id=id(self), randint=random.randint(0, sys.maxsize-1))",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381866547",
            "id": 381866547,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg2NjU0Nw==",
            "original_commit_id": "8f947aa0c61674eee0d23d4ccf45269ff7e1629a",
            "original_position": 31,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361732826,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381866547",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381866858"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381866858"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "And this line too.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T09:08:16Z",
            "diff_hunk": "@@ -686,31 +734,61 @@ def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n             self._buffer_declarations(pyx_code, decl_code, all_buffer_types, pythran_types)\n             env.use_utility_code(Code.UtilityCode.load_cached(\"Import\", \"ImportExport.c\"))\n             env.use_utility_code(Code.UtilityCode.load_cached(\"ImportNumPyArray\", \"ImportExport.c\"))\n-\n+        \n+        context.update(\n+            global_sigindex_name = \"'__cython__fusedcpdef__sigindices'\",\n+            func_sigindex_keybase = self._get_unique_identifier_base()\n+        )\n+        \n+        self._fused_sigindex_key(pyx_code)\n+        \n         pyx_code.put_chunk(\n             u\"\"\"\n-                candidates = []\n-                for sig in <dict>signatures:\n-                    match_found = False\n-                    src_sig = sig.strip('()').split('|')\n-                    for i in range(len(dest_sig)):\n-                        dst_type = dest_sig[i]\n-                        if dst_type is not None:\n-                            if src_sig[i] == dst_type:\n-                                match_found = True\n-                            else:\n-                                match_found = False\n-                                break\n-\n-                    if match_found:\n-                        candidates.append(sig)\n+                globs = globals()\n+                if {{global_sigindex_name}} not in <dict>globs:\n+                    globs[{{global_sigindex_name}}] = {}\n+                _fused_sigindex = (<dict>globs)[{{global_sigindex_name}}]\n+                if func_sigindex_key not in <dict>_fused_sigindex:\n+                    _fused_sigindex[func_sigindex_key] = {}\n+                _fused_sigindex = (<dict>_fused_sigindex)[func_sigindex_key]\n+            \"\"\"\n+        )\n+        \n+        self._fused_signature_index(pyx_code)\n \n+        pyx_code.put_chunk(\n+            u\"\"\"\n+                sigindex_matches = []\n+                sigindex_candidates = [_fused_sigindex]\n+                \n+                for dst_type in <list>dest_sig:\n+                    found_matches = []\n+                    found_candidates = []\n+                    # Make two seperate lists: One for for signature sub-trees with at least one definite match, and another for signature sub-trees with only ambiguous matches (where `dest_sig[i] is None`).",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381866858",
            "id": 381866858,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg2Njg1OA==",
            "original_commit_id": "8f947aa0c61674eee0d23d4ccf45269ff7e1629a",
            "original_position": 127,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361732826,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381866858",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381872332"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381872332"
                }
            },
            "author_association": "NONE",
            "body": "Ah, thank you. I was just thinking about trying to find the code style test.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T09:18:25Z",
            "diff_hunk": "@@ -580,6 +580,45 @@ def _unpack_argument(self, pyx_code):\n                 {{endif}}\n             \"\"\")\n \n+    def _fused_signature_index(self, pyx_code):\n+        \"\"\"\n+        Generate Cython code for constructing a persistent nested dictionary index of\n+        fused type specialization signatures.\n+        \"\"\"\n+        pyx_code.put_chunk(\n+            u\"\"\"\n+                # CONSTRUCTING NESTED DICTIONARY INDEX OF SPECIALIZED SIGNATURES\n+                if not _fused_sigindex:\n+                    for sig in <dict>signatures:\n+                        sigindex_node = _fused_sigindex\n+                        sig_series = sig.strip('()').split('|')\n+                        for sig_type in sig_series[:-1]:\n+                            if sig_type not in sigindex_node:\n+                                sigindex_node[sig_type] = {}\n+                            sigindex_node = sigindex_node[sig_type]\n+                        sigindex_node[sig_series[-1]] = sig\n+            \"\"\"\n+        )\n+    def _get_unique_identifier_base(self):\n+        \"\"\"\n+        Try to generate a unique identifier string that will likely\n+        never be repeated for different nodes, in different processes,\n+        on different machines, or in different projects.\n+        \"\"\"\n+        # FIXME: Replace and remove this.\n+        import time, random, sys\n+        return '{time_ns!s}-{id!s}-{randint!s}'.format(time_ns=int(time.time()*1e9), id=id(self), randint=random.randint(0, sys.maxsize-1))",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381872332",
            "id": 381872332,
            "in_reply_to_id": 381866547,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg3MjMzMg==",
            "original_commit_id": "8f947aa0c61674eee0d23d4ccf45269ff7e1629a",
            "original_position": 31,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361739961,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381872332",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381880960"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381880960"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It's surprisingly hard to activate on it's own (or at least I haven't worked out how). I think the only way to to de-activate every other type of test...\r\n\r\nIt does look like the tests are beginning to pass now, which is obviously good :)",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T09:33:23Z",
            "diff_hunk": "@@ -580,6 +580,45 @@ def _unpack_argument(self, pyx_code):\n                 {{endif}}\n             \"\"\")\n \n+    def _fused_signature_index(self, pyx_code):\n+        \"\"\"\n+        Generate Cython code for constructing a persistent nested dictionary index of\n+        fused type specialization signatures.\n+        \"\"\"\n+        pyx_code.put_chunk(\n+            u\"\"\"\n+                # CONSTRUCTING NESTED DICTIONARY INDEX OF SPECIALIZED SIGNATURES\n+                if not _fused_sigindex:\n+                    for sig in <dict>signatures:\n+                        sigindex_node = _fused_sigindex\n+                        sig_series = sig.strip('()').split('|')\n+                        for sig_type in sig_series[:-1]:\n+                            if sig_type not in sigindex_node:\n+                                sigindex_node[sig_type] = {}\n+                            sigindex_node = sigindex_node[sig_type]\n+                        sigindex_node[sig_series[-1]] = sig\n+            \"\"\"\n+        )\n+    def _get_unique_identifier_base(self):\n+        \"\"\"\n+        Try to generate a unique identifier string that will likely\n+        never be repeated for different nodes, in different processes,\n+        on different machines, or in different projects.\n+        \"\"\"\n+        # FIXME: Replace and remove this.\n+        import time, random, sys\n+        return '{time_ns!s}-{id!s}-{randint!s}'.format(time_ns=int(time.time()*1e9), id=id(self), randint=random.randint(0, sys.maxsize-1))",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381880960",
            "id": 381880960,
            "in_reply_to_id": 381866547,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg4MDk2MA==",
            "original_commit_id": "8f947aa0c61674eee0d23d4ccf45269ff7e1629a",
            "original_position": 31,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361750682,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381880960",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381898220"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381898220"
                }
            },
            "author_association": "NONE",
            "body": "I *think* just having the `seq`entially increasing counter should be okay— provided that the counter object never gets created more than once while compiling a single module, and the call to `globals()` lower down always returns a namespace that is (at least) unique to the compiled module. The Python documentation does seem to guarantee the second assumption, but I don't know enough about Cython to know whether the first assumption is guaranteed to be true.\r\n\r\nThis code only gets run once per `cpdef` function during compilation though, so the performance impact may be inconsequential, depending on whether hashing the resulting string at `O(n)` takes up a perceptible amount of time.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T10:03:52Z",
            "diff_hunk": "@@ -580,6 +600,49 @@ def _unpack_argument(self, pyx_code):\n                 {{endif}}\n             \"\"\")\n \n+    def _fused_signature_index(self, pyx_code):\n+        \"\"\"\n+        Generate Cython code for constructing a persistent nested dictionary index of\n+        fused type specialization signatures.\n+        \"\"\"\n+        pyx_code.put_chunk(\n+            u\"\"\"\n+                # CONSTRUCTING NESTED DICTIONARY INDEX OF SPECIALIZED SIGNATURES\n+                if not _fused_sigindex:\n+                    for sig in <dict>signatures:\n+                        sigindex_node = _fused_sigindex\n+                        sig_series = sig.strip('()').split('|')\n+                        for sig_type in sig_series[:-1]:\n+                            if sig_type not in sigindex_node:\n+                                sigindex_node[sig_type] = {}\n+                            sigindex_node = sigindex_node[sig_type]\n+                        sigindex_node[sig_series[-1]] = sig\n+            \"\"\"\n+        )\n+    def _get_unique_identifier_base(self):\n+        \"\"\"\n+        Try to generate a unique identifier string that will likely\n+        never be repeated for different nodes, in different processes,\n+        on different machines, or in different projects.\n+        \"\"\"\n+        import time, random, sys\n+        return '{seq!s}-{time_ns!s}-{id!s}-{randint!s}'.format(\n+            seq = get_unique_value(),",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381898220",
            "id": 381898220,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg5ODIyMA==",
            "original_commit_id": "4a858db79208bcb3a442e12fa87584a02a255c76",
            "original_position": 58,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361772588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381898220",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381899259"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381899259"
                }
            },
            "author_association": "NONE",
            "body": "Is this okay? If it is, is there a convention I should follow for internal names like this?",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T10:05:47Z",
            "diff_hunk": "@@ -686,31 +758,64 @@ def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n             self._buffer_declarations(pyx_code, decl_code, all_buffer_types, pythran_types)\n             env.use_utility_code(Code.UtilityCode.load_cached(\"Import\", \"ImportExport.c\"))\n             env.use_utility_code(Code.UtilityCode.load_cached(\"ImportNumPyArray\", \"ImportExport.c\"))\n-\n+        \n+        context.update(\n+            global_sigindex_name = \"'__cython__fusedcpdef__sigindices'\",",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381899259",
            "id": 381899259,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg5OTI1OQ==",
            "original_commit_id": "4a858db79208bcb3a442e12fa87584a02a255c76",
            "original_position": 115,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361773939,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381899259",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381904068"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381904068"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Could you use `self.node.cname`? -  that should be unique (it pretty much has to be otherwise the C code will fail to compile). I think generally it's good if you can generate the same C code each time (so that Cython-generated .c files can be included in a git repository, for example)",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T10:14:28Z",
            "diff_hunk": "@@ -580,6 +600,49 @@ def _unpack_argument(self, pyx_code):\n                 {{endif}}\n             \"\"\")\n \n+    def _fused_signature_index(self, pyx_code):\n+        \"\"\"\n+        Generate Cython code for constructing a persistent nested dictionary index of\n+        fused type specialization signatures.\n+        \"\"\"\n+        pyx_code.put_chunk(\n+            u\"\"\"\n+                # CONSTRUCTING NESTED DICTIONARY INDEX OF SPECIALIZED SIGNATURES\n+                if not _fused_sigindex:\n+                    for sig in <dict>signatures:\n+                        sigindex_node = _fused_sigindex\n+                        sig_series = sig.strip('()').split('|')\n+                        for sig_type in sig_series[:-1]:\n+                            if sig_type not in sigindex_node:\n+                                sigindex_node[sig_type] = {}\n+                            sigindex_node = sigindex_node[sig_type]\n+                        sigindex_node[sig_series[-1]] = sig\n+            \"\"\"\n+        )\n+    def _get_unique_identifier_base(self):\n+        \"\"\"\n+        Try to generate a unique identifier string that will likely\n+        never be repeated for different nodes, in different processes,\n+        on different machines, or in different projects.\n+        \"\"\"\n+        import time, random, sys\n+        return '{seq!s}-{time_ns!s}-{id!s}-{randint!s}'.format(\n+            seq = get_unique_value(),",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381904068",
            "id": 381904068,
            "in_reply_to_id": 381898220,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwNDA2OA==",
            "original_commit_id": "4a858db79208bcb3a442e12fa87584a02a255c76",
            "original_position": 58,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361780040,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381904068",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381906751"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381906751"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "There's a file Cython/Compiler/Naming.py that defines all the internal names. It might be better to add this constant to Naming.py (so if it ever gets changed you only have so change it in one place)?",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T10:19:16Z",
            "diff_hunk": "@@ -686,31 +758,64 @@ def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n             self._buffer_declarations(pyx_code, decl_code, all_buffer_types, pythran_types)\n             env.use_utility_code(Code.UtilityCode.load_cached(\"Import\", \"ImportExport.c\"))\n             env.use_utility_code(Code.UtilityCode.load_cached(\"ImportNumPyArray\", \"ImportExport.c\"))\n-\n+        \n+        context.update(\n+            global_sigindex_name = \"'__cython__fusedcpdef__sigindices'\",",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381906751",
            "id": 381906751,
            "in_reply_to_id": 381899259,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwNjc1MQ==",
            "original_commit_id": "4a858db79208bcb3a442e12fa87584a02a255c76",
            "original_position": 115,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361783509,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381906751",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381907592"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381907592"
                }
            },
            "author_association": "MEMBER",
            "body": "> if it ever gets changed you only have so change it in one place\r\n\r\nThat, and it makes it easier to avoid accidental global naming collisions by defining all prefixes in one place.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T10:20:49Z",
            "diff_hunk": "@@ -686,31 +758,64 @@ def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n             self._buffer_declarations(pyx_code, decl_code, all_buffer_types, pythran_types)\n             env.use_utility_code(Code.UtilityCode.load_cached(\"Import\", \"ImportExport.c\"))\n             env.use_utility_code(Code.UtilityCode.load_cached(\"ImportNumPyArray\", \"ImportExport.c\"))\n-\n+        \n+        context.update(\n+            global_sigindex_name = \"'__cython__fusedcpdef__sigindices'\",",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381907592",
            "id": 381907592,
            "in_reply_to_id": 381899259,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwNzU5Mg==",
            "original_commit_id": "4a858db79208bcb3a442e12fa87584a02a255c76",
            "original_position": 115,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361784627,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381907592",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381908351"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381908351"
                }
            },
            "author_association": "MEMBER",
            "body": "Yeah … there should be a simpler way to get style feedback, I agree …",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T10:22:07Z",
            "diff_hunk": "@@ -580,6 +580,45 @@ def _unpack_argument(self, pyx_code):\n                 {{endif}}\n             \"\"\")\n \n+    def _fused_signature_index(self, pyx_code):\n+        \"\"\"\n+        Generate Cython code for constructing a persistent nested dictionary index of\n+        fused type specialization signatures.\n+        \"\"\"\n+        pyx_code.put_chunk(\n+            u\"\"\"\n+                # CONSTRUCTING NESTED DICTIONARY INDEX OF SPECIALIZED SIGNATURES\n+                if not _fused_sigindex:\n+                    for sig in <dict>signatures:\n+                        sigindex_node = _fused_sigindex\n+                        sig_series = sig.strip('()').split('|')\n+                        for sig_type in sig_series[:-1]:\n+                            if sig_type not in sigindex_node:\n+                                sigindex_node[sig_type] = {}\n+                            sigindex_node = sigindex_node[sig_type]\n+                        sigindex_node[sig_series[-1]] = sig\n+            \"\"\"\n+        )\n+    def _get_unique_identifier_base(self):\n+        \"\"\"\n+        Try to generate a unique identifier string that will likely\n+        never be repeated for different nodes, in different processes,\n+        on different machines, or in different projects.\n+        \"\"\"\n+        # FIXME: Replace and remove this.\n+        import time, random, sys\n+        return '{time_ns!s}-{id!s}-{randint!s}'.format(time_ns=int(time.time()*1e9), id=id(self), randint=random.randint(0, sys.maxsize-1))",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381908351",
            "id": 381908351,
            "in_reply_to_id": 381866547,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwODM1MQ==",
            "original_commit_id": "8f947aa0c61674eee0d23d4ccf45269ff7e1629a",
            "original_position": 31,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361785591,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381908351",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381914428"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381914428"
                }
            },
            "author_association": "MEMBER",
            "body": "1) This is just `itertools.count()`, but:\r\n2) We keep unique name generators like these in the `GlobalState` (or `FuncState` for function-local names), so that you get predictable names for each module, regardless of how many Cython handles at a time. See, for example, `new_const_cname()` in `Code.py`.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T10:33:18Z",
            "diff_hunk": "@@ -9,6 +9,26 @@\n from ..Utils import OrderedSet\n \n \n+def _gen_unique_values():",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381914428",
            "id": 381914428,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxNDQyOA==",
            "original_commit_id": "4a858db79208bcb3a442e12fa87584a02a255c76",
            "original_position": 4,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361793329,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381914428",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381914840"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381914840"
                }
            },
            "author_association": "MEMBER",
            "body": "NO NEED TO SCREAM !!!  ;-)",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T10:33:58Z",
            "diff_hunk": "@@ -587,8 +607,8 @@ def _fused_signature_index(self, pyx_code):\n         \"\"\"\n         pyx_code.put_chunk(\n             u\"\"\"\n+                # CONSTRUCTING NESTED DICTIONARY INDEX OF SPECIALIZED SIGNATURES",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381914840",
            "id": 381914840,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxNDg0MA==",
            "original_commit_id": "4a858db79208bcb3a442e12fa87584a02a255c76",
            "original_position": 31,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361793329,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381914840",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381915686"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381915686"
                }
            },
            "author_association": "NONE",
            "body": "`AttributeError: 'CFuncDefNode' object has no attribute 'cname'`?\r\n\r\nHave a consistent, short, and self-commenting value guaranteed to be unique would great though. I assume it's gotta be somewhere. Where would it be stored, and would it be available at the time that `make_fused_cpdef` is called?",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T10:35:38Z",
            "diff_hunk": "@@ -580,6 +600,49 @@ def _unpack_argument(self, pyx_code):\n                 {{endif}}\n             \"\"\")\n \n+    def _fused_signature_index(self, pyx_code):\n+        \"\"\"\n+        Generate Cython code for constructing a persistent nested dictionary index of\n+        fused type specialization signatures.\n+        \"\"\"\n+        pyx_code.put_chunk(\n+            u\"\"\"\n+                # CONSTRUCTING NESTED DICTIONARY INDEX OF SPECIALIZED SIGNATURES\n+                if not _fused_sigindex:\n+                    for sig in <dict>signatures:\n+                        sigindex_node = _fused_sigindex\n+                        sig_series = sig.strip('()').split('|')\n+                        for sig_type in sig_series[:-1]:\n+                            if sig_type not in sigindex_node:\n+                                sigindex_node[sig_type] = {}\n+                            sigindex_node = sigindex_node[sig_type]\n+                        sigindex_node[sig_series[-1]] = sig\n+            \"\"\"\n+        )\n+    def _get_unique_identifier_base(self):\n+        \"\"\"\n+        Try to generate a unique identifier string that will likely\n+        never be repeated for different nodes, in different processes,\n+        on different machines, or in different projects.\n+        \"\"\"\n+        import time, random, sys\n+        return '{seq!s}-{time_ns!s}-{id!s}-{randint!s}'.format(\n+            seq = get_unique_value(),",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381915686",
            "id": 381915686,
            "in_reply_to_id": 381898220,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxNTY4Ng==",
            "original_commit_id": "4a858db79208bcb3a442e12fa87584a02a255c76",
            "original_position": 58,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361794907,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381915686",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381917710"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381917710"
                }
            },
            "author_association": "MEMBER",
            "body": "+1 for some kind of `cname` prefixing. There's also the name mangling mechanism of the current scope, which adds another level of safety by generating escaped joined names like `__pyx_someprefix_4name_6length_9prepended`. (scope == env)",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T10:39:31Z",
            "diff_hunk": "@@ -580,6 +600,49 @@ def _unpack_argument(self, pyx_code):\n                 {{endif}}\n             \"\"\")\n \n+    def _fused_signature_index(self, pyx_code):\n+        \"\"\"\n+        Generate Cython code for constructing a persistent nested dictionary index of\n+        fused type specialization signatures.\n+        \"\"\"\n+        pyx_code.put_chunk(\n+            u\"\"\"\n+                # CONSTRUCTING NESTED DICTIONARY INDEX OF SPECIALIZED SIGNATURES\n+                if not _fused_sigindex:\n+                    for sig in <dict>signatures:\n+                        sigindex_node = _fused_sigindex\n+                        sig_series = sig.strip('()').split('|')\n+                        for sig_type in sig_series[:-1]:\n+                            if sig_type not in sigindex_node:\n+                                sigindex_node[sig_type] = {}\n+                            sigindex_node = sigindex_node[sig_type]\n+                        sigindex_node[sig_series[-1]] = sig\n+            \"\"\"\n+        )\n+    def _get_unique_identifier_base(self):\n+        \"\"\"\n+        Try to generate a unique identifier string that will likely\n+        never be repeated for different nodes, in different processes,\n+        on different machines, or in different projects.\n+        \"\"\"\n+        import time, random, sys\n+        return '{seq!s}-{time_ns!s}-{id!s}-{randint!s}'.format(\n+            seq = get_unique_value(),",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381917710",
            "id": 381917710,
            "in_reply_to_id": 381898220,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxNzcxMA==",
            "original_commit_id": "4a858db79208bcb3a442e12fa87584a02a255c76",
            "original_position": 58,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361793329,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381917710",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381919158"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381919158"
                }
            },
            "author_association": "MEMBER",
            "body": "This is really a hack. Doesn't a `global` variable work here?",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T10:42:21Z",
            "diff_hunk": "@@ -711,45 +758,63 @@ def __pyx_fused_cpdef(signatures, args, kwargs, defaults, *, _fused_sigindex=(No\n             self._buffer_declarations(pyx_code, decl_code, all_buffer_types, pythran_types)\n             env.use_utility_code(Code.UtilityCode.load_cached(\"Import\", \"ImportExport.c\"))\n             env.use_utility_code(Code.UtilityCode.load_cached(\"ImportNumPyArray\", \"ImportExport.c\"))\n-\n+        \n+        context.update(\n+            global_sigindex_name = \"'__cython__fusedcpdef__sigindices'\",\n+            func_sigindex_keybase = self._get_unique_identifier_base()\n+        )\n+        \n+        self._fused_sigindex_key(pyx_code)\n+        \n+        pyx_code.put_chunk(\n+            u\"\"\"\n+                globs = globals()\n+                if {{global_sigindex_name}} not in <dict>globs:\n+                    globs[{{global_sigindex_name}}] = {}",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381919158",
            "id": 381919158,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxOTE1OA==",
            "original_commit_id": "4a858db79208bcb3a442e12fa87584a02a255c76",
            "original_position": 122,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361793329,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381919158",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381920891"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381920891"
                }
            },
            "author_association": "NONE",
            "body": "Looking at that file, it seems to be exclusively for C names. Would this name fit in there given that it's dynamically assigned with a call to `globals()` at run time?",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T10:45:42Z",
            "diff_hunk": "@@ -686,31 +758,64 @@ def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n             self._buffer_declarations(pyx_code, decl_code, all_buffer_types, pythran_types)\n             env.use_utility_code(Code.UtilityCode.load_cached(\"Import\", \"ImportExport.c\"))\n             env.use_utility_code(Code.UtilityCode.load_cached(\"ImportNumPyArray\", \"ImportExport.c\"))\n-\n+        \n+        context.update(\n+            global_sigindex_name = \"'__cython__fusedcpdef__sigindices'\",",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381920891",
            "id": 381920891,
            "in_reply_to_id": 381899259,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyMDg5MQ==",
            "original_commit_id": "4a858db79208bcb3a442e12fa87584a02a255c76",
            "original_position": 115,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361801488,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381920891",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381923309"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381923309"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I think `self.node.entry.cname` should work?\r\n\r\nIf that doesn't work then temporarily put `import pdb; pdb.set_trace()` just above the line, then you can use the debugger prompt and `dir` to find a suitable in `self.node`",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T10:50:07Z",
            "diff_hunk": "@@ -580,6 +600,49 @@ def _unpack_argument(self, pyx_code):\n                 {{endif}}\n             \"\"\")\n \n+    def _fused_signature_index(self, pyx_code):\n+        \"\"\"\n+        Generate Cython code for constructing a persistent nested dictionary index of\n+        fused type specialization signatures.\n+        \"\"\"\n+        pyx_code.put_chunk(\n+            u\"\"\"\n+                # CONSTRUCTING NESTED DICTIONARY INDEX OF SPECIALIZED SIGNATURES\n+                if not _fused_sigindex:\n+                    for sig in <dict>signatures:\n+                        sigindex_node = _fused_sigindex\n+                        sig_series = sig.strip('()').split('|')\n+                        for sig_type in sig_series[:-1]:\n+                            if sig_type not in sigindex_node:\n+                                sigindex_node[sig_type] = {}\n+                            sigindex_node = sigindex_node[sig_type]\n+                        sigindex_node[sig_series[-1]] = sig\n+            \"\"\"\n+        )\n+    def _get_unique_identifier_base(self):\n+        \"\"\"\n+        Try to generate a unique identifier string that will likely\n+        never be repeated for different nodes, in different processes,\n+        on different machines, or in different projects.\n+        \"\"\"\n+        import time, random, sys\n+        return '{seq!s}-{time_ns!s}-{id!s}-{randint!s}'.format(\n+            seq = get_unique_value(),",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381923309",
            "id": 381923309,
            "in_reply_to_id": 381898220,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyMzMwOQ==",
            "original_commit_id": "4a858db79208bcb3a442e12fa87584a02a255c76",
            "original_position": 58,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361804375,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381923309",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381927877"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381927877"
                }
            },
            "author_association": "MEMBER",
            "body": "Take a look at what `env.mangle(\"prefix\", \"name\")` returns here, and if that looks ok, drop a suitable prefix into `Naming.py` and use it to build your names like this.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T10:59:00Z",
            "diff_hunk": "@@ -580,6 +600,49 @@ def _unpack_argument(self, pyx_code):\n                 {{endif}}\n             \"\"\")\n \n+    def _fused_signature_index(self, pyx_code):\n+        \"\"\"\n+        Generate Cython code for constructing a persistent nested dictionary index of\n+        fused type specialization signatures.\n+        \"\"\"\n+        pyx_code.put_chunk(\n+            u\"\"\"\n+                # CONSTRUCTING NESTED DICTIONARY INDEX OF SPECIALIZED SIGNATURES\n+                if not _fused_sigindex:\n+                    for sig in <dict>signatures:\n+                        sigindex_node = _fused_sigindex\n+                        sig_series = sig.strip('()').split('|')\n+                        for sig_type in sig_series[:-1]:\n+                            if sig_type not in sigindex_node:\n+                                sigindex_node[sig_type] = {}\n+                            sigindex_node = sigindex_node[sig_type]\n+                        sigindex_node[sig_series[-1]] = sig\n+            \"\"\"\n+        )\n+    def _get_unique_identifier_base(self):\n+        \"\"\"\n+        Try to generate a unique identifier string that will likely\n+        never be repeated for different nodes, in different processes,\n+        on different machines, or in different projects.\n+        \"\"\"\n+        import time, random, sys\n+        return '{seq!s}-{time_ns!s}-{id!s}-{randint!s}'.format(\n+            seq = get_unique_value(),",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381927877",
            "id": 381927877,
            "in_reply_to_id": 381898220,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyNzg3Nw==",
            "original_commit_id": "4a858db79208bcb3a442e12fa87584a02a255c76",
            "original_position": 58,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361810199,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381927877",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r381945512"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/381945512"
                }
            },
            "author_association": "NONE",
            "body": "A `global` variable works here, but I wasn't sure I'd ever used them before, so I decided to minimize ~~variables~~ moving parts at first. :-)",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T11:37:16Z",
            "diff_hunk": "@@ -711,45 +758,63 @@ def __pyx_fused_cpdef(signatures, args, kwargs, defaults, *, _fused_sigindex=(No\n             self._buffer_declarations(pyx_code, decl_code, all_buffer_types, pythran_types)\n             env.use_utility_code(Code.UtilityCode.load_cached(\"Import\", \"ImportExport.c\"))\n             env.use_utility_code(Code.UtilityCode.load_cached(\"ImportNumPyArray\", \"ImportExport.c\"))\n-\n+        \n+        context.update(\n+            global_sigindex_name = \"'__cython__fusedcpdef__sigindices'\",\n+            func_sigindex_keybase = self._get_unique_identifier_base()\n+        )\n+        \n+        self._fused_sigindex_key(pyx_code)\n+        \n+        pyx_code.put_chunk(\n+            u\"\"\"\n+                globs = globals()\n+                if {{global_sigindex_name}} not in <dict>globs:\n+                    globs[{{global_sigindex_name}}] = {}",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r381945512",
            "id": 381945512,
            "in_reply_to_id": 381919158,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk0NTUxMg==",
            "original_commit_id": "4a858db79208bcb3a442e12fa87584a02a255c76",
            "original_position": 122,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 361832328,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/381945512",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r382272006"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/382272006"
                }
            },
            "author_association": "NONE",
            "body": "Is using the global constant for the specialization indices an acceptable permanent solution for making them persistent?\r\n\r\nThe other options are probably:\r\n\r\n1) Move them back into the function as a hidden keyword argument, maybe with a default value at compile time if possible. This feels quite hack-y to me, though. Aside from #3370, arguments are meant for passing values *into* the function, and using them to keep what is basically a local constant via a mutable object at definition time doesn't seem like a good reason to change the function's signature.\r\n\r\n2) Make `cpdef` function dispatchers fully-fledged objects (or object-like structures) and keep the signature as an attribute. This seems like it'd add a fair bit of overhead, in terms of both development and run time.\r\n\r\nWith the properly done name mangling, and since there does seem to be a precedent for global Cython-only values in this setting (like `__pyx_unpickle_compiled_fused_type_cls` and `__pyx_capi__`), keeping the global seems like it might be the cleanest option to me.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-20T21:38:51Z",
            "diff_hunk": "@@ -613,12 +633,20 @@ def make_fused_cpdef(self, orig_py_func, env, is_def):\n                     int __Pyx_Is_Little_Endian()\n             \"\"\")\n         decl_code.indent()\n-\n         pyx_code.put_chunk(\n             u\"\"\"\n-                def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n+                def __pyx_fused_cpdef(signatures, args, kwargs, defaults):#, *, _fused_sigindex=(None,)):\n                     # FIXME: use a typed signature - currently fails badly because\n                     #        default arguments inherit the types we specify here!\n+                    # FIXME: Keep the signature index in a local default keyword argument\n+                    #        to make it persist through calls without polluting global\n+                    #        namespace. Currently results in segfault when resulting\n+                    #        function is later bound as a method.\n+                    #        https://github.com/cython/cython/issues/3370\n+                    # FIXME: Avoid using a mutable hidden default keyword argument\n+                    #        to make a local object persist through different function calls.\n+                    #        (Reconstructing it every call (even from a literal)\n+                    #        would probably incur a cost scaled to its `O(k**n)` size.)",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r382272006",
            "id": 382272006,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI3MjAwNg==",
            "original_commit_id": "2bbcaa5c3907c99f0b949f3846d5adde6347e044",
            "original_position": 53,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 362252451,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/382272006",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r382459339"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/382459339"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "There may be a good reason why you didn't do this, but why not just do:\r\n\r\n```\r\ncdef dict {{global_sigindex_name}} = {}\r\n```\r\n\r\noutside the function scope? That way you know it's always set up, and you don't have to do the `not in globals()` check.\r\n\r\nObviously this only applies if you keep it in `globals()`",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-21T08:46:41Z",
            "diff_hunk": "@@ -686,31 +715,61 @@ def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n             self._buffer_declarations(pyx_code, decl_code, all_buffer_types, pythran_types)\n             env.use_utility_code(Code.UtilityCode.load_cached(\"Import\", \"ImportExport.c\"))\n             env.use_utility_code(Code.UtilityCode.load_cached(\"ImportNumPyArray\", \"ImportExport.c\"))\n+        \n+        context.update(\n+            global_sigindex_name = fused_cpdef_globalindex,\n+            func_sigindex_key = env.mangle(fused_cpdef_globalindex_prefix, orig_py_func.entry.cname)\n+        )\n \n         pyx_code.put_chunk(\n             u\"\"\"\n-                candidates = []\n-                for sig in <dict>signatures:\n-                    match_found = False\n-                    src_sig = sig.strip('()').split('|')\n-                    for i in range(len(dest_sig)):\n-                        dst_type = dest_sig[i]\n-                        if dst_type is not None:\n-                            if src_sig[i] == dst_type:\n-                                match_found = True\n-                            else:\n-                                match_found = False\n-                                break\n+                global {{global_sigindex_name}}\n+                if '{{global_sigindex_name}}' not in <dict>globals():",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r382459339",
            "id": 382459339,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ1OTMzOQ==",
            "original_commit_id": "2bbcaa5c3907c99f0b949f3846d5adde6347e044",
            "original_position": 90,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 362472755,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/382459339",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r382461636"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/382461636"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Would it make sense to make this `cdef list sigindex_matches` at the start of the function? Then you wouldn't need the casts at every use. (Similarly for other variables).\r\n\r\nThe downside is that this might generate more type checks when the variables are assigned, which could be why it wasn't done in the first place.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-21T08:52:19Z",
            "diff_hunk": "@@ -686,31 +715,61 @@ def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n             self._buffer_declarations(pyx_code, decl_code, all_buffer_types, pythran_types)\n             env.use_utility_code(Code.UtilityCode.load_cached(\"Import\", \"ImportExport.c\"))\n             env.use_utility_code(Code.UtilityCode.load_cached(\"ImportNumPyArray\", \"ImportExport.c\"))\n+        \n+        context.update(\n+            global_sigindex_name = fused_cpdef_globalindex,\n+            func_sigindex_key = env.mangle(fused_cpdef_globalindex_prefix, orig_py_func.entry.cname)\n+        )\n \n         pyx_code.put_chunk(\n             u\"\"\"\n-                candidates = []\n-                for sig in <dict>signatures:\n-                    match_found = False\n-                    src_sig = sig.strip('()').split('|')\n-                    for i in range(len(dest_sig)):\n-                        dst_type = dest_sig[i]\n-                        if dst_type is not None:\n-                            if src_sig[i] == dst_type:\n-                                match_found = True\n-                            else:\n-                                match_found = False\n-                                break\n+                global {{global_sigindex_name}}\n+                if '{{global_sigindex_name}}' not in <dict>globals():\n+                    {{global_sigindex_name}} = {}\n+                if '{{func_sigindex_key}}' not in <dict>{{global_sigindex_name}}:\n+                    {{global_sigindex_name}}['{{func_sigindex_key}}'] = {}\n+                _fused_sigindex = (<dict>{{global_sigindex_name}})['{{func_sigindex_key}}']\n+            \"\"\"\n+        )\n \n-                    if match_found:\n-                        candidates.append(sig)\n+        self._fused_signature_index(pyx_code)\n \n+        pyx_code.put_chunk(\n+            u\"\"\"\n+                sigindex_matches = []\n+                sigindex_candidates = [_fused_sigindex]\n+                \n+                for dst_type in <list>dest_sig:\n+                    found_matches = []\n+                    found_candidates = []\n+                    # Make two seperate lists: One for for signature sub-trees\n+                    #        with at least one definite match, and another for\n+                    #        signature sub-trees with only ambiguous matches\n+                    #        (where `dest_sig[i] is None`).\n+                    if dst_type is None:\n+                        for sn in <list>sigindex_matches:",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r382461636",
            "id": 382461636,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ2MTYzNg==",
            "original_commit_id": "2bbcaa5c3907c99f0b949f3846d5adde6347e044",
            "original_position": 115,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 362472755,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/382461636",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r382467821"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/382467821"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Looking at it a bit more - I think this solves (most of) the issue with leaking the variable to the user. Module level `cdef` variables are publicly accessible outside of the Cython module. You could probably still access the name inside the Cython module, but that's less of a concern since it doesn't appear in `dir(module)`",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-21T09:06:04Z",
            "diff_hunk": "@@ -686,31 +715,61 @@ def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n             self._buffer_declarations(pyx_code, decl_code, all_buffer_types, pythran_types)\n             env.use_utility_code(Code.UtilityCode.load_cached(\"Import\", \"ImportExport.c\"))\n             env.use_utility_code(Code.UtilityCode.load_cached(\"ImportNumPyArray\", \"ImportExport.c\"))\n+        \n+        context.update(\n+            global_sigindex_name = fused_cpdef_globalindex,\n+            func_sigindex_key = env.mangle(fused_cpdef_globalindex_prefix, orig_py_func.entry.cname)\n+        )\n \n         pyx_code.put_chunk(\n             u\"\"\"\n-                candidates = []\n-                for sig in <dict>signatures:\n-                    match_found = False\n-                    src_sig = sig.strip('()').split('|')\n-                    for i in range(len(dest_sig)):\n-                        dst_type = dest_sig[i]\n-                        if dst_type is not None:\n-                            if src_sig[i] == dst_type:\n-                                match_found = True\n-                            else:\n-                                match_found = False\n-                                break\n+                global {{global_sigindex_name}}\n+                if '{{global_sigindex_name}}' not in <dict>globals():",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r382467821",
            "id": 382467821,
            "in_reply_to_id": 382459339,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ2NzgyMQ==",
            "original_commit_id": "2bbcaa5c3907c99f0b949f3846d5adde6347e044",
            "original_position": 90,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 362484757,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/382467821",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r382769644"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/382769644"
                }
            },
            "author_association": "NONE",
            "body": "There is a reason, but not a good one. Mostly it's just because I didn't know how to do it, and putting it in the module's dynamic `__dict__` (I.E. accessible from CPython) was useful for inspecting it.\r\n\r\nIt would have to be part of the boilerplate for the module itself, correct? And ideally, it should maybe be either absent or declared as a null value unless the module includes `fused` `cpdef` functions. Where would that code be generated?",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-21T19:39:58Z",
            "diff_hunk": "@@ -686,31 +715,61 @@ def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n             self._buffer_declarations(pyx_code, decl_code, all_buffer_types, pythran_types)\n             env.use_utility_code(Code.UtilityCode.load_cached(\"Import\", \"ImportExport.c\"))\n             env.use_utility_code(Code.UtilityCode.load_cached(\"ImportNumPyArray\", \"ImportExport.c\"))\n+        \n+        context.update(\n+            global_sigindex_name = fused_cpdef_globalindex,\n+            func_sigindex_key = env.mangle(fused_cpdef_globalindex_prefix, orig_py_func.entry.cname)\n+        )\n \n         pyx_code.put_chunk(\n             u\"\"\"\n-                candidates = []\n-                for sig in <dict>signatures:\n-                    match_found = False\n-                    src_sig = sig.strip('()').split('|')\n-                    for i in range(len(dest_sig)):\n-                        dst_type = dest_sig[i]\n-                        if dst_type is not None:\n-                            if src_sig[i] == dst_type:\n-                                match_found = True\n-                            else:\n-                                match_found = False\n-                                break\n+                global {{global_sigindex_name}}\n+                if '{{global_sigindex_name}}' not in <dict>globals():",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r382769644",
            "id": 382769644,
            "in_reply_to_id": 382459339,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2OTY0NA==",
            "original_commit_id": "2bbcaa5c3907c99f0b949f3846d5adde6347e044",
            "original_position": 90,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 362870644,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/382769644",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r382823564"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/382823564"
                }
            },
            "author_association": "NONE",
            "body": "Good call.\r\n\r\nI think the assignment type checks should probably be minimal, since they're basically all to either literals or to other variables that can be statically typed?",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-21T21:53:55Z",
            "diff_hunk": "@@ -686,31 +715,61 @@ def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n             self._buffer_declarations(pyx_code, decl_code, all_buffer_types, pythran_types)\n             env.use_utility_code(Code.UtilityCode.load_cached(\"Import\", \"ImportExport.c\"))\n             env.use_utility_code(Code.UtilityCode.load_cached(\"ImportNumPyArray\", \"ImportExport.c\"))\n+        \n+        context.update(\n+            global_sigindex_name = fused_cpdef_globalindex,\n+            func_sigindex_key = env.mangle(fused_cpdef_globalindex_prefix, orig_py_func.entry.cname)\n+        )\n \n         pyx_code.put_chunk(\n             u\"\"\"\n-                candidates = []\n-                for sig in <dict>signatures:\n-                    match_found = False\n-                    src_sig = sig.strip('()').split('|')\n-                    for i in range(len(dest_sig)):\n-                        dst_type = dest_sig[i]\n-                        if dst_type is not None:\n-                            if src_sig[i] == dst_type:\n-                                match_found = True\n-                            else:\n-                                match_found = False\n-                                break\n+                global {{global_sigindex_name}}\n+                if '{{global_sigindex_name}}' not in <dict>globals():\n+                    {{global_sigindex_name}} = {}\n+                if '{{func_sigindex_key}}' not in <dict>{{global_sigindex_name}}:\n+                    {{global_sigindex_name}}['{{func_sigindex_key}}'] = {}\n+                _fused_sigindex = (<dict>{{global_sigindex_name}})['{{func_sigindex_key}}']\n+            \"\"\"\n+        )\n \n-                    if match_found:\n-                        candidates.append(sig)\n+        self._fused_signature_index(pyx_code)\n \n+        pyx_code.put_chunk(\n+            u\"\"\"\n+                sigindex_matches = []\n+                sigindex_candidates = [_fused_sigindex]\n+                \n+                for dst_type in <list>dest_sig:\n+                    found_matches = []\n+                    found_candidates = []\n+                    # Make two seperate lists: One for for signature sub-trees\n+                    #        with at least one definite match, and another for\n+                    #        signature sub-trees with only ambiguous matches\n+                    #        (where `dest_sig[i] is None`).\n+                    if dst_type is None:\n+                        for sn in <list>sigindex_matches:",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r382823564",
            "id": 382823564,
            "in_reply_to_id": 382461636,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgyMzU2NA==",
            "original_commit_id": "2bbcaa5c3907c99f0b949f3846d5adde6347e044",
            "original_position": 115,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 362939974,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/382823564",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r382842818"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/382842818"
                }
            },
            "author_association": "NONE",
            "body": "I'm going to try putting it in `ParseTreeTransforms.py`, following the example of `__pyx_unpickle_`.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-21T22:49:04Z",
            "diff_hunk": "@@ -686,31 +715,61 @@ def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n             self._buffer_declarations(pyx_code, decl_code, all_buffer_types, pythran_types)\n             env.use_utility_code(Code.UtilityCode.load_cached(\"Import\", \"ImportExport.c\"))\n             env.use_utility_code(Code.UtilityCode.load_cached(\"ImportNumPyArray\", \"ImportExport.c\"))\n+        \n+        context.update(\n+            global_sigindex_name = fused_cpdef_globalindex,\n+            func_sigindex_key = env.mangle(fused_cpdef_globalindex_prefix, orig_py_func.entry.cname)\n+        )\n \n         pyx_code.put_chunk(\n             u\"\"\"\n-                candidates = []\n-                for sig in <dict>signatures:\n-                    match_found = False\n-                    src_sig = sig.strip('()').split('|')\n-                    for i in range(len(dest_sig)):\n-                        dst_type = dest_sig[i]\n-                        if dst_type is not None:\n-                            if src_sig[i] == dst_type:\n-                                match_found = True\n-                            else:\n-                                match_found = False\n-                                break\n+                global {{global_sigindex_name}}\n+                if '{{global_sigindex_name}}' not in <dict>globals():",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r382842818",
            "id": 382842818,
            "in_reply_to_id": 382459339,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg0MjgxOA==",
            "original_commit_id": "2bbcaa5c3907c99f0b949f3846d5adde6347e044",
            "original_position": 90,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 362963207,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/382842818",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r382896280"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/382896280"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I don't think moving it to ParseTreeTransforms will help, but it'd definitely be a good idea to look at the code in ParseTreeTransforms and see there's anything you can copy.\r\n\r\nBut I'm not sure where that code should be generated.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-22T08:13:17Z",
            "diff_hunk": "@@ -686,31 +715,61 @@ def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n             self._buffer_declarations(pyx_code, decl_code, all_buffer_types, pythran_types)\n             env.use_utility_code(Code.UtilityCode.load_cached(\"Import\", \"ImportExport.c\"))\n             env.use_utility_code(Code.UtilityCode.load_cached(\"ImportNumPyArray\", \"ImportExport.c\"))\n+        \n+        context.update(\n+            global_sigindex_name = fused_cpdef_globalindex,\n+            func_sigindex_key = env.mangle(fused_cpdef_globalindex_prefix, orig_py_func.entry.cname)\n+        )\n \n         pyx_code.put_chunk(\n             u\"\"\"\n-                candidates = []\n-                for sig in <dict>signatures:\n-                    match_found = False\n-                    src_sig = sig.strip('()').split('|')\n-                    for i in range(len(dest_sig)):\n-                        dst_type = dest_sig[i]\n-                        if dst_type is not None:\n-                            if src_sig[i] == dst_type:\n-                                match_found = True\n-                            else:\n-                                match_found = False\n-                                break\n+                global {{global_sigindex_name}}\n+                if '{{global_sigindex_name}}' not in <dict>globals():",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r382896280",
            "id": 382896280,
            "in_reply_to_id": 382459339,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg5NjI4MA==",
            "original_commit_id": "2bbcaa5c3907c99f0b949f3846d5adde6347e044",
            "original_position": 90,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 363017290,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/382896280",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r382898387"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/382898387"
                }
            },
            "author_association": "NONE",
            "body": "It's kind of strange. Appending the generated definition to `<list>ParseTreeTransforms.AnalyseDeclarationsTransform().extra_module_declarations` with a hook from `._handle_def()` works (as an entry in the module's `__dict__`) when I do a normal assignment in it with `__pyx_fusedcpdef_sigindices = {}`, but doing `cdef __pyx_fusedcpdef_sigindices in the same place` neither helps nor crashes it.\r\n\r\nEDIT: The observed behaviour is mostly consistent with if the code were being placed inside the functions' scopes. The `cdef` would then apply to a local variable, but the `global` statement overrides it and creates and assigns the dictionary in the module perhaps... Except that the code gets run (and prints stuff out, creates the variable, can import modules apparently) as soon as the module is imported.\r\n\r\nEDIT: Apparently, `cython.compiled` is set to `False` when that code runs. Interesting.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-22T08:56:46Z",
            "diff_hunk": "@@ -686,31 +715,61 @@ def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n             self._buffer_declarations(pyx_code, decl_code, all_buffer_types, pythran_types)\n             env.use_utility_code(Code.UtilityCode.load_cached(\"Import\", \"ImportExport.c\"))\n             env.use_utility_code(Code.UtilityCode.load_cached(\"ImportNumPyArray\", \"ImportExport.c\"))\n+        \n+        context.update(\n+            global_sigindex_name = fused_cpdef_globalindex,\n+            func_sigindex_key = env.mangle(fused_cpdef_globalindex_prefix, orig_py_func.entry.cname)\n+        )\n \n         pyx_code.put_chunk(\n             u\"\"\"\n-                candidates = []\n-                for sig in <dict>signatures:\n-                    match_found = False\n-                    src_sig = sig.strip('()').split('|')\n-                    for i in range(len(dest_sig)):\n-                        dst_type = dest_sig[i]\n-                        if dst_type is not None:\n-                            if src_sig[i] == dst_type:\n-                                match_found = True\n-                            else:\n-                                match_found = False\n-                                break\n+                global {{global_sigindex_name}}\n+                if '{{global_sigindex_name}}' not in <dict>globals():",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r382898387",
            "id": 382898387,
            "in_reply_to_id": 382459339,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg5ODM4Nw==",
            "original_commit_id": "2bbcaa5c3907c99f0b949f3846d5adde6347e044",
            "original_position": 90,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 363018808,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/382898387",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r382900344"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/382900344"
                }
            },
            "author_association": "NONE",
            "body": "@scoder @robertwb You're probably the ones most familiar with Cython internals, and I think trying to reverse-engineer the best place for this could easily take quite a very disproportionate amount time for me at this point. Where should the code generation be placed for a statically typed global dictionary in any modules that use `fused` `cpdef`s?",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-22T09:40:05Z",
            "diff_hunk": "@@ -1637,6 +1637,28 @@ def visit_CClassDefNode(self, node):\n                 self._inject_pickle_methods(node)\n         return node\n \n+    def _inject_fusedcpdef_sigindex(self, node):\n+        print(node)\n+        sigindex_dict = TreeFragment(\n+            u\"\"\"            \n+            cdef dict %(fused_cpdef_globalindex)s = {}\n+            \n+            %(fused_cpdef_globalindex)s = {}",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r382900344",
            "id": 382900344,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkwMDM0NA==",
            "original_commit_id": "7ef65083bb6adacc8b90749b6cecc1904400ecda",
            "original_position": 10,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 363020323,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T06:51:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/382900344",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r384400419"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/384400419"
                }
            },
            "author_association": "MEMBER",
            "body": "You don't need to declare all of these. Cython has assignment based type inference, so anything that is only assigned a single type will automatically be typed inside of the function.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-26T10:23:15Z",
            "diff_hunk": "@@ -613,13 +633,16 @@ def make_fused_cpdef(self, orig_py_func, env, is_def):\n                     int __Pyx_Is_Little_Endian()\n             \"\"\")\n         decl_code.indent()\n-\n         pyx_code.put_chunk(\n             u\"\"\"\n                 def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n                     # FIXME: use a typed signature - currently fails badly because\n                     #        default arguments inherit the types we specify here!\n \n+                    cdef list dest_sig, sigindex_matches, sigindex_candidates, found_matches, found_candidates, search_list, candidates",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r384400419",
            "id": 384400419,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQwMDQxOQ==",
            "original_commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "original_position": 45,
            "path": "Cython/Compiler/FusedNode.py",
            "position": 45,
            "pull_request_review_id": 364780366,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T10:49:26Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/384400419",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r384401033"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/384401033"
                }
            },
            "author_association": "MEMBER",
            "body": "Double empty lines inside of a function tend to distract more than they help.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-26T10:24:25Z",
            "diff_hunk": "@@ -630,6 +653,7 @@ def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n                     # instance check body\n             \"\"\")\n \n+",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r384401033",
            "id": 384401033,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQwMTAzMw==",
            "original_commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "original_position": 56,
            "path": "Cython/Compiler/FusedNode.py",
            "position": 56,
            "pull_request_review_id": 364780366,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T10:49:26Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/384401033",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r384405435"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/384405435"
                }
            },
            "author_association": "MEMBER",
            "body": "Pushing this through a global user-visible declaration doesn't seem ideal. I rather liked your solution with the local default argument, because it's really the most self-contained. I'd rather see the bug resolved that prevents that from working, than leaking more than necessary into the global user namespace. My intuition says that it might be easy to fix, could just be a missing attribute traversal in a transform somewhere (which wasn't relevant before but becomes necessary now), or maybe copying something more over from the `TreeFragment`. I can see if I can figure something out.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-26T10:32:13Z",
            "diff_hunk": "@@ -687,30 +711,65 @@ def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n             env.use_utility_code(Code.UtilityCode.load_cached(\"Import\", \"ImportExport.c\"))\n             env.use_utility_code(Code.UtilityCode.load_cached(\"ImportNumPyArray\", \"ImportExport.c\"))\n \n+        context.update(\n+            global_sigindex_name = fused_cpdef_globalindex,\n+            func_sigindex_key = env.mangle(fused_cpdef_globalindex_prefix, orig_py_func.entry.cname)\n+        )\n+\n+        global_scope = env.global_scope()\n+        if not global_scope.lookup_here(fused_cpdef_globalindex):\n+            from .Builtin import dict_type\n+            global_scope.declare_var(StringEncoding.EncodedString(fused_cpdef_globalindex), dict_type, None, is_cdef=True)",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r384405435",
            "id": 384405435,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQwNTQzNQ==",
            "original_commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "original_position": 72,
            "path": "Cython/Compiler/FusedNode.py",
            "position": 72,
            "pull_request_review_id": 364780366,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T10:49:26Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/384405435",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r384409030"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/384409030"
                }
            },
            "author_association": "MEMBER",
            "body": "Since you're adding new code here, please use something Py3 compatible instead of this syntactic wart.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-26T10:38:44Z",
            "diff_hunk": "@@ -1,24 +1,39 @@\n cimport cython\n+import sys, io\n \n cy = __import__(\"cython\")\n \n-cpdef func1(self, cython.integral x):\n-    print \"%s,\" % (self,),\n+cpdef func1(self, cython.integral x, printto=None):\n+    if printto is None:\n+        printto = sys.stdout\n+    print >> printto, \"%s,\" % (self,),",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r384409030",
            "id": 384409030,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQwOTAzMA==",
            "original_commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "original_position": 11,
            "path": "tests/run/fused_cpdef.pyx",
            "position": 11,
            "pull_request_review_id": 364780366,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T10:49:27Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/384409030",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r384418868"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/384418868"
                }
            },
            "author_association": "MEMBER",
            "body": "I think I originally used type casts for 1) otherwise untyped arguments that were passed into the function (there's a bug that prevented typing them) and 2) loop variables for values of a known type. Since this is generated code, I think type cases are just fine wherever helpful. They can sometimes lead to less overhead because they avoid type checks that may otherwise occur on assignments to typed variables.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-26T10:56:31Z",
            "diff_hunk": "@@ -686,31 +715,61 @@ def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n             self._buffer_declarations(pyx_code, decl_code, all_buffer_types, pythran_types)\n             env.use_utility_code(Code.UtilityCode.load_cached(\"Import\", \"ImportExport.c\"))\n             env.use_utility_code(Code.UtilityCode.load_cached(\"ImportNumPyArray\", \"ImportExport.c\"))\n+        \n+        context.update(\n+            global_sigindex_name = fused_cpdef_globalindex,\n+            func_sigindex_key = env.mangle(fused_cpdef_globalindex_prefix, orig_py_func.entry.cname)\n+        )\n \n         pyx_code.put_chunk(\n             u\"\"\"\n-                candidates = []\n-                for sig in <dict>signatures:\n-                    match_found = False\n-                    src_sig = sig.strip('()').split('|')\n-                    for i in range(len(dest_sig)):\n-                        dst_type = dest_sig[i]\n-                        if dst_type is not None:\n-                            if src_sig[i] == dst_type:\n-                                match_found = True\n-                            else:\n-                                match_found = False\n-                                break\n+                global {{global_sigindex_name}}\n+                if '{{global_sigindex_name}}' not in <dict>globals():\n+                    {{global_sigindex_name}} = {}\n+                if '{{func_sigindex_key}}' not in <dict>{{global_sigindex_name}}:\n+                    {{global_sigindex_name}}['{{func_sigindex_key}}'] = {}\n+                _fused_sigindex = (<dict>{{global_sigindex_name}})['{{func_sigindex_key}}']\n+            \"\"\"\n+        )\n \n-                    if match_found:\n-                        candidates.append(sig)\n+        self._fused_signature_index(pyx_code)\n \n+        pyx_code.put_chunk(\n+            u\"\"\"\n+                sigindex_matches = []\n+                sigindex_candidates = [_fused_sigindex]\n+                \n+                for dst_type in <list>dest_sig:\n+                    found_matches = []\n+                    found_candidates = []\n+                    # Make two seperate lists: One for for signature sub-trees\n+                    #        with at least one definite match, and another for\n+                    #        signature sub-trees with only ambiguous matches\n+                    #        (where `dest_sig[i] is None`).\n+                    if dst_type is None:\n+                        for sn in <list>sigindex_matches:",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r384418868",
            "id": 384418868,
            "in_reply_to_id": 382461636,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQxODg2OA==",
            "original_commit_id": "2bbcaa5c3907c99f0b949f3846d5adde6347e044",
            "original_position": 115,
            "path": "Cython/Compiler/FusedNode.py",
            "position": null,
            "pull_request_review_id": 364803566,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T10:56:31Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/384418868",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r384420298"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/384420298"
                }
            },
            "author_association": "MEMBER",
            "body": "It's actually not so global, give that it will eventually be specific to an instance of the module (think of reloading and subinterpreters), and even to the function, really. I think a mutable default argument captures this best, after all.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-26T10:59:11Z",
            "diff_hunk": "@@ -1637,6 +1637,28 @@ def visit_CClassDefNode(self, node):\n                 self._inject_pickle_methods(node)\n         return node\n \n+    def _inject_fusedcpdef_sigindex(self, node):\n+        print(node)\n+        sigindex_dict = TreeFragment(\n+            u\"\"\"            \n+            cdef dict %(fused_cpdef_globalindex)s = {}\n+            \n+            %(fused_cpdef_globalindex)s = {}",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r384420298",
            "id": 384420298,
            "in_reply_to_id": 382900344,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQyMDI5OA==",
            "original_commit_id": "7ef65083bb6adacc8b90749b6cecc1904400ecda",
            "original_position": 10,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 364805338,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T10:59:18Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/384420298",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r384502007"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/384502007"
                }
            },
            "author_association": "NONE",
            "body": "Oh, cool. Does it also recurse in that names will be still typed if they're sometimes assigned based on other names that are only ever assigned to a single type?",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-26T13:49:02Z",
            "diff_hunk": "@@ -613,13 +633,16 @@ def make_fused_cpdef(self, orig_py_func, env, is_def):\n                     int __Pyx_Is_Little_Endian()\n             \"\"\")\n         decl_code.indent()\n-\n         pyx_code.put_chunk(\n             u\"\"\"\n                 def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n                     # FIXME: use a typed signature - currently fails badly because\n                     #        default arguments inherit the types we specify here!\n \n+                    cdef list dest_sig, sigindex_matches, sigindex_candidates, found_matches, found_candidates, search_list, candidates",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r384502007",
            "id": 384502007,
            "in_reply_to_id": 384400419,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUwMjAwNw==",
            "original_commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "original_position": 45,
            "path": "Cython/Compiler/FusedNode.py",
            "position": 45,
            "pull_request_review_id": 364910333,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T13:49:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/384502007",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r384503333"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/384503333"
                }
            },
            "author_association": "NONE",
            "body": "Apologies. I wanted to maintain the language version that was already in the file.",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-26T13:51:12Z",
            "diff_hunk": "@@ -1,24 +1,39 @@\n cimport cython\n+import sys, io\n \n cy = __import__(\"cython\")\n \n-cpdef func1(self, cython.integral x):\n-    print \"%s,\" % (self,),\n+cpdef func1(self, cython.integral x, printto=None):\n+    if printto is None:\n+        printto = sys.stdout\n+    print >> printto, \"%s,\" % (self,),",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r384503333",
            "id": 384503333,
            "in_reply_to_id": 384409030,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUwMzMzMw==",
            "original_commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "original_position": 11,
            "path": "tests/run/fused_cpdef.pyx",
            "position": 11,
            "pull_request_review_id": 364912030,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T13:51:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/384503333",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3366#discussion_r384574374"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3366"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/384574374"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yes it should do. You can usually verify this (if you need to) by either looking at the C code or by using Visitor.PrintTree",
            "commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "created_at": "2020-02-26T15:38:29Z",
            "diff_hunk": "@@ -613,13 +633,16 @@ def make_fused_cpdef(self, orig_py_func, env, is_def):\n                     int __Pyx_Is_Little_Endian()\n             \"\"\")\n         decl_code.indent()\n-\n         pyx_code.put_chunk(\n             u\"\"\"\n                 def __pyx_fused_cpdef(signatures, args, kwargs, defaults):\n                     # FIXME: use a typed signature - currently fails badly because\n                     #        default arguments inherit the types we specify here!\n \n+                    cdef list dest_sig, sigindex_matches, sigindex_candidates, found_matches, found_candidates, search_list, candidates",
            "html_url": "https://github.com/cython/cython/pull/3366#discussion_r384574374",
            "id": 384574374,
            "in_reply_to_id": 384400419,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3NDM3NA==",
            "original_commit_id": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "original_position": 45,
            "path": "Cython/Compiler/FusedNode.py",
            "position": 45,
            "pull_request_review_id": 365004067,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3366",
            "updated_at": "2020-02-26T15:38:29Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/384574374",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3366/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ddc3ab3d054d6157d03d974b516f5d951c0d5712/comments",
            "commit": {
                "author": {
                    "date": "2020-02-19T03:51:48Z",
                    "email": "willchencontact@gmail.com",
                    "name": "will-ca"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-19T03:51:48Z",
                    "email": "willchencontact@gmail.com",
                    "name": "will-ca"
                },
                "message": "Rewrote signature matching for fused cpdef function dispatch to use a pre-built tree index and be O(n).",
                "tree": {
                    "sha": "0c21587bc6c95a83562d7e0be34ba4e9e2ae1a8a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0c21587bc6c95a83562d7e0be34ba4e9e2ae1a8a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ddc3ab3d054d6157d03d974b516f5d951c0d5712",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/ddc3ab3d054d6157d03d974b516f5d951c0d5712",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOmRkYzNhYjNkMDU0ZDYxNTdkMDNkOTc0YjUxNmY1ZDk1MWMwZDU3MTI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/060f5cf6fdaa012d8525c940b3e7fff82d185581",
                    "sha": "060f5cf6fdaa012d8525c940b3e7fff82d185581",
                    "url": "https://api.github.com/repos/cython/cython/commits/060f5cf6fdaa012d8525c940b3e7fff82d185581"
                }
            ],
            "sha": "ddc3ab3d054d6157d03d974b516f5d951c0d5712",
            "url": "https://api.github.com/repos/cython/cython/commits/ddc3ab3d054d6157d03d974b516f5d951c0d5712"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4dd938e1b612d76e9613b03cf3b13a6f176e95d5/comments",
            "commit": {
                "author": {
                    "date": "2020-02-19T04:02:20Z",
                    "email": "willchencontact@gmail.com",
                    "name": "will-ca"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-19T04:02:20Z",
                    "email": "willchencontact@gmail.com",
                    "name": "will-ca"
                },
                "message": "Added some blank lines for formatting.",
                "tree": {
                    "sha": "f35eaa3d55f932309ccc233bd394ccfdef7f3503",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f35eaa3d55f932309ccc233bd394ccfdef7f3503"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4dd938e1b612d76e9613b03cf3b13a6f176e95d5",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/4dd938e1b612d76e9613b03cf3b13a6f176e95d5",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjRkZDkzOGUxYjYxMmQ3NmU5NjEzYjAzY2YzYjEzYTZmMTc2ZTk1ZDU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ddc3ab3d054d6157d03d974b516f5d951c0d5712",
                    "sha": "ddc3ab3d054d6157d03d974b516f5d951c0d5712",
                    "url": "https://api.github.com/repos/cython/cython/commits/ddc3ab3d054d6157d03d974b516f5d951c0d5712"
                }
            ],
            "sha": "4dd938e1b612d76e9613b03cf3b13a6f176e95d5",
            "url": "https://api.github.com/repos/cython/cython/commits/4dd938e1b612d76e9613b03cf3b13a6f176e95d5"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e225960f1f7e8e2800270faed45b973951802da1/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T03:07:52Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T03:07:52Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Disabled performance gains. (github.com/cython/cython/issues/3370)",
                "tree": {
                    "sha": "cb5da366a91790b98525fe8459ebbf306e0d4f3e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/cb5da366a91790b98525fe8459ebbf306e0d4f3e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e225960f1f7e8e2800270faed45b973951802da1",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/e225960f1f7e8e2800270faed45b973951802da1",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOmUyMjU5NjBmMWY3ZThlMjgwMDI3MGZhZWQ0NWI5NzM5NTE4MDJkYTE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4dd938e1b612d76e9613b03cf3b13a6f176e95d5",
                    "sha": "4dd938e1b612d76e9613b03cf3b13a6f176e95d5",
                    "url": "https://api.github.com/repos/cython/cython/commits/4dd938e1b612d76e9613b03cf3b13a6f176e95d5"
                }
            ],
            "sha": "e225960f1f7e8e2800270faed45b973951802da1",
            "url": "https://api.github.com/repos/cython/cython/commits/e225960f1f7e8e2800270faed45b973951802da1"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/564da33e4fad441ba034dd234e72103ba0de1d55/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T03:13:28Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T03:13:28Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Modified default keyword signature check for fused cpdef functions in test suite to allow specialization index.",
                "tree": {
                    "sha": "c9839661575b990a00eea8085e0e85968d63890e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c9839661575b990a00eea8085e0e85968d63890e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/564da33e4fad441ba034dd234e72103ba0de1d55",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/564da33e4fad441ba034dd234e72103ba0de1d55",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjU2NGRhMzNlNGZhZDQ0MWJhMDM0ZGQyMzRlNzIxMDNiYTBkZTFkNTU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e225960f1f7e8e2800270faed45b973951802da1",
                    "sha": "e225960f1f7e8e2800270faed45b973951802da1",
                    "url": "https://api.github.com/repos/cython/cython/commits/e225960f1f7e8e2800270faed45b973951802da1"
                }
            ],
            "sha": "564da33e4fad441ba034dd234e72103ba0de1d55",
            "url": "https://api.github.com/repos/cython/cython/commits/564da33e4fad441ba034dd234e72103ba0de1d55"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6f57b9c709617252a5443d8e2ac23ce27326d516/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T05:28:18Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T05:28:18Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "#Re-enabled performance gains. Work around github.com/cython/cython/issues/3370 by keeping signature index in hopefully-non-colliding global namespace.",
                "tree": {
                    "sha": "817d488e394247cdfff17089ce134276f877f579",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/817d488e394247cdfff17089ce134276f877f579"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6f57b9c709617252a5443d8e2ac23ce27326d516",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/6f57b9c709617252a5443d8e2ac23ce27326d516",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjZmNTdiOWM3MDk2MTcyNTJhNTQ0M2Q4ZTJhYzIzY2UyNzMyNmQ1MTY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/564da33e4fad441ba034dd234e72103ba0de1d55",
                    "sha": "564da33e4fad441ba034dd234e72103ba0de1d55",
                    "url": "https://api.github.com/repos/cython/cython/commits/564da33e4fad441ba034dd234e72103ba0de1d55"
                }
            ],
            "sha": "6f57b9c709617252a5443d8e2ac23ce27326d516",
            "url": "https://api.github.com/repos/cython/cython/commits/6f57b9c709617252a5443d8e2ac23ce27326d516"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2c842bd62dc7f503610bdb2b58137aa001aa59c2/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T08:44:27Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T08:44:27Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Some performance enhancements.",
                "tree": {
                    "sha": "0b7399556d8c99894ee53041d2a36f860afe2361",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/0b7399556d8c99894ee53041d2a36f860afe2361"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2c842bd62dc7f503610bdb2b58137aa001aa59c2",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/2c842bd62dc7f503610bdb2b58137aa001aa59c2",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjJjODQyYmQ2MmRjN2Y1MDM2MTBiZGIyYjU4MTM3YWEwMDFhYTU5YzI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6f57b9c709617252a5443d8e2ac23ce27326d516",
                    "sha": "6f57b9c709617252a5443d8e2ac23ce27326d516",
                    "url": "https://api.github.com/repos/cython/cython/commits/6f57b9c709617252a5443d8e2ac23ce27326d516"
                }
            ],
            "sha": "2c842bd62dc7f503610bdb2b58137aa001aa59c2",
            "url": "https://api.github.com/repos/cython/cython/commits/2c842bd62dc7f503610bdb2b58137aa001aa59c2"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7dcb8ecf3713cbab6b103b842a5d9f99a1f8737f/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T09:01:36Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T09:01:36Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Removed redundant global lookup and string concatenation. Approximate performance parity with original (re)implementation.",
                "tree": {
                    "sha": "3e3349908ccd52f7a3d129a4c0dca6be1b3a852b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3e3349908ccd52f7a3d129a4c0dca6be1b3a852b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7dcb8ecf3713cbab6b103b842a5d9f99a1f8737f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/7dcb8ecf3713cbab6b103b842a5d9f99a1f8737f",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjdkY2I4ZWNmMzcxM2NiYWI2YjEwM2I4NDJhNWQ5Zjk5YTFmODczN2Y=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2c842bd62dc7f503610bdb2b58137aa001aa59c2",
                    "sha": "2c842bd62dc7f503610bdb2b58137aa001aa59c2",
                    "url": "https://api.github.com/repos/cython/cython/commits/2c842bd62dc7f503610bdb2b58137aa001aa59c2"
                }
            ],
            "sha": "7dcb8ecf3713cbab6b103b842a5d9f99a1f8737f",
            "url": "https://api.github.com/repos/cython/cython/commits/7dcb8ecf3713cbab6b103b842a5d9f99a1f8737f"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8f947aa0c61674eee0d23d4ccf45269ff7e1629a/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T09:03:30Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T09:03:30Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Added test to ensure proper differentiation between ambiguously compatible and definitely compatible arguments.",
                "tree": {
                    "sha": "49bb79ab31aeef1fd1b3267aa842df163e0634a7",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/49bb79ab31aeef1fd1b3267aa842df163e0634a7"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8f947aa0c61674eee0d23d4ccf45269ff7e1629a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/8f947aa0c61674eee0d23d4ccf45269ff7e1629a",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjhmOTQ3YWEwYzYxNjc0ZWVlMGQyM2Q0Y2NmNDUyNjlmZjdlMTYyOWE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7dcb8ecf3713cbab6b103b842a5d9f99a1f8737f",
                    "sha": "7dcb8ecf3713cbab6b103b842a5d9f99a1f8737f",
                    "url": "https://api.github.com/repos/cython/cython/commits/7dcb8ecf3713cbab6b103b842a5d9f99a1f8737f"
                }
            ],
            "sha": "8f947aa0c61674eee0d23d4ccf45269ff7e1629a",
            "url": "https://api.github.com/repos/cython/cython/commits/8f947aa0c61674eee0d23d4ccf45269ff7e1629a"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6e0b7f84c046f9c9bb9b67caa2a4d175caa8a447/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T09:14:42Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T09:14:42Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Break up long lines.",
                "tree": {
                    "sha": "de5cb2d202f6e144d53b94259bd5208e6ceb5b12",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/de5cb2d202f6e144d53b94259bd5208e6ceb5b12"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6e0b7f84c046f9c9bb9b67caa2a4d175caa8a447",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/6e0b7f84c046f9c9bb9b67caa2a4d175caa8a447",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjZlMGI3Zjg0YzA0NmY5YzliYjliNjdjYWEyYTRkMTc1Y2FhOGE0NDc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8f947aa0c61674eee0d23d4ccf45269ff7e1629a",
                    "sha": "8f947aa0c61674eee0d23d4ccf45269ff7e1629a",
                    "url": "https://api.github.com/repos/cython/cython/commits/8f947aa0c61674eee0d23d4ccf45269ff7e1629a"
                }
            ],
            "sha": "6e0b7f84c046f9c9bb9b67caa2a4d175caa8a447",
            "url": "https://api.github.com/repos/cython/cython/commits/6e0b7f84c046f9c9bb9b67caa2a4d175caa8a447"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4a858db79208bcb3a442e12fa87584a02a255c76/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T09:44:22Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T09:44:22Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "(Hopefully) eliminate possibility of key collisions in global cpdef specialization index dictionary by adding a counter to names.",
                "tree": {
                    "sha": "acd14167a70ec8c03ce7c2a71b03750ff0a3f5b1",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/acd14167a70ec8c03ce7c2a71b03750ff0a3f5b1"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4a858db79208bcb3a442e12fa87584a02a255c76",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/4a858db79208bcb3a442e12fa87584a02a255c76",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjRhODU4ZGI3OTIwOGJjYjNhNDQyZTEyZmE4NzU4NGEwMmEyNTVjNzY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6e0b7f84c046f9c9bb9b67caa2a4d175caa8a447",
                    "sha": "6e0b7f84c046f9c9bb9b67caa2a4d175caa8a447",
                    "url": "https://api.github.com/repos/cython/cython/commits/6e0b7f84c046f9c9bb9b67caa2a4d175caa8a447"
                }
            ],
            "sha": "4a858db79208bcb3a442e12fa87584a02a255c76",
            "url": "https://api.github.com/repos/cython/cython/commits/4a858db79208bcb3a442e12fa87584a02a255c76"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5bc8850c2355c22c358195a7c42838c5b8258768/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T11:34:01Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T11:34:01Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Use Cython's existing naming capabilities. Miscellaneous cleanup. Thanks for the feedback!",
                "tree": {
                    "sha": "33857b92e844ec6ac6cc1802f00f6c41d4816040",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/33857b92e844ec6ac6cc1802f00f6c41d4816040"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5bc8850c2355c22c358195a7c42838c5b8258768",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/5bc8850c2355c22c358195a7c42838c5b8258768",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjViYzg4NTBjMjM1NWMyMmMzNTgxOTVhN2M0MjgzOGM1YjgyNTg3Njg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4a858db79208bcb3a442e12fa87584a02a255c76",
                    "sha": "4a858db79208bcb3a442e12fa87584a02a255c76",
                    "url": "https://api.github.com/repos/cython/cython/commits/4a858db79208bcb3a442e12fa87584a02a255c76"
                }
            ],
            "sha": "5bc8850c2355c22c358195a7c42838c5b8258768",
            "url": "https://api.github.com/repos/cython/cython/commits/5bc8850c2355c22c358195a7c42838c5b8258768"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4df5ca1428d8c2cfe384a8c1d7ef7889936681de/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T11:49:10Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T11:49:10Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Realize I'm not using globals fully.",
                "tree": {
                    "sha": "c61f46c11ad307b983d16cb3ad3e3d527f0cb955",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c61f46c11ad307b983d16cb3ad3e3d527f0cb955"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4df5ca1428d8c2cfe384a8c1d7ef7889936681de",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/4df5ca1428d8c2cfe384a8c1d7ef7889936681de",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjRkZjVjYTE0MjhkOGMyY2ZlMzg0YThjMWQ3ZWY3ODg5OTM2NjgxZGU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/5bc8850c2355c22c358195a7c42838c5b8258768",
                    "sha": "5bc8850c2355c22c358195a7c42838c5b8258768",
                    "url": "https://api.github.com/repos/cython/cython/commits/5bc8850c2355c22c358195a7c42838c5b8258768"
                }
            ],
            "sha": "4df5ca1428d8c2cfe384a8c1d7ef7889936681de",
            "url": "https://api.github.com/repos/cython/cython/commits/4df5ca1428d8c2cfe384a8c1d7ef7889936681de"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/28ef8cc1ffc81b5e7c188c6e26ba56c01ec98d0a/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T18:09:05Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T18:09:05Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Moved global statement out of conditional to look more sensible.",
                "tree": {
                    "sha": "d619589499bc4a24a978a74d776dfe96aed8b247",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d619589499bc4a24a978a74d776dfe96aed8b247"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/28ef8cc1ffc81b5e7c188c6e26ba56c01ec98d0a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/28ef8cc1ffc81b5e7c188c6e26ba56c01ec98d0a",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjI4ZWY4Y2MxZmZjODFiNWU3YzE4OGM2ZTI2YmE1NmMwMWVjOThkMGE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4df5ca1428d8c2cfe384a8c1d7ef7889936681de",
                    "sha": "4df5ca1428d8c2cfe384a8c1d7ef7889936681de",
                    "url": "https://api.github.com/repos/cython/cython/commits/4df5ca1428d8c2cfe384a8c1d7ef7889936681de"
                }
            ],
            "sha": "28ef8cc1ffc81b5e7c188c6e26ba56c01ec98d0a",
            "url": "https://api.github.com/repos/cython/cython/commits/28ef8cc1ffc81b5e7c188c6e26ba56c01ec98d0a"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2bbcaa5c3907c99f0b949f3846d5adde6347e044/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T18:11:56Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T18:11:56Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Merge https://github.com/cython/cython\nSync with upstream. Passing LIMITED_API tests?",
                "tree": {
                    "sha": "f297526a36e79d517ec4f85cf8c16715f385a02f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f297526a36e79d517ec4f85cf8c16715f385a02f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2bbcaa5c3907c99f0b949f3846d5adde6347e044",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/2bbcaa5c3907c99f0b949f3846d5adde6347e044",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjJiYmNhYTVjMzkwN2M5OWYwYjk0OWYzODQ2ZDVhZGRlNjM0N2UwNDQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/28ef8cc1ffc81b5e7c188c6e26ba56c01ec98d0a",
                    "sha": "28ef8cc1ffc81b5e7c188c6e26ba56c01ec98d0a",
                    "url": "https://api.github.com/repos/cython/cython/commits/28ef8cc1ffc81b5e7c188c6e26ba56c01ec98d0a"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/8e35f7e282f0ec7e5dab48d7c0d31595f2b2c237",
                    "sha": "8e35f7e282f0ec7e5dab48d7c0d31595f2b2c237",
                    "url": "https://api.github.com/repos/cython/cython/commits/8e35f7e282f0ec7e5dab48d7c0d31595f2b2c237"
                }
            ],
            "sha": "2bbcaa5c3907c99f0b949f3846d5adde6347e044",
            "url": "https://api.github.com/repos/cython/cython/commits/2bbcaa5c3907c99f0b949f3846d5adde6347e044"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/349a6366f3370b1ba5b216ec8674dff6f2f4d9eb/comments",
            "commit": {
                "author": {
                    "date": "2020-02-21T21:43:46Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-21T21:43:46Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Replaced local list and dictionary coercions with static declarations.",
                "tree": {
                    "sha": "6c331a5d4034e710a9d3bfaf087a99424a479eb5",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/6c331a5d4034e710a9d3bfaf087a99424a479eb5"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/349a6366f3370b1ba5b216ec8674dff6f2f4d9eb",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/349a6366f3370b1ba5b216ec8674dff6f2f4d9eb",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjM0OWE2MzY2ZjMzNzBiMWJhNWIyMTZlYzg2NzRkZmY2ZjJmNGQ5ZWI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2bbcaa5c3907c99f0b949f3846d5adde6347e044",
                    "sha": "2bbcaa5c3907c99f0b949f3846d5adde6347e044",
                    "url": "https://api.github.com/repos/cython/cython/commits/2bbcaa5c3907c99f0b949f3846d5adde6347e044"
                }
            ],
            "sha": "349a6366f3370b1ba5b216ec8674dff6f2f4d9eb",
            "url": "https://api.github.com/repos/cython/cython/commits/349a6366f3370b1ba5b216ec8674dff6f2f4d9eb"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5f44468b4e5c5b65f8272a398c5e87482ffe03eb/comments",
            "commit": {
                "author": {
                    "date": "2020-02-21T21:47:25Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-21T21:47:25Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Add .komodoproject to .gitignore.",
                "tree": {
                    "sha": "3f80c615c1ac118efb9b0453655328e90ac36fd3",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3f80c615c1ac118efb9b0453655328e90ac36fd3"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5f44468b4e5c5b65f8272a398c5e87482ffe03eb",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/5f44468b4e5c5b65f8272a398c5e87482ffe03eb",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjVmNDQ0NjhiNGU1YzViNjVmODI3MmEzOThjNWU4NzQ4MmZmZTAzZWI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/349a6366f3370b1ba5b216ec8674dff6f2f4d9eb",
                    "sha": "349a6366f3370b1ba5b216ec8674dff6f2f4d9eb",
                    "url": "https://api.github.com/repos/cython/cython/commits/349a6366f3370b1ba5b216ec8674dff6f2f4d9eb"
                }
            ],
            "sha": "5f44468b4e5c5b65f8272a398c5e87482ffe03eb",
            "url": "https://api.github.com/repos/cython/cython/commits/5f44468b4e5c5b65f8272a398c5e87482ffe03eb"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4b41c9f9e922d0c9b40addc36dd65f8256162cae/comments",
            "commit": {
                "author": {
                    "date": "2020-02-21T22:06:12Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-21T22:06:12Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Update #FIXME's.",
                "tree": {
                    "sha": "3a77108152c17382b1ce45b927d1a319e13d235c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3a77108152c17382b1ce45b927d1a319e13d235c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4b41c9f9e922d0c9b40addc36dd65f8256162cae",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/4b41c9f9e922d0c9b40addc36dd65f8256162cae",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjRiNDFjOWY5ZTkyMmQwYzliNDBhZGRjMzZkZDY1ZjgyNTYxNjJjYWU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/5f44468b4e5c5b65f8272a398c5e87482ffe03eb",
                    "sha": "5f44468b4e5c5b65f8272a398c5e87482ffe03eb",
                    "url": "https://api.github.com/repos/cython/cython/commits/5f44468b4e5c5b65f8272a398c5e87482ffe03eb"
                }
            ],
            "sha": "4b41c9f9e922d0c9b40addc36dd65f8256162cae",
            "url": "https://api.github.com/repos/cython/cython/commits/4b41c9f9e922d0c9b40addc36dd65f8256162cae"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ae021919572df1745383ff748be2d82a4a0d7f50/comments",
            "commit": {
                "author": {
                    "date": "2020-02-22T09:17:36Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-22T09:17:36Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "(WIP) Moved fused cpdef signature index declaration to module-level.",
                "tree": {
                    "sha": "2c3d857d6136a12260447c23d87f2387ee9afbba",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2c3d857d6136a12260447c23d87f2387ee9afbba"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ae021919572df1745383ff748be2d82a4a0d7f50",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/ae021919572df1745383ff748be2d82a4a0d7f50",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOmFlMDIxOTE5NTcyZGYxNzQ1MzgzZmY3NDhiZTJkODJhNGEwZDdmNTA=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4b41c9f9e922d0c9b40addc36dd65f8256162cae",
                    "sha": "4b41c9f9e922d0c9b40addc36dd65f8256162cae",
                    "url": "https://api.github.com/repos/cython/cython/commits/4b41c9f9e922d0c9b40addc36dd65f8256162cae"
                }
            ],
            "sha": "ae021919572df1745383ff748be2d82a4a0d7f50",
            "url": "https://api.github.com/repos/cython/cython/commits/ae021919572df1745383ff748be2d82a4a0d7f50"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7ef65083bb6adacc8b90749b6cecc1904400ecda/comments",
            "commit": {
                "author": {
                    "date": "2020-02-22T09:18:56Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-22T09:18:56Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "(WIP) Moved fused cpdef signature index declaration to module-level.",
                "tree": {
                    "sha": "8f766938b03db3981485ab121511be25f5162839",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8f766938b03db3981485ab121511be25f5162839"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7ef65083bb6adacc8b90749b6cecc1904400ecda",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/7ef65083bb6adacc8b90749b6cecc1904400ecda",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjdlZjY1MDgzYmI2YWRhY2M4YjkwNzQ5YjZjZWNjMTkwNDQwMGVjZGE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ae021919572df1745383ff748be2d82a4a0d7f50",
                    "sha": "ae021919572df1745383ff748be2d82a4a0d7f50",
                    "url": "https://api.github.com/repos/cython/cython/commits/ae021919572df1745383ff748be2d82a4a0d7f50"
                }
            ],
            "sha": "7ef65083bb6adacc8b90749b6cecc1904400ecda",
            "url": "https://api.github.com/repos/cython/cython/commits/7ef65083bb6adacc8b90749b6cecc1904400ecda"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7052078fb548fd973a203293491aeaa00bc2bf57/comments",
            "commit": {
                "author": {
                    "date": "2020-02-22T10:38:30Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-22T10:38:30Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Create global fused cpdef specialization index only once per module.",
                "tree": {
                    "sha": "58be43076e5c94c4cd76fa29db34b25a305db4be",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/58be43076e5c94c4cd76fa29db34b25a305db4be"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7052078fb548fd973a203293491aeaa00bc2bf57",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/7052078fb548fd973a203293491aeaa00bc2bf57",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjcwNTIwNzhmYjU0OGZkOTczYTIwMzI5MzQ5MWFlYWEwMGJjMmJmNTc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7ef65083bb6adacc8b90749b6cecc1904400ecda",
                    "sha": "7ef65083bb6adacc8b90749b6cecc1904400ecda",
                    "url": "https://api.github.com/repos/cython/cython/commits/7ef65083bb6adacc8b90749b6cecc1904400ecda"
                }
            ],
            "sha": "7052078fb548fd973a203293491aeaa00bc2bf57",
            "url": "https://api.github.com/repos/cython/cython/commits/7052078fb548fd973a203293491aeaa00bc2bf57"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9bdff2579795bffd3502060424c84f724a142993/comments",
            "commit": {
                "author": {
                    "date": "2020-02-23T11:08:02Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-23T11:08:02Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Added test to ensure fused cpdef's can be called by the module itself during import.",
                "tree": {
                    "sha": "da6af611b991ca95272df241d8cafcbad4639eb4",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/da6af611b991ca95272df241d8cafcbad4639eb4"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9bdff2579795bffd3502060424c84f724a142993",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/9bdff2579795bffd3502060424c84f724a142993",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjliZGZmMjU3OTc5NWJmZmQzNTAyMDYwNDI0Yzg0ZjcyNGExNDI5OTM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7052078fb548fd973a203293491aeaa00bc2bf57",
                    "sha": "7052078fb548fd973a203293491aeaa00bc2bf57",
                    "url": "https://api.github.com/repos/cython/cython/commits/7052078fb548fd973a203293491aeaa00bc2bf57"
                }
            ],
            "sha": "9bdff2579795bffd3502060424c84f724a142993",
            "url": "https://api.github.com/repos/cython/cython/commits/9bdff2579795bffd3502060424c84f724a142993"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/cb35467a9267cbaefeb0a3c4631eee55088bc879/comments",
            "commit": {
                "author": {
                    "date": "2020-02-23T11:15:28Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-23T11:15:28Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Added test to ensure consistent handling of ambigous fused cpdef signatures.",
                "tree": {
                    "sha": "a792e4f4fe582768109661664de790c94d402047",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a792e4f4fe582768109661664de790c94d402047"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/cb35467a9267cbaefeb0a3c4631eee55088bc879",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/cb35467a9267cbaefeb0a3c4631eee55088bc879",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOmNiMzU0NjdhOTI2N2NiYWVmZWIwYTNjNDYzMWVlZTU1MDg4YmM4Nzk=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9bdff2579795bffd3502060424c84f724a142993",
                    "sha": "9bdff2579795bffd3502060424c84f724a142993",
                    "url": "https://api.github.com/repos/cython/cython/commits/9bdff2579795bffd3502060424c84f724a142993"
                }
            ],
            "sha": "cb35467a9267cbaefeb0a3c4631eee55088bc879",
            "url": "https://api.github.com/repos/cython/cython/commits/cb35467a9267cbaefeb0a3c4631eee55088bc879"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/21499a5de3a9bbba7fe68ee656dcac9ff749ba9d/comments",
            "commit": {
                "author": {
                    "date": "2020-02-24T23:00:01Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-24T23:00:01Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Merge https://github.com/cython/cython\n\nSync with https://github.com/cython/cython.git.",
                "tree": {
                    "sha": "a61ed106dfe97404699aed1b90d72c7f798c67e1",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a61ed106dfe97404699aed1b90d72c7f798c67e1"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/21499a5de3a9bbba7fe68ee656dcac9ff749ba9d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/21499a5de3a9bbba7fe68ee656dcac9ff749ba9d",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjIxNDk5YTVkZTNhOWJiYmE3ZmU2OGVlNjU2ZGNhYzlmZjc0OWJhOWQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/cb35467a9267cbaefeb0a3c4631eee55088bc879",
                    "sha": "cb35467a9267cbaefeb0a3c4631eee55088bc879",
                    "url": "https://api.github.com/repos/cython/cython/commits/cb35467a9267cbaefeb0a3c4631eee55088bc879"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/61d606ace1bfad42a55586de57f96ab4f1ede5b2",
                    "sha": "61d606ace1bfad42a55586de57f96ab4f1ede5b2",
                    "url": "https://api.github.com/repos/cython/cython/commits/61d606ace1bfad42a55586de57f96ab4f1ede5b2"
                }
            ],
            "sha": "21499a5de3a9bbba7fe68ee656dcac9ff749ba9d",
            "url": "https://api.github.com/repos/cython/cython/commits/21499a5de3a9bbba7fe68ee656dcac9ff749ba9d"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ad3aebef34d59acc52cde39c0c77ee022712d00e/comments",
            "commit": {
                "author": {
                    "date": "2020-02-24T23:11:13Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-24T23:11:13Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Latest attempts to statically type global specialization index. (Causes compiler crash due to non-working declaration.)",
                "tree": {
                    "sha": "2a273697f7ddc604215465409830184254daa44a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2a273697f7ddc604215465409830184254daa44a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ad3aebef34d59acc52cde39c0c77ee022712d00e",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/ad3aebef34d59acc52cde39c0c77ee022712d00e",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOmFkM2FlYmVmMzRkNTlhY2M1MmNkZTM5YzBjNzdlZTAyMjcxMmQwMGU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/21499a5de3a9bbba7fe68ee656dcac9ff749ba9d",
                    "sha": "21499a5de3a9bbba7fe68ee656dcac9ff749ba9d",
                    "url": "https://api.github.com/repos/cython/cython/commits/21499a5de3a9bbba7fe68ee656dcac9ff749ba9d"
                }
            ],
            "sha": "ad3aebef34d59acc52cde39c0c77ee022712d00e",
            "url": "https://api.github.com/repos/cython/cython/commits/ad3aebef34d59acc52cde39c0c77ee022712d00e"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/58ba4ef69a55369f64327a557bd3eafa0b54296d/comments",
            "commit": {
                "author": {
                    "date": "2020-02-24T23:43:57Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-24T23:43:57Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Undo static declaration attempts for global fused cpdef specialization index. I can't yet figure out how to do it at this point, and everything works fine without it.",
                "tree": {
                    "sha": "66bd47b33d2dc36c1007d559dc77c6ec8b5948d8",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/66bd47b33d2dc36c1007d559dc77c6ec8b5948d8"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/58ba4ef69a55369f64327a557bd3eafa0b54296d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/58ba4ef69a55369f64327a557bd3eafa0b54296d",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjU4YmE0ZWY2OWE1NTM2OWY2NDMyN2E1NTdiZDNlYWZhMGI1NDI5NmQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ad3aebef34d59acc52cde39c0c77ee022712d00e",
                    "sha": "ad3aebef34d59acc52cde39c0c77ee022712d00e",
                    "url": "https://api.github.com/repos/cython/cython/commits/ad3aebef34d59acc52cde39c0c77ee022712d00e"
                }
            ],
            "sha": "58ba4ef69a55369f64327a557bd3eafa0b54296d",
            "url": "https://api.github.com/repos/cython/cython/commits/58ba4ef69a55369f64327a557bd3eafa0b54296d"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4b35f12abd0fca9bd0900bd52d757059b6e59eed/comments",
            "commit": {
                "author": {
                    "date": "2020-02-24T23:47:17Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-24T23:47:17Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Add /cython_debug/ to .gitignore.",
                "tree": {
                    "sha": "1c5f01220222ab4ed8b028aa849a10cfe51cf28b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1c5f01220222ab4ed8b028aa849a10cfe51cf28b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4b35f12abd0fca9bd0900bd52d757059b6e59eed",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/4b35f12abd0fca9bd0900bd52d757059b6e59eed",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjRiMzVmMTJhYmQwZmNhOWJkMDkwMGJkNTJkNzU3MDU5YjZlNTllZWQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/58ba4ef69a55369f64327a557bd3eafa0b54296d",
                    "sha": "58ba4ef69a55369f64327a557bd3eafa0b54296d",
                    "url": "https://api.github.com/repos/cython/cython/commits/58ba4ef69a55369f64327a557bd3eafa0b54296d"
                }
            ],
            "sha": "4b35f12abd0fca9bd0900bd52d757059b6e59eed",
            "url": "https://api.github.com/repos/cython/cython/commits/4b35f12abd0fca9bd0900bd52d757059b6e59eed"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d88c690e7d91ec5a7bd07827607e540e51a2f256/comments",
            "commit": {
                "author": {
                    "date": "2020-02-25T11:01:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-25T11:01:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Version with statically fused fusedcpdef_sigindex",
                "tree": {
                    "sha": "53b974742ce964f7979a21a62ae8fae3cd0d2e96",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/53b974742ce964f7979a21a62ae8fae3cd0d2e96"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d88c690e7d91ec5a7bd07827607e540e51a2f256",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/d88c690e7d91ec5a7bd07827607e540e51a2f256",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOmQ4OGM2OTBlN2Q5MWVjNWE3YmQwNzgyNzYwN2U1NDBlNTFhMmYyNTY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ad3aebef34d59acc52cde39c0c77ee022712d00e",
                    "sha": "ad3aebef34d59acc52cde39c0c77ee022712d00e",
                    "url": "https://api.github.com/repos/cython/cython/commits/ad3aebef34d59acc52cde39c0c77ee022712d00e"
                }
            ],
            "sha": "d88c690e7d91ec5a7bd07827607e540e51a2f256",
            "url": "https://api.github.com/repos/cython/cython/commits/d88c690e7d91ec5a7bd07827607e540e51a2f256"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/86a3931896e687c44325469d37509b784d175e75/comments",
            "commit": {
                "author": {
                    "date": "2020-02-26T02:43:34Z",
                    "email": "37680486+will-ca@users.noreply.github.com",
                    "name": "will-ca"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-26T02:43:34Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge pull request #1 from da-woods/static_fusedcpdef_index\n\nVersion with statically fused fusedcpdef_sigindex",
                "tree": {
                    "sha": "53b974742ce964f7979a21a62ae8fae3cd0d2e96",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/53b974742ce964f7979a21a62ae8fae3cd0d2e96"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/86a3931896e687c44325469d37509b784d175e75",
                "verification": {
                    "payload": "tree 53b974742ce964f7979a21a62ae8fae3cd0d2e96\nparent ad3aebef34d59acc52cde39c0c77ee022712d00e\nparent d88c690e7d91ec5a7bd07827607e540e51a2f256\nauthor will-ca <37680486+will-ca@users.noreply.github.com> 1582685014 -0800\ncommitter GitHub <noreply@github.com> 1582685014 -0800\n\nMerge pull request #1 from da-woods/static_fusedcpdef_index\n\nVersion with statically fused fusedcpdef_sigindex",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeVdtWCRBK7hj4Ov3rIwAAdHIIABhb2DeUnCdQ2IPbVkz/IFni\nCy5uQeK+xn2OwYtPOlNKbNihVd64kbmJ8iVDQSfRigV7dQZ/XU9erduAimLN3TU2\nCEEfWOcAD2pu8344vwX6TGjqoiZsllmfAZxHImHAZbuIcL3EURgSNuMukMzQm+hJ\n0+74MD9cXaIu2Iv7Ijort6Hj40sHW5tDnkenJJrNEcQwH3Ba0tRRxM2LZQhCpKh0\nkY9Dn9RdWQTVVVT5eFswMZO8VgCsF8ilgc8yjR11BxMVx3YmmZtSsg2wa6GHRzCE\noyPBzLcjUzUDlwcWVCfG+IFAxX4FJNSFKOZSCnrcl65nVpKdkPosaDQUv+koIhA=\n=kzLv\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/86a3931896e687c44325469d37509b784d175e75",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjg2YTM5MzE4OTZlNjg3YzQ0MzI1NDY5ZDM3NTA5Yjc4NGQxNzVlNzU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ad3aebef34d59acc52cde39c0c77ee022712d00e",
                    "sha": "ad3aebef34d59acc52cde39c0c77ee022712d00e",
                    "url": "https://api.github.com/repos/cython/cython/commits/ad3aebef34d59acc52cde39c0c77ee022712d00e"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/d88c690e7d91ec5a7bd07827607e540e51a2f256",
                    "sha": "d88c690e7d91ec5a7bd07827607e540e51a2f256",
                    "url": "https://api.github.com/repos/cython/cython/commits/d88c690e7d91ec5a7bd07827607e540e51a2f256"
                }
            ],
            "sha": "86a3931896e687c44325469d37509b784d175e75",
            "url": "https://api.github.com/repos/cython/cython/commits/86a3931896e687c44325469d37509b784d175e75"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1ba6695a935a13bb5cb08512673faf330e3e3947/comments",
            "commit": {
                "author": {
                    "date": "2020-02-26T04:36:43Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-26T04:36:43Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Test for explicitly defined fused cpdef method, cleanup for mid-import fused cpdef test.",
                "tree": {
                    "sha": "bf1cce89e4ce0123197c41823b6b2684395110d8",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/bf1cce89e4ce0123197c41823b6b2684395110d8"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1ba6695a935a13bb5cb08512673faf330e3e3947",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/1ba6695a935a13bb5cb08512673faf330e3e3947",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjFiYTY2OTVhOTM1YTEzYmI1Y2IwODUxMjY3M2ZhZjMzMGUzZTM5NDc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/86a3931896e687c44325469d37509b784d175e75",
                    "sha": "86a3931896e687c44325469d37509b784d175e75",
                    "url": "https://api.github.com/repos/cython/cython/commits/86a3931896e687c44325469d37509b784d175e75"
                }
            ],
            "sha": "1ba6695a935a13bb5cb08512673faf330e3e3947",
            "url": "https://api.github.com/repos/cython/cython/commits/1ba6695a935a13bb5cb08512673faf330e3e3947"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1a2296c8c32972bde56cc7f66e86b0002d50917d/comments",
            "commit": {
                "author": {
                    "date": "2020-02-26T04:44:23Z",
                    "email": "37680486+will-ca@users.noreply.github.com",
                    "name": "will-ca"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-26T04:44:23Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'master' into static_fusedcpdef_index",
                "tree": {
                    "sha": "92aaf3da82d1fc680981a53fb84a6a6f29525f1a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/92aaf3da82d1fc680981a53fb84a6a6f29525f1a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1a2296c8c32972bde56cc7f66e86b0002d50917d",
                "verification": {
                    "payload": "tree 92aaf3da82d1fc680981a53fb84a6a6f29525f1a\nparent 1ba6695a935a13bb5cb08512673faf330e3e3947\nparent 4b35f12abd0fca9bd0900bd52d757059b6e59eed\nauthor will-ca <37680486+will-ca@users.noreply.github.com> 1582692263 -0800\ncommitter GitHub <noreply@github.com> 1582692263 -0800\n\nMerge branch 'master' into static_fusedcpdef_index",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeVfenCRBK7hj4Ov3rIwAAdHIIACm2eHzTkLREDJnFpdKIs+gj\nT/cODHkAZjhjxo1gEX1OGvoOcrWa9+EDT4OTvo7jI4DRgQby8es8R6AcHKR0DASp\nqe1o7sepcZzsgeyMFGeBmct7oaCCZokodAcVvMYSjCIgLyGb8nVyG1msapoknu7M\niR4EPysvA4WFf0TH2ZLzNucfpWYxuZvzM82Xg9FrxtZgbZIof305cdl90lwTBaFd\ni0n3eeCIvQ5y0EbCZ+VpbyX0uwbM27QrsVM7ic06OH8Qo4EWcgAqH0MkcC2Ulu1v\n2Pel32ghflHbB4LhCPzTQcZqnMoPrhTx0+eVtLQHFyD4eJr1rqP6Rqts3mfUrYI=\n=Tbj9\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/1a2296c8c32972bde56cc7f66e86b0002d50917d",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjFhMjI5NmM4YzMyOTcyYmRlNTZjYzdmNjZlODZiMDAwMmQ1MDkxN2Q=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1ba6695a935a13bb5cb08512673faf330e3e3947",
                    "sha": "1ba6695a935a13bb5cb08512673faf330e3e3947",
                    "url": "https://api.github.com/repos/cython/cython/commits/1ba6695a935a13bb5cb08512673faf330e3e3947"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/4b35f12abd0fca9bd0900bd52d757059b6e59eed",
                    "sha": "4b35f12abd0fca9bd0900bd52d757059b6e59eed",
                    "url": "https://api.github.com/repos/cython/cython/commits/4b35f12abd0fca9bd0900bd52d757059b6e59eed"
                }
            ],
            "sha": "1a2296c8c32972bde56cc7f66e86b0002d50917d",
            "url": "https://api.github.com/repos/cython/cython/commits/1a2296c8c32972bde56cc7f66e86b0002d50917d"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/90ad7f39c2ba37f17534fc03606fc94cb6085452/comments",
            "commit": {
                "author": {
                    "date": "2020-02-26T04:46:31Z",
                    "email": "37680486+will-ca@users.noreply.github.com",
                    "name": "will-ca"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-26T04:46:31Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge pull request #2 from will-ca/static_fusedcpdef_index\n\nStatic fusedcpdef index, fused cpdef method test.",
                "tree": {
                    "sha": "92aaf3da82d1fc680981a53fb84a6a6f29525f1a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/92aaf3da82d1fc680981a53fb84a6a6f29525f1a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/90ad7f39c2ba37f17534fc03606fc94cb6085452",
                "verification": {
                    "payload": "tree 92aaf3da82d1fc680981a53fb84a6a6f29525f1a\nparent 4b35f12abd0fca9bd0900bd52d757059b6e59eed\nparent 1a2296c8c32972bde56cc7f66e86b0002d50917d\nauthor will-ca <37680486+will-ca@users.noreply.github.com> 1582692391 -0800\ncommitter GitHub <noreply@github.com> 1582692391 -0800\n\nMerge pull request #2 from will-ca/static_fusedcpdef_index\n\nStatic fusedcpdef index, fused cpdef method test.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeVfgnCRBK7hj4Ov3rIwAAdHIIAFxwFt33qHpURtMtSdr2maoB\nlgfEcOU75QNMnebBbojGGYDuu8nzL0MSfppUFWvgI7UGwEW/Z5pTEH4LwDIIASEJ\nh54GYDrrzIp7wzpYEPqdwB0YSzNTOx13aeHL67ijlVXx02JkaMTuoDwOnLWoiY5K\ngaaa1oOnYnCK2a8Knh3m2hhCZGOqOAhqs8siqzHANSdA26nm+aTymx2Auy1JpKNx\nZXErMuygs/rPqAstARHk6RgHu40rwi7FkEoGg06/7dncx+nGt8ZRAzppOdnFn3MC\nICz8sgjHQw22/THTQc4IHe+yADgzJUzkNNtDxD+yZIQzWYp9qe+8vvGZ+7MqC2Q=\n=9/tj\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/90ad7f39c2ba37f17534fc03606fc94cb6085452",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjkwYWQ3ZjM5YzJiYTM3ZjE3NTM0ZmMwMzYwNmZjOTRjYjYwODU0NTI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4b35f12abd0fca9bd0900bd52d757059b6e59eed",
                    "sha": "4b35f12abd0fca9bd0900bd52d757059b6e59eed",
                    "url": "https://api.github.com/repos/cython/cython/commits/4b35f12abd0fca9bd0900bd52d757059b6e59eed"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/1a2296c8c32972bde56cc7f66e86b0002d50917d",
                    "sha": "1a2296c8c32972bde56cc7f66e86b0002d50917d",
                    "url": "https://api.github.com/repos/cython/cython/commits/1a2296c8c32972bde56cc7f66e86b0002d50917d"
                }
            ],
            "sha": "90ad7f39c2ba37f17534fc03606fc94cb6085452",
            "url": "https://api.github.com/repos/cython/cython/commits/90ad7f39c2ba37f17534fc03606fc94cb6085452"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/33b40593d7f2b04116c7f412d71414fbc2422123/comments",
            "commit": {
                "author": {
                    "date": "2020-02-26T05:02:36Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-26T05:02:36Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Removed superfluous type casts.",
                "tree": {
                    "sha": "d4ee4a28d005951c5dccbfdb681871f68191e902",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d4ee4a28d005951c5dccbfdb681871f68191e902"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/33b40593d7f2b04116c7f412d71414fbc2422123",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/33b40593d7f2b04116c7f412d71414fbc2422123",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjMzYjQwNTkzZDdmMmIwNDExNmM3ZjQxMmQ3MTQxNGZiYzI0MjIxMjM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/90ad7f39c2ba37f17534fc03606fc94cb6085452",
                    "sha": "90ad7f39c2ba37f17534fc03606fc94cb6085452",
                    "url": "https://api.github.com/repos/cython/cython/commits/90ad7f39c2ba37f17534fc03606fc94cb6085452"
                }
            ],
            "sha": "33b40593d7f2b04116c7f412d71414fbc2422123",
            "url": "https://api.github.com/repos/cython/cython/commits/33b40593d7f2b04116c7f412d71414fbc2422123"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4efffdaabdae3f11283d966bf58fbc84603f946d/comments",
            "commit": {
                "author": {
                    "date": "2020-02-26T06:51:40Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-26T06:51:40Z",
                    "email": "willchencontact@gmail.com",
                    "name": "Will"
                },
                "message": "Get fusedcpdef tests to pass on Python2 by working around StringIO's unicode requirement.",
                "tree": {
                    "sha": "f3a9576b6ba6954cf6267aae4fb3c2e9c215c79a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f3a9576b6ba6954cf6267aae4fb3c2e9c215c79a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4efffdaabdae3f11283d966bf58fbc84603f946d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "html_url": "https://github.com/cython/cython/commit/4efffdaabdae3f11283d966bf58fbc84603f946d",
            "node_id": "MDY6Q29tbWl0MjQxNDc4NzUzOjRlZmZmZGFhYmRhZTNmMTEyODNkOTY2YmY1OGZiYzg0NjAzZjk0NmQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/33b40593d7f2b04116c7f412d71414fbc2422123",
                    "sha": "33b40593d7f2b04116c7f412d71414fbc2422123",
                    "url": "https://api.github.com/repos/cython/cython/commits/33b40593d7f2b04116c7f412d71414fbc2422123"
                }
            ],
            "sha": "4efffdaabdae3f11283d966bf58fbc84603f946d",
            "url": "https://api.github.com/repos/cython/cython/commits/4efffdaabdae3f11283d966bf58fbc84603f946d"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3366/commits",
    "created_at": "2020-02-19T04:18:21Z",
    "diff_url": "https://github.com/cython/cython/pull/3366.diff",
    "head": {
        "label": "will-ca:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/branches{/branch}",
            "clone_url": "https://github.com/will-ca/cython_cpdef-tests.git",
            "collaborators_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/comments{/number}",
            "commits_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/commits{/sha}",
            "compare_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/contributors",
            "created_at": "2020-02-18T22:12:33Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/downloads",
            "events_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/forks",
            "full_name": "will-ca/cython_cpdef-tests",
            "git_commits_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/git/tags{/sha}",
            "git_url": "git://github.com/will-ca/cython_cpdef-tests.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/hooks",
            "html_url": "https://github.com/will-ca/cython_cpdef-tests",
            "id": 241478753,
            "issue_comment_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/issues{/number}",
            "keys_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/merges",
            "milestones_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/milestones{/number}",
            "mirror_url": null,
            "name": "cython_cpdef-tests",
            "node_id": "MDEwOlJlcG9zaXRvcnkyNDE0Nzg3NTM=",
            "notifications_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
                "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
                "followers_url": "https://api.github.com/users/will-ca/followers",
                "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
                "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/will-ca",
                "id": 37680486,
                "login": "will-ca",
                "node_id": "MDQ6VXNlcjM3NjgwNDg2",
                "organizations_url": "https://api.github.com/users/will-ca/orgs",
                "received_events_url": "https://api.github.com/users/will-ca/received_events",
                "repos_url": "https://api.github.com/users/will-ca/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/will-ca"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/pulls{/number}",
            "pushed_at": "2020-02-26T06:51:57Z",
            "releases_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/releases{/id}",
            "size": 56502,
            "ssh_url": "git@github.com:will-ca/cython_cpdef-tests.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/stargazers",
            "statuses_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/subscribers",
            "subscription_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/subscription",
            "svn_url": "https://github.com/will-ca/cython_cpdef-tests",
            "tags_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/tags",
            "teams_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/teams",
            "trees_url": "https://api.github.com/repos/will-ca/cython_cpdef-tests/git/trees{/sha}",
            "updated_at": "2020-02-26T06:52:00Z",
            "url": "https://api.github.com/repos/will-ca/cython_cpdef-tests",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "4efffdaabdae3f11283d966bf58fbc84603f946d",
        "user": {
            "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
            "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
            "followers_url": "https://api.github.com/users/will-ca/followers",
            "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
            "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/will-ca",
            "id": 37680486,
            "login": "will-ca",
            "node_id": "MDQ6VXNlcjM3NjgwNDg2",
            "organizations_url": "https://api.github.com/users/will-ca/orgs",
            "received_events_url": "https://api.github.com/users/will-ca/received_events",
            "repos_url": "https://api.github.com/users/will-ca/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/will-ca"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3366",
    "id": 376955035,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3366",
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425559948,
            "name": "Cython Language Feature",
            "node_id": "MDU6TGFiZWw0MjU1NTk5NDg=",
            "url": "https://api.github.com/repos/cython/cython/labels/Cython%20Language%20Feature"
        },
        {
            "color": "444444",
            "default": true,
            "description": null,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        }
    ],
    "locked": false,
    "merge_commit_sha": "5e1236b69178ea68db5c72263b58ee5cfb5ce036",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc2OTU1MDM1",
    "number": 3366,
    "patch_url": "https://github.com/cython/cython/pull/3366.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3366/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/4efffdaabdae3f11283d966bf58fbc84603f946d",
    "title": "[WIP] Make fused function dispatch O(n) for `cpdef` functions.",
    "updated_at": "2020-02-26T15:38:29Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3366",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/37680486?v=4",
        "events_url": "https://api.github.com/users/will-ca/events{/privacy}",
        "followers_url": "https://api.github.com/users/will-ca/followers",
        "following_url": "https://api.github.com/users/will-ca/following{/other_user}",
        "gists_url": "https://api.github.com/users/will-ca/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/will-ca",
        "id": 37680486,
        "login": "will-ca",
        "node_id": "MDQ6VXNlcjM3NjgwNDg2",
        "organizations_url": "https://api.github.com/users/will-ca/orgs",
        "received_events_url": "https://api.github.com/users/will-ca/received_events",
        "repos_url": "https://api.github.com/users/will-ca/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/will-ca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/will-ca/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/will-ca"
    }
}