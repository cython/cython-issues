{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3829/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3829/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3829"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3829"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3829/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3829"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/090244b3ae9f6197c0ec77a6e48844b09ef24fc6"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1320,
            "forks_count": 1320,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 1112,
            "open_issues_count": 1112,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2022-09-18T13:00:43Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 65356,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 7321,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "topics": [
                "big-data",
                "c",
                "cpp",
                "cpython",
                "cpython-extensions",
                "cython",
                "performance",
                "python"
            ],
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2022-09-18T09:11:54Z",
            "url": "https://api.github.com/repos/cython/cython",
            "visibility": "public",
            "watchers": 7321,
            "watchers_count": 7321,
            "web_commit_signoff_required": false
        },
        "sha": "af1300f7655b2ccdf6308d9c9fb839d7083782e9",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "This is an attempt to resolve #2552 and follows recommendations by @scoder.\r\n\r\nLooking forward to your feedback!",
    "closed_at": "2020-09-28T18:13:54Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r488722041"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/488722041"
                }
            },
            "author_association": "MEMBER",
            "body": "See my other comment regarding the collection, but this doesn't necessarily make `name_node` a `NameNode`. It could also be something like `x.attr` or `x[5]` or whatever else you can assign to. Check `name_node.is_name`, that's the only case we care about for the annotations dict.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-15T14:39:34Z",
            "diff_hunk": "@@ -4852,6 +4854,31 @@ def analyse_declarations(self, env):\n         if self.doc_node:\n             self.doc_node.analyse_target_declaration(cenv)\n         self.body.analyse_declarations(cenv)\n+        self.analyze_class_annotations(env)\n+\n+    def analyze_class_annotations(self, env):\n+        annotations = []\n+        stat_list_node = self.body\n+        for stat_node in stat_list_node.stats:\n+            if isinstance(stat_node, SingleAssignmentNode):\n+                name_node = stat_node.lhs",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r488722041",
            "id": 488722041,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcyMjA0MQ==",
            "original_commit_id": "4408e2bba12c3bda5843adce8669dec41f23b7f5",
            "original_line": 4864,
            "original_position": 20,
            "original_start_line": 4863,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 488756172,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/488722041/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/488722041",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r488725868"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/488725868"
                }
            },
            "author_association": "MEMBER",
            "body": "This introduces a circular import. The imports go the other way, `ExprNodes` imports `Nodes`. If you need these here, you'd have to import them locally at need. However, instead, I would suggest letting the `(Py3)ClassNode` in `PyClassDefNode.classobj` do the `__annotations__` building, e.g. through a common function in `ExprNodes.py`. It knows its `class_def_node`, and in fact, all it seems to need is the class' `.body` (and the `.pos` of the class definition).\r\n\r\nI'm sorry that I pushed you this way with a comment I made, but the code itself that generates the dict should live in `ExprNodes.py` in the end, regardless of who triggers its execution.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-15T14:44:34Z",
            "diff_hunk": "@@ -5,6 +5,8 @@\n from __future__ import absolute_import\n \n import cython\n+from .ExprNodes import DictNode, DictItemNode, IdentifierStringNode, NameNode",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r488725868",
            "id": 488725868,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcyNTg2OA==",
            "original_commit_id": "4408e2bba12c3bda5843adce8669dec41f23b7f5",
            "original_line": 8,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 488756172,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/488725868/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/488725868",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r488729734"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/488729734"
                }
            },
            "author_association": "MEMBER",
            "body": "See my other comment regarding the collection, but this looks wrong (a `PassStatNode` shouldn't have an `.expr`), and it's probably due to a hack in `ExprStatNode` that falls on our feet now.\r\n\r\nhttps://github.com/cython/cython/blob/aa8b0d9b89030c0b9ace5698ae5131c623acefa4/Cython/Compiler/Nodes.py#L5502-L5509\r\n\r\nWe'll need to clean this up at some point, but if we collect the annotations from the symbol table, then this shouldn't hurt us.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-15T14:49:17Z",
            "diff_hunk": "@@ -4852,6 +4854,31 @@ def analyse_declarations(self, env):\n         if self.doc_node:\n             self.doc_node.analyse_target_declaration(cenv)\n         self.body.analyse_declarations(cenv)\n+        self.analyze_class_annotations(env)\n+\n+    def analyze_class_annotations(self, env):\n+        annotations = []\n+        stat_list_node = self.body\n+        for stat_node in stat_list_node.stats:\n+            if isinstance(stat_node, SingleAssignmentNode):\n+                name_node = stat_node.lhs\n+            elif isinstance(stat_node, PassStatNode):\n+                name_node = stat_node.expr",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r488729734",
            "id": 488729734,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcyOTczNA==",
            "original_commit_id": "4408e2bba12c3bda5843adce8669dec41f23b7f5",
            "original_line": 4866,
            "original_position": 22,
            "original_start_line": 4865,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 488756172,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/488729734/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/488729734",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r488736667"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/488736667"
                }
            },
            "author_association": "MEMBER",
            "body": "`analyse` spells with an `s` in New Zealand (British) English. (The [original creator of the code base](https://www.cosc.canterbury.ac.nz/greg.ewing/) originates from there.)",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-15T14:58:13Z",
            "diff_hunk": "@@ -4852,6 +4854,31 @@ def analyse_declarations(self, env):\n         if self.doc_node:\n             self.doc_node.analyse_target_declaration(cenv)\n         self.body.analyse_declarations(cenv)\n+        self.analyze_class_annotations(env)\n+\n+    def analyze_class_annotations(self, env):",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r488736667",
            "id": 488736667,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODczNjY2Nw==",
            "original_commit_id": "4408e2bba12c3bda5843adce8669dec41f23b7f5",
            "original_line": 4859,
            "original_position": 15,
            "original_start_line": 4857,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 488756172,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/488736667/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/488736667",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r488760078"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/488760078"
                }
            },
            "author_association": "MEMBER",
            "body": "I wonder if this is enough, or if we still need to descend into some tree nodes here. Probably for things like\r\n```\r\ntry:\r\n    x: int = may_fail()\r\nexcept:\r\n    ...\r\n```\r\nLook at `declare_from_annotation()` in `ExprNodes.py`. It already does a part of the job of collecting the annotations in the symbol table (`env.entries`). I think what we should rather do is to make sure the annotation always ends up there, whether we use it internally for static typing or not, and then collect the annotation dict for class scopes from all `Entry`s in `env.entries` that have an annotation. I think that's the cleanest way to do this.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-15T15:28:33Z",
            "diff_hunk": "@@ -4852,6 +4854,31 @@ def analyse_declarations(self, env):\n         if self.doc_node:\n             self.doc_node.analyse_target_declaration(cenv)\n         self.body.analyse_declarations(cenv)\n+        self.analyze_class_annotations(env)\n+\n+    def analyze_class_annotations(self, env):\n+        annotations = []\n+        stat_list_node = self.body\n+        for stat_node in stat_list_node.stats:",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r488760078",
            "id": 488760078,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2MDA3OA==",
            "original_commit_id": "4408e2bba12c3bda5843adce8669dec41f23b7f5",
            "original_line": 4862,
            "original_position": 18,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 488756172,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/488760078/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/488760078",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r489441429"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/489441429"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Okay - so want to make sure I follow you correctly - \r\n\r\n1. Let's clean this method up to iterate over `env.entries` and just build the annotation dict from the entries in that collection which have an annotation.\r\n2. Let's make sure `declare_from_annotation()` is collecting valid cases (e.g., don't ignore class body entries).\r\n\r\nI believe my latest updates should reflect this!",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-16T13:34:41Z",
            "diff_hunk": "@@ -4852,6 +4854,31 @@ def analyse_declarations(self, env):\n         if self.doc_node:\n             self.doc_node.analyse_target_declaration(cenv)\n         self.body.analyse_declarations(cenv)\n+        self.analyze_class_annotations(env)\n+\n+    def analyze_class_annotations(self, env):\n+        annotations = []\n+        stat_list_node = self.body\n+        for stat_node in stat_list_node.stats:",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r489441429",
            "id": 489441429,
            "in_reply_to_id": 488760078,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ0MTQyOQ==",
            "original_commit_id": "4408e2bba12c3bda5843adce8669dec41f23b7f5",
            "original_line": 4862,
            "original_position": 18,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 489630722,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/489441429/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/489441429",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r491798377"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/491798377"
                }
            },
            "author_association": "MEMBER",
            "body": "The comment doesn't match any more. Maybe you could split this into two if-cases again and restore the old comment that went with the module scope case?",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-21T05:22:10Z",
            "diff_hunk": "@@ -1973,32 +1973,26 @@ def coerce_to(self, dst_type, env):\n     def declare_from_annotation(self, env, as_target=False):\n         \"\"\"Implements PEP 526 annotation typing in a fairly relaxed way.\n \n-        Annotations are ignored for global variables, Python class attributes and already declared variables.\n+        Annotations are ignored for global variables and already declared variables.\n         String literals are allowed and ignored.\n         The ambiguous Python types 'int' and 'long' are ignored and the 'cython.int' form must be used instead.\n         \"\"\"\n-        if not env.directives['annotation_typing']:\n-            return\n-        if env.is_module_scope or env.is_py_class_scope:\n-            # annotations never create global cdef names and Python classes don't support them anyway\n-            return\n         name = self.name\n-        if self.entry or env.lookup_here(name) is not None:\n-            # already declared => ignore annotation\n-            return\n-\n         annotation = self.annotation\n-        if annotation.expr.is_string_literal:\n-            # name: \"description\" => not a type, but still a declared variable or attribute\n-            atype = None\n-        else:\n-            _, atype = annotation.analyse_type_annotation(env)\n-        if atype is None:\n-            atype = unspecified_type if as_target and env.directives['infer_types'] != False else py_object_type\n-        if atype.is_fused and env.fused_to_specific:\n-            atype = atype.specialize(env.fused_to_specific)\n-        self.entry = env.declare_var(name, atype, self.pos, is_cdef=not as_target)\n-        self.entry.annotation = annotation.expr\n+        entry = self.entry or env.lookup_here(name)\n+        if not entry:\n+            if annotation.expr.is_string_literal or env.is_module_scope or not env.directives['annotation_typing']:\n+                # name: \"description\" => not a type, but still a declared variable or attribute",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r491798377",
            "id": 491798377,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc5ODM3Nw==",
            "original_commit_id": "ba20426646a6e7e5a0e89f616b04c916092446c9",
            "original_line": 1992,
            "original_position": 43,
            "original_start_line": 1984,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 492284518,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/491798377/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/491798377",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r491799364"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/491799364"
                }
            },
            "author_association": "MEMBER",
            "body": "I prefer making methods generally available over testing for them with `hasattr()`. Is there a case that you ran into where the method was not there? The question is, at which level in the node class hierarchy we would need to introduce the method.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-21T05:27:01Z",
            "diff_hunk": "@@ -4852,6 +4853,8 @@ def analyse_declarations(self, env):\n         if self.doc_node:\n             self.doc_node.analyse_target_declaration(cenv)\n         self.body.analyse_declarations(cenv)\n+        if hasattr(self.class_result, \"analyse_class_annotations\"):",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r491799364",
            "id": 491799364,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc5OTM2NA==",
            "original_commit_id": "ba20426646a6e7e5a0e89f616b04c916092446c9",
            "original_line": 4856,
            "original_position": 12,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 492284518,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/491799364/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/491799364",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492073677"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492073677"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Well, this method is only available for a `Py3ClassNode`, so I'm hedging my bets against this logic running against a `ClassNode`, which doesn't have this logic... \r\n\r\nI've been thinking that we have a bit of a chicken-and-egg problem here, where we can't analyze the annotations without analyzing the class body, but this needs to be a part of the class body at the end of the analysis. Perhaps it would be better to have this logic live in `StatListNode.analyse_declarations()` and be activated if passed a `ClassScope` instance?",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-21T14:08:18Z",
            "diff_hunk": "@@ -4852,6 +4853,8 @@ def analyse_declarations(self, env):\n         if self.doc_node:\n             self.doc_node.analyse_target_declaration(cenv)\n         self.body.analyse_declarations(cenv)\n+        if hasattr(self.class_result, \"analyse_class_annotations\"):",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492073677",
            "id": 492073677,
            "in_reply_to_id": 491799364,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA3MzY3Nw==",
            "original_commit_id": "ba20426646a6e7e5a0e89f616b04c916092446c9",
            "original_line": 4856,
            "original_position": 12,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 492640578,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492073677/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492073677",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492512176"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492512176"
                }
            },
            "author_association": "MEMBER",
            "body": "Why is the string not correct here? We are following [PEP-563](https://www.python.org/dev/peps/pep-0563/#abstract).",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T07:00:16Z",
            "diff_hunk": "@@ -9111,7 +9119,7 @@ def analyse_class_annotations(self, env):\n                 DictItemNode(\n                     entry.pos,\n                     key=IdentifierStringNode(entry.pos, value=entry.name),\n-                    value=entry.annotation.string\n+                    value=entry.annotation.expr",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492512176",
            "id": 492512176,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUxMjE3Ng==",
            "original_commit_id": "c9f34a13e719591b667848df0709c3da652e1b2d",
            "original_line": 9122,
            "original_position": 34,
            "original_start_line": 9114,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 493171893,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492512176/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492512176",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492525932"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492525932"
                }
            },
            "author_association": "MEMBER",
            "body": "According to [PEP-526](https://www.python.org/dev/peps/pep-0526/#runtime-effects-of-type-annotations), the module scope has an `__annotations__` dict, too. Probably something we can fix up after this PR, though.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T07:29:25Z",
            "diff_hunk": "@@ -1973,32 +1973,34 @@ def coerce_to(self, dst_type, env):\n     def declare_from_annotation(self, env, as_target=False):\n         \"\"\"Implements PEP 526 annotation typing in a fairly relaxed way.\n \n-        Annotations are ignored for global variables, Python class attributes and already declared variables.\n+        Annotations are ignored for global variables and already declared variables.\n         String literals are allowed and ignored.\n         The ambiguous Python types 'int' and 'long' are ignored and the 'cython.int' form must be used instead.\n         \"\"\"\n-        if not env.directives['annotation_typing']:\n-            return\n-        if env.is_module_scope or env.is_py_class_scope:\n-            # annotations never create global cdef names and Python classes don't support them anyway\n-            return\n         name = self.name\n-        if self.entry or env.lookup_here(name) is not None:\n-            # already declared => ignore annotation\n-            return\n-\n         annotation = self.annotation\n-        if annotation.expr.is_string_literal:\n-            # name: \"description\" => not a type, but still a declared variable or attribute\n-            atype = None\n-        else:\n-            _, atype = annotation.analyse_type_annotation(env)\n-        if atype is None:\n-            atype = unspecified_type if as_target and env.directives['infer_types'] != False else py_object_type\n-        if atype.is_fused and env.fused_to_specific:\n-            atype = atype.specialize(env.fused_to_specific)\n-        self.entry = env.declare_var(name, atype, self.pos, is_cdef=not as_target)\n-        self.entry.annotation = annotation.expr\n+        entry = self.entry or env.lookup_here(name)\n+        if not entry:\n+            # annotations never create global cdef names\n+            if env.is_module_scope:",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492525932",
            "id": 492525932,
            "line": 1989,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUyNTkzMg==",
            "original_commit_id": "c9f34a13e719591b667848df0709c3da652e1b2d",
            "original_line": 1989,
            "original_position": 43,
            "original_start_line": 1984,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 56,
            "pull_request_review_id": 493189407,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492525932/reactions"
            },
            "side": "RIGHT",
            "start_line": 1988,
            "start_side": "RIGHT",
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492525932",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492526947"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492526947"
                }
            },
            "author_association": "MEMBER",
            "body": "Shouldn't this just be `self.annotation` on the right hand side? (Seems not covered by the tests.)",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T07:31:30Z",
            "diff_hunk": "@@ -2055,6 +2057,8 @@ def analyse_target_declaration(self, env):\n         if self.entry.as_module:\n             # cimported modules namespace can shadow actual variables\n             self.entry.is_variable = 1\n+        if not self.entry.annotation and self.annotation:\n+            self.entry.annotation = self.annotation.expr",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492526947",
            "id": 492526947,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUyNjk0Nw==",
            "original_commit_id": "c9f34a13e719591b667848df0709c3da652e1b2d",
            "original_line": 2061,
            "original_position": 70,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 493190733,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492526947/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492526947",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492554412"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492554412"
                }
            },
            "author_association": "MEMBER",
            "body": "We shouldn't implement legacy behaviour any more.\r\n```suggestion\r\n# tag: pure37\r\n\r\nfrom __future__ import annotations\r\n\r\nfrom typing import ClassVar\r\n```",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T08:20:33Z",
            "diff_hunk": "@@ -0,0 +1,19 @@\n+# mode: run\n+# tag: pure36\n+from typing import ClassVar",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492554412",
            "id": 492554412,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU1NDQxMg==",
            "original_commit_id": "c9f34a13e719591b667848df0709c3da652e1b2d",
            "original_line": 6,
            "original_position": 3,
            "original_start_line": 2,
            "path": "tests/run/pyclass_annotations_pep526.py",
            "position": null,
            "pull_request_review_id": 493225893,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492554412/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492554412",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492700346"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492700346"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I don't think this is the correct behavior either - afaict CPython doesn't support annotating a variable after it's been declared.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T12:41:02Z",
            "diff_hunk": "@@ -2055,6 +2057,8 @@ def analyse_target_declaration(self, env):\n         if self.entry.as_module:\n             # cimported modules namespace can shadow actual variables\n             self.entry.is_variable = 1\n+        if not self.entry.annotation and self.annotation:\n+            self.entry.annotation = self.annotation.expr",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492700346",
            "id": 492700346,
            "in_reply_to_id": 492526947,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcwMDM0Ng==",
            "original_commit_id": "c9f34a13e719591b667848df0709c3da652e1b2d",
            "original_line": 2061,
            "original_position": 70,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 493415300,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492700346/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492700346",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492701821"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492701821"
                }
            },
            "author_association": "MEMBER",
            "body": "True. Why was this change necessary then?",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T12:43:24Z",
            "diff_hunk": "@@ -2055,6 +2057,8 @@ def analyse_target_declaration(self, env):\n         if self.entry.as_module:\n             # cimported modules namespace can shadow actual variables\n             self.entry.is_variable = 1\n+        if not self.entry.annotation and self.annotation:\n+            self.entry.annotation = self.annotation.expr",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492701821",
            "id": 492701821,
            "in_reply_to_id": 492526947,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcwMTgyMQ==",
            "original_commit_id": "c9f34a13e719591b667848df0709c3da652e1b2d",
            "original_line": 2061,
            "original_position": 70,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 493417306,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492701821/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492701821",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492703011"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492703011"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It wasn't - I forgot I'd added that in while debugging why entries were lacking annotations when I thought they should have them. I've removed it 👍 ",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T12:45:16Z",
            "diff_hunk": "@@ -2055,6 +2057,8 @@ def analyse_target_declaration(self, env):\n         if self.entry.as_module:\n             # cimported modules namespace can shadow actual variables\n             self.entry.is_variable = 1\n+        if not self.entry.annotation and self.annotation:\n+            self.entry.annotation = self.annotation.expr",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492703011",
            "id": 492703011,
            "in_reply_to_id": 492526947,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcwMzAxMQ==",
            "original_commit_id": "c9f34a13e719591b667848df0709c3da652e1b2d",
            "original_line": 2061,
            "original_position": 70,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 493418898,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492703011/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492703011",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492703294"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492703294"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Should I file a ticket for the work?",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T12:45:43Z",
            "diff_hunk": "@@ -1973,32 +1973,34 @@ def coerce_to(self, dst_type, env):\n     def declare_from_annotation(self, env, as_target=False):\n         \"\"\"Implements PEP 526 annotation typing in a fairly relaxed way.\n \n-        Annotations are ignored for global variables, Python class attributes and already declared variables.\n+        Annotations are ignored for global variables and already declared variables.\n         String literals are allowed and ignored.\n         The ambiguous Python types 'int' and 'long' are ignored and the 'cython.int' form must be used instead.\n         \"\"\"\n-        if not env.directives['annotation_typing']:\n-            return\n-        if env.is_module_scope or env.is_py_class_scope:\n-            # annotations never create global cdef names and Python classes don't support them anyway\n-            return\n         name = self.name\n-        if self.entry or env.lookup_here(name) is not None:\n-            # already declared => ignore annotation\n-            return\n-\n         annotation = self.annotation\n-        if annotation.expr.is_string_literal:\n-            # name: \"description\" => not a type, but still a declared variable or attribute\n-            atype = None\n-        else:\n-            _, atype = annotation.analyse_type_annotation(env)\n-        if atype is None:\n-            atype = unspecified_type if as_target and env.directives['infer_types'] != False else py_object_type\n-        if atype.is_fused and env.fused_to_specific:\n-            atype = atype.specialize(env.fused_to_specific)\n-        self.entry = env.declare_var(name, atype, self.pos, is_cdef=not as_target)\n-        self.entry.annotation = annotation.expr\n+        entry = self.entry or env.lookup_here(name)\n+        if not entry:\n+            # annotations never create global cdef names\n+            if env.is_module_scope:",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492703294",
            "id": 492703294,
            "in_reply_to_id": 492525932,
            "line": 1989,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcwMzI5NA==",
            "original_commit_id": "c9f34a13e719591b667848df0709c3da652e1b2d",
            "original_line": 1989,
            "original_position": 43,
            "original_start_line": 1984,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 56,
            "pull_request_review_id": 493419284,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492703294/reactions"
            },
            "side": "RIGHT",
            "start_line": 1988,
            "start_side": "RIGHT",
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492703294",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492704816"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492704816"
                }
            },
            "author_association": "MEMBER",
            "body": "Sure, so that we don't forget about it if it's not getting done right away.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T12:47:58Z",
            "diff_hunk": "@@ -1973,32 +1973,34 @@ def coerce_to(self, dst_type, env):\n     def declare_from_annotation(self, env, as_target=False):\n         \"\"\"Implements PEP 526 annotation typing in a fairly relaxed way.\n \n-        Annotations are ignored for global variables, Python class attributes and already declared variables.\n+        Annotations are ignored for global variables and already declared variables.\n         String literals are allowed and ignored.\n         The ambiguous Python types 'int' and 'long' are ignored and the 'cython.int' form must be used instead.\n         \"\"\"\n-        if not env.directives['annotation_typing']:\n-            return\n-        if env.is_module_scope or env.is_py_class_scope:\n-            # annotations never create global cdef names and Python classes don't support them anyway\n-            return\n         name = self.name\n-        if self.entry or env.lookup_here(name) is not None:\n-            # already declared => ignore annotation\n-            return\n-\n         annotation = self.annotation\n-        if annotation.expr.is_string_literal:\n-            # name: \"description\" => not a type, but still a declared variable or attribute\n-            atype = None\n-        else:\n-            _, atype = annotation.analyse_type_annotation(env)\n-        if atype is None:\n-            atype = unspecified_type if as_target and env.directives['infer_types'] != False else py_object_type\n-        if atype.is_fused and env.fused_to_specific:\n-            atype = atype.specialize(env.fused_to_specific)\n-        self.entry = env.declare_var(name, atype, self.pos, is_cdef=not as_target)\n-        self.entry.annotation = annotation.expr\n+        entry = self.entry or env.lookup_here(name)\n+        if not entry:\n+            # annotations never create global cdef names\n+            if env.is_module_scope:",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492704816",
            "id": 492704816,
            "in_reply_to_id": 492525932,
            "line": 1989,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcwNDgxNg==",
            "original_commit_id": "c9f34a13e719591b667848df0709c3da652e1b2d",
            "original_line": 1989,
            "original_position": 43,
            "original_start_line": 1984,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 56,
            "pull_request_review_id": 493421186,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492704816/reactions"
            },
            "side": "RIGHT",
            "start_line": 1988,
            "start_side": "RIGHT",
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492704816",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492706093"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492706093"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@scoder it appears that CPython supports custom namespaces for the annotations dict - how would we proceed with this in the compiler? Or is this a feature we should punt on?",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T12:49:58Z",
            "diff_hunk": "@@ -487,7 +486,6 @@ class Cbad2(C):\n                 x: int\n                 x.y: list = []\n \n-    @skip(\"Class annotations not implemented\")\n     def test_var_annot_metaclass_semantics(self):\n         class CMeta(type):\n             @classmethod",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492706093",
            "id": 492706093,
            "line": 492,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcwNjA5Mw==",
            "original_commit_id": "5afc45330f9742e05ff804cc432653da7dfbc59d",
            "original_line": 492,
            "original_position": 17,
            "original_start_line": null,
            "path": "tests/run/test_grammar.py",
            "position": 18,
            "pull_request_review_id": 493422866,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492706093/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492706093",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492710825"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492710825"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm. Well, to implement this correctly, we'd really have to initialise `\"__annotations__\"` (with an empty dict) at the start, and then look it up each time we see an annotated variable in the code and update whatever mapping we have then. That's a bit more complex than what we have now (although it would certainly use the same infrastructure).\r\n\r\nI'd be happy to get the main feature working and merged, and then look at more details later. This can be changed incrementally, if someone feels like doing it.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T12:57:03Z",
            "diff_hunk": "@@ -487,7 +486,6 @@ class Cbad2(C):\n                 x: int\n                 x.y: list = []\n \n-    @skip(\"Class annotations not implemented\")\n     def test_var_annot_metaclass_semantics(self):\n         class CMeta(type):\n             @classmethod",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492710825",
            "id": 492710825,
            "in_reply_to_id": 492706093,
            "line": 492,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcxMDgyNQ==",
            "original_commit_id": "5afc45330f9742e05ff804cc432653da7dfbc59d",
            "original_line": 492,
            "original_position": 17,
            "original_start_line": null,
            "path": "tests/run/test_grammar.py",
            "position": 18,
            "pull_request_review_id": 493429071,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492710825/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492710825",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492716131"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492716131"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "https://github.com/cython/cython/issues/3838",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T13:04:52Z",
            "diff_hunk": "@@ -1973,32 +1973,34 @@ def coerce_to(self, dst_type, env):\n     def declare_from_annotation(self, env, as_target=False):\n         \"\"\"Implements PEP 526 annotation typing in a fairly relaxed way.\n \n-        Annotations are ignored for global variables, Python class attributes and already declared variables.\n+        Annotations are ignored for global variables and already declared variables.\n         String literals are allowed and ignored.\n         The ambiguous Python types 'int' and 'long' are ignored and the 'cython.int' form must be used instead.\n         \"\"\"\n-        if not env.directives['annotation_typing']:\n-            return\n-        if env.is_module_scope or env.is_py_class_scope:\n-            # annotations never create global cdef names and Python classes don't support them anyway\n-            return\n         name = self.name\n-        if self.entry or env.lookup_here(name) is not None:\n-            # already declared => ignore annotation\n-            return\n-\n         annotation = self.annotation\n-        if annotation.expr.is_string_literal:\n-            # name: \"description\" => not a type, but still a declared variable or attribute\n-            atype = None\n-        else:\n-            _, atype = annotation.analyse_type_annotation(env)\n-        if atype is None:\n-            atype = unspecified_type if as_target and env.directives['infer_types'] != False else py_object_type\n-        if atype.is_fused and env.fused_to_specific:\n-            atype = atype.specialize(env.fused_to_specific)\n-        self.entry = env.declare_var(name, atype, self.pos, is_cdef=not as_target)\n-        self.entry.annotation = annotation.expr\n+        entry = self.entry or env.lookup_here(name)\n+        if not entry:\n+            # annotations never create global cdef names\n+            if env.is_module_scope:",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492716131",
            "id": 492716131,
            "in_reply_to_id": 492525932,
            "line": 1989,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcxNjEzMQ==",
            "original_commit_id": "c9f34a13e719591b667848df0709c3da652e1b2d",
            "original_line": 1989,
            "original_position": 43,
            "original_start_line": 1984,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 56,
            "pull_request_review_id": 493436113,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492716131/reactions"
            },
            "side": "RIGHT",
            "start_line": 1988,
            "start_side": "RIGHT",
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492716131",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492718507"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492718507"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Thinking more on this - if we move this logic to `StatListNode`, it will pave the way for re-using this logic for module-scoped annotations with very minimal effort, since they both follow similar chains. Theoretically all we'd need to do then is get rid of the module scope bail out in `NameNode.declare_from_annotation()` and update the branch in `StatListNode.analyse_declarations()` to run on a module scope as well.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T13:08:23Z",
            "diff_hunk": "@@ -4852,6 +4853,8 @@ def analyse_declarations(self, env):\n         if self.doc_node:\n             self.doc_node.analyse_target_declaration(cenv)\n         self.body.analyse_declarations(cenv)\n+        if hasattr(self.class_result, \"analyse_class_annotations\"):",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492718507",
            "id": 492718507,
            "in_reply_to_id": 491799364,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcxODUwNw==",
            "original_commit_id": "ba20426646a6e7e5a0e89f616b04c916092446c9",
            "original_line": 4856,
            "original_position": 12,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 493439272,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492718507/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492718507",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492719283"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492719283"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Sounds good - I'll re-add the skip with an updated comment and create a ticket for the work.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T13:09:32Z",
            "diff_hunk": "@@ -487,7 +486,6 @@ class Cbad2(C):\n                 x: int\n                 x.y: list = []\n \n-    @skip(\"Class annotations not implemented\")\n     def test_var_annot_metaclass_semantics(self):\n         class CMeta(type):\n             @classmethod",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492719283",
            "id": 492719283,
            "in_reply_to_id": 492706093,
            "line": 492,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcxOTI4Mw==",
            "original_commit_id": "5afc45330f9742e05ff804cc432653da7dfbc59d",
            "original_line": 492,
            "original_position": 17,
            "original_start_line": null,
            "path": "tests/run/test_grammar.py",
            "position": 18,
            "pull_request_review_id": 493440406,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492719283/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492719283",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492729196"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492729196"
                }
            },
            "author_association": "MEMBER",
            "body": "… except that statement nodes can be wrapped in all sorts of other nodes, not just lined up in a `StatListNode`. No, I think in the end, we'll have to let the nodes with annotations inject themselves into the dict along the way of their execution.\r\n\r\nWe'll also have to make this work at some point:\r\n```pycon\r\n>>> class C:\r\n...   del __annotations__\r\n...   a: int = 5\r\n... \r\n>>> C\r\n<class '__main__.C'>\r\n>>> C.a\r\n5\r\n>>> C.__annotations__\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: type object 'C' has no attribute '__annotations__'\r\n```",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T13:23:24Z",
            "diff_hunk": "@@ -4852,6 +4853,8 @@ def analyse_declarations(self, env):\n         if self.doc_node:\n             self.doc_node.analyse_target_declaration(cenv)\n         self.body.analyse_declarations(cenv)\n+        if hasattr(self.class_result, \"analyse_class_annotations\"):",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492729196",
            "id": 492729196,
            "in_reply_to_id": 491799364,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcyOTE5Ng==",
            "original_commit_id": "ba20426646a6e7e5a0e89f616b04c916092446c9",
            "original_line": 4856,
            "original_position": 12,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 493453703,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492729196/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492729196",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492745825"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492745825"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I've added a new issue to address this behavior and others, such as the custom namespace object: #3839",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T13:45:10Z",
            "diff_hunk": "@@ -4852,6 +4853,8 @@ def analyse_declarations(self, env):\n         if self.doc_node:\n             self.doc_node.analyse_target_declaration(cenv)\n         self.body.analyse_declarations(cenv)\n+        if hasattr(self.class_result, \"analyse_class_annotations\"):",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492745825",
            "id": 492745825,
            "in_reply_to_id": 491799364,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc0NTgyNQ==",
            "original_commit_id": "ba20426646a6e7e5a0e89f616b04c916092446c9",
            "original_line": 4856,
            "original_position": 12,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 493475394,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492745825/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492745825",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492746015"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492746015"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Covered in #3839",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T13:45:23Z",
            "diff_hunk": "@@ -487,7 +486,6 @@ class Cbad2(C):\n                 x: int\n                 x.y: list = []\n \n-    @skip(\"Class annotations not implemented\")\n     def test_var_annot_metaclass_semantics(self):\n         class CMeta(type):\n             @classmethod",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492746015",
            "id": 492746015,
            "in_reply_to_id": 492706093,
            "line": 492,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc0NjAxNQ==",
            "original_commit_id": "5afc45330f9742e05ff804cc432653da7dfbc59d",
            "original_line": 492,
            "original_position": 17,
            "original_start_line": null,
            "path": "tests/run/test_grammar.py",
            "position": 18,
            "pull_request_review_id": 493475641,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492746015/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492746015",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492751584"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492751584"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "As a safety measure, I added a no-op `analyse_annotations()` to `ClassNode` so that this check is no longer necessary.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T13:52:29Z",
            "diff_hunk": "@@ -4852,6 +4853,8 @@ def analyse_declarations(self, env):\n         if self.doc_node:\n             self.doc_node.analyse_target_declaration(cenv)\n         self.body.analyse_declarations(cenv)\n+        if hasattr(self.class_result, \"analyse_class_annotations\"):",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492751584",
            "id": 492751584,
            "in_reply_to_id": 491799364,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc1MTU4NA==",
            "original_commit_id": "ba20426646a6e7e5a0e89f616b04c916092446c9",
            "original_line": 4856,
            "original_position": 12,
            "original_start_line": null,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 493482989,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492751584/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492751584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r492751933"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/492751933"
                }
            },
            "author_association": "MEMBER",
            "body": "Better be explicit about what we're referring to.\r\n```suggestion\r\n    @skip(\"Not currently supported: https://github.com/cython/cython/issues/3839\")\r\n```",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-22T13:52:54Z",
            "diff_hunk": "@@ -486,6 +486,7 @@ class Cbad2(C):\n                 x: int\n                 x.y: list = []\n \n+    @skip(\"Not currently supported: #3839\")",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r492751933",
            "id": 492751933,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc1MTkzMw==",
            "original_commit_id": "b956f3271bab351bc022ea8a9a1d62bb93151cf0",
            "original_line": 489,
            "original_position": 4,
            "original_start_line": null,
            "path": "tests/run/test_grammar.py",
            "position": null,
            "pull_request_review_id": 493483461,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/492751933/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/492751933",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r495113836"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/495113836"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm pretty sure `uint32` (variable name, not a string) could be a valid annotation that probably shouldn't be transformed into `int32`.\r\n\r\nMy view is that we shouldn't try to special-case this here. This all goes away in the medium future when Python 2 support is dropped. It'd probably be possible to express the tests as an equality test with `eval` (e.g. `>>> eval(some_annotation) == \"string of some sort\")` should evaluate as `True`).",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-25T16:53:26Z",
            "diff_hunk": "@@ -13749,8 +13785,15 @@ def __init__(self, pos, expr, string=None):\n         if string is None:\n             # import doesn't work at top of file?\n             from .AutoDocTransforms import AnnotationWriter\n-            string = StringEncoding.EncodedString(\n-                AnnotationWriter(description=\"annotation\").write(expr))\n+            strval = AnnotationWriter(description=\"annotation\").write(expr)\n+            # For annotations which are already string literals, remove `u` prefix,\n+            # since we're re-casting as a string and the result will be mangled\n+            # (\"u'foo'\" instead of \"'foo'\")\n+            # While still strictly compatible, this is not the same observed behavior\n+            # as CPython in this instance.\n+            if strval[0] == \"u\":",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r495113836",
            "id": 495113836,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTExMzgzNg==",
            "original_commit_id": "bbfa886cc223de61002e33f3cc6a16edecdd42f1",
            "original_line": 13794,
            "original_position": 125,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 496589327,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/495113836/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/495113836",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r495429394"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/495429394"
                }
            },
            "author_association": "MEMBER",
            "body": "\"pairs\" reads to me like we're collecting tuples here. \"dict_items\" might be a better name.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-26T07:55:51Z",
            "diff_hunk": "@@ -9107,6 +9117,32 @@ def may_be_none(self):\n \n     gil_message = \"Constructing Python class\"\n \n+    def analyse_annotations(self, env):\n+        from .AutoDocTransforms import AnnotationWriter\n+        position = self.class_def_node.pos\n+        pairs = []",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r495429394",
            "id": 495429394,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyOTM5NA==",
            "original_commit_id": "bbfa886cc223de61002e33f3cc6a16edecdd42f1",
            "original_line": 9123,
            "original_position": 87,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 496951121,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/495429394/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/495429394",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r495429797"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/495429797"
                }
            },
            "author_association": "MEMBER",
            "body": "Note this does not handle `u\"…`. I've changed the `AnnotationWriter` in `master` to handle this internally, so that we do not need this brittle fix-up here.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-26T08:01:16Z",
            "diff_hunk": "@@ -9107,6 +9117,32 @@ def may_be_none(self):\n \n     gil_message = \"Constructing Python class\"\n \n+    def analyse_annotations(self, env):\n+        from .AutoDocTransforms import AnnotationWriter\n+        position = self.class_def_node.pos\n+        pairs = []\n+        for entry in (e for e in env.entries.values() if e.annotation):\n+            strval = AnnotationWriter().write(entry.annotation)\n+            # The writer will pre-pend a `u` for writing strings,\n+            # but that results in a mangled string when annotations themselves are strings\n+            # (\"u'foo'\" instead of \"'foo'\")\n+            if entry.annotation.is_string_literal and strval[0:2] == \"u'\":",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r495429797",
            "id": 495429797,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyOTc5Nw==",
            "original_commit_id": "bbfa886cc223de61002e33f3cc6a16edecdd42f1",
            "original_line": 9129,
            "original_position": 93,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 496951121,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/495429797/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/495429797",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r495432074"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/495432074"
                }
            },
            "author_association": "MEMBER",
            "body": "Just merge `master` and remove this special case.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-26T08:29:58Z",
            "diff_hunk": "@@ -13749,8 +13785,15 @@ def __init__(self, pos, expr, string=None):\n         if string is None:\n             # import doesn't work at top of file?\n             from .AutoDocTransforms import AnnotationWriter\n-            string = StringEncoding.EncodedString(\n-                AnnotationWriter(description=\"annotation\").write(expr))\n+            strval = AnnotationWriter(description=\"annotation\").write(expr)\n+            # For annotations which are already string literals, remove `u` prefix,\n+            # since we're re-casting as a string and the result will be mangled\n+            # (\"u'foo'\" instead of \"'foo'\")\n+            # While still strictly compatible, this is not the same observed behavior\n+            # as CPython in this instance.\n+            if strval[0] == \"u\":",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r495432074",
            "id": 495432074,
            "in_reply_to_id": 495113836,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQzMjA3NA==",
            "original_commit_id": "bbfa886cc223de61002e33f3cc6a16edecdd42f1",
            "original_line": 13794,
            "original_position": 125,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 496951121,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/495432074/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/495432074",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r495432634"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/495432634"
                }
            },
            "author_association": "MEMBER",
            "body": "A `try-except` would make this work in Py<3.5 as well.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-26T08:36:50Z",
            "diff_hunk": "@@ -0,0 +1,45 @@\n+# cython: language_level=3\n+# mode: run\n+# tag: pure3.7, pep526, pep484\n+\n+from __future__ import annotations\n+\n+\n+from typing import ClassVar",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r495432634",
            "id": 495432634,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQzMjYzNA==",
            "original_commit_id": "bbfa886cc223de61002e33f3cc6a16edecdd42f1",
            "original_line": 8,
            "original_position": 8,
            "original_start_line": null,
            "path": "tests/run/pyclass_annotations_pep526.py",
            "position": null,
            "pull_request_review_id": 496957076,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/495432634/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/495432634",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r495460846"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/495460846"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Wasn't sure how we felt about that - is the eventual goal to drop support of Py<3.5 alongside dropping Py2?",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-26T14:15:26Z",
            "diff_hunk": "@@ -0,0 +1,45 @@\n+# cython: language_level=3\n+# mode: run\n+# tag: pure3.7, pep526, pep484\n+\n+from __future__ import annotations\n+\n+\n+from typing import ClassVar",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r495460846",
            "id": 495460846,
            "in_reply_to_id": 495432634,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ2MDg0Ng==",
            "original_commit_id": "bbfa886cc223de61002e33f3cc6a16edecdd42f1",
            "original_line": 8,
            "original_position": 8,
            "original_start_line": null,
            "path": "tests/run/pyclass_annotations_pep526.py",
            "position": null,
            "pull_request_review_id": 497007506,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/495460846/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/495460846",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r495460903"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/495460903"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done - thanks!",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-26T14:16:04Z",
            "diff_hunk": "@@ -13749,8 +13785,15 @@ def __init__(self, pos, expr, string=None):\n         if string is None:\n             # import doesn't work at top of file?\n             from .AutoDocTransforms import AnnotationWriter\n-            string = StringEncoding.EncodedString(\n-                AnnotationWriter(description=\"annotation\").write(expr))\n+            strval = AnnotationWriter(description=\"annotation\").write(expr)\n+            # For annotations which are already string literals, remove `u` prefix,\n+            # since we're re-casting as a string and the result will be mangled\n+            # (\"u'foo'\" instead of \"'foo'\")\n+            # While still strictly compatible, this is not the same observed behavior\n+            # as CPython in this instance.\n+            if strval[0] == \"u\":",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r495460903",
            "id": 495460903,
            "in_reply_to_id": 495113836,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ2MDkwMw==",
            "original_commit_id": "bbfa886cc223de61002e33f3cc6a16edecdd42f1",
            "original_line": 13794,
            "original_position": 125,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 497007545,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/495460903/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/495460903",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r495460932"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/495460932"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Agreed - I've made this update.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-26T14:16:29Z",
            "diff_hunk": "@@ -9107,6 +9117,32 @@ def may_be_none(self):\n \n     gil_message = \"Constructing Python class\"\n \n+    def analyse_annotations(self, env):\n+        from .AutoDocTransforms import AnnotationWriter\n+        position = self.class_def_node.pos\n+        pairs = []",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r495460932",
            "id": 495460932,
            "in_reply_to_id": 495429394,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ2MDkzMg==",
            "original_commit_id": "bbfa886cc223de61002e33f3cc6a16edecdd42f1",
            "original_line": 9123,
            "original_position": 87,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 497007565,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/495460932/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/495460932",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r495481569"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/495481569"
                }
            },
            "author_association": "MEMBER",
            "body": "I just meant this line, not the whole class. It should work without the import, shouldn't it?\r\n\r\nI just noticed that the other test file that you changed does this:\r\n```python\r\nfrom typing import Dict, List, TypeVar, Optional, Generic, Tuple\r\ntry:\r\n    from typing import ClassVar\r\nexcept ImportError:\r\n    ClassVar = Optional  # fake it in Py3.5\r\n```\r\nThat should work here as well.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-26T18:14:25Z",
            "diff_hunk": "@@ -0,0 +1,45 @@\n+# cython: language_level=3\n+# mode: run\n+# tag: pure3.7, pep526, pep484\n+\n+from __future__ import annotations\n+\n+try:\n+    from typing import ClassVar",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r495481569",
            "id": 495481569,
            "line": 8,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MTU2OQ==",
            "original_commit_id": "6bfb44dbf752c15898d92bb2fcfdb5c3c4eef2bc",
            "original_line": 8,
            "original_position": 8,
            "original_start_line": 7,
            "path": "tests/run/pyclass_annotations_pep526.py",
            "position": 8,
            "pull_request_review_id": 497021958,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/495481569/reactions"
            },
            "side": "RIGHT",
            "start_line": 7,
            "start_side": "RIGHT",
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/495481569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r495482112"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/495482112"
                }
            },
            "author_association": "MEMBER",
            "body": "I changed it in `master` to store the `AnnotationNode` in `entry.annotation` instead of the bare expression. That provides a more versatile reference and avoids the duplicate string serialisation here (because that's already available as `entry.annotation.string` then).",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-26T18:20:47Z",
            "diff_hunk": "@@ -1973,32 +1976,39 @@ def coerce_to(self, dst_type, env):\n     def declare_from_annotation(self, env, as_target=False):\n         \"\"\"Implements PEP 526 annotation typing in a fairly relaxed way.\n \n-        Annotations are ignored for global variables, Python class attributes and already declared variables.\n+        Annotations are ignored for global variables and already declared variables.\n         String literals are allowed and ignored.\n         The ambiguous Python types 'int' and 'long' are ignored and the 'cython.int' form must be used instead.\n         \"\"\"\n-        if not env.directives['annotation_typing']:\n-            return\n-        if env.is_module_scope or env.is_py_class_scope:\n-            # annotations never create global cdef names and Python classes don't support them anyway\n-            return\n         name = self.name\n-        if self.entry or env.lookup_here(name) is not None:\n-            # already declared => ignore annotation\n-            return\n-\n         annotation = self.annotation\n-        if annotation.expr.is_string_literal:\n-            # name: \"description\" => not a type, but still a declared variable or attribute\n-            atype = None\n-        else:\n-            _, atype = annotation.analyse_type_annotation(env)\n-        if atype is None:\n-            atype = unspecified_type if as_target and env.directives['infer_types'] != False else py_object_type\n-        if atype.is_fused and env.fused_to_specific:\n-            atype = atype.specialize(env.fused_to_specific)\n-        self.entry = env.declare_var(name, atype, self.pos, is_cdef=not as_target)\n-        self.entry.annotation = annotation.expr\n+        entry = self.entry or env.lookup_here(name)\n+        if not entry:\n+            # annotations never create global cdef names\n+            if env.is_module_scope:\n+                return\n+            if (\n+                # name: \"description\" => not a type, but still a declared variable or attribute\n+                annotation.expr.is_string_literal\n+                # don't do type analysis from annotations if not asked to, but still collect the annotation\n+                or not env.directives['annotation_typing']\n+            ):\n+                atype = None\n+            else:\n+                _, atype = annotation.analyse_type_annotation(env)\n+            if atype is None:\n+                atype = unspecified_type if as_target and env.directives['infer_types'] != False else py_object_type\n+            if atype.is_fused and env.fused_to_specific:\n+                atype = atype.specialize(env.fused_to_specific)\n+            entry = self.entry = env.declare_var(name, atype, self.pos, is_cdef=not as_target)\n+        # Even if the entry already exists, make sure we're supplying an annotation if we can.\n+        if annotation and not entry.annotation:\n+            # FIXME: Optimization code expects an entry's annotation to be the raw expression,",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r495482112",
            "id": 495482112,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MjExMg==",
            "original_commit_id": "6bfb44dbf752c15898d92bb2fcfdb5c3c4eef2bc",
            "original_line": 2006,
            "original_position": 71,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 497021958,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/495482112/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/495482112",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r495483307"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/495483307"
                }
            },
            "author_association": "MEMBER",
            "body": "Latest `master` simplifies this to:\r\n```suggestion\r\n        position = self.class_def_node.pos\r\n        dict_items = []\r\n        for entry in (e for e in env.entries.values() if e.annotation):\r\n            strval = entry.annotation.string\r\n```",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-26T18:35:45Z",
            "diff_hunk": "@@ -9107,6 +9120,27 @@ def may_be_none(self):\n \n     gil_message = \"Constructing Python class\"\n \n+    def analyse_annotations(self, env):\n+        from .AutoDocTransforms import AnnotationWriter\n+        position = self.class_def_node.pos\n+        dict_items = []\n+        for entry in (e for e in env.entries.values() if e.annotation):\n+            strval = AnnotationWriter().write(entry.annotation)",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r495483307",
            "id": 495483307,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MzMwNw==",
            "original_commit_id": "6bfb44dbf752c15898d92bb2fcfdb5c3c4eef2bc",
            "original_line": 9128,
            "original_position": 99,
            "original_start_line": 9124,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 497021958,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/495483307/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/495483307",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r495485041"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/495485041"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Great! I looked into making the change myself but wasn't familiar enough with the call chains to understand the repercussions.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-26T18:56:27Z",
            "diff_hunk": "@@ -1973,32 +1976,39 @@ def coerce_to(self, dst_type, env):\n     def declare_from_annotation(self, env, as_target=False):\n         \"\"\"Implements PEP 526 annotation typing in a fairly relaxed way.\n \n-        Annotations are ignored for global variables, Python class attributes and already declared variables.\n+        Annotations are ignored for global variables and already declared variables.\n         String literals are allowed and ignored.\n         The ambiguous Python types 'int' and 'long' are ignored and the 'cython.int' form must be used instead.\n         \"\"\"\n-        if not env.directives['annotation_typing']:\n-            return\n-        if env.is_module_scope or env.is_py_class_scope:\n-            # annotations never create global cdef names and Python classes don't support them anyway\n-            return\n         name = self.name\n-        if self.entry or env.lookup_here(name) is not None:\n-            # already declared => ignore annotation\n-            return\n-\n         annotation = self.annotation\n-        if annotation.expr.is_string_literal:\n-            # name: \"description\" => not a type, but still a declared variable or attribute\n-            atype = None\n-        else:\n-            _, atype = annotation.analyse_type_annotation(env)\n-        if atype is None:\n-            atype = unspecified_type if as_target and env.directives['infer_types'] != False else py_object_type\n-        if atype.is_fused and env.fused_to_specific:\n-            atype = atype.specialize(env.fused_to_specific)\n-        self.entry = env.declare_var(name, atype, self.pos, is_cdef=not as_target)\n-        self.entry.annotation = annotation.expr\n+        entry = self.entry or env.lookup_here(name)\n+        if not entry:\n+            # annotations never create global cdef names\n+            if env.is_module_scope:\n+                return\n+            if (\n+                # name: \"description\" => not a type, but still a declared variable or attribute\n+                annotation.expr.is_string_literal\n+                # don't do type analysis from annotations if not asked to, but still collect the annotation\n+                or not env.directives['annotation_typing']\n+            ):\n+                atype = None\n+            else:\n+                _, atype = annotation.analyse_type_annotation(env)\n+            if atype is None:\n+                atype = unspecified_type if as_target and env.directives['infer_types'] != False else py_object_type\n+            if atype.is_fused and env.fused_to_specific:\n+                atype = atype.specialize(env.fused_to_specific)\n+            entry = self.entry = env.declare_var(name, atype, self.pos, is_cdef=not as_target)\n+        # Even if the entry already exists, make sure we're supplying an annotation if we can.\n+        if annotation and not entry.annotation:\n+            # FIXME: Optimization code expects an entry's annotation to be the raw expression,",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r495485041",
            "id": 495485041,
            "in_reply_to_id": 495482112,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NTA0MQ==",
            "original_commit_id": "6bfb44dbf752c15898d92bb2fcfdb5c3c4eef2bc",
            "original_line": 2006,
            "original_position": 71,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 497024353,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/495485041/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/495485041",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r495487058"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/495487058"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done.",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-26T19:20:37Z",
            "diff_hunk": "@@ -0,0 +1,45 @@\n+# cython: language_level=3\n+# mode: run\n+# tag: pure3.7, pep526, pep484\n+\n+from __future__ import annotations\n+\n+try:\n+    from typing import ClassVar",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r495487058",
            "id": 495487058,
            "in_reply_to_id": 495481569,
            "line": 8,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NzA1OA==",
            "original_commit_id": "6bfb44dbf752c15898d92bb2fcfdb5c3c4eef2bc",
            "original_line": 8,
            "original_position": 8,
            "original_start_line": 7,
            "path": "tests/run/pyclass_annotations_pep526.py",
            "position": 8,
            "pull_request_review_id": 497025755,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/495487058/reactions"
            },
            "side": "RIGHT",
            "start_line": 7,
            "start_side": "RIGHT",
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/495487058",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3829#discussion_r496100119"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3829"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/496100119"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think the last bit works (`defaultdict[int]`), but I also don't think we have to bend it so much. Isn't this enough?\r\n```suggestion\r\ntry:\r\n    from typing import ClassVar\r\nexcept ImportError:  # Py<=3.5\r\n    ClassVar = {int: int}\r\n```\r\nActually, even `ClassVar = None` would probably work, but IDEs might be unhappy about it, so…",
            "commit_id": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "created_at": "2020-09-28T16:59:37Z",
            "diff_hunk": "@@ -0,0 +1,50 @@\n+# cython: language_level=3\n+# mode: run\n+# tag: pure3.7, pep526, pep484\n+\n+from __future__ import annotations\n+\n+try:\n+    from typing import ClassVar\n+except ImportError:  # Py3.5\n+    try:\n+        from typing import Optional as ClassVar  # Good enough for jazz.\n+    except ImportError:   # Py<=3.4\n+        from collections import defaultdict as ClassVar  # Now we're hacking!",
            "html_url": "https://github.com/cython/cython/pull/3829#discussion_r496100119",
            "id": 496100119,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEwMDExOQ==",
            "original_commit_id": "bad1b4299c58f4c4f0658bba81a4a6079d5560f3",
            "original_line": 13,
            "original_position": 13,
            "original_start_line": 7,
            "path": "tests/run/pyclass_annotations_pep526.py",
            "position": null,
            "pull_request_review_id": 497727451,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3829",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/496100119/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-09-28T17:19:38Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/496100119",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3829/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9b5e0f291bd96d1df0adfcf77fb0b569d9696a64/comments",
            "commit": {
                "author": {
                    "date": "2020-09-23T00:14:14Z",
                    "email": "sean_stewart@me.com",
                    "name": "Sean Stewart"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-09-26T19:01:55Z",
                    "email": "sean_stewart@me.com",
                    "name": "Sean Stewart"
                },
                "message": "Add no-op `analyse_annotations` to ExprNodes.",
                "tree": {
                    "sha": "62924e5d0a4c573ce72691541a81bf0239c48d20",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/62924e5d0a4c573ce72691541a81bf0239c48d20"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9b5e0f291bd96d1df0adfcf77fb0b569d9696a64",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            },
            "html_url": "https://github.com/cython/cython/commit/9b5e0f291bd96d1df0adfcf77fb0b569d9696a64",
            "node_id": "MDY6Q29tbWl0Mjk1NzI2NzIxOjliNWUwZjI5MWJkOTZkMWRmMGFkZmNmNzdmYjBiNTY5ZDk2OTZhNjQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/af1300f7655b2ccdf6308d9c9fb839d7083782e9",
                    "sha": "af1300f7655b2ccdf6308d9c9fb839d7083782e9",
                    "url": "https://api.github.com/repos/cython/cython/commits/af1300f7655b2ccdf6308d9c9fb839d7083782e9"
                }
            ],
            "sha": "9b5e0f291bd96d1df0adfcf77fb0b569d9696a64",
            "url": "https://api.github.com/repos/cython/cython/commits/9b5e0f291bd96d1df0adfcf77fb0b569d9696a64"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8cd2c62c935fb9de07398422a078b7831448116d/comments",
            "commit": {
                "author": {
                    "date": "2020-09-26T14:12:23Z",
                    "email": "sean_stewart@me.com",
                    "name": "Sean Stewart"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-09-26T19:19:40Z",
                    "email": "sean_stewart@me.com",
                    "name": "Sean Stewart"
                },
                "message": "Add support for PEP 526 `__annotations__` in class body.",
                "tree": {
                    "sha": "ffa993e05b2cceac1b62695b41af9f03c4fcecdc",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ffa993e05b2cceac1b62695b41af9f03c4fcecdc"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8cd2c62c935fb9de07398422a078b7831448116d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            },
            "html_url": "https://github.com/cython/cython/commit/8cd2c62c935fb9de07398422a078b7831448116d",
            "node_id": "MDY6Q29tbWl0Mjk1NzI2NzIxOjhjZDJjNjJjOTM1ZmI5ZGUwNzM5ODQyMmEwNzhiNzgzMTQ0ODExNmQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9b5e0f291bd96d1df0adfcf77fb0b569d9696a64",
                    "sha": "9b5e0f291bd96d1df0adfcf77fb0b569d9696a64",
                    "url": "https://api.github.com/repos/cython/cython/commits/9b5e0f291bd96d1df0adfcf77fb0b569d9696a64"
                }
            ],
            "sha": "8cd2c62c935fb9de07398422a078b7831448116d",
            "url": "https://api.github.com/repos/cython/cython/commits/8cd2c62c935fb9de07398422a078b7831448116d"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9dae5dab2648955ef767a15e9e48d472ee125a24/comments",
            "commit": {
                "author": {
                    "date": "2020-09-26T14:12:51Z",
                    "email": "sean_stewart@me.com",
                    "name": "Sean Stewart"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-09-26T19:19:41Z",
                    "email": "sean_stewart@me.com",
                    "name": "Sean Stewart"
                },
                "message": "Activate grammar tests for class annotations.",
                "tree": {
                    "sha": "258e00dbfde2a81a4aa695894e08d510c6def0f6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/258e00dbfde2a81a4aa695894e08d510c6def0f6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9dae5dab2648955ef767a15e9e48d472ee125a24",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            },
            "html_url": "https://github.com/cython/cython/commit/9dae5dab2648955ef767a15e9e48d472ee125a24",
            "node_id": "MDY6Q29tbWl0Mjk1NzI2NzIxOjlkYWU1ZGFiMjY0ODk1NWVmNzY3YTE1ZTllNDhkNDcyZWUxMjVhMjQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8cd2c62c935fb9de07398422a078b7831448116d",
                    "sha": "8cd2c62c935fb9de07398422a078b7831448116d",
                    "url": "https://api.github.com/repos/cython/cython/commits/8cd2c62c935fb9de07398422a078b7831448116d"
                }
            ],
            "sha": "9dae5dab2648955ef767a15e9e48d472ee125a24",
            "url": "https://api.github.com/repos/cython/cython/commits/9dae5dab2648955ef767a15e9e48d472ee125a24"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5ba2565631d7256a1194502918310441b95f8752/comments",
            "commit": {
                "author": {
                    "date": "2020-09-26T14:13:17Z",
                    "email": "sean_stewart@me.com",
                    "name": "Sean Stewart"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-09-27T12:13:13Z",
                    "email": "sean_stewart@me.com",
                    "name": "Sean Stewart"
                },
                "message": "Add tests for pep526 class __annotations__.",
                "tree": {
                    "sha": "cbb1b030acca856b1ee0fcc20bb1e6f19074d4c9",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/cbb1b030acca856b1ee0fcc20bb1e6f19074d4c9"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5ba2565631d7256a1194502918310441b95f8752",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            },
            "html_url": "https://github.com/cython/cython/commit/5ba2565631d7256a1194502918310441b95f8752",
            "node_id": "MDY6Q29tbWl0Mjk1NzI2NzIxOjViYTI1NjU2MzFkNzI1NmExMTk0NTAyOTE4MzEwNDQxYjk1Zjg3NTI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9dae5dab2648955ef767a15e9e48d472ee125a24",
                    "sha": "9dae5dab2648955ef767a15e9e48d472ee125a24",
                    "url": "https://api.github.com/repos/cython/cython/commits/9dae5dab2648955ef767a15e9e48d472ee125a24"
                }
            ],
            "sha": "5ba2565631d7256a1194502918310441b95f8752",
            "url": "https://api.github.com/repos/cython/cython/commits/5ba2565631d7256a1194502918310441b95f8752"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1dae21b561ca101166774e386e347b247788fed1/comments",
            "commit": {
                "author": {
                    "date": "2020-09-22T14:05:57Z",
                    "email": "sean_stewart@me.com",
                    "name": "Sean Stewart"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-09-27T12:13:14Z",
                    "email": "sean_stewart@me.com",
                    "name": "Sean Stewart"
                },
                "message": "Skip unsupported grammar test",
                "tree": {
                    "sha": "d9eeb6c84a95e0ced914ecde384445bc1bc1ac59",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d9eeb6c84a95e0ced914ecde384445bc1bc1ac59"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1dae21b561ca101166774e386e347b247788fed1",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            },
            "html_url": "https://github.com/cython/cython/commit/1dae21b561ca101166774e386e347b247788fed1",
            "node_id": "MDY6Q29tbWl0Mjk1NzI2NzIxOjFkYWUyMWI1NjFjYTEwMTE2Njc3NGUzODZlMzQ3YjI0Nzc4OGZlZDE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/5ba2565631d7256a1194502918310441b95f8752",
                    "sha": "5ba2565631d7256a1194502918310441b95f8752",
                    "url": "https://api.github.com/repos/cython/cython/commits/5ba2565631d7256a1194502918310441b95f8752"
                }
            ],
            "sha": "1dae21b561ca101166774e386e347b247788fed1",
            "url": "https://api.github.com/repos/cython/cython/commits/1dae21b561ca101166774e386e347b247788fed1"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c92cad7096676704d8daa812a19609c4afc84731/comments",
            "commit": {
                "author": {
                    "date": "2020-09-22T00:30:01Z",
                    "email": "sean_stewart@me.com",
                    "name": "Sean Stewart"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-09-27T12:13:14Z",
                    "email": "sean_stewart@me.com",
                    "name": "Sean Stewart"
                },
                "message": "Fix attribute assertions for existing tests.",
                "tree": {
                    "sha": "dc6fd12dc74b25b590115d36df70b322f98f1e5b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/dc6fd12dc74b25b590115d36df70b322f98f1e5b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c92cad7096676704d8daa812a19609c4afc84731",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            },
            "html_url": "https://github.com/cython/cython/commit/c92cad7096676704d8daa812a19609c4afc84731",
            "node_id": "MDY6Q29tbWl0Mjk1NzI2NzIxOmM5MmNhZDcwOTY2NzY3MDRkOGRhYTgxMmExOTYwOWM0YWZjODQ3MzE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1dae21b561ca101166774e386e347b247788fed1",
                    "sha": "1dae21b561ca101166774e386e347b247788fed1",
                    "url": "https://api.github.com/repos/cython/cython/commits/1dae21b561ca101166774e386e347b247788fed1"
                }
            ],
            "sha": "c92cad7096676704d8daa812a19609c4afc84731",
            "url": "https://api.github.com/repos/cython/cython/commits/c92cad7096676704d8daa812a19609c4afc84731"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/20ab4a06039169e2868297f59cd61eddee7e31d8/comments",
            "commit": {
                "author": {
                    "date": "2020-09-23T12:10:25Z",
                    "email": "sean_stewart@me.com",
                    "name": "Sean Stewart"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-09-27T12:13:14Z",
                    "email": "sean_stewart@me.com",
                    "name": "Sean Stewart"
                },
                "message": "Update variable annotations test for class annotations analysis",
                "tree": {
                    "sha": "252d23daeccb9c46b04856783e68094e31714b69",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/252d23daeccb9c46b04856783e68094e31714b69"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/20ab4a06039169e2868297f59cd61eddee7e31d8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            },
            "html_url": "https://github.com/cython/cython/commit/20ab4a06039169e2868297f59cd61eddee7e31d8",
            "node_id": "MDY6Q29tbWl0Mjk1NzI2NzIxOjIwYWI0YTA2MDM5MTY5ZTI4NjgyOTdmNTljZDYxZWRkZWU3ZTMxZDg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c92cad7096676704d8daa812a19609c4afc84731",
                    "sha": "c92cad7096676704d8daa812a19609c4afc84731",
                    "url": "https://api.github.com/repos/cython/cython/commits/c92cad7096676704d8daa812a19609c4afc84731"
                }
            ],
            "sha": "20ab4a06039169e2868297f59cd61eddee7e31d8",
            "url": "https://api.github.com/repos/cython/cython/commits/20ab4a06039169e2868297f59cd61eddee7e31d8"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/bad1b4299c58f4c4f0658bba81a4a6079d5560f3/comments",
            "commit": {
                "author": {
                    "date": "2020-09-26T14:31:39Z",
                    "email": "sean_stewart@me.com",
                    "name": "Sean Stewart"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-09-27T12:13:14Z",
                    "email": "sean_stewart@me.com",
                    "name": "Sean Stewart"
                },
                "message": "Update cython3.pyx annotations tests for patch addressing `u` prefix in strings",
                "tree": {
                    "sha": "55cc5c586752d413b4d239eebe3f09dc91f45579",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/55cc5c586752d413b4d239eebe3f09dc91f45579"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/bad1b4299c58f4c4f0658bba81a4a6079d5560f3",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            },
            "html_url": "https://github.com/cython/cython/commit/bad1b4299c58f4c4f0658bba81a4a6079d5560f3",
            "node_id": "MDY6Q29tbWl0Mjk1NzI2NzIxOmJhZDFiNDI5OWM1OGY0YzRmMDY1OGJiYTgxYTRhNjA3OWQ1NTYwZjM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/20ab4a06039169e2868297f59cd61eddee7e31d8",
                    "sha": "20ab4a06039169e2868297f59cd61eddee7e31d8",
                    "url": "https://api.github.com/repos/cython/cython/commits/20ab4a06039169e2868297f59cd61eddee7e31d8"
                }
            ],
            "sha": "bad1b4299c58f4c4f0658bba81a4a6079d5560f3",
            "url": "https://api.github.com/repos/cython/cython/commits/bad1b4299c58f4c4f0658bba81a4a6079d5560f3"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/090244b3ae9f6197c0ec77a6e48844b09ef24fc6/comments",
            "commit": {
                "author": {
                    "date": "2020-09-28T17:19:36Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-09-28T17:19:36Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Simplify test setup.",
                "tree": {
                    "sha": "7725e18881a3b7c63682b4567bd1c69440890811",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/7725e18881a3b7c63682b4567bd1c69440890811"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
                "verification": {
                    "payload": "tree 7725e18881a3b7c63682b4567bd1c69440890811\nparent bad1b4299c58f4c4f0658bba81a4a6079d5560f3\nauthor scoder <stefan_ml@behnel.de> 1601313576 +0200\ncommitter GitHub <noreply@github.com> 1601313576 +0200\n\nSimplify test setup.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfchsoCRBK7hj4Ov3rIwAAdHIIABHO7RkxmjPxYrEYde/y8dof\nOznhZ++9gwue6o5inGLsUj1lFWlY2BBRskAwtOtBfBJWUra/BPSbT8Ashql2jkSn\nvCc9LefZs0atMzgwqs5uxR+spz8vD1baL112HKZWChsjVE1KLV8p7QQ+Q55Uzt62\n/pSM+Rk+PL8bqKXlAfjpHayxQP2jV2d9fRgWj8+69Sf+4D8jkbQxjKZw9/U9HxF7\n92jBUCt1sKQFgCvtJagnudIbK+bFqW6tRzWVtc97LRHegKkDBVs6GsX/54oVGz4M\nbheHy/7d5TnNrARtR8GdgBnc3BOH52xMNrlI4NNmQDINstURROvAK1hCGuafRag=\n=9yDL\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "node_id": "MDY6Q29tbWl0Mjk1NzI2NzIxOjA5MDI0NGIzYWU5ZjYxOTdjMGVjNzdhNmU0ODg0NGIwOWVmMjRmYzY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/bad1b4299c58f4c4f0658bba81a4a6079d5560f3",
                    "sha": "bad1b4299c58f4c4f0658bba81a4a6079d5560f3",
                    "url": "https://api.github.com/repos/cython/cython/commits/bad1b4299c58f4c4f0658bba81a4a6079d5560f3"
                }
            ],
            "sha": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
            "url": "https://api.github.com/repos/cython/cython/commits/090244b3ae9f6197c0ec77a6e48844b09ef24fc6"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3829/commits",
    "created_at": "2020-09-15T12:59:09Z",
    "diff_url": "https://github.com/cython/cython/pull/3829.diff",
    "draft": false,
    "head": {
        "label": "seandstewart:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/seandstewart/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/seandstewart/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/seandstewart/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/seandstewart/cython/branches{/branch}",
            "clone_url": "https://github.com/seandstewart/cython.git",
            "collaborators_url": "https://api.github.com/repos/seandstewart/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/seandstewart/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/seandstewart/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/seandstewart/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/seandstewart/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/seandstewart/cython/contributors",
            "created_at": "2020-09-15T12:50:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/seandstewart/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/seandstewart/cython/downloads",
            "events_url": "https://api.github.com/repos/seandstewart/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/seandstewart/cython/forks",
            "full_name": "seandstewart/cython",
            "git_commits_url": "https://api.github.com/repos/seandstewart/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/seandstewart/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/seandstewart/cython/git/tags{/sha}",
            "git_url": "git://github.com/seandstewart/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/seandstewart/cython/hooks",
            "html_url": "https://github.com/seandstewart/cython",
            "id": 295726721,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/seandstewart/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/seandstewart/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/seandstewart/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/seandstewart/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/seandstewart/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/seandstewart/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/seandstewart/cython/merges",
            "milestones_url": "https://api.github.com/repos/seandstewart/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkyOTU3MjY3MjE=",
            "notifications_url": "https://api.github.com/repos/seandstewart/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
                "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandstewart/followers",
                "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandstewart",
                "id": 19578366,
                "login": "seandstewart",
                "node_id": "MDQ6VXNlcjE5NTc4MzY2",
                "organizations_url": "https://api.github.com/users/seandstewart/orgs",
                "received_events_url": "https://api.github.com/users/seandstewart/received_events",
                "repos_url": "https://api.github.com/users/seandstewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandstewart"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/seandstewart/cython/pulls{/number}",
            "pushed_at": "2020-09-28T17:19:37Z",
            "releases_url": "https://api.github.com/repos/seandstewart/cython/releases{/id}",
            "size": 60663,
            "ssh_url": "git@github.com:seandstewart/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/seandstewart/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/seandstewart/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/seandstewart/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/seandstewart/cython/subscription",
            "svn_url": "https://github.com/seandstewart/cython",
            "tags_url": "https://api.github.com/repos/seandstewart/cython/tags",
            "teams_url": "https://api.github.com/repos/seandstewart/cython/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/seandstewart/cython/git/trees{/sha}",
            "updated_at": "2020-09-28T17:19:42Z",
            "url": "https://api.github.com/repos/seandstewart/cython",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
            "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
            "followers_url": "https://api.github.com/users/seandstewart/followers",
            "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
            "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/seandstewart",
            "id": 19578366,
            "login": "seandstewart",
            "node_id": "MDQ6VXNlcjE5NTc4MzY2",
            "organizations_url": "https://api.github.com/users/seandstewart/orgs",
            "received_events_url": "https://api.github.com/users/seandstewart/received_events",
            "repos_url": "https://api.github.com/users/seandstewart/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/seandstewart"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3829",
    "id": 487278698,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3829",
    "labels": [
        {
            "color": "444444",
            "default": true,
            "description": null,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556315,
            "name": "Python Semantics",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMTU=",
            "url": "https://api.github.com/repos/cython/cython/labels/Python%20Semantics"
        }
    ],
    "locked": false,
    "merge_commit_sha": "b2b81c9c5b87645c3f2a71322ead2ab8c9b7b567",
    "merged_at": "2020-09-28T18:13:54Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 701,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3str`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 39,
        "state": "open",
        "title": "3.0",
        "updated_at": "2022-09-18T13:00:44Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDg3Mjc4Njk4",
    "number": 3829,
    "patch_url": "https://github.com/cython/cython/pull/3829.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3829/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/090244b3ae9f6197c0ec77a6e48844b09ef24fc6",
    "title": "Add support for PEP 526 `__annotations__` in class body.",
    "updated_at": "2022-09-16T23:59:06Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3829",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/19578366?v=4",
        "events_url": "https://api.github.com/users/seandstewart/events{/privacy}",
        "followers_url": "https://api.github.com/users/seandstewart/followers",
        "following_url": "https://api.github.com/users/seandstewart/following{/other_user}",
        "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/seandstewart",
        "id": 19578366,
        "login": "seandstewart",
        "node_id": "MDQ6VXNlcjE5NTc4MzY2",
        "organizations_url": "https://api.github.com/users/seandstewart/orgs",
        "received_events_url": "https://api.github.com/users/seandstewart/received_events",
        "repos_url": "https://api.github.com/users/seandstewart/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/seandstewart"
    }
}