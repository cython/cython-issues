{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3693/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3693/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3693"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3693"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3693/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3693"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/002f669a635d39ddb8df902c0ca8e398f59e3d59"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1033,
            "forks_count": 1033,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 840,
            "open_issues_count": 840,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2020-06-20T13:25:08Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 59452,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 5258,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2020-06-20T08:52:12Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 5258,
            "watchers_count": 5258
        },
        "sha": "61a4f0991efaef5f9e92016f67a720ea213ee9ef",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "This adds an abstraction for accessing a types name and using it as part of `PyErr_Format`. We cannot just access `tp_name` since the `PyTypeObject` is an opaque type when compiling with the limited API enabled.\r\n\r\n- Adds a `__Pyx_PyType_GetName()` function / macro that either uses `__Pyx_PyObject_GetAttrStr(tp, PYIDENT(\"__name__\"))` when compiling for the limited API returning a unicode `PyObject*` or directly accesses the `tp_name` field of the type.\r\n- Adds `__Pyx_TypeName` typedef.\r\n- Adds `__Pyx_FMT_TYPENAME` containing the necessary string format specifier to format either the `PyObject *` or the `const char *` as necessary.\r\n- Adds `__Pyx_DECREF_TypeName()` macro that decrements the `PyObject *` in the limited API case or does nothing otherwise.\r\n- Introduce `__Pyx_RaiseUnexpectedTypeError` helper to simplify `PyrexTypes.py`.\r\n- Change all relevant call site to use the new abstaction.",
    "closed_at": "2020-06-20T06:28:43Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443039491"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443039491"
                }
            },
            "author_association": "MEMBER",
            "body": "refleak if `name` is not `NULL`.",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-19T20:52:54Z",
            "diff_hunk": "@@ -2873,3 +2914,52 @@ static CYTHON_INLINE PyObject *__Pyx_PyUnicode_ConcatInPlaceImpl(PyObject **p_le\n     PyNumber_Add(a, b) : __Pyx_PyStr_Concat(a, b))\n #define __Pyx_PyStr_ConcatInPlaceSafe(a, b) ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ? \\\n     PyNumber_InPlaceAdd(a, b) : __Pyx_PyStr_ConcatInPlace(a, b))\n+\n+/////////////// FormatTypeName.proto ///////////////\n+\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+typedef PyObject *__Pyx_TypeName;\n+#define __Pyx_FMT_TYPENAME \"%U\"\n+static __Pyx_TypeName\n+__Pyx_PyType_GetName(PyTypeObject* tp);\n+#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)\n+#else\n+typedef const char *__Pyx_TypeName;\n+#define __Pyx_FMT_TYPENAME \"%.200s\"\n+#define __Pyx_PyType_GetName(tp) ((tp)->tp_name)\n+#define __Pyx_DECREF_TypeName(obj)\n+#endif\n+\n+/////////////// FormatTypeName ///////////////\n+\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static __Pyx_TypeName\n+__Pyx_PyType_GetName(PyTypeObject* tp)\n+{\n+    PyObject *name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,\n+                                               PYIDENT(\"__name__\"));\n+    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) {",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443039491",
            "id": 443039491,
            "line": 2930,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAzOTQ5MQ==",
            "original_commit_id": "86e0398844e6419c9f09745cbb5bef135e73be1e",
            "original_line": 2930,
            "original_position": 278,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": 223,
            "pull_request_review_id": 434335425,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443039491",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443039686"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443039686"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        return __Pyx_NewRef(PYIDENT(\"?\"));\r\n```",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-19T20:53:34Z",
            "diff_hunk": "@@ -2873,3 +2914,52 @@ static CYTHON_INLINE PyObject *__Pyx_PyUnicode_ConcatInPlaceImpl(PyObject **p_le\n     PyNumber_Add(a, b) : __Pyx_PyStr_Concat(a, b))\n #define __Pyx_PyStr_ConcatInPlaceSafe(a, b) ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ? \\\n     PyNumber_InPlaceAdd(a, b) : __Pyx_PyStr_ConcatInPlace(a, b))\n+\n+/////////////// FormatTypeName.proto ///////////////\n+\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+typedef PyObject *__Pyx_TypeName;\n+#define __Pyx_FMT_TYPENAME \"%U\"\n+static __Pyx_TypeName\n+__Pyx_PyType_GetName(PyTypeObject* tp);\n+#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)\n+#else\n+typedef const char *__Pyx_TypeName;\n+#define __Pyx_FMT_TYPENAME \"%.200s\"\n+#define __Pyx_PyType_GetName(tp) ((tp)->tp_name)\n+#define __Pyx_DECREF_TypeName(obj)\n+#endif\n+\n+/////////////// FormatTypeName ///////////////\n+\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static __Pyx_TypeName\n+__Pyx_PyType_GetName(PyTypeObject* tp)\n+{\n+    PyObject *name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,\n+                                               PYIDENT(\"__name__\"));\n+    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) {\n+        PyErr_Clear();\n+        name = PYIDENT(\"?\");\n+        Py_INCREF(name);",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443039686",
            "id": 443039686,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAzOTY4Ng==",
            "original_commit_id": "86e0398844e6419c9f09745cbb5bef135e73be1e",
            "original_line": 2944,
            "original_position": 281,
            "original_start_line": 2943,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 434335425,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443039686",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443040804"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443040804"
                }
            },
            "author_association": "MEMBER",
            "body": "In between a bunch of other code lines, this isn't easy to read. Long C code lines are rarely a problem.\r\n```suggestion\r\nstatic __Pyx_TypeName __Pyx_PyType_GetName(PyTypeObject* tp); /*proto*/\r\n```",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-19T20:57:22Z",
            "diff_hunk": "@@ -2873,3 +2914,52 @@ static CYTHON_INLINE PyObject *__Pyx_PyUnicode_ConcatInPlaceImpl(PyObject **p_le\n     PyNumber_Add(a, b) : __Pyx_PyStr_Concat(a, b))\n #define __Pyx_PyStr_ConcatInPlaceSafe(a, b) ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ? \\\n     PyNumber_InPlaceAdd(a, b) : __Pyx_PyStr_ConcatInPlace(a, b))\n+\n+/////////////// FormatTypeName.proto ///////////////\n+\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+typedef PyObject *__Pyx_TypeName;\n+#define __Pyx_FMT_TYPENAME \"%U\"\n+static __Pyx_TypeName\n+__Pyx_PyType_GetName(PyTypeObject* tp);",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443040804",
            "id": 443040804,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MDgwNA==",
            "original_commit_id": "86e0398844e6419c9f09745cbb5bef135e73be1e",
            "original_line": 2924,
            "original_position": 261,
            "original_start_line": 2923,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 434335425,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443040804",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443041889"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443041889"
                }
            },
            "author_association": "MEMBER",
            "body": "`expected` should be a Python object here. It's almost certainly a name that is already part of the module's set of interned strings.",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-19T21:00:56Z",
            "diff_hunk": "@@ -2873,3 +2914,52 @@ static CYTHON_INLINE PyObject *__Pyx_PyUnicode_ConcatInPlaceImpl(PyObject **p_le\n     PyNumber_Add(a, b) : __Pyx_PyStr_Concat(a, b))\n #define __Pyx_PyStr_ConcatInPlaceSafe(a, b) ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ? \\\n     PyNumber_InPlaceAdd(a, b) : __Pyx_PyStr_ConcatInPlace(a, b))\n+\n+/////////////// FormatTypeName.proto ///////////////\n+\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+typedef PyObject *__Pyx_TypeName;\n+#define __Pyx_FMT_TYPENAME \"%U\"\n+static __Pyx_TypeName\n+__Pyx_PyType_GetName(PyTypeObject* tp);\n+#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)\n+#else\n+typedef const char *__Pyx_TypeName;\n+#define __Pyx_FMT_TYPENAME \"%.200s\"\n+#define __Pyx_PyType_GetName(tp) ((tp)->tp_name)\n+#define __Pyx_DECREF_TypeName(obj)\n+#endif\n+\n+/////////////// FormatTypeName ///////////////\n+\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static __Pyx_TypeName\n+__Pyx_PyType_GetName(PyTypeObject* tp)\n+{\n+    PyObject *name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,\n+                                               PYIDENT(\"__name__\"));\n+    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) {\n+        PyErr_Clear();\n+        name = PYIDENT(\"?\");\n+        Py_INCREF(name);\n+    }\n+    return name;\n+}\n+#endif\n+\n+/////////////// RaiseUnexpectedTypeError.proto ///////////////\n+\n+static CYTHON_INLINE void __Pyx_RaiseUnexpectedTypeError(const char *expected,\n+                                                         PyObject *obj);\n+\n+/////////////// RaiseUnexpectedTypeError ///////////////\n+//@requires: FormatTypeName\n+\n+static CYTHON_INLINE void\n+__Pyx_RaiseUnexpectedTypeError(const char *expected, PyObject *obj)",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443041889",
            "id": 443041889,
            "line": 2945,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MTg4OQ==",
            "original_commit_id": "86e0398844e6419c9f09745cbb5bef135e73be1e",
            "original_line": 2945,
            "original_position": 296,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": 238,
            "pull_request_review_id": 434335425,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443041889",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443042136"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443042136"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            __Pyx_TypeName float_value_type_name = __Pyx_PyType_GetName(Py_TYPE(float_value));\r\n```",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-19T21:01:43Z",
            "diff_hunk": "@@ -609,9 +610,12 @@ static double __Pyx__PyObject_AsDouble(PyObject* obj) {\n     if (likely(nb) && likely(nb->nb_float)) {\n         float_value = nb->nb_float(obj);\n         if (likely(float_value) && unlikely(!PyFloat_Check(float_value))) {\n+            __Pyx_TypeName float_value_type_name =\n+                __Pyx_PyType_GetName(Py_TYPE(float_value));",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443042136",
            "id": 443042136,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MjEzNg==",
            "original_commit_id": "86e0398844e6419c9f09745cbb5bef135e73be1e",
            "original_line": 614,
            "original_position": 13,
            "original_start_line": 613,
            "path": "Cython/Utility/Optimize.c",
            "position": null,
            "pull_request_review_id": 434335425,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443042136",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443042561"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443042561"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nstatic CYTHON_INLINE void __Pyx_RaiseUnexpectedTypeError(const char *expected, PyObject *obj); /*proto*/\r\n```",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-19T21:03:05Z",
            "diff_hunk": "@@ -2873,3 +2914,52 @@ static CYTHON_INLINE PyObject *__Pyx_PyUnicode_ConcatInPlaceImpl(PyObject **p_le\n     PyNumber_Add(a, b) : __Pyx_PyStr_Concat(a, b))\n #define __Pyx_PyStr_ConcatInPlaceSafe(a, b) ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ? \\\n     PyNumber_InPlaceAdd(a, b) : __Pyx_PyStr_ConcatInPlace(a, b))\n+\n+/////////////// FormatTypeName.proto ///////////////\n+\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+typedef PyObject *__Pyx_TypeName;\n+#define __Pyx_FMT_TYPENAME \"%U\"\n+static __Pyx_TypeName\n+__Pyx_PyType_GetName(PyTypeObject* tp);\n+#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)\n+#else\n+typedef const char *__Pyx_TypeName;\n+#define __Pyx_FMT_TYPENAME \"%.200s\"\n+#define __Pyx_PyType_GetName(tp) ((tp)->tp_name)\n+#define __Pyx_DECREF_TypeName(obj)\n+#endif\n+\n+/////////////// FormatTypeName ///////////////\n+\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static __Pyx_TypeName\n+__Pyx_PyType_GetName(PyTypeObject* tp)\n+{\n+    PyObject *name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,\n+                                               PYIDENT(\"__name__\"));\n+    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) {\n+        PyErr_Clear();\n+        name = PYIDENT(\"?\");\n+        Py_INCREF(name);\n+    }\n+    return name;\n+}\n+#endif\n+\n+/////////////// RaiseUnexpectedTypeError.proto ///////////////\n+\n+static CYTHON_INLINE void __Pyx_RaiseUnexpectedTypeError(const char *expected,\n+                                                         PyObject *obj);",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443042561",
            "id": 443042561,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MjU2MQ==",
            "original_commit_id": "86e0398844e6419c9f09745cbb5bef135e73be1e",
            "original_line": 2953,
            "original_position": 290,
            "original_start_line": 2952,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 434335425,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443042561",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443043869"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443043869"
                }
            },
            "author_association": "MEMBER",
            "body": "It seems you already added this as a dependency in lots of places. Then we don't need this here.",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-19T21:05:08Z",
            "diff_hunk": "@@ -781,6 +781,7 @@ def generate_module_preamble(self, env, options, cimported_modules, metadata, co\n         code.putln('#define __Pyx_PyObject_FromString __Pyx_Py%s_FromString' % c_string_func_name)\n         code.putln('#define __Pyx_PyObject_FromStringAndSize __Pyx_Py%s_FromStringAndSize' % c_string_func_name)\n         code.put(UtilityCode.load_as_string(\"TypeConversions\", \"TypeConversion.c\")[0])\n+        env.use_utility_code(UtilityCode.load_cached(\"FormatTypeName\", \"ObjectHandling.c\"))",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443043869",
            "id": 443043869,
            "line": 784,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0Mzg2OQ==",
            "original_commit_id": "86e0398844e6419c9f09745cbb5bef135e73be1e",
            "original_line": 784,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 4,
            "pull_request_review_id": 434335425,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443043869",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443046435"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443046435"
                }
            },
            "author_association": "MEMBER",
            "body": "Missing format macro.",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-19T21:14:00Z",
            "diff_hunk": "@@ -295,13 +299,17 @@ static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject *index) {\n \n     // Error handling code -- only manage OverflowError differently.\n     if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {\n+        __Pyx_TypeName index_type_name = __Pyx_PyType_GetName(Py_TYPE(index));\n         PyErr_Clear();\n-        PyErr_Format(PyExc_IndexError, \"cannot fit '%.200s' into an index-sized integer\", Py_TYPE(index)->tp_name);\n+        PyErr_Format(PyExc_IndexError,\n+            \"cannot fit '%.200s' into an index-sized integer\", index_type_name);",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443046435",
            "id": 443046435,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NjQzNQ==",
            "original_commit_id": "2bf709ca2fba4d7f79b7e9ec87fbd4490dea923d",
            "original_line": 305,
            "original_position": 36,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 434335425,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443046435",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443047017"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443047017"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n            \"__await__() returned non-iterator of type '\" __Pyx_FMT_TYPENAME \"'\", res_type_name);\r\n```",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-19T21:15:48Z",
            "diff_hunk": "@@ -209,9 +215,11 @@ static PyObject *__Pyx__Coroutine_GetAwaitableIter(PyObject *obj) {\n         goto bad;\n     }\n     if (unlikely(!PyIter_Check(res))) {\n+        __Pyx_TypeName res_type_name = __Pyx_PyType_GetName(Py_TYPE(res));\n         PyErr_Format(PyExc_TypeError,\n-                     \"__await__() returned non-iterator of type '%.100s'\",\n-                     Py_TYPE(res)->tp_name);\n+            \"__await__() returned non-iterator of type '\" __Pyx_FMT_TYPENAME\n+            \"'\", res_type_name);",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443047017",
            "id": 443047017,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NzAxNw==",
            "original_commit_id": "2bf709ca2fba4d7f79b7e9ec87fbd4490dea923d",
            "original_line": 221,
            "original_position": 67,
            "original_start_line": 220,
            "path": "Cython/Utility/Coroutine.c",
            "position": null,
            "pull_request_review_id": 434335425,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443047017",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443049359"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443049359"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It's used in the `TypeConversion.c::TypeConversions` fragment. But for some reasons the `//@requires` seems to have no effect because `TypeConversion` fragment is loaded via `UtilityCode.load_as_string` so I manually called the `load_cached` here...",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-19T21:24:17Z",
            "diff_hunk": "@@ -781,6 +781,7 @@ def generate_module_preamble(self, env, options, cimported_modules, metadata, co\n         code.putln('#define __Pyx_PyObject_FromString __Pyx_Py%s_FromString' % c_string_func_name)\n         code.putln('#define __Pyx_PyObject_FromStringAndSize __Pyx_Py%s_FromStringAndSize' % c_string_func_name)\n         code.put(UtilityCode.load_as_string(\"TypeConversions\", \"TypeConversion.c\")[0])\n+        env.use_utility_code(UtilityCode.load_cached(\"FormatTypeName\", \"ObjectHandling.c\"))",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443049359",
            "id": 443049359,
            "in_reply_to_id": 443043869,
            "line": 784,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0OTM1OQ==",
            "original_commit_id": "86e0398844e6419c9f09745cbb5bef135e73be1e",
            "original_line": 784,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 4,
            "pull_request_review_id": 434348107,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443049359",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/71571?v=4",
                "events_url": "https://api.github.com/users/MatzeB/events{/privacy}",
                "followers_url": "https://api.github.com/users/MatzeB/followers",
                "following_url": "https://api.github.com/users/MatzeB/following{/other_user}",
                "gists_url": "https://api.github.com/users/MatzeB/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MatzeB",
                "id": 71571,
                "login": "MatzeB",
                "node_id": "MDQ6VXNlcjcxNTcx",
                "organizations_url": "https://api.github.com/users/MatzeB/orgs",
                "received_events_url": "https://api.github.com/users/MatzeB/received_events",
                "repos_url": "https://api.github.com/users/MatzeB/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MatzeB/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MatzeB/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MatzeB"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443050046"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443050046"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Good catch! Looks like there is no test for this code path, I'll try to write one later (but in a separate commit).",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-19T21:26:36Z",
            "diff_hunk": "@@ -295,13 +299,17 @@ static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject *index) {\n \n     // Error handling code -- only manage OverflowError differently.\n     if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {\n+        __Pyx_TypeName index_type_name = __Pyx_PyType_GetName(Py_TYPE(index));\n         PyErr_Clear();\n-        PyErr_Format(PyExc_IndexError, \"cannot fit '%.200s' into an index-sized integer\", Py_TYPE(index)->tp_name);\n+        PyErr_Format(PyExc_IndexError,\n+            \"cannot fit '%.200s' into an index-sized integer\", index_type_name);",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443050046",
            "id": 443050046,
            "in_reply_to_id": 443046435,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA1MDA0Ng==",
            "original_commit_id": "2bf709ca2fba4d7f79b7e9ec87fbd4490dea923d",
            "original_line": 305,
            "original_position": 36,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 434348917,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443050046",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/71571?v=4",
                "events_url": "https://api.github.com/users/MatzeB/events{/privacy}",
                "followers_url": "https://api.github.com/users/MatzeB/followers",
                "following_url": "https://api.github.com/users/MatzeB/following{/other_user}",
                "gists_url": "https://api.github.com/users/MatzeB/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MatzeB",
                "id": 71571,
                "login": "MatzeB",
                "node_id": "MDQ6VXNlcjcxNTcx",
                "organizations_url": "https://api.github.com/users/MatzeB/orgs",
                "received_events_url": "https://api.github.com/users/MatzeB/received_events",
                "repos_url": "https://api.github.com/users/MatzeB/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MatzeB/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MatzeB/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MatzeB"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443050728"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443050728"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Ah no this is part of the code only reachable for `CYTHON_USE_TYPE_SLOTS` which is not true in the limited API. Oh well.",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-19T21:28:54Z",
            "diff_hunk": "@@ -295,13 +299,17 @@ static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject *index) {\n \n     // Error handling code -- only manage OverflowError differently.\n     if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {\n+        __Pyx_TypeName index_type_name = __Pyx_PyType_GetName(Py_TYPE(index));\n         PyErr_Clear();\n-        PyErr_Format(PyExc_IndexError, \"cannot fit '%.200s' into an index-sized integer\", Py_TYPE(index)->tp_name);\n+        PyErr_Format(PyExc_IndexError,\n+            \"cannot fit '%.200s' into an index-sized integer\", index_type_name);",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443050728",
            "id": 443050728,
            "in_reply_to_id": 443046435,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA1MDcyOA==",
            "original_commit_id": "2bf709ca2fba4d7f79b7e9ec87fbd4490dea923d",
            "original_line": 305,
            "original_position": 36,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 434349737,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443050728",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/71571?v=4",
                "events_url": "https://api.github.com/users/MatzeB/events{/privacy}",
                "followers_url": "https://api.github.com/users/MatzeB/followers",
                "following_url": "https://api.github.com/users/MatzeB/following{/other_user}",
                "gists_url": "https://api.github.com/users/MatzeB/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MatzeB",
                "id": 71571,
                "login": "MatzeB",
                "node_id": "MDQ6VXNlcjcxNTcx",
                "organizations_url": "https://api.github.com/users/MatzeB/orgs",
                "received_events_url": "https://api.github.com/users/MatzeB/received_events",
                "repos_url": "https://api.github.com/users/MatzeB/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MatzeB/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MatzeB/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MatzeB"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443051864"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443051864"
                }
            },
            "author_association": "MEMBER",
            "body": "In that case, you don't need it anywhere else, because it's already included globally.\r\nIn the end, it's such a basic thing that it probably _is_ worth always including it. The only reason why it's not just part of the compatibility section in `ModuleSetupCode.c` is that it uses Python string constants.\r\n\r\nRemove it as a dependency everywhere else and then just include it here.",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-19T21:32:46Z",
            "diff_hunk": "@@ -781,6 +781,7 @@ def generate_module_preamble(self, env, options, cimported_modules, metadata, co\n         code.putln('#define __Pyx_PyObject_FromString __Pyx_Py%s_FromString' % c_string_func_name)\n         code.putln('#define __Pyx_PyObject_FromStringAndSize __Pyx_Py%s_FromStringAndSize' % c_string_func_name)\n         code.put(UtilityCode.load_as_string(\"TypeConversions\", \"TypeConversion.c\")[0])\n+        env.use_utility_code(UtilityCode.load_cached(\"FormatTypeName\", \"ObjectHandling.c\"))",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443051864",
            "id": 443051864,
            "in_reply_to_id": 443043869,
            "line": 784,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA1MTg2NA==",
            "original_commit_id": "86e0398844e6419c9f09745cbb5bef135e73be1e",
            "original_line": 784,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 4,
            "pull_request_review_id": 434350987,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443051864",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443052064"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443052064"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "fair enough.",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-19T21:33:34Z",
            "diff_hunk": "@@ -781,6 +781,7 @@ def generate_module_preamble(self, env, options, cimported_modules, metadata, co\n         code.putln('#define __Pyx_PyObject_FromString __Pyx_Py%s_FromString' % c_string_func_name)\n         code.putln('#define __Pyx_PyObject_FromStringAndSize __Pyx_Py%s_FromStringAndSize' % c_string_func_name)\n         code.put(UtilityCode.load_as_string(\"TypeConversions\", \"TypeConversion.c\")[0])\n+        env.use_utility_code(UtilityCode.load_cached(\"FormatTypeName\", \"ObjectHandling.c\"))",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443052064",
            "id": 443052064,
            "in_reply_to_id": 443043869,
            "line": 784,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA1MjA2NA==",
            "original_commit_id": "86e0398844e6419c9f09745cbb5bef135e73be1e",
            "original_line": 784,
            "original_position": 4,
            "original_start_line": null,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 4,
            "pull_request_review_id": 434351255,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443052064",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/71571?v=4",
                "events_url": "https://api.github.com/users/MatzeB/events{/privacy}",
                "followers_url": "https://api.github.com/users/MatzeB/followers",
                "following_url": "https://api.github.com/users/MatzeB/following{/other_user}",
                "gists_url": "https://api.github.com/users/MatzeB/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MatzeB",
                "id": 71571,
                "login": "MatzeB",
                "node_id": "MDQ6VXNlcjcxNTcx",
                "organizations_url": "https://api.github.com/users/MatzeB/orgs",
                "received_events_url": "https://api.github.com/users/MatzeB/received_events",
                "repos_url": "https://api.github.com/users/MatzeB/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MatzeB/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MatzeB/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MatzeB"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443058491"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443058491"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Hmm this is a bit tricky to do from with the `PyrexTypes.py` caller. It seems there is no replacement of `PYIDENT()` in the output there, and there's also no code object around to call `get_py_string_const`. Would you think it's worth adding a `code` parameter to `type_test_code` just so I can call `get_py_string_const` there or would it be fine to stay with the `const char*`?",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-19T21:57:47Z",
            "diff_hunk": "@@ -2873,3 +2914,52 @@ static CYTHON_INLINE PyObject *__Pyx_PyUnicode_ConcatInPlaceImpl(PyObject **p_le\n     PyNumber_Add(a, b) : __Pyx_PyStr_Concat(a, b))\n #define __Pyx_PyStr_ConcatInPlaceSafe(a, b) ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ? \\\n     PyNumber_InPlaceAdd(a, b) : __Pyx_PyStr_ConcatInPlace(a, b))\n+\n+/////////////// FormatTypeName.proto ///////////////\n+\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+typedef PyObject *__Pyx_TypeName;\n+#define __Pyx_FMT_TYPENAME \"%U\"\n+static __Pyx_TypeName\n+__Pyx_PyType_GetName(PyTypeObject* tp);\n+#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)\n+#else\n+typedef const char *__Pyx_TypeName;\n+#define __Pyx_FMT_TYPENAME \"%.200s\"\n+#define __Pyx_PyType_GetName(tp) ((tp)->tp_name)\n+#define __Pyx_DECREF_TypeName(obj)\n+#endif\n+\n+/////////////// FormatTypeName ///////////////\n+\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static __Pyx_TypeName\n+__Pyx_PyType_GetName(PyTypeObject* tp)\n+{\n+    PyObject *name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,\n+                                               PYIDENT(\"__name__\"));\n+    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) {\n+        PyErr_Clear();\n+        name = PYIDENT(\"?\");\n+        Py_INCREF(name);\n+    }\n+    return name;\n+}\n+#endif\n+\n+/////////////// RaiseUnexpectedTypeError.proto ///////////////\n+\n+static CYTHON_INLINE void __Pyx_RaiseUnexpectedTypeError(const char *expected,\n+                                                         PyObject *obj);\n+\n+/////////////// RaiseUnexpectedTypeError ///////////////\n+//@requires: FormatTypeName\n+\n+static CYTHON_INLINE void\n+__Pyx_RaiseUnexpectedTypeError(const char *expected, PyObject *obj)",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443058491",
            "id": 443058491,
            "in_reply_to_id": 443041889,
            "line": 2945,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA1ODQ5MQ==",
            "original_commit_id": "86e0398844e6419c9f09745cbb5bef135e73be1e",
            "original_line": 2945,
            "original_position": 296,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": 238,
            "pull_request_review_id": 434358769,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443058491",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/71571?v=4",
                "events_url": "https://api.github.com/users/MatzeB/events{/privacy}",
                "followers_url": "https://api.github.com/users/MatzeB/followers",
                "following_url": "https://api.github.com/users/MatzeB/following{/other_user}",
                "gists_url": "https://api.github.com/users/MatzeB/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MatzeB",
                "id": 71571,
                "login": "MatzeB",
                "node_id": "MDQ6VXNlcjcxNTcx",
                "organizations_url": "https://api.github.com/users/MatzeB/orgs",
                "received_events_url": "https://api.github.com/users/MatzeB/received_events",
                "repos_url": "https://api.github.com/users/MatzeB/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MatzeB/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MatzeB/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MatzeB"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443061885"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443061885"
                }
            },
            "author_association": "MEMBER",
            "body": "Phew, right. `type_test_code()` is really stretching all limits here already.\r\nThen let's keep it a `const char*`.",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-19T22:11:43Z",
            "diff_hunk": "@@ -2873,3 +2914,52 @@ static CYTHON_INLINE PyObject *__Pyx_PyUnicode_ConcatInPlaceImpl(PyObject **p_le\n     PyNumber_Add(a, b) : __Pyx_PyStr_Concat(a, b))\n #define __Pyx_PyStr_ConcatInPlaceSafe(a, b) ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ? \\\n     PyNumber_InPlaceAdd(a, b) : __Pyx_PyStr_ConcatInPlace(a, b))\n+\n+/////////////// FormatTypeName.proto ///////////////\n+\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+typedef PyObject *__Pyx_TypeName;\n+#define __Pyx_FMT_TYPENAME \"%U\"\n+static __Pyx_TypeName\n+__Pyx_PyType_GetName(PyTypeObject* tp);\n+#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)\n+#else\n+typedef const char *__Pyx_TypeName;\n+#define __Pyx_FMT_TYPENAME \"%.200s\"\n+#define __Pyx_PyType_GetName(tp) ((tp)->tp_name)\n+#define __Pyx_DECREF_TypeName(obj)\n+#endif\n+\n+/////////////// FormatTypeName ///////////////\n+\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static __Pyx_TypeName\n+__Pyx_PyType_GetName(PyTypeObject* tp)\n+{\n+    PyObject *name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,\n+                                               PYIDENT(\"__name__\"));\n+    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) {\n+        PyErr_Clear();\n+        name = PYIDENT(\"?\");\n+        Py_INCREF(name);\n+    }\n+    return name;\n+}\n+#endif\n+\n+/////////////// RaiseUnexpectedTypeError.proto ///////////////\n+\n+static CYTHON_INLINE void __Pyx_RaiseUnexpectedTypeError(const char *expected,\n+                                                         PyObject *obj);\n+\n+/////////////// RaiseUnexpectedTypeError ///////////////\n+//@requires: FormatTypeName\n+\n+static CYTHON_INLINE void\n+__Pyx_RaiseUnexpectedTypeError(const char *expected, PyObject *obj)",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443061885",
            "id": 443061885,
            "in_reply_to_id": 443041889,
            "line": 2945,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA2MTg4NQ==",
            "original_commit_id": "86e0398844e6419c9f09745cbb5bef135e73be1e",
            "original_line": 2945,
            "original_position": 296,
            "original_start_line": null,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": 238,
            "pull_request_review_id": 434362695,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443061885",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443063559"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443063559"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "(I previously worked in projects with a strict 80 column limit and my usual setup is putting 4-5 terminals with 80 column next to each other; so I have a tendency to break lines. Anyway I will of course try to stay with the project preferences and do less wrapping here.",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-19T22:19:06Z",
            "diff_hunk": "@@ -609,9 +610,12 @@ static double __Pyx__PyObject_AsDouble(PyObject* obj) {\n     if (likely(nb) && likely(nb->nb_float)) {\n         float_value = nb->nb_float(obj);\n         if (likely(float_value) && unlikely(!PyFloat_Check(float_value))) {\n+            __Pyx_TypeName float_value_type_name =\n+                __Pyx_PyType_GetName(Py_TYPE(float_value));",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443063559",
            "id": 443063559,
            "in_reply_to_id": 443042136,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA2MzU1OQ==",
            "original_commit_id": "86e0398844e6419c9f09745cbb5bef135e73be1e",
            "original_line": 614,
            "original_position": 13,
            "original_start_line": 613,
            "path": "Cython/Utility/Optimize.c",
            "position": null,
            "pull_request_review_id": 434364648,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443063559",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/71571?v=4",
                "events_url": "https://api.github.com/users/MatzeB/events{/privacy}",
                "followers_url": "https://api.github.com/users/MatzeB/followers",
                "following_url": "https://api.github.com/users/MatzeB/following{/other_user}",
                "gists_url": "https://api.github.com/users/MatzeB/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MatzeB",
                "id": 71571,
                "login": "MatzeB",
                "node_id": "MDQ6VXNlcjcxNTcx",
                "organizations_url": "https://api.github.com/users/MatzeB/orgs",
                "received_events_url": "https://api.github.com/users/MatzeB/received_events",
                "repos_url": "https://api.github.com/users/MatzeB/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MatzeB/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MatzeB/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MatzeB"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443105999"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443105999"
                }
            },
            "author_association": "MEMBER",
            "body": "This is a case where even I would split the line, to keep it readable. :)\r\n```suggestion\r\n                    \"extension type '\" __Pyx_FMT_TYPENAME \"' has no __dict__ slot, \"\r\n                    \"but base type '\" __Pyx_FMT_TYPENAME \"' has: \"\r\n                    \"either add 'cdef dict __dict__' to the extension type \"\r\n                    \"or add '__slots__ = [...]' to the base type\",\r\n```",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-20T06:19:39Z",
            "diff_hunk": "@@ -38,17 +38,21 @@ static int __Pyx_PyType_Ready(PyTypeObject *t) {\n             b = (PyTypeObject*)b0;\n             if (!__Pyx_PyType_HasFeature(b, Py_TPFLAGS_HEAPTYPE))\n             {\n-                PyErr_Format(PyExc_TypeError, \"base class '%.200s' is not a heap type\",\n-                             b->tp_name);\n+                __Pyx_TypeName b_name = __Pyx_PyType_GetName(b);\n+                PyErr_Format(PyExc_TypeError,\n+                    \"base class '\" __Pyx_FMT_TYPENAME \"' is not a heap type\", b_name);\n+                __Pyx_DECREF_TypeName(b_name);\n                 return -1;\n             }\n             if (t->tp_dictoffset == 0 && b->tp_dictoffset)\n             {\n+                __Pyx_TypeName t_name = __Pyx_PyType_GetName(t);\n+                __Pyx_TypeName b_name = __Pyx_PyType_GetName(b);\n                 PyErr_Format(PyExc_TypeError,\n-                    \"extension type '%.200s' has no __dict__ slot, but base type '%.200s' has: \"\n-                    \"either add 'cdef dict __dict__' to the extension type \"\n-                    \"or add '__slots__ = [...]' to the base type\",\n-                    t->tp_name, b->tp_name);\n+                    \"extension type '\" __Pyx_FMT_TYPENAME \"' has no __dict__ slot, but base type '\" __Pyx_FMT_TYPENAME \"' has: either add 'cdef dict __dict__' to the extension type or add '__slots__ = [...]' to the base type\",",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443105999",
            "id": 443105999,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEwNTk5OQ==",
            "original_commit_id": "207baa69a251142f11c6f682abf1e6e4148bab8c",
            "original_line": 52,
            "original_position": 21,
            "original_start_line": null,
            "path": "Cython/Utility/ExtensionTypes.c",
            "position": null,
            "pull_request_review_id": 434406876,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443105999",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3693#discussion_r443106220"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3693"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443106220"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                \"__int__ returned non-int (type \" __Pyx_FMT_TYPENAME \").  \"\r\n                \"The ability to return an instance of a strict subclass of int is deprecated, \"\r\n                \"and may be removed in a future version of Python.\",\r\n```",
            "commit_id": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "created_at": "2020-06-20T06:23:47Z",
            "diff_hunk": "@@ -314,23 +314,25 @@ static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {\n }\n \n static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {\n+    __Pyx_TypeName result_type_name = __Pyx_PyType_GetName(Py_TYPE(result));\n #if PY_MAJOR_VERSION >= 3\n     if (PyLong_Check(result)) {\n         // CPython issue #17576: warn if 'result' not of exact type int.\n         if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,\n-                \"__int__ returned non-int (type %.200s).  \"\n-                \"The ability to return an instance of a strict subclass of int \"\n-                \"is deprecated, and may be removed in a future version of Python.\",\n-                __Pyx_PyType_Name(Py_TYPE(result)))) {\n+                \"__int__ returned non-int (type \" __Pyx_FMT_TYPENAME \").  The ability to return an instance of a strict subclass of int is deprecated, and may be removed in a future version of Python.\",",
            "html_url": "https://github.com/cython/cython/pull/3693#discussion_r443106220",
            "id": 443106220,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEwNjIyMA==",
            "original_commit_id": "207baa69a251142f11c6f682abf1e6e4148bab8c",
            "original_line": 322,
            "original_position": 13,
            "original_start_line": null,
            "path": "Cython/Utility/TypeConversion.c",
            "position": null,
            "pull_request_review_id": 434406876,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3693",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-20T06:27:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443106220",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3693/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/71571?v=4",
                "events_url": "https://api.github.com/users/MatzeB/events{/privacy}",
                "followers_url": "https://api.github.com/users/MatzeB/followers",
                "following_url": "https://api.github.com/users/MatzeB/following{/other_user}",
                "gists_url": "https://api.github.com/users/MatzeB/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MatzeB",
                "id": 71571,
                "login": "MatzeB",
                "node_id": "MDQ6VXNlcjcxNTcx",
                "organizations_url": "https://api.github.com/users/MatzeB/orgs",
                "received_events_url": "https://api.github.com/users/MatzeB/received_events",
                "repos_url": "https://api.github.com/users/MatzeB/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MatzeB/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MatzeB/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MatzeB"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/207baa69a251142f11c6f682abf1e6e4148bab8c/comments",
            "commit": {
                "author": {
                    "date": "2020-06-19T16:49:51Z",
                    "email": "matze@braunis.de",
                    "name": "Matthias Braun"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-19T23:08:25Z",
                    "email": "matze@braunis.de",
                    "name": "Matthias Braun"
                },
                "message": "Avoid using tp_name",
                "tree": {
                    "sha": "243754f1e72339f8c0e7f21ed9e826af33ac5339",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/243754f1e72339f8c0e7f21ed9e826af33ac5339"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/207baa69a251142f11c6f682abf1e6e4148bab8c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/71571?v=4",
                "events_url": "https://api.github.com/users/MatzeB/events{/privacy}",
                "followers_url": "https://api.github.com/users/MatzeB/followers",
                "following_url": "https://api.github.com/users/MatzeB/following{/other_user}",
                "gists_url": "https://api.github.com/users/MatzeB/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MatzeB",
                "id": 71571,
                "login": "MatzeB",
                "node_id": "MDQ6VXNlcjcxNTcx",
                "organizations_url": "https://api.github.com/users/MatzeB/orgs",
                "received_events_url": "https://api.github.com/users/MatzeB/received_events",
                "repos_url": "https://api.github.com/users/MatzeB/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MatzeB/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MatzeB/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MatzeB"
            },
            "html_url": "https://github.com/cython/cython/commit/207baa69a251142f11c6f682abf1e6e4148bab8c",
            "node_id": "MDY6Q29tbWl0MjczMzI0NjQ5OjIwN2JhYTY5YTI1MTE0MmYxMWM2ZjY4MmFiZjFlNmU0MTQ4YmFiOGM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/61a4f0991efaef5f9e92016f67a720ea213ee9ef",
                    "sha": "61a4f0991efaef5f9e92016f67a720ea213ee9ef",
                    "url": "https://api.github.com/repos/cython/cython/commits/61a4f0991efaef5f9e92016f67a720ea213ee9ef"
                }
            ],
            "sha": "207baa69a251142f11c6f682abf1e6e4148bab8c",
            "url": "https://api.github.com/repos/cython/cython/commits/207baa69a251142f11c6f682abf1e6e4148bab8c"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/002f669a635d39ddb8df902c0ca8e398f59e3d59/comments",
            "commit": {
                "author": {
                    "date": "2020-06-20T06:27:04Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-20T06:27:04Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Wrap some very long lines in a readable way.",
                "tree": {
                    "sha": "45ad7dc3ec1abdebb2f5a5de017c19113565cc2a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/45ad7dc3ec1abdebb2f5a5de017c19113565cc2a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/002f669a635d39ddb8df902c0ca8e398f59e3d59",
                "verification": {
                    "payload": "tree 45ad7dc3ec1abdebb2f5a5de017c19113565cc2a\nparent 207baa69a251142f11c6f682abf1e6e4148bab8c\nauthor scoder <stefan_ml@behnel.de> 1592634424 +0200\ncommitter GitHub <noreply@github.com> 1592634424 +0200\n\nWrap some very long lines in a readable way.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe7aw4CRBK7hj4Ov3rIwAAdHIIAEq9+qL5anX+fJDnJELNGKuG\neTMFQ0ZnG7erKwwUNybkKK6apVka2cIgyNPSP171ZuK7S+pDVQBO8YgZDL53VAfY\ngvElzk5NfXEgldwu2dmqw82WGfzQa173iVwzlutKW1zu5NE54+WecIEPK6LFTFcW\n6Sx6YkV3XyMMW+h/avkDNfL8JMehTli3vltYwVYMekiE8kivc5hGB3XAlJFewdGS\nB62008bqCI1j0o9/6KAn0u92BjFhdFw+5t7BN0QBrOymwsg0aVYXMwYSI0jUHZ3s\ns93cgRmxlla6+vvIEYtF6tSfyXJI4ZLPJhyLwLIjOB0kjt/5h8ZWv3ll/U6c2YA=\n=iuvT\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "node_id": "MDY6Q29tbWl0MjczMzI0NjQ5OjAwMmY2NjlhNjM1ZDM5ZGRiOGRmOTAyYzBjYThlMzk4ZjU5ZTNkNTk=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/207baa69a251142f11c6f682abf1e6e4148bab8c",
                    "sha": "207baa69a251142f11c6f682abf1e6e4148bab8c",
                    "url": "https://api.github.com/repos/cython/cython/commits/207baa69a251142f11c6f682abf1e6e4148bab8c"
                }
            ],
            "sha": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
            "url": "https://api.github.com/repos/cython/cython/commits/002f669a635d39ddb8df902c0ca8e398f59e3d59"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3693/commits",
    "created_at": "2020-06-19T20:19:30Z",
    "diff_url": "https://github.com/cython/cython/pull/3693.diff",
    "draft": false,
    "head": {
        "label": "MatzeB:type_name_abstraction",
        "ref": "type_name_abstraction",
        "repo": {
            "archive_url": "https://api.github.com/repos/MatzeB/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/MatzeB/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/MatzeB/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/MatzeB/cython/branches{/branch}",
            "clone_url": "https://github.com/MatzeB/cython.git",
            "collaborators_url": "https://api.github.com/repos/MatzeB/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/MatzeB/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/MatzeB/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/MatzeB/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/MatzeB/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/MatzeB/cython/contributors",
            "created_at": "2020-06-18T19:36:21Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/MatzeB/cython/deployments",
            "description": "Fork to work on limited API (aka PEP384 / stable ABI) support",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/MatzeB/cython/downloads",
            "events_url": "https://api.github.com/repos/MatzeB/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/MatzeB/cython/forks",
            "full_name": "MatzeB/cython",
            "git_commits_url": "https://api.github.com/repos/MatzeB/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/MatzeB/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/MatzeB/cython/git/tags{/sha}",
            "git_url": "git://github.com/MatzeB/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/MatzeB/cython/hooks",
            "html_url": "https://github.com/MatzeB/cython",
            "id": 273324649,
            "issue_comment_url": "https://api.github.com/repos/MatzeB/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/MatzeB/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/MatzeB/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/MatzeB/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/MatzeB/cython/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/MatzeB/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/MatzeB/cython/merges",
            "milestones_url": "https://api.github.com/repos/MatzeB/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkyNzMzMjQ2NDk=",
            "notifications_url": "https://api.github.com/repos/MatzeB/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/71571?v=4",
                "events_url": "https://api.github.com/users/MatzeB/events{/privacy}",
                "followers_url": "https://api.github.com/users/MatzeB/followers",
                "following_url": "https://api.github.com/users/MatzeB/following{/other_user}",
                "gists_url": "https://api.github.com/users/MatzeB/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MatzeB",
                "id": 71571,
                "login": "MatzeB",
                "node_id": "MDQ6VXNlcjcxNTcx",
                "organizations_url": "https://api.github.com/users/MatzeB/orgs",
                "received_events_url": "https://api.github.com/users/MatzeB/received_events",
                "repos_url": "https://api.github.com/users/MatzeB/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MatzeB/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MatzeB/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MatzeB"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/MatzeB/cython/pulls{/number}",
            "pushed_at": "2020-06-20T06:27:05Z",
            "releases_url": "https://api.github.com/repos/MatzeB/cython/releases{/id}",
            "size": 59482,
            "ssh_url": "git@github.com:MatzeB/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/MatzeB/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/MatzeB/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/MatzeB/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/MatzeB/cython/subscription",
            "svn_url": "https://github.com/MatzeB/cython",
            "tags_url": "https://api.github.com/repos/MatzeB/cython/tags",
            "teams_url": "https://api.github.com/repos/MatzeB/cython/teams",
            "trees_url": "https://api.github.com/repos/MatzeB/cython/git/trees{/sha}",
            "updated_at": "2020-06-18T19:37:14Z",
            "url": "https://api.github.com/repos/MatzeB/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "002f669a635d39ddb8df902c0ca8e398f59e3d59",
        "user": {
            "avatar_url": "https://avatars2.githubusercontent.com/u/71571?v=4",
            "events_url": "https://api.github.com/users/MatzeB/events{/privacy}",
            "followers_url": "https://api.github.com/users/MatzeB/followers",
            "following_url": "https://api.github.com/users/MatzeB/following{/other_user}",
            "gists_url": "https://api.github.com/users/MatzeB/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/MatzeB",
            "id": 71571,
            "login": "MatzeB",
            "node_id": "MDQ6VXNlcjcxNTcx",
            "organizations_url": "https://api.github.com/users/MatzeB/orgs",
            "received_events_url": "https://api.github.com/users/MatzeB/received_events",
            "repos_url": "https://api.github.com/users/MatzeB/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/MatzeB/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MatzeB/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/MatzeB"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3693",
    "id": 437280404,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3693",
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        },
        {
            "color": "444444",
            "default": true,
            "description": null,
            "id": 425556243,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MjU1NTYyNDM=",
            "url": "https://api.github.com/repos/cython/cython/labels/enhancement"
        }
    ],
    "locked": false,
    "merge_commit_sha": "0bf060f9cb9e4f5db0d44e4727c0d27ce775ca8c",
    "merged_at": "2020-06-20T06:28:43Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 246,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 21,
        "state": "open",
        "title": "3.0",
        "updated_at": "2020-06-20T06:28:43Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDM3MjgwNDA0",
    "number": 3693,
    "patch_url": "https://github.com/cython/cython/pull/3693.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3693/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/002f669a635d39ddb8df902c0ca8e398f59e3d59",
    "title": "Avoid using tp_name when CYTHON_COMPILING_IN_LIMITED",
    "updated_at": "2020-06-20T06:28:43Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3693",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/71571?v=4",
        "events_url": "https://api.github.com/users/MatzeB/events{/privacy}",
        "followers_url": "https://api.github.com/users/MatzeB/followers",
        "following_url": "https://api.github.com/users/MatzeB/following{/other_user}",
        "gists_url": "https://api.github.com/users/MatzeB/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/MatzeB",
        "id": 71571,
        "login": "MatzeB",
        "node_id": "MDQ6VXNlcjcxNTcx",
        "organizations_url": "https://api.github.com/users/MatzeB/orgs",
        "received_events_url": "https://api.github.com/users/MatzeB/received_events",
        "repos_url": "https://api.github.com/users/MatzeB/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/MatzeB/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MatzeB/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/MatzeB"
    }
}