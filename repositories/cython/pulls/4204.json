{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/4204/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4204/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/4204"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/4204"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4204/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4204"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/b30cc603b3a25089790e0d0dc6aaa0ea1e653203"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "COLLABORATOR",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1160,
            "forks_count": 1160,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 959,
            "open_issues_count": 959,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2021-06-18T01:21:54Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 62968,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 6156,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2021-06-18T02:36:16Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 6156,
            "watchers_count": 6156
        },
        "sha": "b3f8a198d96727c9111dbc707a05e286b93c974c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Fixes #4172 by avoiding an infinitely loop on when not implemented.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4204#discussion_r648038861"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4204"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/648038861"
                }
            },
            "author_association": "MEMBER",
            "body": "Took me a while to decipher this comment, but I think you meant this:\r\n```suggestion\r\n# TODO: Test a class that only defines the `__r...__()` methods.\r\n```",
            "commit_id": "b30cc603b3a25089790e0d0dc6aaa0ea1e653203",
            "created_at": "2021-06-09T07:27:47Z",
            "diff_hunk": "@@ -35,51 +61,110 @@ class Base(object):\n @cython.cclass\n class OverloadLeft(Base):\n     \"\"\"\n-    >>> OverloadLeft() + 2\n+    >>> OverloadLeft(1) + 2\n     'OverloadLeft.__add__(OverloadLeft(), 2)'\n-    >>> 2 + OverloadLeft()\n+    >>> 2 + OverloadLeft(1)\n     'Base.__radd__(OverloadLeft(), 2)'\n \n-    >>> OverloadLeft() + Base()\n+    >>> OverloadLeft(1) + Base(1)\n     'OverloadLeft.__add__(OverloadLeft(), Base())'\n-    >>> Base() + OverloadLeft()\n+    >>> Base(1) + OverloadLeft(1)\n     'Base.__add__(Base(), OverloadLeft())'\n+\n+    >>> OverloadLeft(0) + Base(0)  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+    >>> Base(0) + OverloadLeft(0)  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n     \"\"\"\n+    derived_implemented: cython.int\n+\n+    def __init__(self, derived_implemented):\n+        super().__init__(derived_implemented)\n+        self.derived_implemented = derived_implemented\n+\n     def __add__(self, other):\n-        return \"OverloadLeft.__add__(%s, %s)\" % (self, other)\n+        if (<OverloadLeft>self).derived_implemented:\n+            return \"OverloadLeft.__add__(%s, %s)\" % (self, other)\n+        else:\n+            return NotImplemented\n \n \n @cython.c_api_binop_methods(False)\n @cython.cclass\n class OverloadRight(Base):\n     \"\"\"\n-    >>> OverloadRight() + 2\n+    >>> OverloadRight(1) + 2\n     'Base.__add__(OverloadRight(), 2)'\n-    >>> 2 + OverloadRight()\n+    >>> 2 + OverloadRight(1)\n     'OverloadRight.__radd__(OverloadRight(), 2)'\n \n-    >>> OverloadRight() + Base()\n+    >>> OverloadRight(1) + Base(1)\n     'Base.__add__(OverloadRight(), Base())'\n-    >>> Base() + OverloadRight()\n+    >>> Base(1) + OverloadRight(1)\n     'OverloadRight.__radd__(OverloadRight(), Base())'\n+\n+    >>> OverloadRight(0) + Base(0)  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+    >>> Base(0) + OverloadRight(0)  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n     \"\"\"\n+    derived_implemented: cython.int\n+\n+    def __init__(self, derived_implemented):\n+        super().__init__(derived_implemented)\n+        self.derived_implemented = derived_implemented\n+\n     def __radd__(self, other):\n-        return \"OverloadRight.__radd__(%s, %s)\" % (self, other)\n+        if (<OverloadRight>self).derived_implemented:\n+            return \"OverloadRight.__radd__(%s, %s)\" % (self, other)\n+        else:\n+            return NotImplemented\n \n @cython.c_api_binop_methods(True)\n @cython.cclass\n class OverloadCApi(Base):\n     \"\"\"\n-    >>> OverloadCApi() + 2\n+    >>> OverloadCApi(1) + 2\n     'OverloadCApi.__add__(OverloadCApi(), 2)'\n-    >>> 2 + OverloadCApi()\n+    >>> 2 + OverloadCApi(1)\n     'OverloadCApi.__add__(2, OverloadCApi())'\n \n-    >>> OverloadCApi() + Base()\n+    >>> OverloadCApi(1) + Base(1)\n     'OverloadCApi.__add__(OverloadCApi(), Base())'\n-    >>> Base() + OverloadCApi()\n+    >>> Base(1) + OverloadCApi(1)\n     'OverloadCApi.__add__(Base(), OverloadCApi())'\n+\n+    >>> OverloadCApi(0) + 2 #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+    >>> 2 + OverloadCApi(0) #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n     \"\"\"\n+    derived_implemented: cython.int\n+\n+    def __init__(self, derived_implemented):\n+        super().__init__(1)\n+        self.derived_implemented = derived_implemented\n+\n     def __add__(self, other):\n-        return \"OverloadCApi.__add__(%s, %s)\" % (self, other)\n+        if isinstance(self, OverloadCApi):\n+            derived_implemented = (<OverloadCApi>self).derived_implemented\n+        else:\n+            derived_implemented = (<OverloadCApi>other).derived_implemented\n+        if derived_implemented:\n+            return \"OverloadCApi.__add__(%s, %s)\" % (self, other)\n+        else:\n+            return NotImplemented\n \n+# TODO: Only defines right?",
            "html_url": "https://github.com/cython/cython/pull/4204#discussion_r648038861",
            "id": 648038861,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0ODAzODg2MQ==",
            "original_commit_id": "e37c16d6c4c6762df4b08c57668e0c046487afeb",
            "original_line": 170,
            "original_position": 190,
            "original_start_line": null,
            "path": "tests/run/binop_reverse_methods_GH2056.pyx",
            "position": null,
            "pull_request_review_id": 679301036,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4204",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-09T07:42:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/648038861",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4204#discussion_r648043320"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4204"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/648043320"
                }
            },
            "author_association": "MEMBER",
            "body": "I wonder how to make the usage readable in the tests. What about his?\r\n```suggestion\r\n    def __init__(self, implemented=\"implemented\"):\r\n        assert implemented in (\"implemented\", \"not implemented\")\r\n        self.implemented = implemented == \"implemented\"\r\n```",
            "commit_id": "b30cc603b3a25089790e0d0dc6aaa0ea1e653203",
            "created_at": "2021-06-09T07:34:06Z",
            "diff_hunk": "@@ -4,29 +4,55 @@ cimport cython\n @cython.cclass\n class Base(object):\n     \"\"\"\n-    >>> Base() + 2\n+    >>> Base(1) + 2\n     'Base.__add__(Base(), 2)'\n-    >>> 2 + Base()\n+    >>> 2 + Base(1)\n     'Base.__radd__(Base(), 2)'\n \n-    >>> Base() ** 2\n+    >>> Base(0) + 2  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+    >>> 2 + Base(0)  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+\n+    >>> Base(1) ** 2\n     'Base.__pow__(Base(), 2, None)'\n-    >>> 2 ** Base()\n+    >>> 2 ** Base(1)\n     'Base.__rpow__(Base(), 2, None)'\n-    >>> pow(Base(), 2, 100)\n+    >>> pow(Base(1), 2, 100)\n     'Base.__pow__(Base(), 2, 100)'\n     \"\"\"\n+    implemented: cython.int\n+\n+    def __init__(self, implemented):\n+        self.implemented = implemented",
            "html_url": "https://github.com/cython/cython/pull/4204#discussion_r648043320",
            "id": 648043320,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0ODA0MzMyMA==",
            "original_commit_id": "e37c16d6c4c6762df4b08c57668e0c046487afeb",
            "original_line": 31,
            "original_position": 33,
            "original_start_line": 30,
            "path": "tests/run/binop_reverse_methods_GH2056.pyx",
            "position": null,
            "pull_request_review_id": 679301036,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4204",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-09T07:42:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/648043320",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4204#discussion_r648043848"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4204"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/648043848"
                }
            },
            "author_association": "MEMBER",
            "body": "Isn't the whole point of this feature to make the cast unnecessary?",
            "commit_id": "b30cc603b3a25089790e0d0dc6aaa0ea1e653203",
            "created_at": "2021-06-09T07:34:53Z",
            "diff_hunk": "@@ -4,29 +4,55 @@ cimport cython\n @cython.cclass\n class Base(object):\n     \"\"\"\n-    >>> Base() + 2\n+    >>> Base(1) + 2\n     'Base.__add__(Base(), 2)'\n-    >>> 2 + Base()\n+    >>> 2 + Base(1)\n     'Base.__radd__(Base(), 2)'\n \n-    >>> Base() ** 2\n+    >>> Base(0) + 2  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+    >>> 2 + Base(0)  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+\n+    >>> Base(1) ** 2\n     'Base.__pow__(Base(), 2, None)'\n-    >>> 2 ** Base()\n+    >>> 2 ** Base(1)\n     'Base.__rpow__(Base(), 2, None)'\n-    >>> pow(Base(), 2, 100)\n+    >>> pow(Base(1), 2, 100)\n     'Base.__pow__(Base(), 2, 100)'\n     \"\"\"\n+    implemented: cython.int\n+\n+    def __init__(self, implemented):\n+        self.implemented = implemented\n+\n     def __add__(self, other):\n-        return \"Base.__add__(%s, %s)\" % (self, other)\n+        if (<Base>self).implemented:",
            "html_url": "https://github.com/cython/cython/pull/4204#discussion_r648043848",
            "id": 648043848,
            "line": 34,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0ODA0Mzg0OA==",
            "original_commit_id": "e37c16d6c4c6762df4b08c57668e0c046487afeb",
            "original_line": 34,
            "original_position": 37,
            "original_start_line": null,
            "path": "tests/run/binop_reverse_methods_GH2056.pyx",
            "position": 27,
            "pull_request_review_id": 679301036,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4204",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-09T07:42:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/648043848",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4204#discussion_r648499539"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4204"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/648499539"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I've changed it to be a keyword-only argument, which I think makes it more readable.",
            "commit_id": "b30cc603b3a25089790e0d0dc6aaa0ea1e653203",
            "created_at": "2021-06-09T16:55:46Z",
            "diff_hunk": "@@ -4,29 +4,55 @@ cimport cython\n @cython.cclass\n class Base(object):\n     \"\"\"\n-    >>> Base() + 2\n+    >>> Base(1) + 2\n     'Base.__add__(Base(), 2)'\n-    >>> 2 + Base()\n+    >>> 2 + Base(1)\n     'Base.__radd__(Base(), 2)'\n \n-    >>> Base() ** 2\n+    >>> Base(0) + 2  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+    >>> 2 + Base(0)  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+\n+    >>> Base(1) ** 2\n     'Base.__pow__(Base(), 2, None)'\n-    >>> 2 ** Base()\n+    >>> 2 ** Base(1)\n     'Base.__rpow__(Base(), 2, None)'\n-    >>> pow(Base(), 2, 100)\n+    >>> pow(Base(1), 2, 100)\n     'Base.__pow__(Base(), 2, 100)'\n     \"\"\"\n+    implemented: cython.int\n+\n+    def __init__(self, implemented):\n+        self.implemented = implemented",
            "html_url": "https://github.com/cython/cython/pull/4204#discussion_r648499539",
            "id": 648499539,
            "in_reply_to_id": 648043320,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0ODQ5OTUzOQ==",
            "original_commit_id": "e37c16d6c4c6762df4b08c57668e0c046487afeb",
            "original_line": 31,
            "original_position": 33,
            "original_start_line": 30,
            "path": "tests/run/binop_reverse_methods_GH2056.pyx",
            "position": null,
            "pull_request_review_id": 679914736,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4204",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2021-06-09T16:55:47Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/648499539",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4204#discussion_r648503354"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4204"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/648503354"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "Maybe? https://github.com/cython/cython/issues/2056#issuecomment-656096798\r\n\r\nI think `__radd__` could always have the type set correctly. For `__add__` it's more complicated because we're currently going for hybrid behaviour so that old code keeps working without changes.\r\n\r\nI think it's probably outside the scope of this PR anyway (which is mainly just aiming to stop valid code from crashing)",
            "commit_id": "b30cc603b3a25089790e0d0dc6aaa0ea1e653203",
            "created_at": "2021-06-09T17:00:57Z",
            "diff_hunk": "@@ -4,29 +4,55 @@ cimport cython\n @cython.cclass\n class Base(object):\n     \"\"\"\n-    >>> Base() + 2\n+    >>> Base(1) + 2\n     'Base.__add__(Base(), 2)'\n-    >>> 2 + Base()\n+    >>> 2 + Base(1)\n     'Base.__radd__(Base(), 2)'\n \n-    >>> Base() ** 2\n+    >>> Base(0) + 2  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+    >>> 2 + Base(0)  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+\n+    >>> Base(1) ** 2\n     'Base.__pow__(Base(), 2, None)'\n-    >>> 2 ** Base()\n+    >>> 2 ** Base(1)\n     'Base.__rpow__(Base(), 2, None)'\n-    >>> pow(Base(), 2, 100)\n+    >>> pow(Base(1), 2, 100)\n     'Base.__pow__(Base(), 2, 100)'\n     \"\"\"\n+    implemented: cython.int\n+\n+    def __init__(self, implemented):\n+        self.implemented = implemented\n+\n     def __add__(self, other):\n-        return \"Base.__add__(%s, %s)\" % (self, other)\n+        if (<Base>self).implemented:",
            "html_url": "https://github.com/cython/cython/pull/4204#discussion_r648503354",
            "id": 648503354,
            "in_reply_to_id": 648043848,
            "line": 34,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0ODUwMzM1NA==",
            "original_commit_id": "e37c16d6c4c6762df4b08c57668e0c046487afeb",
            "original_line": 34,
            "original_position": 37,
            "original_start_line": null,
            "path": "tests/run/binop_reverse_methods_GH2056.pyx",
            "position": 27,
            "pull_request_review_id": 679919772,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4204",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-09T17:00:58Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/648503354",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4204#discussion_r649056866"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4204"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/649056866"
                }
            },
            "author_association": "MEMBER",
            "body": "Yeah, I keep being outsmarted by my past self... Ok, then it doesn't work yet without the cast. Not part of this PR.",
            "commit_id": "b30cc603b3a25089790e0d0dc6aaa0ea1e653203",
            "created_at": "2021-06-10T10:27:54Z",
            "diff_hunk": "@@ -4,29 +4,55 @@ cimport cython\n @cython.cclass\n class Base(object):\n     \"\"\"\n-    >>> Base() + 2\n+    >>> Base(1) + 2\n     'Base.__add__(Base(), 2)'\n-    >>> 2 + Base()\n+    >>> 2 + Base(1)\n     'Base.__radd__(Base(), 2)'\n \n-    >>> Base() ** 2\n+    >>> Base(0) + 2  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+    >>> 2 + Base(0)  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+\n+    >>> Base(1) ** 2\n     'Base.__pow__(Base(), 2, None)'\n-    >>> 2 ** Base()\n+    >>> 2 ** Base(1)\n     'Base.__rpow__(Base(), 2, None)'\n-    >>> pow(Base(), 2, 100)\n+    >>> pow(Base(1), 2, 100)\n     'Base.__pow__(Base(), 2, 100)'\n     \"\"\"\n+    implemented: cython.int\n+\n+    def __init__(self, implemented):\n+        self.implemented = implemented\n+\n     def __add__(self, other):\n-        return \"Base.__add__(%s, %s)\" % (self, other)\n+        if (<Base>self).implemented:",
            "html_url": "https://github.com/cython/cython/pull/4204#discussion_r649056866",
            "id": 649056866,
            "in_reply_to_id": 648043848,
            "line": 34,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0OTA1Njg2Ng==",
            "original_commit_id": "e37c16d6c4c6762df4b08c57668e0c046487afeb",
            "original_line": 34,
            "original_position": 37,
            "original_start_line": null,
            "path": "tests/run/binop_reverse_methods_GH2056.pyx",
            "position": 27,
            "pull_request_review_id": 680612873,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4204",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-10T10:27:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/649056866",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4204#discussion_r649058824"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4204"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/649058824"
                }
            },
            "author_association": "MEMBER",
            "body": "BTW, when we implement this, I think we should do it for both `__radd__` *and* `__add__` etc. It's ok if older Cython versions don't know about the type of `self`, but new ones should. I don't think this change would hurt existing code.",
            "commit_id": "b30cc603b3a25089790e0d0dc6aaa0ea1e653203",
            "created_at": "2021-06-10T10:30:55Z",
            "diff_hunk": "@@ -4,29 +4,55 @@ cimport cython\n @cython.cclass\n class Base(object):\n     \"\"\"\n-    >>> Base() + 2\n+    >>> Base(1) + 2\n     'Base.__add__(Base(), 2)'\n-    >>> 2 + Base()\n+    >>> 2 + Base(1)\n     'Base.__radd__(Base(), 2)'\n \n-    >>> Base() ** 2\n+    >>> Base(0) + 2  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+    >>> 2 + Base(0)  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+\n+    >>> Base(1) ** 2\n     'Base.__pow__(Base(), 2, None)'\n-    >>> 2 ** Base()\n+    >>> 2 ** Base(1)\n     'Base.__rpow__(Base(), 2, None)'\n-    >>> pow(Base(), 2, 100)\n+    >>> pow(Base(1), 2, 100)\n     'Base.__pow__(Base(), 2, 100)'\n     \"\"\"\n+    implemented: cython.int\n+\n+    def __init__(self, implemented):\n+        self.implemented = implemented\n+\n     def __add__(self, other):\n-        return \"Base.__add__(%s, %s)\" % (self, other)\n+        if (<Base>self).implemented:",
            "html_url": "https://github.com/cython/cython/pull/4204#discussion_r649058824",
            "id": 649058824,
            "in_reply_to_id": 648043848,
            "line": 34,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0OTA1ODgyNA==",
            "original_commit_id": "e37c16d6c4c6762df4b08c57668e0c046487afeb",
            "original_line": 34,
            "original_position": 37,
            "original_start_line": null,
            "path": "tests/run/binop_reverse_methods_GH2056.pyx",
            "position": 27,
            "pull_request_review_id": 680615497,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4204",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-10T10:30:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/649058824",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4204#discussion_r649352010"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4204"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/649352010"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I think the problem for existing code is:\r\n\r\n```\r\ncdef class C:\r\n   def __add__(lhs, rhs):\r\n      if isinstance(lhs, C):\r\n         return (<C>lhs).some_attribute\r\n      else:\r\n         return (<C>rhs).some_attribute # but it's not safe to treat lhs as a C\r\n```\r\n\r\nit isn't clear how to handle that. Options might be:\r\n* opt-in compiler directive to get \"full\" proper behavious\r\n* detect `__radd__`, because that makes it clear how `__add__` should behave too.\r\n* detect `isinstance(..., C)` checks inside `__add__` (but that could be unreliable - there's other ways of doing the same thing)",
            "commit_id": "b30cc603b3a25089790e0d0dc6aaa0ea1e653203",
            "created_at": "2021-06-10T16:39:03Z",
            "diff_hunk": "@@ -4,29 +4,55 @@ cimport cython\n @cython.cclass\n class Base(object):\n     \"\"\"\n-    >>> Base() + 2\n+    >>> Base(1) + 2\n     'Base.__add__(Base(), 2)'\n-    >>> 2 + Base()\n+    >>> 2 + Base(1)\n     'Base.__radd__(Base(), 2)'\n \n-    >>> Base() ** 2\n+    >>> Base(0) + 2  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+    >>> 2 + Base(0)  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+\n+    >>> Base(1) ** 2\n     'Base.__pow__(Base(), 2, None)'\n-    >>> 2 ** Base()\n+    >>> 2 ** Base(1)\n     'Base.__rpow__(Base(), 2, None)'\n-    >>> pow(Base(), 2, 100)\n+    >>> pow(Base(1), 2, 100)\n     'Base.__pow__(Base(), 2, 100)'\n     \"\"\"\n+    implemented: cython.int\n+\n+    def __init__(self, implemented):\n+        self.implemented = implemented\n+\n     def __add__(self, other):\n-        return \"Base.__add__(%s, %s)\" % (self, other)\n+        if (<Base>self).implemented:",
            "html_url": "https://github.com/cython/cython/pull/4204#discussion_r649352010",
            "id": 649352010,
            "in_reply_to_id": 648043848,
            "line": 34,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0OTM1MjAxMA==",
            "original_commit_id": "e37c16d6c4c6762df4b08c57668e0c046487afeb",
            "original_line": 34,
            "original_position": 37,
            "original_start_line": null,
            "path": "tests/run/binop_reverse_methods_GH2056.pyx",
            "position": 27,
            "pull_request_review_id": 681017149,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4204",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-10T16:39:03Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/649352010",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4204#discussion_r649531715"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4204"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/649531715"
                }
            },
            "author_association": "MEMBER",
            "body": "Can't we base it on the same (translation time) decisions that allow us to call `__add__` vs. `__radd__` in the first place? If we know that we need our dispatch mechanism, then we know that the first argument is `self`, don't we?",
            "commit_id": "b30cc603b3a25089790e0d0dc6aaa0ea1e653203",
            "created_at": "2021-06-10T21:05:05Z",
            "diff_hunk": "@@ -4,29 +4,55 @@ cimport cython\n @cython.cclass\n class Base(object):\n     \"\"\"\n-    >>> Base() + 2\n+    >>> Base(1) + 2\n     'Base.__add__(Base(), 2)'\n-    >>> 2 + Base()\n+    >>> 2 + Base(1)\n     'Base.__radd__(Base(), 2)'\n \n-    >>> Base() ** 2\n+    >>> Base(0) + 2  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+    >>> 2 + Base(0)  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+\n+    >>> Base(1) ** 2\n     'Base.__pow__(Base(), 2, None)'\n-    >>> 2 ** Base()\n+    >>> 2 ** Base(1)\n     'Base.__rpow__(Base(), 2, None)'\n-    >>> pow(Base(), 2, 100)\n+    >>> pow(Base(1), 2, 100)\n     'Base.__pow__(Base(), 2, 100)'\n     \"\"\"\n+    implemented: cython.int\n+\n+    def __init__(self, implemented):\n+        self.implemented = implemented\n+\n     def __add__(self, other):\n-        return \"Base.__add__(%s, %s)\" % (self, other)\n+        if (<Base>self).implemented:",
            "html_url": "https://github.com/cython/cython/pull/4204#discussion_r649531715",
            "id": 649531715,
            "in_reply_to_id": 648043848,
            "line": 34,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0OTUzMTcxNQ==",
            "original_commit_id": "e37c16d6c4c6762df4b08c57668e0c046487afeb",
            "original_line": 34,
            "original_position": 37,
            "original_start_line": null,
            "path": "tests/run/binop_reverse_methods_GH2056.pyx",
            "position": 27,
            "pull_request_review_id": 681259012,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4204",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-10T21:05:06Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/649531715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4204#discussion_r649543699"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4204"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/649543699"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I don't think so. The difficulty is when you have a class that only defines `__add__`:\r\n\r\n```\r\nclass C:\r\n   def __add__(self, other):\r\n      return self\r\n```\r\n\r\nIn Python `1+C()` is not implemented, so fails.\r\n\r\nIn Cython it isn't clear if the user wants the old-style version of `C.__add__(1, C())` or the new style version that matches Python and fails.\r\n\r\nObviously there's a lot of cases where it is clear (based on the dispatch mechanism) and we can happily set the types. But the one ambiguous case is probably pretty common.",
            "commit_id": "b30cc603b3a25089790e0d0dc6aaa0ea1e653203",
            "created_at": "2021-06-10T21:26:48Z",
            "diff_hunk": "@@ -4,29 +4,55 @@ cimport cython\n @cython.cclass\n class Base(object):\n     \"\"\"\n-    >>> Base() + 2\n+    >>> Base(1) + 2\n     'Base.__add__(Base(), 2)'\n-    >>> 2 + Base()\n+    >>> 2 + Base(1)\n     'Base.__radd__(Base(), 2)'\n \n-    >>> Base() ** 2\n+    >>> Base(0) + 2  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+    >>> 2 + Base(0)  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+\n+    >>> Base(1) ** 2\n     'Base.__pow__(Base(), 2, None)'\n-    >>> 2 ** Base()\n+    >>> 2 ** Base(1)\n     'Base.__rpow__(Base(), 2, None)'\n-    >>> pow(Base(), 2, 100)\n+    >>> pow(Base(1), 2, 100)\n     'Base.__pow__(Base(), 2, 100)'\n     \"\"\"\n+    implemented: cython.int\n+\n+    def __init__(self, implemented):\n+        self.implemented = implemented\n+\n     def __add__(self, other):\n-        return \"Base.__add__(%s, %s)\" % (self, other)\n+        if (<Base>self).implemented:",
            "html_url": "https://github.com/cython/cython/pull/4204#discussion_r649543699",
            "id": 649543699,
            "in_reply_to_id": 648043848,
            "line": 34,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0OTU0MzY5OQ==",
            "original_commit_id": "e37c16d6c4c6762df4b08c57668e0c046487afeb",
            "original_line": 34,
            "original_position": 37,
            "original_start_line": null,
            "path": "tests/run/binop_reverse_methods_GH2056.pyx",
            "position": 27,
            "pull_request_review_id": 681274244,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4204",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-10T21:26:48Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/649543699",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4204#discussion_r650189712"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4204"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/650189712"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm questioning that this is a problem, though. All we'd be doing is set the type of the `self` argument, iff `c_api_binop_methods` is false (the new default). The only problem with this that I can see is if users try to re-assign something to `self` which does not have the right type. To me, that doesn't feel like a common thing to do.\r\n\r\nSpecifically, the example that you gave [above](https://github.com/cython/cython/pull/4204#discussion_r649352010) is entirely fine, whether `self` is typed or not.",
            "commit_id": "b30cc603b3a25089790e0d0dc6aaa0ea1e653203",
            "created_at": "2021-06-11T18:28:51Z",
            "diff_hunk": "@@ -4,29 +4,55 @@ cimport cython\n @cython.cclass\n class Base(object):\n     \"\"\"\n-    >>> Base() + 2\n+    >>> Base(1) + 2\n     'Base.__add__(Base(), 2)'\n-    >>> 2 + Base()\n+    >>> 2 + Base(1)\n     'Base.__radd__(Base(), 2)'\n \n-    >>> Base() ** 2\n+    >>> Base(0) + 2  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+    >>> 2 + Base(0)  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+\n+    >>> Base(1) ** 2\n     'Base.__pow__(Base(), 2, None)'\n-    >>> 2 ** Base()\n+    >>> 2 ** Base(1)\n     'Base.__rpow__(Base(), 2, None)'\n-    >>> pow(Base(), 2, 100)\n+    >>> pow(Base(1), 2, 100)\n     'Base.__pow__(Base(), 2, 100)'\n     \"\"\"\n+    implemented: cython.int\n+\n+    def __init__(self, implemented):\n+        self.implemented = implemented\n+\n     def __add__(self, other):\n-        return \"Base.__add__(%s, %s)\" % (self, other)\n+        if (<Base>self).implemented:",
            "html_url": "https://github.com/cython/cython/pull/4204#discussion_r650189712",
            "id": 650189712,
            "in_reply_to_id": 648043848,
            "line": 34,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MDE4OTcxMg==",
            "original_commit_id": "e37c16d6c4c6762df4b08c57668e0c046487afeb",
            "original_line": 34,
            "original_position": 37,
            "original_start_line": null,
            "path": "tests/run/binop_reverse_methods_GH2056.pyx",
            "position": 27,
            "pull_request_review_id": 682116678,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4204",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-11T18:28:51Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/650189712",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/4204#discussion_r650228249"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/4204"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/650228249"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "I can come up with a contrived example of something that would work in Cython 0.29.x, but break if `self` is automatically typed:\r\n\r\n```\r\nclass RegularClass:\r\n   def __init__(self):\r\n       self.a = 10\r\n\r\ncdef class CdefClass:\r\n    cdef int a\r\n    def __add__(self, other):\r\n       if isinstance(self, CdefClass):\r\n           return \"self was CdefClass\"\r\n       else:\r\n            return self.a  # should do a Python attribute lookup, but tries to access CdefClass.a directly\r\n\r\nRegularClass() + CdefClass()\r\n```\r\n\r\nIt's very contrived though - I take the point that it's most likely fine for the common cases (and that there's a simple directive that fixes the code again, and that 3.0 is the time to break existing code if ever, and that we do emit a warning if they only define `__xxx__` and not `__rxxx__` and don't set `c_api_binop_methods`).\r\n\r\nSo maybe it's worth doing and accepting very occasional problems? ",
            "commit_id": "b30cc603b3a25089790e0d0dc6aaa0ea1e653203",
            "created_at": "2021-06-11T19:47:23Z",
            "diff_hunk": "@@ -4,29 +4,55 @@ cimport cython\n @cython.cclass\n class Base(object):\n     \"\"\"\n-    >>> Base() + 2\n+    >>> Base(1) + 2\n     'Base.__add__(Base(), 2)'\n-    >>> 2 + Base()\n+    >>> 2 + Base(1)\n     'Base.__radd__(Base(), 2)'\n \n-    >>> Base() ** 2\n+    >>> Base(0) + 2  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+    >>> 2 + Base(0)  #doctest: +ELLIPSIS\n+    Traceback (most recent call last):\n+    ...\n+    TypeError: unsupported operand type...\n+\n+    >>> Base(1) ** 2\n     'Base.__pow__(Base(), 2, None)'\n-    >>> 2 ** Base()\n+    >>> 2 ** Base(1)\n     'Base.__rpow__(Base(), 2, None)'\n-    >>> pow(Base(), 2, 100)\n+    >>> pow(Base(1), 2, 100)\n     'Base.__pow__(Base(), 2, 100)'\n     \"\"\"\n+    implemented: cython.int\n+\n+    def __init__(self, implemented):\n+        self.implemented = implemented\n+\n     def __add__(self, other):\n-        return \"Base.__add__(%s, %s)\" % (self, other)\n+        if (<Base>self).implemented:",
            "html_url": "https://github.com/cython/cython/pull/4204#discussion_r650228249",
            "id": 650228249,
            "in_reply_to_id": 648043848,
            "line": 34,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MDIyODI0OQ==",
            "original_commit_id": "e37c16d6c4c6762df4b08c57668e0c046487afeb",
            "original_line": 34,
            "original_position": 37,
            "original_start_line": null,
            "path": "tests/run/binop_reverse_methods_GH2056.pyx",
            "position": 27,
            "pull_request_review_id": 682168457,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/4204",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2021-06-11T19:47:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/650228249",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4204/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b66b0ac0bca62dfa1a67237900a56012c8164395/comments",
            "commit": {
                "author": {
                    "date": "2021-05-24T17:29:59Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-24T17:29:59Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Partial fix for GH4172\n\nAvoids infinite loop but has test failures still",
                "tree": {
                    "sha": "a4ee4a922f76556d7ed5a85da380ea55cb4a3e63",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a4ee4a922f76556d7ed5a85da380ea55cb4a3e63"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b66b0ac0bca62dfa1a67237900a56012c8164395",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/b66b0ac0bca62dfa1a67237900a56012c8164395",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YjY2YjBhYzBiY2E2MmRmYTFhNjcyMzc5MDBhNTYwMTJjODE2NDM5NQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/0e80efb82480b777057770ce2006a6b46ec46028",
                    "sha": "0e80efb82480b777057770ce2006a6b46ec46028",
                    "url": "https://api.github.com/repos/cython/cython/commits/0e80efb82480b777057770ce2006a6b46ec46028"
                }
            ],
            "sha": "b66b0ac0bca62dfa1a67237900a56012c8164395",
            "url": "https://api.github.com/repos/cython/cython/commits/b66b0ac0bca62dfa1a67237900a56012c8164395"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e37c16d6c4c6762df4b08c57668e0c046487afeb/comments",
            "commit": {
                "author": {
                    "date": "2021-05-31T08:17:13Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-05-31T08:17:13Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Passes all the tests!!!",
                "tree": {
                    "sha": "db357d50ff48c718df2da9bec47eaa7967053bb5",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/db357d50ff48c718df2da9bec47eaa7967053bb5"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e37c16d6c4c6762df4b08c57668e0c046487afeb",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/e37c16d6c4c6762df4b08c57668e0c046487afeb",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZTM3YzE2ZDZjNGM2NzYyZGY0YjA4YzU3NjY4ZTBjMDQ2NDg3YWZlYg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b66b0ac0bca62dfa1a67237900a56012c8164395",
                    "sha": "b66b0ac0bca62dfa1a67237900a56012c8164395",
                    "url": "https://api.github.com/repos/cython/cython/commits/b66b0ac0bca62dfa1a67237900a56012c8164395"
                }
            ],
            "sha": "e37c16d6c4c6762df4b08c57668e0c046487afeb",
            "url": "https://api.github.com/repos/cython/cython/commits/e37c16d6c4c6762df4b08c57668e0c046487afeb"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d0c4b71e0c57a84e2702ea9412449629cb7d68f2/comments",
            "commit": {
                "author": {
                    "date": "2021-06-09T16:35:53Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-09T16:35:53Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "comment in\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "2fdfa8151145e6ca34ddf19768f34e97754ac213",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2fdfa8151145e6ca34ddf19768f34e97754ac213"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d0c4b71e0c57a84e2702ea9412449629cb7d68f2",
                "verification": {
                    "payload": "tree 2fdfa8151145e6ca34ddf19768f34e97754ac213\nparent e37c16d6c4c6762df4b08c57668e0c046487afeb\nauthor da-woods <dw-git@d-woods.co.uk> 1623256553 +0100\ncommitter GitHub <noreply@github.com> 1623256553 +0100\n\ncomment in\n\nCo-authored-by: scoder <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgwO3pCRBK7hj4Ov3rIwAA4b8IALMBAORUsPUMdf6qKwIYUJgh\n7T87Zx4sH0BazQcOQKS9kz1JxlmuT24kIgb1nhvaiWdryz8swxq62CW2Vc9VGLQT\nJ+13Q+mfnTFB29EwbnxC73oe/VihO83tDGwiwdOWGx5av59moEX2L4pERUIqr6Zu\nu8mDdFslzwwc6d6UAZCrA+uksE9nzi+4WJ/2IVPXLczVZvNQ7yLuXT3LVidOZvBm\nMrxb4o1JsmnZoNWmiRiUCDmuV1RseR01EtGL16thkX4PlmlpKDtN6U3v0QwHDGBD\nIl1E63AtqBYJ7bkAehMJEgg5z6WQpJs0asyLSoIO7TQaQIwGoW36m1pctFMJLLM=\n=w6cq\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/d0c4b71e0c57a84e2702ea9412449629cb7d68f2",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZDBjNGI3MWUwYzU3YTg0ZTI3MDJlYTk0MTI0NDk2MjljYjdkNjhmMg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e37c16d6c4c6762df4b08c57668e0c046487afeb",
                    "sha": "e37c16d6c4c6762df4b08c57668e0c046487afeb",
                    "url": "https://api.github.com/repos/cython/cython/commits/e37c16d6c4c6762df4b08c57668e0c046487afeb"
                }
            ],
            "sha": "d0c4b71e0c57a84e2702ea9412449629cb7d68f2",
            "url": "https://api.github.com/repos/cython/cython/commits/d0c4b71e0c57a84e2702ea9412449629cb7d68f2"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5393c492b367d09cddb68819a3919ebe58a87399/comments",
            "commit": {
                "author": {
                    "date": "2021-06-09T16:54:31Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-09T16:54:31Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Implemented as kwarg for clarity",
                "tree": {
                    "sha": "36f7e19e447c65a4462b6da480392f419f22a461",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/36f7e19e447c65a4462b6da480392f419f22a461"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5393c492b367d09cddb68819a3919ebe58a87399",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/5393c492b367d09cddb68819a3919ebe58a87399",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NTM5M2M0OTJiMzY3ZDA5Y2RkYjY4ODE5YTM5MTllYmU1OGE4NzM5OQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d0c4b71e0c57a84e2702ea9412449629cb7d68f2",
                    "sha": "d0c4b71e0c57a84e2702ea9412449629cb7d68f2",
                    "url": "https://api.github.com/repos/cython/cython/commits/d0c4b71e0c57a84e2702ea9412449629cb7d68f2"
                }
            ],
            "sha": "5393c492b367d09cddb68819a3919ebe58a87399",
            "url": "https://api.github.com/repos/cython/cython/commits/5393c492b367d09cddb68819a3919ebe58a87399"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b30cc603b3a25089790e0d0dc6aaa0ea1e653203/comments",
            "commit": {
                "author": {
                    "date": "2021-06-17T19:28:42Z",
                    "email": "stefan_ml@behnel.de",
                    "name": "scoder"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2021-06-17T19:28:42Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Let's not overemphasize the fact all over the place that we *can* disable the implementation.",
                "tree": {
                    "sha": "9bd69db3a6c66f871a6d6f62f993c06cc386cd4f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/9bd69db3a6c66f871a6d6f62f993c06cc386cd4f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b30cc603b3a25089790e0d0dc6aaa0ea1e653203",
                "verification": {
                    "payload": "tree 9bd69db3a6c66f871a6d6f62f993c06cc386cd4f\nparent 5393c492b367d09cddb68819a3919ebe58a87399\nauthor scoder <stefan_ml@behnel.de> 1623958122 +0200\ncommitter GitHub <noreply@github.com> 1623958122 +0200\n\nLet's not overemphasize the fact all over the place that we *can* disable the implementation.",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgy6JqCRBK7hj4Ov3rIwAAJpAIABu/2qdUMc/AOYPPPc+nE+Zy\nzlRf5fc5uUpFb4HmyJgWHxYezoJLhcWmpdeFnFYc5+5j9FLN1m/6DvmDZDYcN0bf\nozBlcCXfzrPpa9Z4zqsu0Z5752eCAWk0T7cay9Nfvqy9WMvIHxYnhkUyNV3li8or\ne5pB6J+9S8ICguehLIjj9SBeVQ2kjLMxVSDORaK9urY5wKeI1FOubinw3nr0bg7C\nACsfqAF2J3pl0jpl4okMhVhUaVf4f9nKlZ4X+YjjTSluGnYwaVtSgCTtqEBKAZWR\nQ1ey1WsuIrrNAFFUCpl9eqYRNwjRRWVLYKkjjHCE2sQUbkQpS3xXJB9o3REhnH0=\n=1Wdx\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/b30cc603b3a25089790e0d0dc6aaa0ea1e653203",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YjMwY2M2MDNiM2EyNTA4OTc5MGUwZDBkYzZhYWEwZWExZTY1MzIwMw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/5393c492b367d09cddb68819a3919ebe58a87399",
                    "sha": "5393c492b367d09cddb68819a3919ebe58a87399",
                    "url": "https://api.github.com/repos/cython/cython/commits/5393c492b367d09cddb68819a3919ebe58a87399"
                }
            ],
            "sha": "b30cc603b3a25089790e0d0dc6aaa0ea1e653203",
            "url": "https://api.github.com/repos/cython/cython/commits/b30cc603b3a25089790e0d0dc6aaa0ea1e653203"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/4204/commits",
    "created_at": "2021-05-31T08:20:15Z",
    "diff_url": "https://github.com/cython/cython/pull/4204.diff",
    "draft": false,
    "head": {
        "label": "da-woods:binops3",
        "ref": "binops3",
        "repo": {
            "archive_url": "https://api.github.com/repos/da-woods/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/da-woods/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/da-woods/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/da-woods/cython/branches{/branch}",
            "clone_url": "https://github.com/da-woods/cython.git",
            "collaborators_url": "https://api.github.com/repos/da-woods/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/da-woods/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/da-woods/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/da-woods/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/da-woods/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/da-woods/cython/contributors",
            "created_at": "2015-05-09T08:55:00Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/da-woods/cython/deployments",
            "description": "A Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/da-woods/cython/downloads",
            "events_url": "https://api.github.com/repos/da-woods/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/da-woods/cython/forks",
            "full_name": "da-woods/cython",
            "git_commits_url": "https://api.github.com/repos/da-woods/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/da-woods/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/da-woods/cython/git/tags{/sha}",
            "git_url": "git://github.com/da-woods/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/da-woods/cython/hooks",
            "html_url": "https://github.com/da-woods/cython",
            "id": 35321967,
            "issue_comment_url": "https://api.github.com/repos/da-woods/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/da-woods/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/da-woods/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/da-woods/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/da-woods/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/da-woods/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/da-woods/cython/merges",
            "milestones_url": "https://api.github.com/repos/da-woods/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNTMyMTk2Nw==",
            "notifications_url": "https://api.github.com/repos/da-woods/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/da-woods/cython/pulls{/number}",
            "pushed_at": "2021-06-17T20:38:08Z",
            "releases_url": "https://api.github.com/repos/da-woods/cython/releases{/id}",
            "size": 65164,
            "ssh_url": "git@github.com:da-woods/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/da-woods/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/da-woods/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/da-woods/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/da-woods/cython/subscription",
            "svn_url": "https://github.com/da-woods/cython",
            "tags_url": "https://api.github.com/repos/da-woods/cython/tags",
            "teams_url": "https://api.github.com/repos/da-woods/cython/teams",
            "trees_url": "https://api.github.com/repos/da-woods/cython/git/trees{/sha}",
            "updated_at": "2021-05-31T21:16:07Z",
            "url": "https://api.github.com/repos/da-woods/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "b30cc603b3a25089790e0d0dc6aaa0ea1e653203",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
            "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
            "followers_url": "https://api.github.com/users/da-woods/followers",
            "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
            "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/da-woods",
            "id": 10536947,
            "login": "da-woods",
            "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
            "organizations_url": "https://api.github.com/users/da-woods/orgs",
            "received_events_url": "https://api.github.com/users/da-woods/received_events",
            "repos_url": "https://api.github.com/users/da-woods/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/da-woods"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/4204",
    "id": 658106906,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/4204",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "2937d8e73fde8198c34fbbb5428b0fc5ebbfdff0",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjU4MTA2OTA2",
    "number": 4204,
    "patch_url": "https://github.com/cython/cython/pull/4204.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/4204/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/b30cc603b3a25089790e0d0dc6aaa0ea1e653203",
    "title": "Fix recursion in binops",
    "updated_at": "2021-06-17T19:28:42Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/4204",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}