{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3427/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3427/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3427"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3427"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3427/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3427"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/01def8908a3ea550759e733733a1f8c5a0c7aeaf"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1049,
            "forks_count": 1049,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 853,
            "open_issues_count": 853,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2020-07-22T20:58:42Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 60061,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 5330,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2020-07-23T14:27:49Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 5330,
            "watchers_count": 5330
        },
        "sha": "e19fa590004305a9b3170c770c8244ef7f453e75",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Python's asyncio.coroutines uses an object (_is_coroutine) to tag objects as coroutine functions.\r\nOn this diff, we read _is_coroutine and use it to tag Cython functions and methods where appropriate.\r\n\r\nI tried to keep all changes inside a transform, that way it becomes simple to remove/replace with the protocol once CPython folks decide on one. I'm not sure about the pipeline order, so will gladly move if needed.\r\n\r\nIt also includes tests to make sure asyncio.iscoroutinefunction() works as expected. Please let me know if I need to move those to a specific place.\r\n\r\nThis doesn't fix inspect.iscouroutinefunction() (which uses a flag that can trigger\r\nundesirable behavior for cython functions).\r\n\r\nIssue #2273",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r392648864"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/392648864"
                }
            },
            "author_association": "MEMBER",
            "body": "There is a dedicated test file for the integration with `asyncio`, `py35_asyncio_async_def.srctree`. Please don't add the dependency here.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-03-15T07:32:56Z",
            "diff_hunk": "@@ -1,12 +1,13 @@\n # cython: language_level=3, binding=True\n # mode: run\n-# tag: pep492, await, gh3337\n+# tag: pep492, await, gh3337, gh2273\n \n \"\"\"\n Cython specific tests in addition to \"test_coroutines_pep492.pyx\"\n (which is copied from CPython).\n \"\"\"\n \n+import asyncio",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r392648864",
            "id": 392648864,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY0ODg2NA==",
            "original_commit_id": "c196b2148b1e6a24ac510789f7e92702522f941e",
            "original_line": 10,
            "original_position": 11,
            "original_start_line": null,
            "path": "tests/run/async_def.pyx",
            "position": null,
            "pull_request_review_id": 374777199,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/392648864",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r392649022"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/392649022"
                }
            },
            "author_association": "MEMBER",
            "body": "Note that you can intercept on these directly by naming convention, rather than giving the method a more general name and checking the type here.\r\n\r\nBut, rather than implementing this as a transform, I think having it in C would be much better. The particular object can just be an additional parameter for the `__Pyx_CyFunction_New()` C function, and the import can happen in a utility function. Or, the import could even happen on first access to the attribute (property) if it's still `NULL`, and setting it to `None` initially would make it a normal non-async function. Or something like that. In any case, the place where the function object is being created in C seems a good place to make the distinction and pass it into the `CyFunction_New()`, as a flag, object, or whatever.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-03-15T07:35:24Z",
            "diff_hunk": "@@ -2608,6 +2608,41 @@ def visit_CArgDeclNode(self, node):\n         pass\n \n \n+\n+class IsCoroutineTransform(CythonTransform):\n+    def visit_FuncDefNode(self, node):\n+        if isinstance(node, (Nodes.AsyncDefNode, Nodes.IterableAsyncDefNode, Nodes.AsyncGenNode)):",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r392649022",
            "id": 392649022,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY0OTAyMg==",
            "original_commit_id": "c196b2148b1e6a24ac510789f7e92702522f941e",
            "original_line": 2614,
            "original_position": 7,
            "original_start_line": null,
            "path": "Cython/Compiler/ParseTreeTransforms.py",
            "position": null,
            "pull_request_review_id": 374777199,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/392649022",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439352825"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439352825"
                }
            },
            "author_association": "MEMBER",
            "body": "This case leaks a reference with the `Py_INCREF()` below, because it already is an owned reference. (Also, if the lookup fails, then the result is `NULL` and you get a crash on the incref.)\r\n\r\nAlso, it's more efficient to use Python strings directly instead of C strings for the lookup:\r\n```suggestion\r\n        result = __Pyx_PyObject_GetAttrStr(module, PYIDENT(\"_is_coroutine\"));\r\n```\r\nThis requires an additional declaration at the beginning of this utility code section (~line 95) to also include this specific helper function:\r\n```\r\n//@requires: PyObjectGetAttrStr\r\n```\r\n\r\nYou can also use `PYIDENT(\"asyncio.coroutines\")` and then call `PyImport_ImportModuleLevelObject()`, at least in Py3. Py2 doesn't have that module anyway. And older Py3s don't have `._is_coroutine`. Check `PY_VERSION_HEX` to make it a Py3.5(?)-only feature.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-12T11:01:22Z",
            "diff_hunk": "@@ -362,6 +364,18 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n+static PyObject *\n+__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n+    PyObject* result = Py_None;\n+    if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+        PyObject *module = PyImport_ImportModule(\"asyncio.coroutines\");\n+        result = PyObject_GetAttrString(module, \"_is_coroutine\");",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439352825",
            "id": 439352825,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1MjgyNQ==",
            "original_commit_id": "b38e4b40176e4ee9847d1af5de82dfbc36f822f6",
            "original_line": 372,
            "original_position": 18,
            "original_start_line": null,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 429652194,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439352825",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439357069"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439357069"
                }
            },
            "author_association": "MEMBER",
            "body": "Is this used anywhere?",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-12T11:10:48Z",
            "diff_hunk": "@@ -9436,6 +9436,12 @@ def generate_cyfunction_code(self, code):\n         if def_node.local_scope.parent_scope.is_c_class_scope and not def_node.entry.is_anonymous:\n             flags.append('__Pyx_CYFUNCTION_CCLASS')\n \n+        # mutually exclusive as far as \"inspect\" is concerned\n+        if getattr(def_node, \"is_asyncgen\", None):\n+            flags.append('__Pyx_CYFUNCTION_ASYNCGEN')",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439357069",
            "id": 439357069,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1NzA2OQ==",
            "original_commit_id": "b38e4b40176e4ee9847d1af5de82dfbc36f822f6",
            "original_line": 9441,
            "original_position": 6,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 429652194,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439357069",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439358669"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439358669"
                }
            },
            "author_association": "MEMBER",
            "body": "Why would a simple attribute lookup not work here?",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-12T11:14:24Z",
            "diff_hunk": "@@ -9436,6 +9436,12 @@ def generate_cyfunction_code(self, code):\n         if def_node.local_scope.parent_scope.is_c_class_scope and not def_node.entry.is_anonymous:\n             flags.append('__Pyx_CYFUNCTION_CCLASS')\n \n+        # mutually exclusive as far as \"inspect\" is concerned\n+        if getattr(def_node, \"is_asyncgen\", None):",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439358669",
            "id": 439358669,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1ODY2OQ==",
            "original_commit_id": "b38e4b40176e4ee9847d1af5de82dfbc36f822f6",
            "original_line": 9440,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 429652194,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439358669",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439555489"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439555489"
                }
            },
            "author_association": "NONE",
            "body": "Not really, it's leftover from previous attempts. Although it's mutually exclusive with the other one... (see inspect.isasyncgenfunction py3.6) I can see people forgetting to add it, if the protocol is finally defined and implemented. I can remove it, if you think it's unnecessary.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-12T17:36:12Z",
            "diff_hunk": "@@ -9436,6 +9436,12 @@ def generate_cyfunction_code(self, code):\n         if def_node.local_scope.parent_scope.is_c_class_scope and not def_node.entry.is_anonymous:\n             flags.append('__Pyx_CYFUNCTION_CCLASS')\n \n+        # mutually exclusive as far as \"inspect\" is concerned\n+        if getattr(def_node, \"is_asyncgen\", None):\n+            flags.append('__Pyx_CYFUNCTION_ASYNCGEN')",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439555489",
            "id": 439555489,
            "in_reply_to_id": 439357069,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU1NTQ4OQ==",
            "original_commit_id": "b38e4b40176e4ee9847d1af5de82dfbc36f822f6",
            "original_line": 9441,
            "original_position": 6,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 429922844,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439555489",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439556131"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439556131"
                }
            },
            "author_association": "NONE",
            "body": "Not all def_node have those attributes, they're added only on AsyncDefNode, and AsyncGenNode.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-12T17:37:41Z",
            "diff_hunk": "@@ -9436,6 +9436,12 @@ def generate_cyfunction_code(self, code):\n         if def_node.local_scope.parent_scope.is_c_class_scope and not def_node.entry.is_anonymous:\n             flags.append('__Pyx_CYFUNCTION_CCLASS')\n \n+        # mutually exclusive as far as \"inspect\" is concerned\n+        if getattr(def_node, \"is_asyncgen\", None):",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439556131",
            "id": 439556131,
            "in_reply_to_id": 439358669,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU1NjEzMQ==",
            "original_commit_id": "b38e4b40176e4ee9847d1af5de82dfbc36f822f6",
            "original_line": 9440,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 429923723,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439556131",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439556525"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439556525"
                }
            },
            "author_association": "NONE",
            "body": "Oh! Thanks for letting me know. :) Will amend, and add the PY_VERSION_HEX checks.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-12T17:38:33Z",
            "diff_hunk": "@@ -362,6 +364,18 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n+static PyObject *\n+__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n+    PyObject* result = Py_None;\n+    if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+        PyObject *module = PyImport_ImportModule(\"asyncio.coroutines\");\n+        result = PyObject_GetAttrString(module, \"_is_coroutine\");",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439556525",
            "id": 439556525,
            "in_reply_to_id": 439352825,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU1NjUyNQ==",
            "original_commit_id": "b38e4b40176e4ee9847d1af5de82dfbc36f822f6",
            "original_line": 372,
            "original_position": 18,
            "original_start_line": null,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 429924235,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439556525",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439568958"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439568958"
                }
            },
            "author_association": "NONE",
            "body": "FYI... Double checked and on v3.4.2rc1 `_is_coroutine` check was introduced, but it was just a True/False value. On v3.5.3rc1 the marker object was introduced. I'll add the macros to run for both versions.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-12T18:05:22Z",
            "diff_hunk": "@@ -362,6 +364,18 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n+static PyObject *\n+__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n+    PyObject* result = Py_None;\n+    if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+        PyObject *module = PyImport_ImportModule(\"asyncio.coroutines\");\n+        result = PyObject_GetAttrString(module, \"_is_coroutine\");",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439568958",
            "id": 439568958,
            "in_reply_to_id": 439352825,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU2ODk1OA==",
            "original_commit_id": "b38e4b40176e4ee9847d1af5de82dfbc36f822f6",
            "original_line": 372,
            "original_position": 18,
            "original_start_line": null,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 429940527,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439568958",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439577314"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439577314"
                }
            },
            "author_association": "MEMBER",
            "body": "Then we should add these attributes to `DefNode`. Because, why not?",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-12T18:23:45Z",
            "diff_hunk": "@@ -9436,6 +9436,12 @@ def generate_cyfunction_code(self, code):\n         if def_node.local_scope.parent_scope.is_c_class_scope and not def_node.entry.is_anonymous:\n             flags.append('__Pyx_CYFUNCTION_CCLASS')\n \n+        # mutually exclusive as far as \"inspect\" is concerned\n+        if getattr(def_node, \"is_asyncgen\", None):",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439577314",
            "id": 439577314,
            "in_reply_to_id": 439358669,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU3NzMxNA==",
            "original_commit_id": "b38e4b40176e4ee9847d1af5de82dfbc36f822f6",
            "original_line": 9440,
            "original_position": 5,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 429951463,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439577314",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439579262"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439579262"
                }
            },
            "author_association": "MEMBER",
            "body": "These are Cython-internal flags, though, not known to CPython.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-12T18:27:53Z",
            "diff_hunk": "@@ -9436,6 +9436,12 @@ def generate_cyfunction_code(self, code):\n         if def_node.local_scope.parent_scope.is_c_class_scope and not def_node.entry.is_anonymous:\n             flags.append('__Pyx_CYFUNCTION_CCLASS')\n \n+        # mutually exclusive as far as \"inspect\" is concerned\n+        if getattr(def_node, \"is_asyncgen\", None):\n+            flags.append('__Pyx_CYFUNCTION_ASYNCGEN')",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439579262",
            "id": 439579262,
            "in_reply_to_id": 439357069,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU3OTI2Mg==",
            "original_commit_id": "b38e4b40176e4ee9847d1af5de82dfbc36f822f6",
            "original_line": 9441,
            "original_position": 6,
            "original_start_line": null,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 429954025,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439579262",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439662063"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439662063"
                }
            },
            "author_association": "NONE",
            "body": "@scoder if I understood, GetAttrStr already owns the reference, so we need to skip Py_INCREF on the initial loading of the marker. Is this correct?",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-12T22:11:01Z",
            "diff_hunk": "@@ -362,6 +367,36 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n+static PyObject *\n+__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n+#if PY_VERSION_HEX >= 0x030503C1\n+    // on v3.5.3rc1 the marker object was introduced\n+    if (!op->func_is_coroutine) {\n+        if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+            PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n+            fromlist = PyList_New(1);\n+            if (unlikely(!fromlist)) goto ignore;\n+            PyList_SET_ITEM(fromlist, 0, marker);\n+            module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n+            Py_DECREF(fromlist);\n+            if (unlikely(!module)) goto ignore;\n+            op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n+            Py_DECREF(module);\n+            if (unlikely(!op->func_is_coroutine)) goto ignore;\n+            return op->func_is_coroutine;",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439662063",
            "id": 439662063,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY2MjA2Mw==",
            "original_commit_id": "ec75bf2f97e05c9292cbe25576063f8fc66969b7",
            "original_line": 386,
            "original_position": 46,
            "original_start_line": null,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 430062700,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439662063",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439731032"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439731032"
                }
            },
            "author_association": "MEMBER",
            "body": "Now these can be removed from `GeneratorDefNode` (further down in the file), because they are inherited. In fact, looking through the class hierarchy now, I think these two should be set on `FuncDefNode` already, next to `is_generator`, `is_async_def`, etc.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-13T11:12:26Z",
            "diff_hunk": "@@ -2806,6 +2806,8 @@ class DefNode(FuncDefNode):\n \n     is_staticmethod = False\n     is_classmethod = False\n+    is_coroutine = False\n+    is_asyncgen = False",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439731032",
            "id": 439731032,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTczMTAzMg==",
            "original_commit_id": "09d20efeaffc10bc140d47b7ffef10b4e47e58b7",
            "original_line": 2810,
            "original_position": 5,
            "original_start_line": 2809,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 430132116,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439731032",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439731211"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439731211"
                }
            },
            "author_association": "MEMBER",
            "body": "We should use `0x03040000` here. The problem is that when someone builds the module on Python 3.4.1 and then imports it on 3.4.2+, the flag will not be available because it has been compiled out. It doesn't hurt to have it in 3.4.0 already.\r\n\r\nEdit: actually, why not just always have it, also in Py2? It really doesn't hurt there.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-13T11:15:51Z",
            "diff_hunk": "@@ -406,6 +443,9 @@ static PyGetSetDef __pyx_CyFunction_getsets[] = {\n     {(char *) \"__defaults__\", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},\n     {(char *) \"__kwdefaults__\", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},\n     {(char *) \"__annotations__\", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},\n+#if PY_VERSION_HEX >= 0x030402C1",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439731211",
            "id": 439731211,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTczMTIxMQ==",
            "original_commit_id": "09d20efeaffc10bc140d47b7ffef10b4e47e58b7",
            "original_line": 446,
            "original_position": 69,
            "original_start_line": null,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 430132116,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439731211",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439731363"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439731363"
                }
            },
            "author_association": "MEMBER",
            "body": "Same version issue here – make it 3.5.0 and suppress the `AttributeError`.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-13T11:19:12Z",
            "diff_hunk": "@@ -362,6 +367,38 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n+#if PY_VERSION_HEX >= 0x030402C1\n+static PyObject *\n+__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n+#if PY_VERSION_HEX >= 0x030503C1\n+    // on v3.5.3rc1 the marker object was introduced",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439731363",
            "id": 439731363,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTczMTM2Mw==",
            "original_commit_id": "09d20efeaffc10bc140d47b7ffef10b4e47e58b7",
            "original_line": 374,
            "original_position": 34,
            "original_start_line": 373,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 430132116,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439731363",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439731461"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439731461"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    ignore:\r\n        PyErr_Clear();\r\n        op->func_is_coroutine = Py_None;\r\n```",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-13T11:20:36Z",
            "diff_hunk": "@@ -362,6 +367,38 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n+#if PY_VERSION_HEX >= 0x030402C1\n+static PyObject *\n+__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n+#if PY_VERSION_HEX >= 0x030503C1\n+    // on v3.5.3rc1 the marker object was introduced\n+    if (!op->func_is_coroutine) {\n+        if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+            PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n+            fromlist = PyList_New(1);\n+            if (unlikely(!fromlist)) goto ignore;\n+            PyList_SET_ITEM(fromlist, 0, marker);\n+            module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n+            Py_DECREF(fromlist);\n+            if (unlikely(!module)) goto ignore;\n+            op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n+            Py_DECREF(module);\n+            if (unlikely(!op->func_is_coroutine)) goto ignore;\n+            return op->func_is_coroutine;\n+        }\n+    ignore:\n+        op->func_is_coroutine = Py_None;",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439731461",
            "id": 439731461,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTczMTQ2MQ==",
            "original_commit_id": "09d20efeaffc10bc140d47b7ffef10b4e47e58b7",
            "original_line": 390,
            "original_position": 50,
            "original_start_line": 389,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 430132116,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439731461",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439731639"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439731639"
                }
            },
            "author_association": "MEMBER",
            "body": "Since we're not interested in the `AttributeError` here, we can also use `…_GetAttrStrNoError()`, which avoids setting the exception (unless there is another error). Look for other usages to see how to apply it (it also has a different `@requires` name).",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-13T11:23:21Z",
            "diff_hunk": "@@ -362,6 +367,38 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n+#if PY_VERSION_HEX >= 0x030402C1\n+static PyObject *\n+__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n+#if PY_VERSION_HEX >= 0x030503C1\n+    // on v3.5.3rc1 the marker object was introduced\n+    if (!op->func_is_coroutine) {\n+        if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+            PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n+            fromlist = PyList_New(1);\n+            if (unlikely(!fromlist)) goto ignore;\n+            PyList_SET_ITEM(fromlist, 0, marker);\n+            module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n+            Py_DECREF(fromlist);\n+            if (unlikely(!module)) goto ignore;\n+            op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439731639",
            "id": 439731639,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTczMTYzOQ==",
            "original_commit_id": "09d20efeaffc10bc140d47b7ffef10b4e47e58b7",
            "original_line": 384,
            "original_position": 44,
            "original_start_line": null,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 430132116,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439731639",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439731669"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439731669"
                }
            },
            "author_association": "MEMBER",
            "body": "This looks like an error case that we shouldn't just ignore.\r\n```suggestion\r\n            fromlist = PyList_New(1);\r\n            if (unlikely(!fromlist)) return NULL;\r\n```",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-13T11:24:22Z",
            "diff_hunk": "@@ -362,6 +367,38 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n+#if PY_VERSION_HEX >= 0x030402C1\n+static PyObject *\n+__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n+#if PY_VERSION_HEX >= 0x030503C1\n+    // on v3.5.3rc1 the marker object was introduced\n+    if (!op->func_is_coroutine) {\n+        if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+            PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n+            fromlist = PyList_New(1);\n+            if (unlikely(!fromlist)) goto ignore;",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439731669",
            "id": 439731669,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTczMTY2OQ==",
            "original_commit_id": "09d20efeaffc10bc140d47b7ffef10b4e47e58b7",
            "original_line": 379,
            "original_position": 39,
            "original_start_line": 378,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 430132116,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439731669",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439804699"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439804699"
                }
            },
            "author_association": "MEMBER",
            "body": "We are dealing with two references here: one that we cache, and one that we return.\r\n```suggestion\r\n            return __Pyx_NewRef(op->func_is_coroutine);\r\n```",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-14T08:23:08Z",
            "diff_hunk": "@@ -362,6 +367,36 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n+static PyObject *\n+__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n+#if PY_VERSION_HEX >= 0x030503C1\n+    // on v3.5.3rc1 the marker object was introduced\n+    if (!op->func_is_coroutine) {\n+        if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+            PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n+            fromlist = PyList_New(1);\n+            if (unlikely(!fromlist)) goto ignore;\n+            PyList_SET_ITEM(fromlist, 0, marker);\n+            module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n+            Py_DECREF(fromlist);\n+            if (unlikely(!module)) goto ignore;\n+            op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n+            Py_DECREF(module);\n+            if (unlikely(!op->func_is_coroutine)) goto ignore;\n+            return op->func_is_coroutine;",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439804699",
            "id": 439804699,
            "in_reply_to_id": 439662063,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwNDY5OQ==",
            "original_commit_id": "ec75bf2f97e05c9292cbe25576063f8fc66969b7",
            "original_line": 386,
            "original_position": 46,
            "original_start_line": null,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 430132116,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439804699",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439805292"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439805292"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    return __Pyx_NewRef(result);\r\n```",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-14T08:31:32Z",
            "diff_hunk": "@@ -362,6 +367,38 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n+#if PY_VERSION_HEX >= 0x030402C1\n+static PyObject *\n+__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n+#if PY_VERSION_HEX >= 0x030503C1\n+    // on v3.5.3rc1 the marker object was introduced\n+    if (!op->func_is_coroutine) {\n+        if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+            PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n+            fromlist = PyList_New(1);\n+            if (unlikely(!fromlist)) goto ignore;\n+            PyList_SET_ITEM(fromlist, 0, marker);\n+            module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n+            Py_DECREF(fromlist);\n+            if (unlikely(!module)) goto ignore;\n+            op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n+            Py_DECREF(module);\n+            if (unlikely(!op->func_is_coroutine)) goto ignore;\n+            return op->func_is_coroutine;\n+        }\n+    ignore:\n+        op->func_is_coroutine = Py_None;\n+    }\n+    Py_INCREF(op->func_is_coroutine);\n+    return op->func_is_coroutine;\n+#else\n+    PyObject *result = (op->flags & __Pyx_CYFUNCTION_COROUTINE) ? Py_True : Py_False;\n+    Py_INCREF(result);\n+    return result;",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439805292",
            "id": 439805292,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwNTI5Mg==",
            "original_commit_id": "09d20efeaffc10bc140d47b7ffef10b4e47e58b7",
            "original_line": 397,
            "original_position": 57,
            "original_start_line": 396,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 430132116,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439805292",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r439982208"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/439982208"
                }
            },
            "author_association": "COLLABORATOR",
            "body": "__Pyx_NewRef like above",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-15T07:34:31Z",
            "diff_hunk": "@@ -362,6 +367,34 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n+static PyObject *\n+__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n+#if PY_VERSION_HEX >= 0x03050000\n+    // on v3.5.3rc1 the marker object was introduced\n+    if (op->func_is_coroutine)\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+        PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n+        fromlist = PyList_New(1);\n+        if (unlikely(!fromlist)) return NULL;\n+        PyList_SET_ITEM(fromlist, 0, marker);\n+        module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n+        Py_DECREF(fromlist);\n+        if (unlikely(!module)) goto ignore;\n+        op->func_is_coroutine = __Pyx_PyObject_GetAttrStrNoError(module, marker);\n+        Py_DECREF(module);\n+        if (unlikely(!op->func_is_coroutine)) goto ignore;\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    }\n+ignore:\n+    op->func_is_coroutine = Py_None;\n+    return __Pyx_NewRef(op->func_is_coroutine);\n+#else\n+    PyObject *result = (op->flags & __Pyx_CYFUNCTION_COROUTINE) ? Py_True : Py_False;\n+    return __Py_NewRef(result);",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r439982208",
            "id": 439982208,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk4MjIwOA==",
            "original_commit_id": "c1632b7040d88f6e5ab84bd358ea856815720051",
            "original_line": 394,
            "original_position": 54,
            "original_start_line": null,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 430388419,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/439982208",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r443160423"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443160423"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we even need one more reference here. One new reference for the object field and one new reference to return.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-20T21:14:42Z",
            "diff_hunk": "@@ -367,37 +367,33 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n-#if PY_VERSION_HEX >= 0x030402C1\n static PyObject *\n __Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n-#if PY_VERSION_HEX >= 0x030503C1\n+#if PY_VERSION_HEX >= 0x03050000\n     // on v3.5.3rc1 the marker object was introduced\n-    if (!op->func_is_coroutine) {\n-        if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n-            PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n-            fromlist = PyList_New(1);\n-            if (unlikely(!fromlist)) goto ignore;\n-            PyList_SET_ITEM(fromlist, 0, marker);\n-            module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n-            Py_DECREF(fromlist);\n-            if (unlikely(!module)) goto ignore;\n-            op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n-            Py_DECREF(module);\n-            if (unlikely(!op->func_is_coroutine)) goto ignore;\n-            return op->func_is_coroutine;\n-        }\n-    ignore:\n-        op->func_is_coroutine = Py_None;\n+    if (op->func_is_coroutine)\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+        PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n+        fromlist = PyList_New(1);\n+        if (unlikely(!fromlist)) return NULL;\n+        PyList_SET_ITEM(fromlist, 0, marker);\n+        module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n+        Py_DECREF(fromlist);\n+        if (unlikely(!module)) goto ignore;\n+        op->func_is_coroutine = __Pyx_PyObject_GetAttrStrNoError(module, marker);\n+        Py_DECREF(module);\n+        if (unlikely(!op->func_is_coroutine)) goto ignore;\n+        return __Pyx_NewRef(op->func_is_coroutine);\n     }\n-    Py_INCREF(op->func_is_coroutine);\n-    return op->func_is_coroutine;\n+ignore:\n+    op->func_is_coroutine = Py_None;\n+    return __Pyx_NewRef(op->func_is_coroutine);",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r443160423",
            "id": 443160423,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE2MDQyMw==",
            "original_commit_id": "c1632b7040d88f6e5ab84bd358ea856815720051",
            "original_line": 391,
            "original_position": 54,
            "original_start_line": 390,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 434454282,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443160423",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r443160565"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443160565"
                }
            },
            "author_association": "MEMBER",
            "body": "There's even a function for this already: `__Pyx_PyBool_FromLong()`.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-20T21:17:14Z",
            "diff_hunk": "@@ -367,37 +367,33 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n-#if PY_VERSION_HEX >= 0x030402C1\n static PyObject *\n __Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n-#if PY_VERSION_HEX >= 0x030503C1\n+#if PY_VERSION_HEX >= 0x03050000\n     // on v3.5.3rc1 the marker object was introduced\n-    if (!op->func_is_coroutine) {\n-        if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n-            PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n-            fromlist = PyList_New(1);\n-            if (unlikely(!fromlist)) goto ignore;\n-            PyList_SET_ITEM(fromlist, 0, marker);\n-            module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n-            Py_DECREF(fromlist);\n-            if (unlikely(!module)) goto ignore;\n-            op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n-            Py_DECREF(module);\n-            if (unlikely(!op->func_is_coroutine)) goto ignore;\n-            return op->func_is_coroutine;\n-        }\n-    ignore:\n-        op->func_is_coroutine = Py_None;\n+    if (op->func_is_coroutine)\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+        PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n+        fromlist = PyList_New(1);\n+        if (unlikely(!fromlist)) return NULL;\n+        PyList_SET_ITEM(fromlist, 0, marker);\n+        module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n+        Py_DECREF(fromlist);\n+        if (unlikely(!module)) goto ignore;\n+        op->func_is_coroutine = __Pyx_PyObject_GetAttrStrNoError(module, marker);\n+        Py_DECREF(module);\n+        if (unlikely(!op->func_is_coroutine)) goto ignore;\n+        return __Pyx_NewRef(op->func_is_coroutine);\n     }\n-    Py_INCREF(op->func_is_coroutine);\n-    return op->func_is_coroutine;\n+ignore:\n+    op->func_is_coroutine = Py_None;\n+    return __Pyx_NewRef(op->func_is_coroutine);\n #else\n     PyObject *result = (op->flags & __Pyx_CYFUNCTION_COROUTINE) ? Py_True : Py_False;\n-    Py_INCREF(result);\n-    return result;\n+    return __Py_NewRef(result);",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r443160565",
            "id": 443160565,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE2MDU2NQ==",
            "original_commit_id": "c1632b7040d88f6e5ab84bd358ea856815720051",
            "original_line": 394,
            "original_position": 59,
            "original_start_line": 393,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 434454282,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443160565",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r443160671"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443160671"
                }
            },
            "author_association": "MEMBER",
            "body": "This leaves the exception around. Need to call `PyErr_Clear()` somewhere on the way. Same for the other `goto ignore`, in case there was an exception (but we can just always clear it, even if there is none).",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-20T21:18:56Z",
            "diff_hunk": "@@ -367,37 +367,33 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n-#if PY_VERSION_HEX >= 0x030402C1\n static PyObject *\n __Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n-#if PY_VERSION_HEX >= 0x030503C1\n+#if PY_VERSION_HEX >= 0x03050000\n     // on v3.5.3rc1 the marker object was introduced\n-    if (!op->func_is_coroutine) {\n-        if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n-            PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n-            fromlist = PyList_New(1);\n-            if (unlikely(!fromlist)) goto ignore;\n-            PyList_SET_ITEM(fromlist, 0, marker);\n-            module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n-            Py_DECREF(fromlist);\n-            if (unlikely(!module)) goto ignore;\n-            op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n-            Py_DECREF(module);\n-            if (unlikely(!op->func_is_coroutine)) goto ignore;\n-            return op->func_is_coroutine;\n-        }\n-    ignore:\n-        op->func_is_coroutine = Py_None;\n+    if (op->func_is_coroutine)\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+        PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n+        fromlist = PyList_New(1);\n+        if (unlikely(!fromlist)) return NULL;\n+        PyList_SET_ITEM(fromlist, 0, marker);\n+        module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n+        Py_DECREF(fromlist);\n+        if (unlikely(!module)) goto ignore;",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r443160671",
            "id": 443160671,
            "line": 385,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE2MDY3MQ==",
            "original_commit_id": "c1632b7040d88f6e5ab84bd358ea856815720051",
            "original_line": 383,
            "original_position": 44,
            "original_start_line": null,
            "path": "Cython/Utility/CythonFunction.c",
            "position": 45,
            "pull_request_review_id": 434454282,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443160671",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r443170571"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443170571"
                }
            },
            "author_association": "NONE",
            "body": "Good to know... Using it.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-21T00:41:07Z",
            "diff_hunk": "@@ -367,37 +367,33 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n-#if PY_VERSION_HEX >= 0x030402C1\n static PyObject *\n __Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n-#if PY_VERSION_HEX >= 0x030503C1\n+#if PY_VERSION_HEX >= 0x03050000\n     // on v3.5.3rc1 the marker object was introduced\n-    if (!op->func_is_coroutine) {\n-        if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n-            PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n-            fromlist = PyList_New(1);\n-            if (unlikely(!fromlist)) goto ignore;\n-            PyList_SET_ITEM(fromlist, 0, marker);\n-            module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n-            Py_DECREF(fromlist);\n-            if (unlikely(!module)) goto ignore;\n-            op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n-            Py_DECREF(module);\n-            if (unlikely(!op->func_is_coroutine)) goto ignore;\n-            return op->func_is_coroutine;\n-        }\n-    ignore:\n-        op->func_is_coroutine = Py_None;\n+    if (op->func_is_coroutine)\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+        PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n+        fromlist = PyList_New(1);\n+        if (unlikely(!fromlist)) return NULL;\n+        PyList_SET_ITEM(fromlist, 0, marker);\n+        module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n+        Py_DECREF(fromlist);\n+        if (unlikely(!module)) goto ignore;\n+        op->func_is_coroutine = __Pyx_PyObject_GetAttrStrNoError(module, marker);\n+        Py_DECREF(module);\n+        if (unlikely(!op->func_is_coroutine)) goto ignore;\n+        return __Pyx_NewRef(op->func_is_coroutine);\n     }\n-    Py_INCREF(op->func_is_coroutine);\n-    return op->func_is_coroutine;\n+ignore:\n+    op->func_is_coroutine = Py_None;\n+    return __Pyx_NewRef(op->func_is_coroutine);\n #else\n     PyObject *result = (op->flags & __Pyx_CYFUNCTION_COROUTINE) ? Py_True : Py_False;\n-    Py_INCREF(result);\n-    return result;\n+    return __Py_NewRef(result);",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r443170571",
            "id": 443170571,
            "in_reply_to_id": 443160565,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE3MDU3MQ==",
            "original_commit_id": "c1632b7040d88f6e5ab84bd358ea856815720051",
            "original_line": 394,
            "original_position": 59,
            "original_start_line": 393,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 434461790,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443170571",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r443170595"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443170595"
                }
            },
            "author_association": "NONE",
            "body": "Ah, I thought your previous comment was just for the GetAttr. I'll revert the NoError usage then, if we're going to clear it anyway.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-21T00:41:47Z",
            "diff_hunk": "@@ -367,37 +367,33 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n-#if PY_VERSION_HEX >= 0x030402C1\n static PyObject *\n __Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n-#if PY_VERSION_HEX >= 0x030503C1\n+#if PY_VERSION_HEX >= 0x03050000\n     // on v3.5.3rc1 the marker object was introduced\n-    if (!op->func_is_coroutine) {\n-        if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n-            PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n-            fromlist = PyList_New(1);\n-            if (unlikely(!fromlist)) goto ignore;\n-            PyList_SET_ITEM(fromlist, 0, marker);\n-            module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n-            Py_DECREF(fromlist);\n-            if (unlikely(!module)) goto ignore;\n-            op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n-            Py_DECREF(module);\n-            if (unlikely(!op->func_is_coroutine)) goto ignore;\n-            return op->func_is_coroutine;\n-        }\n-    ignore:\n-        op->func_is_coroutine = Py_None;\n+    if (op->func_is_coroutine)\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+        PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n+        fromlist = PyList_New(1);\n+        if (unlikely(!fromlist)) return NULL;\n+        PyList_SET_ITEM(fromlist, 0, marker);\n+        module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n+        Py_DECREF(fromlist);\n+        if (unlikely(!module)) goto ignore;",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r443170595",
            "id": 443170595,
            "in_reply_to_id": 443160671,
            "line": 385,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE3MDU5NQ==",
            "original_commit_id": "c1632b7040d88f6e5ab84bd358ea856815720051",
            "original_line": 383,
            "original_position": 44,
            "original_start_line": null,
            "path": "Cython/Utility/CythonFunction.c",
            "position": 45,
            "pull_request_review_id": 434461809,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443170595",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r443170604"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443170604"
                }
            },
            "author_association": "NONE",
            "body": "Nice catch, fixing it.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-21T00:42:03Z",
            "diff_hunk": "@@ -367,37 +367,33 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n-#if PY_VERSION_HEX >= 0x030402C1\n static PyObject *\n __Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n-#if PY_VERSION_HEX >= 0x030503C1\n+#if PY_VERSION_HEX >= 0x03050000\n     // on v3.5.3rc1 the marker object was introduced\n-    if (!op->func_is_coroutine) {\n-        if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n-            PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n-            fromlist = PyList_New(1);\n-            if (unlikely(!fromlist)) goto ignore;\n-            PyList_SET_ITEM(fromlist, 0, marker);\n-            module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n-            Py_DECREF(fromlist);\n-            if (unlikely(!module)) goto ignore;\n-            op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n-            Py_DECREF(module);\n-            if (unlikely(!op->func_is_coroutine)) goto ignore;\n-            return op->func_is_coroutine;\n-        }\n-    ignore:\n-        op->func_is_coroutine = Py_None;\n+    if (op->func_is_coroutine)\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+        PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n+        fromlist = PyList_New(1);\n+        if (unlikely(!fromlist)) return NULL;\n+        PyList_SET_ITEM(fromlist, 0, marker);\n+        module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n+        Py_DECREF(fromlist);\n+        if (unlikely(!module)) goto ignore;\n+        op->func_is_coroutine = __Pyx_PyObject_GetAttrStrNoError(module, marker);\n+        Py_DECREF(module);\n+        if (unlikely(!op->func_is_coroutine)) goto ignore;\n+        return __Pyx_NewRef(op->func_is_coroutine);\n     }\n-    Py_INCREF(op->func_is_coroutine);\n-    return op->func_is_coroutine;\n+ignore:\n+    op->func_is_coroutine = Py_None;\n+    return __Pyx_NewRef(op->func_is_coroutine);",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r443170604",
            "id": 443170604,
            "in_reply_to_id": 443160423,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE3MDYwNA==",
            "original_commit_id": "c1632b7040d88f6e5ab84bd358ea856815720051",
            "original_line": 391,
            "original_position": 54,
            "original_start_line": 390,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 434461818,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443170604",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r443190200"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443190200"
                }
            },
            "author_association": "MEMBER",
            "body": "Well, why should we request the creation of an exception first just to clear it afterwards? If we can avoid it right away by calling `…NoError()`, the better.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-21T07:18:58Z",
            "diff_hunk": "@@ -367,37 +367,33 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n-#if PY_VERSION_HEX >= 0x030402C1\n static PyObject *\n __Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n-#if PY_VERSION_HEX >= 0x030503C1\n+#if PY_VERSION_HEX >= 0x03050000\n     // on v3.5.3rc1 the marker object was introduced\n-    if (!op->func_is_coroutine) {\n-        if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n-            PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n-            fromlist = PyList_New(1);\n-            if (unlikely(!fromlist)) goto ignore;\n-            PyList_SET_ITEM(fromlist, 0, marker);\n-            module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n-            Py_DECREF(fromlist);\n-            if (unlikely(!module)) goto ignore;\n-            op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n-            Py_DECREF(module);\n-            if (unlikely(!op->func_is_coroutine)) goto ignore;\n-            return op->func_is_coroutine;\n-        }\n-    ignore:\n-        op->func_is_coroutine = Py_None;\n+    if (op->func_is_coroutine)\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+        PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n+        fromlist = PyList_New(1);\n+        if (unlikely(!fromlist)) return NULL;\n+        PyList_SET_ITEM(fromlist, 0, marker);\n+        module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n+        Py_DECREF(fromlist);\n+        if (unlikely(!module)) goto ignore;",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r443190200",
            "id": 443190200,
            "in_reply_to_id": 443160671,
            "line": 385,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE5MDIwMA==",
            "original_commit_id": "c1632b7040d88f6e5ab84bd358ea856815720051",
            "original_line": 383,
            "original_position": 44,
            "original_start_line": null,
            "path": "Cython/Utility/CythonFunction.c",
            "position": 45,
            "pull_request_review_id": 434476383,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443190200",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r443190332"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443190332"
                }
            },
            "author_association": "MEMBER",
            "body": "Wouldn't these fallbacks be more helpful?\r\n```suggestion\r\nignore:\r\n    PyErr_Clear();\r\n#endif\r\n    return __Pyx_PyBool_FromLong(op->flags & __Pyx_CYFUNCTION_COROUTINE);\r\n```\r\nI'm not sure, I'm really wondering whether returning `None` is better than `True` /  `False` (which both are not the `_is_coroutine` marker either).",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-21T07:20:49Z",
            "diff_hunk": "@@ -362,6 +367,34 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n+static PyObject *\n+__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n+#if PY_VERSION_HEX >= 0x03050000\n+    // on v3.5.3rc1 the marker object was introduced\n+    if (op->func_is_coroutine)\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+        PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n+        fromlist = PyList_New(1);\n+        if (unlikely(!fromlist)) return NULL;\n+        PyList_SET_ITEM(fromlist, 0, marker);\n+        module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n+        Py_DECREF(fromlist);\n+        if (unlikely(!module)) goto ignore;\n+        op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n+        Py_DECREF(module);\n+        if (unlikely(!op->func_is_coroutine)) goto ignore;\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    }\n+ignore:\n+    PyErr_Clear();\n+    op->func_is_coroutine = __Pyx_NewRef(Py_None);\n+    return __Pyx_NewRef(op->func_is_coroutine);\n+#else\n+    return __Pyx_PyBool_FromLong(op->flags & __Pyx_CYFUNCTION_COROUTINE);\n+#endif",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r443190332",
            "id": 443190332,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE5MDMzMg==",
            "original_commit_id": "ebe271afa4b3415bd2bcf3840894ce72042023b1",
            "original_line": 395,
            "original_position": 55,
            "original_start_line": 389,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 434476499,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443190332",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r443193814"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/443193814"
                }
            },
            "author_association": "NONE",
            "body": "Checking both the pre 3.5.3rc1 version and the current one, it should work fine with False instead of None. The only disadvantage I see is that we're not caching the None for non-coroutine functions, and running the flag comparisson twice. Let me see what I can do here.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-21T08:06:31Z",
            "diff_hunk": "@@ -362,6 +367,34 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n+static PyObject *\n+__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n+#if PY_VERSION_HEX >= 0x03050000\n+    // on v3.5.3rc1 the marker object was introduced\n+    if (op->func_is_coroutine)\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+        PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n+        fromlist = PyList_New(1);\n+        if (unlikely(!fromlist)) return NULL;\n+        PyList_SET_ITEM(fromlist, 0, marker);\n+        module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n+        Py_DECREF(fromlist);\n+        if (unlikely(!module)) goto ignore;\n+        op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n+        Py_DECREF(module);\n+        if (unlikely(!op->func_is_coroutine)) goto ignore;\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    }\n+ignore:\n+    PyErr_Clear();\n+    op->func_is_coroutine = __Pyx_NewRef(Py_None);\n+    return __Pyx_NewRef(op->func_is_coroutine);\n+#else\n+    return __Pyx_PyBool_FromLong(op->flags & __Pyx_CYFUNCTION_COROUTINE);\n+#endif",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r443193814",
            "id": 443193814,
            "in_reply_to_id": 443190332,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE5MzgxNA==",
            "original_commit_id": "ebe271afa4b3415bd2bcf3840894ce72042023b1",
            "original_line": 395,
            "original_position": 55,
            "original_start_line": 389,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 434479519,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/443193814",
            "user": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3427#discussion_r445994151"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3427"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/445994151"
                }
            },
            "author_association": "MEMBER",
            "body": "> we're not caching the None\r\n\r\nAh, but then just cache the return value, whatever it is.",
            "commit_id": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "created_at": "2020-06-26T06:35:31Z",
            "diff_hunk": "@@ -362,6 +367,34 @@ __Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void\n     return result;\n }\n \n+static PyObject *\n+__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {\n+#if PY_VERSION_HEX >= 0x03050000\n+    // on v3.5.3rc1 the marker object was introduced\n+    if (op->func_is_coroutine)\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    if (op->flags & __Pyx_CYFUNCTION_COROUTINE) {\n+        PyObject *module, *fromlist, *marker = PYIDENT(\"_is_coroutine\");\n+        fromlist = PyList_New(1);\n+        if (unlikely(!fromlist)) return NULL;\n+        PyList_SET_ITEM(fromlist, 0, marker);\n+        module = PyImport_ImportModuleLevelObject(PYIDENT(\"asyncio.coroutines\"), NULL, NULL, fromlist, 0);\n+        Py_DECREF(fromlist);\n+        if (unlikely(!module)) goto ignore;\n+        op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);\n+        Py_DECREF(module);\n+        if (unlikely(!op->func_is_coroutine)) goto ignore;\n+        return __Pyx_NewRef(op->func_is_coroutine);\n+    }\n+ignore:\n+    PyErr_Clear();\n+    op->func_is_coroutine = __Pyx_NewRef(Py_None);\n+    return __Pyx_NewRef(op->func_is_coroutine);\n+#else\n+    return __Pyx_PyBool_FromLong(op->flags & __Pyx_CYFUNCTION_COROUTINE);\n+#endif",
            "html_url": "https://github.com/cython/cython/pull/3427#discussion_r445994151",
            "id": 445994151,
            "in_reply_to_id": 443190332,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk5NDE1MQ==",
            "original_commit_id": "ebe271afa4b3415bd2bcf3840894ce72042023b1",
            "original_line": 395,
            "original_position": 55,
            "original_start_line": 389,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 438045801,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3427",
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "updated_at": "2020-06-27T08:11:35Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/445994151",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3427/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c196b2148b1e6a24ac510789f7e92702522f941e/comments",
            "commit": {
                "author": {
                    "date": "2020-03-03T23:38:46Z",
                    "email": "pmdaluz@gmail.com",
                    "name": "Pedro Luz"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-03-04T18:12:08Z",
                    "email": "pmdaluz@gmail.com",
                    "name": "Pedro Luz"
                },
                "message": "There's currently noway to identify a Cython Coroutine Function.\nPython's asyncio.coroutines uses an object to tag objects as coroutine functions.\nOn this diff, we read this object and use it to tag Cython objects.\n\nIt also includes tests to make sure asyncio.iscoroutinefunction() works as expected.\nThis doesn't fix inspect.iscouroutinefunction() (which uses a flag that can trigger\nundesirable behavior for cython functions).",
                "tree": {
                    "sha": "d244e4829320a6859ba5b12a2f37846472193151",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d244e4829320a6859ba5b12a2f37846472193151"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c196b2148b1e6a24ac510789f7e92702522f941e",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "html_url": "https://github.com/cython/cython/commit/c196b2148b1e6a24ac510789f7e92702522f941e",
            "node_id": "MDY6Q29tbWl0MjQzNjA3ODA4OmMxOTZiMjE0OGIxZTZhMjRhYzUxMDc4OWY3ZTkyNzAyNTIyZjk0MWU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/0d272a51338467a5918911bed068d96bd28ad425",
                    "sha": "0d272a51338467a5918911bed068d96bd28ad425",
                    "url": "https://api.github.com/repos/cython/cython/commits/0d272a51338467a5918911bed068d96bd28ad425"
                }
            ],
            "sha": "c196b2148b1e6a24ac510789f7e92702522f941e",
            "url": "https://api.github.com/repos/cython/cython/commits/c196b2148b1e6a24ac510789f7e92702522f941e"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9f88f2dd80670c07df0af911269b9a00e1d1af48/comments",
            "commit": {
                "author": {
                    "date": "2020-06-09T23:39:24Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-09T23:39:24Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "message": "Revert \"There's currently noway to identify a Cython Coroutine Function.\"\n\nThis reverts commit c196b2148b1e6a24ac510789f7e92702522f941e.",
                "tree": {
                    "sha": "588a9014fac2d1aa341ead0be7d1b5890ae7ea0b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/588a9014fac2d1aa341ead0be7d1b5890ae7ea0b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9f88f2dd80670c07df0af911269b9a00e1d1af48",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "html_url": "https://github.com/cython/cython/commit/9f88f2dd80670c07df0af911269b9a00e1d1af48",
            "node_id": "MDY6Q29tbWl0MjQzNjA3ODA4OjlmODhmMmRkODA2NzBjMDdkZjBhZjkxMTI2OWI5YTAwZTFkMWFmNDg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c196b2148b1e6a24ac510789f7e92702522f941e",
                    "sha": "c196b2148b1e6a24ac510789f7e92702522f941e",
                    "url": "https://api.github.com/repos/cython/cython/commits/c196b2148b1e6a24ac510789f7e92702522f941e"
                }
            ],
            "sha": "9f88f2dd80670c07df0af911269b9a00e1d1af48",
            "url": "https://api.github.com/repos/cython/cython/commits/9f88f2dd80670c07df0af911269b9a00e1d1af48"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d25de84afc1dae177e0cfd8c59f36ae5ef48d646/comments",
            "commit": {
                "author": {
                    "date": "2020-06-09T23:39:57Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-09T23:39:57Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "message": "Merge remote-tracking branch 'upstream/master'",
                "tree": {
                    "sha": "00fd4fe1f5db48d3d481e8712fbf1e22df03d9a7",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/00fd4fe1f5db48d3d481e8712fbf1e22df03d9a7"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d25de84afc1dae177e0cfd8c59f36ae5ef48d646",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "html_url": "https://github.com/cython/cython/commit/d25de84afc1dae177e0cfd8c59f36ae5ef48d646",
            "node_id": "MDY6Q29tbWl0MjQzNjA3ODA4OmQyNWRlODRhZmMxZGFlMTc3ZTBjZmQ4YzU5ZjM2YWU1ZWY0OGQ2NDY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9f88f2dd80670c07df0af911269b9a00e1d1af48",
                    "sha": "9f88f2dd80670c07df0af911269b9a00e1d1af48",
                    "url": "https://api.github.com/repos/cython/cython/commits/9f88f2dd80670c07df0af911269b9a00e1d1af48"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/e19fa590004305a9b3170c770c8244ef7f453e75",
                    "sha": "e19fa590004305a9b3170c770c8244ef7f453e75",
                    "url": "https://api.github.com/repos/cython/cython/commits/e19fa590004305a9b3170c770c8244ef7f453e75"
                }
            ],
            "sha": "d25de84afc1dae177e0cfd8c59f36ae5ef48d646",
            "url": "https://api.github.com/repos/cython/cython/commits/d25de84afc1dae177e0cfd8c59f36ae5ef48d646"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f5ddb8d3fc5353b70d7a14172d9c8f48de21c16d/comments",
            "commit": {
                "author": {
                    "date": "2020-06-10T23:04:02Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-10T23:04:02Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "message": "This version tries to use the C-API.",
                "tree": {
                    "sha": "19fee2d3c33eb0c594581acb0bc8c46a93cb680d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/19fee2d3c33eb0c594581acb0bc8c46a93cb680d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f5ddb8d3fc5353b70d7a14172d9c8f48de21c16d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "html_url": "https://github.com/cython/cython/commit/f5ddb8d3fc5353b70d7a14172d9c8f48de21c16d",
            "node_id": "MDY6Q29tbWl0MjQzNjA3ODA4OmY1ZGRiOGQzZmM1MzUzYjcwZDdhMTQxNzJkOWM4ZjQ4ZGUyMWMxNmQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d25de84afc1dae177e0cfd8c59f36ae5ef48d646",
                    "sha": "d25de84afc1dae177e0cfd8c59f36ae5ef48d646",
                    "url": "https://api.github.com/repos/cython/cython/commits/d25de84afc1dae177e0cfd8c59f36ae5ef48d646"
                }
            ],
            "sha": "f5ddb8d3fc5353b70d7a14172d9c8f48de21c16d",
            "url": "https://api.github.com/repos/cython/cython/commits/f5ddb8d3fc5353b70d7a14172d9c8f48de21c16d"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/67dea4833c9bfa7e93aad4e3756901c0d99fba0c/comments",
            "commit": {
                "author": {
                    "date": "2020-06-10T23:12:36Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-10T23:12:36Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "message": "Removed useless print statement.",
                "tree": {
                    "sha": "f838250230c7636683cfd28e7da17c6ebd0afb49",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f838250230c7636683cfd28e7da17c6ebd0afb49"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/67dea4833c9bfa7e93aad4e3756901c0d99fba0c",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "html_url": "https://github.com/cython/cython/commit/67dea4833c9bfa7e93aad4e3756901c0d99fba0c",
            "node_id": "MDY6Q29tbWl0MjQzNjA3ODA4OjY3ZGVhNDgzM2M5YmZhN2U5M2FhZDRlMzc1NjkwMWMwZDk5ZmJhMGM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f5ddb8d3fc5353b70d7a14172d9c8f48de21c16d",
                    "sha": "f5ddb8d3fc5353b70d7a14172d9c8f48de21c16d",
                    "url": "https://api.github.com/repos/cython/cython/commits/f5ddb8d3fc5353b70d7a14172d9c8f48de21c16d"
                }
            ],
            "sha": "67dea4833c9bfa7e93aad4e3756901c0d99fba0c",
            "url": "https://api.github.com/repos/cython/cython/commits/67dea4833c9bfa7e93aad4e3756901c0d99fba0c"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b38e4b40176e4ee9847d1af5de82dfbc36f822f6/comments",
            "commit": {
                "author": {
                    "date": "2020-06-12T07:50:46Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-12T07:50:46Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "message": "Adding _is_coroutine object to async def functions",
                "tree": {
                    "sha": "1ed01631ae1b932defa7fa634b000da90e35709d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1ed01631ae1b932defa7fa634b000da90e35709d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b38e4b40176e4ee9847d1af5de82dfbc36f822f6",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "html_url": "https://github.com/cython/cython/commit/b38e4b40176e4ee9847d1af5de82dfbc36f822f6",
            "node_id": "MDY6Q29tbWl0MjQzNjA3ODA4OmIzOGU0YjQwMTc2ZTRlZTk4NDdkMWFmNWRlODJkZmJjMzZmODIyZjY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/67dea4833c9bfa7e93aad4e3756901c0d99fba0c",
                    "sha": "67dea4833c9bfa7e93aad4e3756901c0d99fba0c",
                    "url": "https://api.github.com/repos/cython/cython/commits/67dea4833c9bfa7e93aad4e3756901c0d99fba0c"
                }
            ],
            "sha": "b38e4b40176e4ee9847d1af5de82dfbc36f822f6",
            "url": "https://api.github.com/repos/cython/cython/commits/b38e4b40176e4ee9847d1af5de82dfbc36f822f6"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ec75bf2f97e05c9292cbe25576063f8fc66969b7/comments",
            "commit": {
                "author": {
                    "date": "2020-06-12T22:09:10Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-12T22:09:10Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "message": "Added version checks and cached value.",
                "tree": {
                    "sha": "86f24fa219c2a67b56ae54dd0df393d40169f941",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/86f24fa219c2a67b56ae54dd0df393d40169f941"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ec75bf2f97e05c9292cbe25576063f8fc66969b7",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "html_url": "https://github.com/cython/cython/commit/ec75bf2f97e05c9292cbe25576063f8fc66969b7",
            "node_id": "MDY6Q29tbWl0MjQzNjA3ODA4OmVjNzViZjJmOTdlMDVjOTI5MmNiZTI1NTc2MDYzZjhmYzY2OTY5Yjc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b38e4b40176e4ee9847d1af5de82dfbc36f822f6",
                    "sha": "b38e4b40176e4ee9847d1af5de82dfbc36f822f6",
                    "url": "https://api.github.com/repos/cython/cython/commits/b38e4b40176e4ee9847d1af5de82dfbc36f822f6"
                }
            ],
            "sha": "ec75bf2f97e05c9292cbe25576063f8fc66969b7",
            "url": "https://api.github.com/repos/cython/cython/commits/ec75bf2f97e05c9292cbe25576063f8fc66969b7"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/09d20efeaffc10bc140d47b7ffef10b4e47e58b7/comments",
            "commit": {
                "author": {
                    "date": "2020-06-13T03:56:19Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-13T03:56:19Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "message": "Checking version to avoid py2 unused func warning.",
                "tree": {
                    "sha": "c562cc1d8e6eb4aea411c807ad3a33a39d06eaa7",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c562cc1d8e6eb4aea411c807ad3a33a39d06eaa7"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/09d20efeaffc10bc140d47b7ffef10b4e47e58b7",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "html_url": "https://github.com/cython/cython/commit/09d20efeaffc10bc140d47b7ffef10b4e47e58b7",
            "node_id": "MDY6Q29tbWl0MjQzNjA3ODA4OjA5ZDIwZWZlYWZmYzEwYmMxNDBkNDdiN2ZmZWYxMGI0ZTQ3ZTU4Yjc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ec75bf2f97e05c9292cbe25576063f8fc66969b7",
                    "sha": "ec75bf2f97e05c9292cbe25576063f8fc66969b7",
                    "url": "https://api.github.com/repos/cython/cython/commits/ec75bf2f97e05c9292cbe25576063f8fc66969b7"
                }
            ],
            "sha": "09d20efeaffc10bc140d47b7ffef10b4e47e58b7",
            "url": "https://api.github.com/repos/cython/cython/commits/09d20efeaffc10bc140d47b7ffef10b4e47e58b7"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c1632b7040d88f6e5ab84bd358ea856815720051/comments",
            "commit": {
                "author": {
                    "date": "2020-06-15T05:44:22Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-15T05:44:22Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "message": "Addressing comments on version, newref & errors",
                "tree": {
                    "sha": "1cc4041b7899304d009ca81f7234c052dc5a18f6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1cc4041b7899304d009ca81f7234c052dc5a18f6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c1632b7040d88f6e5ab84bd358ea856815720051",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "html_url": "https://github.com/cython/cython/commit/c1632b7040d88f6e5ab84bd358ea856815720051",
            "node_id": "MDY6Q29tbWl0MjQzNjA3ODA4OmMxNjMyYjcwNDBkODhmNmU1YWI4NGJkMzU4ZWE4NTY4MTU3MjAwNTE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/09d20efeaffc10bc140d47b7ffef10b4e47e58b7",
                    "sha": "09d20efeaffc10bc140d47b7ffef10b4e47e58b7",
                    "url": "https://api.github.com/repos/cython/cython/commits/09d20efeaffc10bc140d47b7ffef10b4e47e58b7"
                }
            ],
            "sha": "c1632b7040d88f6e5ab84bd358ea856815720051",
            "url": "https://api.github.com/repos/cython/cython/commits/c1632b7040d88f6e5ab84bd358ea856815720051"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/15ea923babb7dc94bd1719e4d2ec40ed2e682037/comments",
            "commit": {
                "author": {
                    "date": "2020-06-15T08:11:54Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-15T08:11:54Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "message": "Fixed typo on v3.4.0 alternative",
                "tree": {
                    "sha": "d36f34d9a72845eb64eef816994ee74bc21413a7",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d36f34d9a72845eb64eef816994ee74bc21413a7"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/15ea923babb7dc94bd1719e4d2ec40ed2e682037",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "html_url": "https://github.com/cython/cython/commit/15ea923babb7dc94bd1719e4d2ec40ed2e682037",
            "node_id": "MDY6Q29tbWl0MjQzNjA3ODA4OjE1ZWE5MjNiYWJiN2RjOTRiZDE3MTllNGQyZWM0MGVkMmU2ODIwMzc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c1632b7040d88f6e5ab84bd358ea856815720051",
                    "sha": "c1632b7040d88f6e5ab84bd358ea856815720051",
                    "url": "https://api.github.com/repos/cython/cython/commits/c1632b7040d88f6e5ab84bd358ea856815720051"
                }
            ],
            "sha": "15ea923babb7dc94bd1719e4d2ec40ed2e682037",
            "url": "https://api.github.com/repos/cython/cython/commits/15ea923babb7dc94bd1719e4d2ec40ed2e682037"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/ebe271afa4b3415bd2bcf3840894ce72042023b1/comments",
            "commit": {
                "author": {
                    "date": "2020-06-21T00:44:14Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-21T00:44:14Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "message": "Fixing comments: refs, err clear, util func.",
                "tree": {
                    "sha": "db2957ecd5287351648bc82bfb8a148062749b15",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/db2957ecd5287351648bc82bfb8a148062749b15"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/ebe271afa4b3415bd2bcf3840894ce72042023b1",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "html_url": "https://github.com/cython/cython/commit/ebe271afa4b3415bd2bcf3840894ce72042023b1",
            "node_id": "MDY6Q29tbWl0MjQzNjA3ODA4OmViZTI3MWFmYTRiMzQxNWJkMmJjZjM4NDA4OTRjZTcyMDQyMDIzYjE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/15ea923babb7dc94bd1719e4d2ec40ed2e682037",
                    "sha": "15ea923babb7dc94bd1719e4d2ec40ed2e682037",
                    "url": "https://api.github.com/repos/cython/cython/commits/15ea923babb7dc94bd1719e4d2ec40ed2e682037"
                }
            ],
            "sha": "ebe271afa4b3415bd2bcf3840894ce72042023b1",
            "url": "https://api.github.com/repos/cython/cython/commits/ebe271afa4b3415bd2bcf3840894ce72042023b1"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f13b58e655d88663e73c35a919be6902a564cbeb/comments",
            "commit": {
                "author": {
                    "date": "2020-06-21T09:01:33Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-21T09:01:33Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "message": "Using a more generic fallback.",
                "tree": {
                    "sha": "e66776dd861fe18f181b7a1af0efea1a53f00931",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e66776dd861fe18f181b7a1af0efea1a53f00931"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f13b58e655d88663e73c35a919be6902a564cbeb",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "html_url": "https://github.com/cython/cython/commit/f13b58e655d88663e73c35a919be6902a564cbeb",
            "node_id": "MDY6Q29tbWl0MjQzNjA3ODA4OmYxM2I1OGU2NTVkODg2NjNlNzNjMzVhOTE5YmU2OTAyYTU2NGNiZWI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/ebe271afa4b3415bd2bcf3840894ce72042023b1",
                    "sha": "ebe271afa4b3415bd2bcf3840894ce72042023b1",
                    "url": "https://api.github.com/repos/cython/cython/commits/ebe271afa4b3415bd2bcf3840894ce72042023b1"
                }
            ],
            "sha": "f13b58e655d88663e73c35a919be6902a564cbeb",
            "url": "https://api.github.com/repos/cython/cython/commits/f13b58e655d88663e73c35a919be6902a564cbeb"
        },
        {
            "author": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/01def8908a3ea550759e733733a1f8c5a0c7aeaf/comments",
            "commit": {
                "author": {
                    "date": "2020-06-27T08:11:23Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-06-27T08:11:23Z",
                    "email": "pluz@fb.com",
                    "name": "Pedro Marques da Luz"
                },
                "message": "Caching fallback results",
                "tree": {
                    "sha": "3801b7372056a2a1b15bf21198dab74129a01278",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3801b7372056a2a1b15bf21198dab74129a01278"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/01def8908a3ea550759e733733a1f8c5a0c7aeaf",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "html_url": "https://github.com/cython/cython/commit/01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "node_id": "MDY6Q29tbWl0MjQzNjA3ODA4OjAxZGVmODkwOGEzZWE1NTA3NTllNzMzNzMzYTFmOGM1YTBjN2FlYWY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f13b58e655d88663e73c35a919be6902a564cbeb",
                    "sha": "f13b58e655d88663e73c35a919be6902a564cbeb",
                    "url": "https://api.github.com/repos/cython/cython/commits/f13b58e655d88663e73c35a919be6902a564cbeb"
                }
            ],
            "sha": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
            "url": "https://api.github.com/repos/cython/cython/commits/01def8908a3ea550759e733733a1f8c5a0c7aeaf"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3427/commits",
    "created_at": "2020-03-13T19:12:40Z",
    "diff_url": "https://github.com/cython/cython/pull/3427.diff",
    "draft": false,
    "head": {
        "label": "daluz:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/daluz/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/daluz/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/daluz/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/daluz/cython/branches{/branch}",
            "clone_url": "https://github.com/daluz/cython.git",
            "collaborators_url": "https://api.github.com/repos/daluz/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/daluz/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/daluz/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/daluz/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/daluz/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/daluz/cython/contributors",
            "created_at": "2020-02-27T20:14:40Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/daluz/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/daluz/cython/downloads",
            "events_url": "https://api.github.com/repos/daluz/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/daluz/cython/forks",
            "full_name": "daluz/cython",
            "git_commits_url": "https://api.github.com/repos/daluz/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/daluz/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/daluz/cython/git/tags{/sha}",
            "git_url": "git://github.com/daluz/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/daluz/cython/hooks",
            "html_url": "https://github.com/daluz/cython",
            "id": 243607808,
            "issue_comment_url": "https://api.github.com/repos/daluz/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/daluz/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/daluz/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/daluz/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/daluz/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/daluz/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/daluz/cython/merges",
            "milestones_url": "https://api.github.com/repos/daluz/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkyNDM2MDc4MDg=",
            "notifications_url": "https://api.github.com/repos/daluz/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
                "events_url": "https://api.github.com/users/daluz/events{/privacy}",
                "followers_url": "https://api.github.com/users/daluz/followers",
                "following_url": "https://api.github.com/users/daluz/following{/other_user}",
                "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/daluz",
                "id": 4049279,
                "login": "daluz",
                "node_id": "MDQ6VXNlcjQwNDkyNzk=",
                "organizations_url": "https://api.github.com/users/daluz/orgs",
                "received_events_url": "https://api.github.com/users/daluz/received_events",
                "repos_url": "https://api.github.com/users/daluz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/daluz"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/daluz/cython/pulls{/number}",
            "pushed_at": "2020-06-27T08:11:34Z",
            "releases_url": "https://api.github.com/repos/daluz/cython/releases{/id}",
            "size": 59001,
            "ssh_url": "git@github.com:daluz/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/daluz/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/daluz/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/daluz/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/daluz/cython/subscription",
            "svn_url": "https://github.com/daluz/cython",
            "tags_url": "https://api.github.com/repos/daluz/cython/tags",
            "teams_url": "https://api.github.com/repos/daluz/cython/teams",
            "trees_url": "https://api.github.com/repos/daluz/cython/git/trees{/sha}",
            "updated_at": "2020-06-27T08:11:37Z",
            "url": "https://api.github.com/repos/daluz/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "01def8908a3ea550759e733733a1f8c5a0c7aeaf",
        "user": {
            "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
            "events_url": "https://api.github.com/users/daluz/events{/privacy}",
            "followers_url": "https://api.github.com/users/daluz/followers",
            "following_url": "https://api.github.com/users/daluz/following{/other_user}",
            "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/daluz",
            "id": 4049279,
            "login": "daluz",
            "node_id": "MDQ6VXNlcjQwNDkyNzk=",
            "organizations_url": "https://api.github.com/users/daluz/orgs",
            "received_events_url": "https://api.github.com/users/daluz/received_events",
            "repos_url": "https://api.github.com/users/daluz/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/daluz"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3427",
    "id": 387935014,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3427",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "0880d59baeba9a45d738bf2b05d289056a873232",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg3OTM1MDE0",
    "number": 3427,
    "patch_url": "https://github.com/cython/cython/pull/3427.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3427/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/01def8908a3ea550759e733733a1f8c5a0c7aeaf",
    "title": "There's currently noway to identify a Cython Coroutine Function.",
    "updated_at": "2020-07-22T17:42:27Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3427",
    "user": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/4049279?v=4",
        "events_url": "https://api.github.com/users/daluz/events{/privacy}",
        "followers_url": "https://api.github.com/users/daluz/followers",
        "following_url": "https://api.github.com/users/daluz/following{/other_user}",
        "gists_url": "https://api.github.com/users/daluz/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/daluz",
        "id": 4049279,
        "login": "daluz",
        "node_id": "MDQ6VXNlcjQwNDkyNzk=",
        "organizations_url": "https://api.github.com/users/daluz/orgs",
        "received_events_url": "https://api.github.com/users/daluz/received_events",
        "repos_url": "https://api.github.com/users/daluz/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/daluz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/daluz/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/daluz"
    }
}