{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/5334/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/5334/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/5334"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/5334"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/5334/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/5334"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/952102dfc2a49ffe7ba763e18a4327e72bf68b00"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1373,
            "forks_count": 1373,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 1144,
            "open_issues_count": 1144,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2023-03-28T09:39:18Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 67566,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 7790,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "topics": [
                "big-data",
                "c",
                "cpp",
                "cpython",
                "cpython-extensions",
                "cython",
                "performance",
                "python"
            ],
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2023-03-28T14:38:01Z",
            "url": "https://api.github.com/repos/cython/cython",
            "visibility": "public",
            "watchers": 7790,
            "watchers_count": 7790,
            "web_commit_signoff_required": false
        },
        "sha": "b8b378712bc74627f266f3ba6c13751af8e1991f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "This PR adds documentation of how a user could define a custom C++ exception handler that maps arbitrary C++ exceptions to arbitrary Python exception types. It includes an example of creating a new Python exception type via the Python C API, mapping it to a C++ exception via an exception handler function, and showing how to make the exception available in Python so that it may be caught if desired.\r\n\r\nCloses #4613 ",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5334#discussion_r1148084493"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5334"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1148084493"
                }
            },
            "author_association": "MEMBER",
            "body": "If that's the case then we should add an easy way to do it (not in this PR though!). People ideally shouldn't have to dig into Cython utility code to copy it",
            "commit_id": "952102dfc2a49ffe7ba763e18a4327e72bf68b00",
            "created_at": "2023-03-24T21:43:02Z",
            "diff_hunk": "@@ -445,15 +445,100 @@ for Cython to discern that, so watch out with exception masks on IO streams. ::\n     cdef int bar() except +MemoryError\n \n This will catch any C++ error and raise a Python MemoryError in its place.\n-(Any Python exception is valid here.) ::\n+(Any Python exception is valid here.)\n+\n+Cython also supports using a custom exception handler. ::\n \n     cdef int raise_py_error()\n     cdef int something_dangerous() except +raise_py_error\n \n If something_dangerous raises a C++ exception then raise_py_error will be\n called, which allows one to do custom C++ to Python error \"translations.\" If\n raise_py_error does not actually raise an exception a RuntimeError will be\n-raised.\n+raised. This approach may also be used to manage custom Python exceptions\n+created using the Python C API. ::\n+\n+    # raising.pxd\n+    cdef extern from \"Python.h\" nogil:\n+        ctypedef struct PyObject\n+\n+    cdef extern from *:\n+        \"\"\"\n+        #include <Python.h>\n+        #include <stdexcept>\n+        #include <ios>\n+\n+        PyObject *CustomLogicError;\n+\n+        void create_custom_exceptions() {\n+            CustomLogicError = PyErr_NewException(\"raiser.CustomLogicError\", NULL, NULL);\n+        }\n+\n+        void custom_exception_handler() {\n+            try {\n+                if (PyErr_Occurred()) {\n+                    ; // let the latest Python exn pass through and ignore the current one\n+                } else {\n+                    throw;\n+                }\n+            }  catch (const std::logic_error& exn) {\n+                // Add mapping of std::logic_error -> CustomLogicError\n+                PyErr_SetString(CustomLogicError, exn.what());\n+            } catch (...) {\n+                PyErr_SetString(PyExc_RuntimeError, \"Unknown exception\");\n+            }\n+        }\n+\n+        class Raiser {\n+            public:\n+                Raiser () {}\n+                void raise_exception() {\n+                    throw std::logic_error(\"Failure\");\n+                }\n+        };\n+        \"\"\"\n+        cdef PyObject* CustomLogicError\n+        cdef void create_custom_exceptions()\n+        cdef void custom_exception_handler()\n+\n+        cdef cppclass Raiser:\n+            Raiser() noexcept\n+            void raise_exception() except +custom_exception_handler\n+\n+\n+    # raising.pyx\n+    create_custom_exceptions()\n+    PyCustomLogicError = <object> CustomLogicError\n+\n+\n+    cdef class PyRaiser:\n+        cdef Raiser c_obj\n+\n+        def raise_exception(self):\n+            self.c_obj.raise_exception()\n+\n+The above example leverages Cython's ability to include :ref:`verbatim C code\n+<verbatim_c>` in pxd files to create a new Python exception type\n+``CustomLogicError`` and map it to the standard C++ ``std::logic_error`` using\n+the ``custom_exception_handler`` function. There is nothing special about using\n+a standard exception class here, ``std::logic_error`` could easily be replaced\n+with some new C++ exception type defined in this file. The\n+``Raiser::raise_exception`` is marked with ``+custom_exception_handler`` to\n+indicate that this function should be called whenever an exception is raised.\n+The corresponding Python function ``PyRaiser.raise_exception`` will raise a\n+``CustomLogicError`` whenever it is called. Defining ``PyCustomLogicError``\n+allows other code to catch this exception, as shown below: ::\n+    \n+    try:\n+        PyRaiser().raise_exception()\n+    except PyCustomLogicError:\n+        print(\"Caught the exception\")\n+\n+When defining custom exception handlers it is typically good to also include\n+logic to handle all the standard exceptions that Cython typically handles as",
            "html_url": "https://github.com/cython/cython/pull/5334#discussion_r1148084493",
            "id": 1148084493,
            "line": 538,
            "node_id": "PRRC_kwDOABDGAc5EbmEN",
            "original_commit_id": "952102dfc2a49ffe7ba763e18a4327e72bf68b00",
            "original_line": 538,
            "original_position": 96,
            "original_start_line": null,
            "path": "docs/src/userguide/wrapping_CPlusPlus.rst",
            "position": 96,
            "pull_request_review_id": 1357473509,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5334",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1148084493/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-03-24T21:43:02Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1148084493",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/5334#discussion_r1149364855"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/5334"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/1149364855"
                }
            },
            "author_association": "NONE",
            "body": "Do you agree that it typically makes sense to do support this? I think most Cython developers would be a bit surprised to find that [the default exception mapping table](https://cython.readthedocs.io/en/latest/src/userguide/wrapping_CPlusPlus.html#exceptions) is not respected when the handler is replaced (I know at least a couple of people who have tried to set up a custom handler and were initially confused by that behavior).\r\n\r\nAgreed, I think it would be better to have something reusable here but that seemed out of scope for resolving #4613. Also I think it is tricky because in some cases if a developer wants to catch a more specific exception (i.e. a subclass) of an existing exception then the ordering of clauses matters, so there may not be a one size fits all approach to providing a functional way to extend the built-in parser. If we do want to go that route, the best we can do might be to provide a \"pretty good\" solution with some well-documented caveats.",
            "commit_id": "952102dfc2a49ffe7ba763e18a4327e72bf68b00",
            "created_at": "2023-03-27T14:47:50Z",
            "diff_hunk": "@@ -445,15 +445,100 @@ for Cython to discern that, so watch out with exception masks on IO streams. ::\n     cdef int bar() except +MemoryError\n \n This will catch any C++ error and raise a Python MemoryError in its place.\n-(Any Python exception is valid here.) ::\n+(Any Python exception is valid here.)\n+\n+Cython also supports using a custom exception handler. ::\n \n     cdef int raise_py_error()\n     cdef int something_dangerous() except +raise_py_error\n \n If something_dangerous raises a C++ exception then raise_py_error will be\n called, which allows one to do custom C++ to Python error \"translations.\" If\n raise_py_error does not actually raise an exception a RuntimeError will be\n-raised.\n+raised. This approach may also be used to manage custom Python exceptions\n+created using the Python C API. ::\n+\n+    # raising.pxd\n+    cdef extern from \"Python.h\" nogil:\n+        ctypedef struct PyObject\n+\n+    cdef extern from *:\n+        \"\"\"\n+        #include <Python.h>\n+        #include <stdexcept>\n+        #include <ios>\n+\n+        PyObject *CustomLogicError;\n+\n+        void create_custom_exceptions() {\n+            CustomLogicError = PyErr_NewException(\"raiser.CustomLogicError\", NULL, NULL);\n+        }\n+\n+        void custom_exception_handler() {\n+            try {\n+                if (PyErr_Occurred()) {\n+                    ; // let the latest Python exn pass through and ignore the current one\n+                } else {\n+                    throw;\n+                }\n+            }  catch (const std::logic_error& exn) {\n+                // Add mapping of std::logic_error -> CustomLogicError\n+                PyErr_SetString(CustomLogicError, exn.what());\n+            } catch (...) {\n+                PyErr_SetString(PyExc_RuntimeError, \"Unknown exception\");\n+            }\n+        }\n+\n+        class Raiser {\n+            public:\n+                Raiser () {}\n+                void raise_exception() {\n+                    throw std::logic_error(\"Failure\");\n+                }\n+        };\n+        \"\"\"\n+        cdef PyObject* CustomLogicError\n+        cdef void create_custom_exceptions()\n+        cdef void custom_exception_handler()\n+\n+        cdef cppclass Raiser:\n+            Raiser() noexcept\n+            void raise_exception() except +custom_exception_handler\n+\n+\n+    # raising.pyx\n+    create_custom_exceptions()\n+    PyCustomLogicError = <object> CustomLogicError\n+\n+\n+    cdef class PyRaiser:\n+        cdef Raiser c_obj\n+\n+        def raise_exception(self):\n+            self.c_obj.raise_exception()\n+\n+The above example leverages Cython's ability to include :ref:`verbatim C code\n+<verbatim_c>` in pxd files to create a new Python exception type\n+``CustomLogicError`` and map it to the standard C++ ``std::logic_error`` using\n+the ``custom_exception_handler`` function. There is nothing special about using\n+a standard exception class here, ``std::logic_error`` could easily be replaced\n+with some new C++ exception type defined in this file. The\n+``Raiser::raise_exception`` is marked with ``+custom_exception_handler`` to\n+indicate that this function should be called whenever an exception is raised.\n+The corresponding Python function ``PyRaiser.raise_exception`` will raise a\n+``CustomLogicError`` whenever it is called. Defining ``PyCustomLogicError``\n+allows other code to catch this exception, as shown below: ::\n+    \n+    try:\n+        PyRaiser().raise_exception()\n+    except PyCustomLogicError:\n+        print(\"Caught the exception\")\n+\n+When defining custom exception handlers it is typically good to also include\n+logic to handle all the standard exceptions that Cython typically handles as",
            "html_url": "https://github.com/cython/cython/pull/5334#discussion_r1149364855",
            "id": 1149364855,
            "in_reply_to_id": 1148084493,
            "line": 538,
            "node_id": "PRRC_kwDOABDGAc5Egep3",
            "original_commit_id": "952102dfc2a49ffe7ba763e18a4327e72bf68b00",
            "original_line": 538,
            "original_position": 96,
            "original_start_line": null,
            "path": "docs/src/userguide/wrapping_CPlusPlus.rst",
            "position": 96,
            "pull_request_review_id": 1359234728,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/5334",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/cython/cython/pulls/comments/1149364855/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-03-27T14:47:50Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/1149364855",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
                "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vyasr/followers",
                "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vyasr",
                "id": 1538165,
                "login": "vyasr",
                "node_id": "MDQ6VXNlcjE1MzgxNjU=",
                "organizations_url": "https://api.github.com/users/vyasr/orgs",
                "received_events_url": "https://api.github.com/users/vyasr/received_events",
                "repos_url": "https://api.github.com/users/vyasr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vyasr"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/5334/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
                "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vyasr/followers",
                "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vyasr",
                "id": 1538165,
                "login": "vyasr",
                "node_id": "MDQ6VXNlcjE1MzgxNjU=",
                "organizations_url": "https://api.github.com/users/vyasr/orgs",
                "received_events_url": "https://api.github.com/users/vyasr/received_events",
                "repos_url": "https://api.github.com/users/vyasr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vyasr"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a191929135cdea1bcaf46046d2ece29f2e948f3b/comments",
            "commit": {
                "author": {
                    "date": "2023-03-24T20:34:37Z",
                    "email": "vyasr@nvidia.com",
                    "name": "Vyas Ramasubramani"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-03-24T20:34:37Z",
                    "email": "vyasr@nvidia.com",
                    "name": "Vyas Ramasubramani"
                },
                "message": "Add an example of a custom exception handler.",
                "tree": {
                    "sha": "83a22a503dd0cc4a9c1a559747f09f2401d01573",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/83a22a503dd0cc4a9c1a559747f09f2401d01573"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a191929135cdea1bcaf46046d2ece29f2e948f3b",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
                "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vyasr/followers",
                "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vyasr",
                "id": 1538165,
                "login": "vyasr",
                "node_id": "MDQ6VXNlcjE1MzgxNjU=",
                "organizations_url": "https://api.github.com/users/vyasr/orgs",
                "received_events_url": "https://api.github.com/users/vyasr/received_events",
                "repos_url": "https://api.github.com/users/vyasr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vyasr"
            },
            "html_url": "https://github.com/cython/cython/commit/a191929135cdea1bcaf46046d2ece29f2e948f3b",
            "node_id": "C_kwDOJN8Rp9oAKGExOTE5MjkxMzVjZGVhMWJjYWY0NjA0NmQyZWNlMjlmMmU5NDhmM2I",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b8b378712bc74627f266f3ba6c13751af8e1991f",
                    "sha": "b8b378712bc74627f266f3ba6c13751af8e1991f",
                    "url": "https://api.github.com/repos/cython/cython/commits/b8b378712bc74627f266f3ba6c13751af8e1991f"
                }
            ],
            "sha": "a191929135cdea1bcaf46046d2ece29f2e948f3b",
            "url": "https://api.github.com/repos/cython/cython/commits/a191929135cdea1bcaf46046d2ece29f2e948f3b"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
                "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vyasr/followers",
                "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vyasr",
                "id": 1538165,
                "login": "vyasr",
                "node_id": "MDQ6VXNlcjE1MzgxNjU=",
                "organizations_url": "https://api.github.com/users/vyasr/orgs",
                "received_events_url": "https://api.github.com/users/vyasr/received_events",
                "repos_url": "https://api.github.com/users/vyasr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vyasr"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/952102dfc2a49ffe7ba763e18a4327e72bf68b00/comments",
            "commit": {
                "author": {
                    "date": "2023-03-24T20:39:44Z",
                    "email": "vyasr@nvidia.com",
                    "name": "Vyas Ramasubramani"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-03-24T20:39:44Z",
                    "email": "vyasr@nvidia.com",
                    "name": "Vyas Ramasubramani"
                },
                "message": "Make sure to mention that any custom exception would work just as well",
                "tree": {
                    "sha": "f583f368c2ed404900d77882897a6795657eff56",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f583f368c2ed404900d77882897a6795657eff56"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/952102dfc2a49ffe7ba763e18a4327e72bf68b00",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
                "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vyasr/followers",
                "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vyasr",
                "id": 1538165,
                "login": "vyasr",
                "node_id": "MDQ6VXNlcjE1MzgxNjU=",
                "organizations_url": "https://api.github.com/users/vyasr/orgs",
                "received_events_url": "https://api.github.com/users/vyasr/received_events",
                "repos_url": "https://api.github.com/users/vyasr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vyasr"
            },
            "html_url": "https://github.com/cython/cython/commit/952102dfc2a49ffe7ba763e18a4327e72bf68b00",
            "node_id": "C_kwDOJN8Rp9oAKDk1MjEwMmRmYzJhNDlmZmU3YmE3NjNlMThhNDMyN2U3MmJmNjhiMDA",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a191929135cdea1bcaf46046d2ece29f2e948f3b",
                    "sha": "a191929135cdea1bcaf46046d2ece29f2e948f3b",
                    "url": "https://api.github.com/repos/cython/cython/commits/a191929135cdea1bcaf46046d2ece29f2e948f3b"
                }
            ],
            "sha": "952102dfc2a49ffe7ba763e18a4327e72bf68b00",
            "url": "https://api.github.com/repos/cython/cython/commits/952102dfc2a49ffe7ba763e18a4327e72bf68b00"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/5334/commits",
    "created_at": "2023-03-24T20:42:01Z",
    "diff_url": "https://github.com/cython/cython/pull/5334.diff",
    "draft": false,
    "head": {
        "label": "vyasr:doc/custom_exception_handler",
        "ref": "doc/custom_exception_handler",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/vyasr/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/vyasr/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/vyasr/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/vyasr/cython/branches{/branch}",
            "clone_url": "https://github.com/vyasr/cython.git",
            "collaborators_url": "https://api.github.com/repos/vyasr/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/vyasr/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/vyasr/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/vyasr/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/vyasr/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/vyasr/cython/contributors",
            "created_at": "2023-03-24T20:35:35Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/vyasr/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/vyasr/cython/downloads",
            "events_url": "https://api.github.com/repos/vyasr/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/vyasr/cython/forks",
            "full_name": "vyasr/cython",
            "git_commits_url": "https://api.github.com/repos/vyasr/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/vyasr/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/vyasr/cython/git/tags{/sha}",
            "git_url": "git://github.com/vyasr/cython.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/vyasr/cython/hooks",
            "html_url": "https://github.com/vyasr/cython",
            "id": 618598823,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/vyasr/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/vyasr/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/vyasr/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/vyasr/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/vyasr/cython/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/vyasr/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/vyasr/cython/merges",
            "milestones_url": "https://api.github.com/repos/vyasr/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "R_kgDOJN8Rpw",
            "notifications_url": "https://api.github.com/repos/vyasr/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
                "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vyasr/followers",
                "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vyasr",
                "id": 1538165,
                "login": "vyasr",
                "node_id": "MDQ6VXNlcjE1MzgxNjU=",
                "organizations_url": "https://api.github.com/users/vyasr/orgs",
                "received_events_url": "https://api.github.com/users/vyasr/received_events",
                "repos_url": "https://api.github.com/users/vyasr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vyasr"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/vyasr/cython/pulls{/number}",
            "pushed_at": "2023-03-24T20:40:17Z",
            "releases_url": "https://api.github.com/repos/vyasr/cython/releases{/id}",
            "size": 64618,
            "ssh_url": "git@github.com:vyasr/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/vyasr/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/vyasr/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/vyasr/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/vyasr/cython/subscription",
            "svn_url": "https://github.com/vyasr/cython",
            "tags_url": "https://api.github.com/repos/vyasr/cython/tags",
            "teams_url": "https://api.github.com/repos/vyasr/cython/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/vyasr/cython/git/trees{/sha}",
            "updated_at": "2023-03-24T17:54:22Z",
            "url": "https://api.github.com/repos/vyasr/cython",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "952102dfc2a49ffe7ba763e18a4327e72bf68b00",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
            "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
            "followers_url": "https://api.github.com/users/vyasr/followers",
            "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/vyasr",
            "id": 1538165,
            "login": "vyasr",
            "node_id": "MDQ6VXNlcjE1MzgxNjU=",
            "organizations_url": "https://api.github.com/users/vyasr/orgs",
            "received_events_url": "https://api.github.com/users/vyasr/received_events",
            "repos_url": "https://api.github.com/users/vyasr/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/vyasr"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/5334",
    "id": 1289593172,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/5334",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "07a4fb30554ab7bfd0fd00bcd8afa6fc72c4749e",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOABDGAc5M3aFU",
    "number": 5334,
    "patch_url": "https://github.com/cython/cython/pull/5334.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/5334/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/952102dfc2a49ffe7ba763e18a4327e72bf68b00",
    "title": "Add an example of a custom exception handler.",
    "updated_at": "2023-03-27T14:51:07Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/5334",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
        "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
        "followers_url": "https://api.github.com/users/vyasr/followers",
        "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
        "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vyasr",
        "id": 1538165,
        "login": "vyasr",
        "node_id": "MDQ6VXNlcjE1MzgxNjU=",
        "organizations_url": "https://api.github.com/users/vyasr/orgs",
        "received_events_url": "https://api.github.com/users/vyasr/received_events",
        "repos_url": "https://api.github.com/users/vyasr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vyasr"
    }
}