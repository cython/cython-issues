{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3223/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3223/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3223"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3223"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3223/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3223"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/52efea741900142335da78bb14cdd69dcb5c700d"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 979,
            "forks_count": 979,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 790,
            "open_issues_count": 790,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2020-01-30T13:44:00Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 56413,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 4856,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2020-02-04T07:35:38Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 4856,
            "watchers_count": 4856
        },
        "sha": "6e72d84f43fc8f8da4ddc7695ac9f5b434788ef5",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "First prototype for adding `LIMITED_API` support as well as removing al static state. Things can still be improved so looking forward for comments. Specifically I'm looking for pointers/help to:\r\n\r\n1) Integrate the changes with the current test infrastructure.\r\n2) Improve the generated code. I.e. I currently generate the module state in a separate header. Ideally I'd like to push that to the same *.c file.\r\n3) Any other general thoughts to move this in the right direction.\r\n\r\nAs of this writing, there are still APIs that have to be improved on the CPython side to fully support the LIMITED_API. For instance, it provides no useful APIs to customize the traceback. Once all of these are scoped out, we can update CPython to handle it. That being said, this is a great first step towards that.\r\n\r\nLet me know what you think!",
    "closed_at": "2020-01-12T08:51:41Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r341467309"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/341467309"
                }
            },
            "author_association": "MEMBER",
            "body": "Please use variables here. I don't mind verbose C code, but it shouldn't lead to non-trivial code duplication in Cython.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-01T06:49:21Z",
            "diff_hunk": "@@ -3764,10 +3764,17 @@ def generate_tuple_and_keyword_parsing_code(self, args, success_label, code):\n         code.putln('{')\n         all_args = tuple(positional_args) + tuple(kw_only_args)\n         non_posonly_args = [arg for arg in all_args if not arg.pos_only]\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"PyObject **%s[] = {%s};\" % (\n+            Naming.pykwdlist_cname,\n+            ','.join(['&%s' % code.intern_identifier(arg.name)\n+                      for arg in non_posonly_args] + ['0'])))\n+        code.putln(\"#else\")\n         code.putln(\"static PyObject **%s[] = {%s};\" % (\n             Naming.pykwdlist_cname,\n             ','.join(['&%s' % code.intern_identifier(arg.name)\n                       for arg in non_posonly_args] + ['0'])))",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r341467309",
            "id": 341467309,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTQ2NzMwOQ==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 13,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 310312653,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/341467309",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r341468853"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/341468853"
                }
            },
            "author_association": "MEMBER",
            "body": "It might be better to move this before the PEP-393 section above, because it seems unlikely that all of the PEP-393 macros used there would become part of the Limited API, and so `CYTHON_COMPILING_IN_LIMITED_API` seems a safer guard than `defined(PyUnicode_KIND)`.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-01T06:58:46Z",
            "diff_hunk": "@@ -595,6 +658,24 @@ static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict,\n   #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)\n   #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)\n   #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))\n+#elif CYTHON_COMPILING_IN_LIMITED_API",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r341468853",
            "id": 341468853,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTQ2ODg1Mw==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 113,
            "path": "Cython/Utility/ModuleSetupCode.c",
            "position": null,
            "pull_request_review_id": 310312653,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/341468853",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r341469580"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/341469580"
                }
            },
            "author_association": "MEMBER",
            "body": "We still try to generate C89 code (thank you, good old MSVC!), so this declaration must stay at the beginning of the function. Although, we might actually reconsider that decision before this PR gets merged and released. If that's in Cython 3.1, then we'd require CPython 3.5+, in which case C99 might be a reasonable thing to depend on as well.\r\n\r\nAnyway, since it's probably easy to keep up C89 compatibility in this PR, we should stick to it for now.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-01T07:03:21Z",
            "diff_hunk": "@@ -1019,14 +1102,21 @@ static CYTHON_SMALL_CODE PyObject* ${pymodule_create_func_cname}(PyObject *spec,\n     Py_DECREF(modname);\n     if (unlikely(!module)) goto bad;\n \n-    moddict = PyModule_GetDict(module);\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+    if (unlikely(PyModule_AddStringConstant(module, \"loader\", \"__loader__\") < 0)) goto bad;\n+    if (unlikely(PyModule_AddStringConstant(module, \"origin\", \"__file__\") < 0)) goto bad;\n+    if (unlikely(PyModule_AddStringConstant(module, \"parent\", \"__package__\") < 0)) goto bad;\n+    if (unlikely(PyModule_AddStringConstant(module, \"submodule_search_locations\", \"__path__\") < 0)) goto bad;\n+#else\n+    PyObject *moddict = PyModule_GetDict(module);",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r341469580",
            "id": 341469580,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTQ2OTU4MA==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 165,
            "path": "Cython/Utility/ModuleSetupCode.c",
            "position": null,
            "pull_request_review_id": 310312653,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/341469580",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r341470004"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/341470004"
                }
            },
            "author_association": "MEMBER",
            "body": "We tend to prefer `!variable` over `variable == NULL` in the C code, although not consistently. Just saying.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-01T07:05:36Z",
            "diff_hunk": "@@ -1289,6 +1289,15 @@ static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)\n     } else if (unlikely(PyErr_Occurred())) {\n         return NULL;\n     }\n+#elif CYTHON_COMPILING_IN_LIMITED_API\n+    PyObject *$module_cname = PyState_FindModule(&$pymoduledef_cname);\n+    if (unlikely($module_cname == NULL)) {",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r341470004",
            "id": 341470004,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTQ3MDAwNA==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 6,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 310312653,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/341470004",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r341470727"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/341470727"
                }
            },
            "author_association": "MEMBER",
            "body": "I'd keep the name `_AS_DOUBLE` to hint at what it does \"normally\". Also because the code annotator (`cython -a`) naively distinguishes between \"simple fast macros\" and \"probably more costly functions\" by looking at the letter case.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-01T07:09:46Z",
            "diff_hunk": "@@ -628,7 +628,7 @@ static double __Pyx__PyObject_AsDouble(PyObject* obj) {\n     }\n #endif\n     if (likely(float_value)) {\n-        double value = PyFloat_AS_DOUBLE(float_value);\n+        double value = __pyx_PyFloat_AsDouble(float_value);",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r341470727",
            "id": 341470727,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTQ3MDcyNw==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 5,
            "path": "Cython/Utility/Optimize.c",
            "position": null,
            "pull_request_review_id": 310312653,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/341470727",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r341472084"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/341472084"
                }
            },
            "author_association": "MEMBER",
            "body": "It looks like this function could be reused in the Py3 section below, so that `__Pyx_InitStrings()` would only do the looping. The Py2 code will be removed in Cython 3.1, so splitting that out already seems the best choice.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-01T07:17:11Z",
            "diff_hunk": "@@ -43,10 +43,35 @@ static CYTHON_INLINE Py_ssize_t __Pyx_Py_UNICODE_ssize_strlen(const Py_UNICODE *\n \n //////////////////// InitStrings.proto ////////////////////\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static int __Pyx_InitString(__Pyx_StringTabEntry t, PyObject **str); /*proto*/\n+#else\n static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/\n+#endif\n \n //////////////////// InitStrings ////////////////////\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static int __Pyx_InitString(__Pyx_StringTabEntry t, PyObject **str) {",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r341472084",
            "id": 341472084,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTQ3MjA4NA==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 13,
            "path": "Cython/Utility/StringTools.c",
            "position": 13,
            "pull_request_review_id": 310312653,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/341472084",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r343797089"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/343797089"
                }
            },
            "author_association": "MEMBER",
            "body": "A couple of empty lines between the different sections could help make this more readable.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-07T18:10:26Z",
            "diff_hunk": "@@ -2491,6 +2419,81 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_finalize(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\n+                        \"#define %s %s->%s\" % (entry.type.typeobj_cname, Naming.modulestateglobal_cname, entry.type.typeobj_cname))\n+                    module_state_defines.putln(\"#define %s (PyTypeObject *)%s\" % (entry.type.typeptr_cname, entry.type.typeobj_cname))\n+                    module_state_clear.putln(\n+                         \"  Py_CLEAR(%s(m)->%s);\" % (Naming.modulestate_cname, entry.type.typeobj_cname))\n+                    module_state_traverse.putln(\n+                         \"  Py_VISIT(%s(m)->%s);\" % (Naming.modulestate_cname, entry.type.typeobj_cname))\n+        module_state.putln('} %s;' % env.modulestate_cname)\n+        module_state.putln('static struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('#define %s(o) ((%s *)PyModule_GetState(o))' % (env.modulestate_cname, env.modulestate_cname))\n+        module_state.putln('#define %s %s(PyState_FindModule(&%s))' % (env.modulestateglobal_cname, env.modulestate_cname, Naming.pymoduledef_cname))\n+        module_state.putln(\"#endif\")\n+        module_state_defines.putln(\"#endif\")",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r343797089",
            "id": 343797089,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0Mzc5NzA4OQ==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 224,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 273,
            "pull_request_review_id": 313535059,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/343797089",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r343797732"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/343797732"
                }
            },
            "author_association": "MEMBER",
            "body": "Not sure what a better name could be, but `finalize` reads like it's generating a finaliser for the module object, which isn't the case.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-07T18:11:56Z",
            "diff_hunk": "@@ -2491,6 +2419,81 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_finalize(self, env, modules, globalstate):",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r343797732",
            "id": 343797732,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0Mzc5NzczMg==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 202,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 313535059,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/343797732",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r343805213"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/343805213"
                }
            },
            "author_association": "MEMBER",
            "body": "This doesn't look right. `__cinit__` is not the same as `tp_new`. You need to leave the decision to the `TypeSlot` itself, for all slots. It knows when a slot is needed or not.\r\n\r\nSeeing this code actually reminded me of an old branch that I had lying around on my hard drive, where I started implementing the same thing (I should get into the habit of creating PRs even from unfinished branches …)\r\nhttps://github.com/cython/cython/compare/gh2343_heap_types?expand=1",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-07T18:28:58Z",
            "diff_hunk": "@@ -2165,6 +2202,52 @@ def generate_property_set_function(self, property_entry, code):\n         code.putln(\n             \"}\")\n \n+    def generate_typeobj_spec(self, modname, entry, code):\n+        type = entry.type\n+        scope = type.scope\n+        if type.typedef_flag:\n+            objstruct = type.objstruct_cname\n+        else:\n+            objstruct = \"struct %s\" % type.objstruct_cname\n+        classname = scope.class_name.as_c_string_literal()\n+        code.putln(\"static PyType_Slot %s_slots[] = {\" % type.typeobj_cname)\n+        has_tp_getattro = False\n+        for slot in TypeSlots.slot_table:\n+            if slot.slot_name == \"tp_flags\":\n+                continue\n+            if slot.slot_name == \"tp_new\" and scope.lookup_here(\"__cinit__\") is None:",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r343805213",
            "id": 343805213,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzgwNTIxMw==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 178,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 176,
            "pull_request_review_id": 313535059,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/343805213",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r343806851"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/343806851"
                }
            },
            "author_association": "MEMBER",
            "body": "All of these changes would eventually also apply to the PEP489 mode, I think. (Just mentioning it here, that doesn't have to be part of this PR.)",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-07T18:32:27Z",
            "diff_hunk": "@@ -2836,13 +3004,22 @@ def generate_pymoduledef_struct(self, env, code):\n                        ' as per PEP489\"')\n         code.putln(\"#endif\")\n \n+        code.putln(\"\")\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"static void %s_free(void *m) {\" % Naming.module_cname)\n+        code.putln(\"  %s_clear(m);\" % Naming.module_cname)\n+        code.putln(\"}\")\n+        code.putln(\"#endif\")\n+\n         code.putln(\"\")\n         code.putln(\"static struct PyModuleDef %s = {\" % Naming.pymoduledef_cname)\n         code.putln(\"  PyModuleDef_HEAD_INIT,\")\n         code.putln('  %s,' % env.module_name.as_c_string_literal())\n         code.putln(\"  %s, /* m_doc */\" % doc)\n         code.putln(\"#if CYTHON_PEP489_MULTI_PHASE_INIT\")\n         code.putln(\"  0, /* m_size */\")\n+        code.putln(\"#elif CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"  sizeof(%s), /* m_size */\" % env.modulestate_cname)",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r343806851",
            "id": 343806851,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzgwNjg1MQ==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 375,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 313535059,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/343806851",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r343807408"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/343807408"
                }
            },
            "author_association": "MEMBER",
            "body": "Why the commented-out code?",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-07T18:33:47Z",
            "diff_hunk": "@@ -5109,6 +5116,15 @@ def generate_type_ready_code(entry, code, heap_type_bases=False):\n         if not scope:  # could be None if there was an error\n             return\n         if entry.visibility != 'extern':\n+            # code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+            # code.putln(\"#else\")\n+            code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r343807408",
            "id": 343807408,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzgwNzQwOA==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 24,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 313535059,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/343807408",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r343809143"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/343809143"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmmm … Is `self.modulestate_cname` ever something else than `Naming.modulestate_cname` ? Because if not, then this is a useless attribute.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-07T18:38:06Z",
            "diff_hunk": "@@ -1175,6 +1177,8 @@ def __init__(self, name, parent_module, context):\n         self.module_name = EncodedString(self.module_name)\n         self.context = context\n         self.module_cname = Naming.module_cname\n+        self.modulestate_cname = Naming.modulestate_cname\n+        self.modulestateglobal_cname = Naming.modulestateglobal_cname",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r343809143",
            "id": 343809143,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzgwOTE0Mw==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 14,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 313535059,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/343809143",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r343811578"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/343811578"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah, no, this is not what the original code did. It actually copied the value of an attribute from the `ModuleSpec` over to the module. Why can't the limited-API code do that as well?",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-07T18:43:44Z",
            "diff_hunk": "@@ -1019,6 +1105,12 @@ static CYTHON_SMALL_CODE PyObject* ${pymodule_create_func_cname}(PyObject *spec,\n     Py_DECREF(modname);\n     if (unlikely(!module)) goto bad;\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+    if (unlikely(PyModule_AddStringConstant(module, \"loader\", \"__loader__\") < 0)) goto bad;\n+    if (unlikely(PyModule_AddStringConstant(module, \"origin\", \"__file__\") < 0)) goto bad;\n+    if (unlikely(PyModule_AddStringConstant(module, \"parent\", \"__package__\") < 0)) goto bad;\n+    if (unlikely(PyModule_AddStringConstant(module, \"submodule_search_locations\", \"__path__\") < 0)) goto bad;",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r343811578",
            "id": 343811578,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzgxMTU3OA==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 165,
            "path": "Cython/Utility/ModuleSetupCode.c",
            "position": null,
            "pull_request_review_id": 313535059,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/343811578",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r343812358"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/343812358"
                }
            },
            "author_association": "MEMBER",
            "body": "Accidental commit?",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-07T18:45:26Z",
            "diff_hunk": "@@ -0,0 +1,5048 @@\n+/* Generated by Cython 3.0a0 */",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r343812358",
            "id": 343812358,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzgxMjM1OA==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 1,
            "path": "Demos/freeze/combinatorics.c",
            "position": null,
            "pull_request_review_id": 313535059,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/343812358",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r343812505"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/343812505"
                }
            },
            "author_association": "MEMBER",
            "body": "Accidental commit?",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-07T18:45:46Z",
            "diff_hunk": "@@ -0,0 +1,4932 @@\n+/* Generated by Cython 3.0a0 */",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r343812505",
            "id": 343812505,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzgxMjUwNQ==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 1,
            "path": "Demos/freeze/lcmath.c",
            "position": null,
            "pull_request_review_id": 313535059,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/343812505",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r343812620"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/343812620"
                }
            },
            "author_association": "MEMBER",
            "body": "Accidental commit?",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-07T18:46:02Z",
            "diff_hunk": "@@ -0,0 +1,3279 @@\n+/* Generated by Cython 3.0a0 */",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r343812620",
            "id": 343812620,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzgxMjYyMA==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 1,
            "path": "Demos/libraries/call_mymath.c",
            "position": null,
            "pull_request_review_id": 313535059,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/343812620",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r343813000"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/343813000"
                }
            },
            "author_association": "MEMBER",
            "body": "This should say `\"store_true\"`, in which case the default already is `False`.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-07T18:46:50Z",
            "diff_hunk": "@@ -2145,6 +2145,8 @@ def main():\n                       help=\"specify Pythran include directory. This will run the C++ tests using Pythran backend for Numpy\")\n     parser.add_option(\"--no-capture\", dest=\"capture\", default=True, action=\"store_false\",\n                       help=\"do not capture stdout, stderr in srctree tests. Makes pdb.set_trace interactive\")\n+    parser.add_option(\"--limited-api\", dest=\"limited_api\", default=False, action=\"store_false\",",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r343813000",
            "id": 343813000,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MzgxMzAwMA==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 4,
            "path": "runtests.py",
            "position": null,
            "pull_request_review_id": 313535059,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/343813000",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r350011955"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/350011955"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Woops, misinterpreted what the function was doing. You are right this is incorrect, I'll fix it. I'll add a TODO for now, I want to start integrating into the CI first.\r\n\r\nThe reason the Limited API can't support this is because the previous code was pulling the module dict out. In the Limited API world you should never pull any instance's internal dictionary out to manipulate it. Instead you need to rely on the Limited APIs to do this. In this case, we can use `PyModule_AddObject`.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-25T06:48:26Z",
            "diff_hunk": "@@ -1019,6 +1105,12 @@ static CYTHON_SMALL_CODE PyObject* ${pymodule_create_func_cname}(PyObject *spec,\n     Py_DECREF(modname);\n     if (unlikely(!module)) goto bad;\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+    if (unlikely(PyModule_AddStringConstant(module, \"loader\", \"__loader__\") < 0)) goto bad;\n+    if (unlikely(PyModule_AddStringConstant(module, \"origin\", \"__file__\") < 0)) goto bad;\n+    if (unlikely(PyModule_AddStringConstant(module, \"parent\", \"__package__\") < 0)) goto bad;\n+    if (unlikely(PyModule_AddStringConstant(module, \"submodule_search_locations\", \"__path__\") < 0)) goto bad;",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r350011955",
            "id": 350011955,
            "in_reply_to_id": 343811578,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDAxMTk1NQ==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 165,
            "path": "Cython/Utility/ModuleSetupCode.c",
            "position": null,
            "pull_request_review_id": 322066749,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/350011955",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r350012237"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/350012237"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Unintentional",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-25T06:49:49Z",
            "diff_hunk": "@@ -5109,6 +5116,15 @@ def generate_type_ready_code(entry, code, heap_type_bases=False):\n         if not scope:  # could be None if there was an error\n             return\n         if entry.visibility != 'extern':\n+            # code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+            # code.putln(\"#else\")\n+            code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r350012237",
            "id": 350012237,
            "in_reply_to_id": 343807408,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDAxMjIzNw==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 24,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 322067107,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/350012237",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r350013927"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/350013927"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Addressed",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-25T06:57:01Z",
            "diff_hunk": "@@ -2145,6 +2145,8 @@ def main():\n                       help=\"specify Pythran include directory. This will run the C++ tests using Pythran backend for Numpy\")\n     parser.add_option(\"--no-capture\", dest=\"capture\", default=True, action=\"store_false\",\n                       help=\"do not capture stdout, stderr in srctree tests. Makes pdb.set_trace interactive\")\n+    parser.add_option(\"--limited-api\", dest=\"limited_api\", default=False, action=\"store_false\",",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r350013927",
            "id": 350013927,
            "in_reply_to_id": 343813000,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDAxMzkyNw==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 4,
            "path": "runtests.py",
            "position": null,
            "pull_request_review_id": 322069201,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/350013927",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r350013943"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/350013943"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Addressed",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-25T06:57:07Z",
            "diff_hunk": "@@ -0,0 +1,3279 @@\n+/* Generated by Cython 3.0a0 */",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r350013943",
            "id": 350013943,
            "in_reply_to_id": 343812620,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDAxMzk0Mw==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 1,
            "path": "Demos/libraries/call_mymath.c",
            "position": null,
            "pull_request_review_id": 322069225,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/350013943",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r350014011"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/350014011"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Addressed",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-25T06:57:15Z",
            "diff_hunk": "@@ -0,0 +1,4932 @@\n+/* Generated by Cython 3.0a0 */",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r350014011",
            "id": 350014011,
            "in_reply_to_id": 343812505,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDAxNDAxMQ==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 1,
            "path": "Demos/freeze/lcmath.c",
            "position": null,
            "pull_request_review_id": 322069319,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/350014011",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r350014040"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/350014040"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Addressed",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-25T06:57:20Z",
            "diff_hunk": "@@ -0,0 +1,5048 @@\n+/* Generated by Cython 3.0a0 */",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r350014040",
            "id": 350014040,
            "in_reply_to_id": 343812358,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDAxNDA0MA==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 1,
            "path": "Demos/freeze/combinatorics.c",
            "position": null,
            "pull_request_review_id": 322069341,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/350014040",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r350014107"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/350014107"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Addressed",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-25T06:57:35Z",
            "diff_hunk": "@@ -5109,6 +5116,15 @@ def generate_type_ready_code(entry, code, heap_type_bases=False):\n         if not scope:  # could be None if there was an error\n             return\n         if entry.visibility != 'extern':\n+            # code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+            # code.putln(\"#else\")\n+            code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r350014107",
            "id": 350014107,
            "in_reply_to_id": 343807408,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDAxNDEwNw==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 24,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 322069427,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/350014107",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r350014522"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/350014522"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'll do: `generate_module_state_start` and `generate_module_state_end`",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-25T06:59:10Z",
            "diff_hunk": "@@ -2491,6 +2419,81 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_finalize(self, env, modules, globalstate):",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r350014522",
            "id": 350014522,
            "in_reply_to_id": 343797732,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDAxNDUyMg==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 202,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 322069920,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/350014522",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r350041412"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/350041412"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Still TODO, will come back to this",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-25T08:30:49Z",
            "diff_hunk": "@@ -2165,6 +2202,52 @@ def generate_property_set_function(self, property_entry, code):\n         code.putln(\n             \"}\")\n \n+    def generate_typeobj_spec(self, modname, entry, code):\n+        type = entry.type\n+        scope = type.scope\n+        if type.typedef_flag:\n+            objstruct = type.objstruct_cname\n+        else:\n+            objstruct = \"struct %s\" % type.objstruct_cname\n+        classname = scope.class_name.as_c_string_literal()\n+        code.putln(\"static PyType_Slot %s_slots[] = {\" % type.typeobj_cname)\n+        has_tp_getattro = False\n+        for slot in TypeSlots.slot_table:\n+            if slot.slot_name == \"tp_flags\":\n+                continue\n+            if slot.slot_name == \"tp_new\" and scope.lookup_here(\"__cinit__\") is None:",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r350041412",
            "id": 350041412,
            "in_reply_to_id": 343805213,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDA0MTQxMg==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 178,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 176,
            "pull_request_review_id": 322104426,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/350041412",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r350041497"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/350041497"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Still TODO, will come back to this",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-25T08:31:02Z",
            "diff_hunk": "@@ -2491,6 +2419,81 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_finalize(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\n+                        \"#define %s %s->%s\" % (entry.type.typeobj_cname, Naming.modulestateglobal_cname, entry.type.typeobj_cname))\n+                    module_state_defines.putln(\"#define %s (PyTypeObject *)%s\" % (entry.type.typeptr_cname, entry.type.typeobj_cname))\n+                    module_state_clear.putln(\n+                         \"  Py_CLEAR(%s(m)->%s);\" % (Naming.modulestate_cname, entry.type.typeobj_cname))\n+                    module_state_traverse.putln(\n+                         \"  Py_VISIT(%s(m)->%s);\" % (Naming.modulestate_cname, entry.type.typeobj_cname))\n+        module_state.putln('} %s;' % env.modulestate_cname)\n+        module_state.putln('static struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('#define %s(o) ((%s *)PyModule_GetState(o))' % (env.modulestate_cname, env.modulestate_cname))\n+        module_state.putln('#define %s %s(PyState_FindModule(&%s))' % (env.modulestateglobal_cname, env.modulestate_cname, Naming.pymoduledef_cname))\n+        module_state.putln(\"#endif\")\n+        module_state_defines.putln(\"#endif\")",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r350041497",
            "id": 350041497,
            "in_reply_to_id": 343797089,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDA0MTQ5Nw==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 224,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 273,
            "pull_request_review_id": 322104525,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/350041497",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r350041533"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/350041533"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Still TODO, will come back to this",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-25T08:31:08Z",
            "diff_hunk": "@@ -43,10 +43,35 @@ static CYTHON_INLINE Py_ssize_t __Pyx_Py_UNICODE_ssize_strlen(const Py_UNICODE *\n \n //////////////////// InitStrings.proto ////////////////////\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static int __Pyx_InitString(__Pyx_StringTabEntry t, PyObject **str); /*proto*/\n+#else\n static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/\n+#endif\n \n //////////////////// InitStrings ////////////////////\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static int __Pyx_InitString(__Pyx_StringTabEntry t, PyObject **str) {",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r350041533",
            "id": 350041533,
            "in_reply_to_id": 341472084,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDA0MTUzMw==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 13,
            "path": "Cython/Utility/StringTools.c",
            "position": 13,
            "pull_request_review_id": 322104569,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/350041533",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r350041545"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/350041545"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Still TODO, will come back to this",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-25T08:31:10Z",
            "diff_hunk": "@@ -628,7 +628,7 @@ static double __Pyx__PyObject_AsDouble(PyObject* obj) {\n     }\n #endif\n     if (likely(float_value)) {\n-        double value = PyFloat_AS_DOUBLE(float_value);\n+        double value = __pyx_PyFloat_AsDouble(float_value);",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r350041545",
            "id": 350041545,
            "in_reply_to_id": 341470727,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDA0MTU0NQ==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 5,
            "path": "Cython/Utility/Optimize.c",
            "position": null,
            "pull_request_review_id": 322104584,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/350041545",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r350041570"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/350041570"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Still TODO, will come back to this",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-25T08:31:12Z",
            "diff_hunk": "@@ -1289,6 +1289,15 @@ static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)\n     } else if (unlikely(PyErr_Occurred())) {\n         return NULL;\n     }\n+#elif CYTHON_COMPILING_IN_LIMITED_API\n+    PyObject *$module_cname = PyState_FindModule(&$pymoduledef_cname);\n+    if (unlikely($module_cname == NULL)) {",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r350041570",
            "id": 350041570,
            "in_reply_to_id": 341470004,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDA0MTU3MA==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 6,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 322104614,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/350041570",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r350041594"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/350041594"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Still TODO, will come back to this",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-25T08:31:15Z",
            "diff_hunk": "@@ -1019,14 +1102,21 @@ static CYTHON_SMALL_CODE PyObject* ${pymodule_create_func_cname}(PyObject *spec,\n     Py_DECREF(modname);\n     if (unlikely(!module)) goto bad;\n \n-    moddict = PyModule_GetDict(module);\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+    if (unlikely(PyModule_AddStringConstant(module, \"loader\", \"__loader__\") < 0)) goto bad;\n+    if (unlikely(PyModule_AddStringConstant(module, \"origin\", \"__file__\") < 0)) goto bad;\n+    if (unlikely(PyModule_AddStringConstant(module, \"parent\", \"__package__\") < 0)) goto bad;\n+    if (unlikely(PyModule_AddStringConstant(module, \"submodule_search_locations\", \"__path__\") < 0)) goto bad;\n+#else\n+    PyObject *moddict = PyModule_GetDict(module);",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r350041594",
            "id": 350041594,
            "in_reply_to_id": 341469580,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDA0MTU5NA==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 165,
            "path": "Cython/Utility/ModuleSetupCode.c",
            "position": null,
            "pull_request_review_id": 322104643,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/350041594",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r350041612"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/350041612"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Still TODO, will come back to this",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-25T08:31:21Z",
            "diff_hunk": "@@ -595,6 +658,24 @@ static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict,\n   #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)\n   #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)\n   #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))\n+#elif CYTHON_COMPILING_IN_LIMITED_API",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r350041612",
            "id": 350041612,
            "in_reply_to_id": 341468853,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDA0MTYxMg==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 113,
            "path": "Cython/Utility/ModuleSetupCode.c",
            "position": null,
            "pull_request_review_id": 322104682,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/350041612",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r350041643"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/350041643"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Still TODO, will come back to this",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-25T08:31:26Z",
            "diff_hunk": "@@ -3764,10 +3764,17 @@ def generate_tuple_and_keyword_parsing_code(self, args, success_label, code):\n         code.putln('{')\n         all_args = tuple(positional_args) + tuple(kw_only_args)\n         non_posonly_args = [arg for arg in all_args if not arg.pos_only]\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"PyObject **%s[] = {%s};\" % (\n+            Naming.pykwdlist_cname,\n+            ','.join(['&%s' % code.intern_identifier(arg.name)\n+                      for arg in non_posonly_args] + ['0'])))\n+        code.putln(\"#else\")\n         code.putln(\"static PyObject **%s[] = {%s};\" % (\n             Naming.pykwdlist_cname,\n             ','.join(['&%s' % code.intern_identifier(arg.name)\n                       for arg in non_posonly_args] + ['0'])))",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r350041643",
            "id": 350041643,
            "in_reply_to_id": 341467309,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MDA0MTY0Mw==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 13,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 322104724,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/350041643",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r351326575"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/351326575"
                }
            },
            "author_association": "MEMBER",
            "body": "You could also just define `LIMITED_API=--limited-api` here, and then pass it directly as a command line argument below.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-27T14:43:37Z",
            "diff_hunk": "@@ -42,6 +42,10 @@ matrix:\n       dist: xenial    # Required for Python 3.7\n       sudo: required  # travis-ci/travis-ci#9069\n       env: BACKEND=cpp\n+    - python: 3.7\n+      dist: xenial    # Required for Python 3.7\n+      sudo: required  # travis-ci/travis-ci#9069\n+      env: LIMITED_API=1",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r351326575",
            "id": 351326575,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MTMyNjU3NQ==",
            "original_commit_id": "250ba411fcfac3e98650de5fb1422c18dd17e226",
            "original_position": 7,
            "path": ".travis.yml",
            "position": null,
            "pull_request_review_id": 323724843,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/351326575",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r351328114"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/351328114"
                }
            },
            "author_association": "MEMBER",
            "body": "Wouldn't it still be necessary to generate the cleanup code, just targeting the references in the module state? Or are all of these references gone now?",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-27T14:46:31Z",
            "diff_hunk": "@@ -2886,6 +2886,7 @@ def generate_module_cleanup_func(self, env, code):\n \n         code.putln('static void %s(CYTHON_UNUSED PyObject *self) {' %\n                    Naming.cleanup_cname)\n+        code.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         if Options.generate_cleanup_code >= 2:",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r351328114",
            "id": 351328114,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MTMyODExNA==",
            "original_commit_id": "390e6f896dac6b201d72122c40b0e407457e37c0",
            "original_position": 5,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 323727013,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/351328114",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r351329238"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/351329238"
                }
            },
            "author_association": "MEMBER",
            "body": "I think type sharing across modules still makes sense with the limited API, don't you think? It even seems cleaner now that they are heap types.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-27T14:48:41Z",
            "diff_hunk": "@@ -3314,6 +3316,7 @@ def generate_type_import_call(self, type, code, import_generator, error_code=Non\n             error_code = code.error_goto(error_pos)\n \n         module = import_generator.imported_module(module_name, error_code)\n+        code.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         code.put('%s = __Pyx_ImportType(%s, %s,' % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r351329238",
            "id": 351329238,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MTMyOTIzOA==",
            "original_commit_id": "390e6f896dac6b201d72122c40b0e407457e37c0",
            "original_position": 21,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 323727013,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/351329238",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r351331287"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/351331287"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah, yes, that's quite important. :)",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-27T14:52:12Z",
            "diff_hunk": "@@ -5199,11 +5199,14 @@ def generate_type_ready_code(entry, code, heap_type_bases=False):\n             if type.vtable_cname:\n                 code.globalstate.use_utility_code(\n                     UtilityCode.load_cached('SetVTable', 'ImportExport.c'))\n+                # TODO(eelizondo): Write version for limited api\n+                code.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n                 code.putln(\n                     \"if (__Pyx_SetVtable(%s.tp_dict, %s) < 0) %s\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r351331287",
            "id": 351331287,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MTMzMTI4Nw==",
            "original_commit_id": "390e6f896dac6b201d72122c40b0e407457e37c0",
            "original_position": 7,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 323727013,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/351331287",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352271048"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352271048"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yup, you are right! I just brought this back!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T07:19:20Z",
            "diff_hunk": "@@ -3314,6 +3316,7 @@ def generate_type_import_call(self, type, code, import_generator, error_code=Non\n             error_code = code.error_goto(error_pos)\n \n         module = import_generator.imported_module(module_name, error_code)\n+        code.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         code.put('%s = __Pyx_ImportType(%s, %s,' % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352271048",
            "id": 352271048,
            "in_reply_to_id": 351329238,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3MTA0OA==",
            "original_commit_id": "390e6f896dac6b201d72122c40b0e407457e37c0",
            "original_position": 21,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 324880745,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352271048",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352271068"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352271068"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "We do need to generate the cleanup code! I was crashing on cleaning up the dictionary but I was able to just guard that instead",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T07:19:53Z",
            "diff_hunk": "@@ -2886,6 +2886,7 @@ def generate_module_cleanup_func(self, env, code):\n \n         code.putln('static void %s(CYTHON_UNUSED PyObject *self) {' %\n                    Naming.cleanup_cname)\n+        code.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         if Options.generate_cleanup_code >= 2:",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352271068",
            "id": 352271068,
            "in_reply_to_id": 351328114,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3MTA2OA==",
            "original_commit_id": "390e6f896dac6b201d72122c40b0e407457e37c0",
            "original_position": 5,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 324880758,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352271068",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352271074"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352271074"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T07:20:04Z",
            "diff_hunk": "@@ -42,6 +42,10 @@ matrix:\n       dist: xenial    # Required for Python 3.7\n       sudo: required  # travis-ci/travis-ci#9069\n       env: BACKEND=cpp\n+    - python: 3.7\n+      dist: xenial    # Required for Python 3.7\n+      sudo: required  # travis-ci/travis-ci#9069\n+      env: LIMITED_API=1",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352271074",
            "id": 352271074,
            "in_reply_to_id": 351326575,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3MTA3NA==",
            "original_commit_id": "250ba411fcfac3e98650de5fb1422c18dd17e226",
            "original_position": 7,
            "path": ".travis.yml",
            "position": null,
            "pull_request_review_id": 324880762,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352271074",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352271331"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352271331"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yup, you were right. Removed.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T07:26:50Z",
            "diff_hunk": "@@ -1175,6 +1177,8 @@ def __init__(self, name, parent_module, context):\n         self.module_name = EncodedString(self.module_name)\n         self.context = context\n         self.module_cname = Naming.module_cname\n+        self.modulestate_cname = Naming.modulestate_cname\n+        self.modulestateglobal_cname = Naming.modulestateglobal_cname",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352271331",
            "id": 352271331,
            "in_reply_to_id": 343809143,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3MTMzMQ==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 14,
            "path": "Cython/Compiler/Symtab.py",
            "position": null,
            "pull_request_review_id": 324880949,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352271331",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352271355"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352271355"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Very likely! I'll just ignore PEP489 that for now :) ",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T07:27:33Z",
            "diff_hunk": "@@ -2836,13 +3004,22 @@ def generate_pymoduledef_struct(self, env, code):\n                        ' as per PEP489\"')\n         code.putln(\"#endif\")\n \n+        code.putln(\"\")\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"static void %s_free(void *m) {\" % Naming.module_cname)\n+        code.putln(\"  %s_clear(m);\" % Naming.module_cname)\n+        code.putln(\"}\")\n+        code.putln(\"#endif\")\n+\n         code.putln(\"\")\n         code.putln(\"static struct PyModuleDef %s = {\" % Naming.pymoduledef_cname)\n         code.putln(\"  PyModuleDef_HEAD_INIT,\")\n         code.putln('  %s,' % env.module_name.as_c_string_literal())\n         code.putln(\"  %s, /* m_doc */\" % doc)\n         code.putln(\"#if CYTHON_PEP489_MULTI_PHASE_INIT\")\n         code.putln(\"  0, /* m_size */\")\n+        code.putln(\"#elif CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"  sizeof(%s), /* m_size */\" % env.modulestate_cname)",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352271355",
            "id": 352271355,
            "in_reply_to_id": 343806851,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3MTM1NQ==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 375,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 324880965,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352271355",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352272150"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352272150"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@scoder this tp_new code is added on purpose. Differently from static types, heap allocated types automatically inherit a `tp_new` function. What I intend to do here is to avoid writing the default `tp_new` that gets added when `__cinit__` is not included. Same for `tp_dealloc`, it now inherits `subtype_dealloc` which know exactly how to dealloc this heap type.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T07:53:53Z",
            "diff_hunk": "@@ -2165,6 +2202,52 @@ def generate_property_set_function(self, property_entry, code):\n         code.putln(\n             \"}\")\n \n+    def generate_typeobj_spec(self, modname, entry, code):\n+        type = entry.type\n+        scope = type.scope\n+        if type.typedef_flag:\n+            objstruct = type.objstruct_cname\n+        else:\n+            objstruct = \"struct %s\" % type.objstruct_cname\n+        classname = scope.class_name.as_c_string_literal()\n+        code.putln(\"static PyType_Slot %s_slots[] = {\" % type.typeobj_cname)\n+        has_tp_getattro = False\n+        for slot in TypeSlots.slot_table:\n+            if slot.slot_name == \"tp_flags\":\n+                continue\n+            if slot.slot_name == \"tp_new\" and scope.lookup_here(\"__cinit__\") is None:",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352272150",
            "id": 352272150,
            "in_reply_to_id": 343805213,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3MjE1MA==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 178,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 176,
            "pull_request_review_id": 324881638,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352272150",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352272340"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352272340"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T07:59:07Z",
            "diff_hunk": "@@ -2491,6 +2419,81 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_finalize(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\n+                        \"#define %s %s->%s\" % (entry.type.typeobj_cname, Naming.modulestateglobal_cname, entry.type.typeobj_cname))\n+                    module_state_defines.putln(\"#define %s (PyTypeObject *)%s\" % (entry.type.typeptr_cname, entry.type.typeobj_cname))\n+                    module_state_clear.putln(\n+                         \"  Py_CLEAR(%s(m)->%s);\" % (Naming.modulestate_cname, entry.type.typeobj_cname))\n+                    module_state_traverse.putln(\n+                         \"  Py_VISIT(%s(m)->%s);\" % (Naming.modulestate_cname, entry.type.typeobj_cname))\n+        module_state.putln('} %s;' % env.modulestate_cname)\n+        module_state.putln('static struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('#define %s(o) ((%s *)PyModule_GetState(o))' % (env.modulestate_cname, env.modulestate_cname))\n+        module_state.putln('#define %s %s(PyState_FindModule(&%s))' % (env.modulestateglobal_cname, env.modulestate_cname, Naming.pymoduledef_cname))\n+        module_state.putln(\"#endif\")\n+        module_state_defines.putln(\"#endif\")",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352272340",
            "id": 352272340,
            "in_reply_to_id": 343797089,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3MjM0MA==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 224,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 273,
            "pull_request_review_id": 324881786,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352272340",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352272665"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352272665"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Even if `__pyx_PyFloat_AsDouble` already does `PyFloat_AS_DOUBLE` in a normal compilation? In that case I'll just add another if directive :) ",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T08:09:42Z",
            "diff_hunk": "@@ -628,7 +628,7 @@ static double __Pyx__PyObject_AsDouble(PyObject* obj) {\n     }\n #endif\n     if (likely(float_value)) {\n-        double value = PyFloat_AS_DOUBLE(float_value);\n+        double value = __pyx_PyFloat_AsDouble(float_value);",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352272665",
            "id": 352272665,
            "in_reply_to_id": 341470727,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3MjY2NQ==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 5,
            "path": "Cython/Utility/Optimize.c",
            "position": null,
            "pull_request_review_id": 324882077,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352272665",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352272754"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352272754"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T08:12:25Z",
            "diff_hunk": "@@ -1289,6 +1289,15 @@ static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)\n     } else if (unlikely(PyErr_Occurred())) {\n         return NULL;\n     }\n+#elif CYTHON_COMPILING_IN_LIMITED_API\n+    PyObject *$module_cname = PyState_FindModule(&$pymoduledef_cname);\n+    if (unlikely($module_cname == NULL)) {",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352272754",
            "id": 352272754,
            "in_reply_to_id": 341470004,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3Mjc1NA==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 6,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 324882148,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352272754",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352272911"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352272911"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Fixed, this now updates `__Pyx_copy_spec_to_module ` to do `PyModule_AddObject ` when using the Limited API",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T08:17:13Z",
            "diff_hunk": "@@ -1019,6 +1105,12 @@ static CYTHON_SMALL_CODE PyObject* ${pymodule_create_func_cname}(PyObject *spec,\n     Py_DECREF(modname);\n     if (unlikely(!module)) goto bad;\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+    if (unlikely(PyModule_AddStringConstant(module, \"loader\", \"__loader__\") < 0)) goto bad;\n+    if (unlikely(PyModule_AddStringConstant(module, \"origin\", \"__file__\") < 0)) goto bad;\n+    if (unlikely(PyModule_AddStringConstant(module, \"parent\", \"__package__\") < 0)) goto bad;\n+    if (unlikely(PyModule_AddStringConstant(module, \"submodule_search_locations\", \"__path__\") < 0)) goto bad;",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352272911",
            "id": 352272911,
            "in_reply_to_id": 343811578,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3MjkxMQ==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 165,
            "path": "Cython/Utility/ModuleSetupCode.c",
            "position": null,
            "pull_request_review_id": 324882275,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352272911",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352272984"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352272984"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T08:19:02Z",
            "diff_hunk": "@@ -595,6 +658,24 @@ static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict,\n   #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)\n   #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)\n   #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))\n+#elif CYTHON_COMPILING_IN_LIMITED_API",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352272984",
            "id": 352272984,
            "in_reply_to_id": 341468853,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3Mjk4NA==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 113,
            "path": "Cython/Utility/ModuleSetupCode.c",
            "position": null,
            "pull_request_review_id": 324882319,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352272984",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352273312"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352273312"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T08:27:35Z",
            "diff_hunk": "@@ -5199,11 +5199,14 @@ def generate_type_ready_code(entry, code, heap_type_bases=False):\n             if type.vtable_cname:\n                 code.globalstate.use_utility_code(\n                     UtilityCode.load_cached('SetVTable', 'ImportExport.c'))\n+                # TODO(eelizondo): Write version for limited api\n+                code.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n                 code.putln(\n                     \"if (__Pyx_SetVtable(%s.tp_dict, %s) < 0) %s\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352273312",
            "id": 352273312,
            "in_reply_to_id": 351331287,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3MzMxMg==",
            "original_commit_id": "390e6f896dac6b201d72122c40b0e407457e37c0",
            "original_position": 7,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 324882576,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352273312",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352273564"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352273564"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T08:34:44Z",
            "diff_hunk": "@@ -43,10 +43,35 @@ static CYTHON_INLINE Py_ssize_t __Pyx_Py_UNICODE_ssize_strlen(const Py_UNICODE *\n \n //////////////////// InitStrings.proto ////////////////////\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static int __Pyx_InitString(__Pyx_StringTabEntry t, PyObject **str); /*proto*/\n+#else\n static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/\n+#endif\n \n //////////////////// InitStrings ////////////////////\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static int __Pyx_InitString(__Pyx_StringTabEntry t, PyObject **str) {",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352273564",
            "id": 352273564,
            "in_reply_to_id": 341472084,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3MzU2NA==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 13,
            "path": "Cython/Utility/StringTools.c",
            "position": 13,
            "pull_request_review_id": 324882798,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352273564",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352273576"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352273576"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T08:35:11Z",
            "diff_hunk": "@@ -5199,11 +5199,14 @@ def generate_type_ready_code(entry, code, heap_type_bases=False):\n             if type.vtable_cname:\n                 code.globalstate.use_utility_code(\n                     UtilityCode.load_cached('SetVTable', 'ImportExport.c'))\n+                # TODO(eelizondo): Write version for limited api\n+                code.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n                 code.putln(\n                     \"if (__Pyx_SetVtable(%s.tp_dict, %s) < 0) %s\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352273576",
            "id": 352273576,
            "in_reply_to_id": 351331287,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3MzU3Ng==",
            "original_commit_id": "390e6f896dac6b201d72122c40b0e407457e37c0",
            "original_position": 7,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 324882809,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352273576",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352273613"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352273613"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T08:35:59Z",
            "diff_hunk": "@@ -2491,6 +2419,81 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_finalize(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\n+                        \"#define %s %s->%s\" % (entry.type.typeobj_cname, Naming.modulestateglobal_cname, entry.type.typeobj_cname))\n+                    module_state_defines.putln(\"#define %s (PyTypeObject *)%s\" % (entry.type.typeptr_cname, entry.type.typeobj_cname))\n+                    module_state_clear.putln(\n+                         \"  Py_CLEAR(%s(m)->%s);\" % (Naming.modulestate_cname, entry.type.typeobj_cname))\n+                    module_state_traverse.putln(\n+                         \"  Py_VISIT(%s(m)->%s);\" % (Naming.modulestate_cname, entry.type.typeobj_cname))\n+        module_state.putln('} %s;' % env.modulestate_cname)\n+        module_state.putln('static struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('#define %s(o) ((%s *)PyModule_GetState(o))' % (env.modulestate_cname, env.modulestate_cname))\n+        module_state.putln('#define %s %s(PyState_FindModule(&%s))' % (env.modulestateglobal_cname, env.modulestate_cname, Naming.pymoduledef_cname))\n+        module_state.putln(\"#endif\")\n+        module_state_defines.putln(\"#endif\")",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352273613",
            "id": 352273613,
            "in_reply_to_id": 343797089,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3MzYxMw==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 224,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 273,
            "pull_request_review_id": 324882842,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352273613",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352273657"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352273657"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Even if `__pyx_PyFloat_AsDouble ` still does: `PyFloat_AS_DOUBLE ` in a normal compilation mode? Anyways, I brought this back and added an if directive :) ",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T08:37:10Z",
            "diff_hunk": "@@ -628,7 +628,7 @@ static double __Pyx__PyObject_AsDouble(PyObject* obj) {\n     }\n #endif\n     if (likely(float_value)) {\n-        double value = PyFloat_AS_DOUBLE(float_value);\n+        double value = __pyx_PyFloat_AsDouble(float_value);",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352273657",
            "id": 352273657,
            "in_reply_to_id": 341470727,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3MzY1Nw==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 5,
            "path": "Cython/Utility/Optimize.c",
            "position": null,
            "pull_request_review_id": 324882882,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352273657",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352273677"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352273677"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T08:37:19Z",
            "diff_hunk": "@@ -1289,6 +1289,15 @@ static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)\n     } else if (unlikely(PyErr_Occurred())) {\n         return NULL;\n     }\n+#elif CYTHON_COMPILING_IN_LIMITED_API\n+    PyObject *$module_cname = PyState_FindModule(&$pymoduledef_cname);\n+    if (unlikely($module_cname == NULL)) {",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352273677",
            "id": 352273677,
            "in_reply_to_id": 341470004,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3MzY3Nw==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 6,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 324882894,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352273677",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352273696"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352273696"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T08:37:35Z",
            "diff_hunk": "@@ -595,6 +658,24 @@ static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict,\n   #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)\n   #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)\n   #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))\n+#elif CYTHON_COMPILING_IN_LIMITED_API",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352273696",
            "id": 352273696,
            "in_reply_to_id": 341468853,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3MzY5Ng==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 113,
            "path": "Cython/Utility/ModuleSetupCode.c",
            "position": null,
            "pull_request_review_id": 324882901,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352273696",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352273736"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352273736"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T08:38:46Z",
            "diff_hunk": "@@ -1019,14 +1102,21 @@ static CYTHON_SMALL_CODE PyObject* ${pymodule_create_func_cname}(PyObject *spec,\n     Py_DECREF(modname);\n     if (unlikely(!module)) goto bad;\n \n-    moddict = PyModule_GetDict(module);\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+    if (unlikely(PyModule_AddStringConstant(module, \"loader\", \"__loader__\") < 0)) goto bad;\n+    if (unlikely(PyModule_AddStringConstant(module, \"origin\", \"__file__\") < 0)) goto bad;\n+    if (unlikely(PyModule_AddStringConstant(module, \"parent\", \"__package__\") < 0)) goto bad;\n+    if (unlikely(PyModule_AddStringConstant(module, \"submodule_search_locations\", \"__path__\") < 0)) goto bad;\n+#else\n+    PyObject *moddict = PyModule_GetDict(module);",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352273736",
            "id": 352273736,
            "in_reply_to_id": 341469580,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3MzczNg==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 165,
            "path": "Cython/Utility/ModuleSetupCode.c",
            "position": null,
            "pull_request_review_id": 324882944,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352273736",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r352273919"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/352273919"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2019-11-30T08:44:14Z",
            "diff_hunk": "@@ -3764,10 +3764,17 @@ def generate_tuple_and_keyword_parsing_code(self, args, success_label, code):\n         code.putln('{')\n         all_args = tuple(positional_args) + tuple(kw_only_args)\n         non_posonly_args = [arg for arg in all_args if not arg.pos_only]\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"PyObject **%s[] = {%s};\" % (\n+            Naming.pykwdlist_cname,\n+            ','.join(['&%s' % code.intern_identifier(arg.name)\n+                      for arg in non_posonly_args] + ['0'])))\n+        code.putln(\"#else\")\n         code.putln(\"static PyObject **%s[] = {%s};\" % (\n             Naming.pykwdlist_cname,\n             ','.join(['&%s' % code.intern_identifier(arg.name)\n                       for arg in non_posonly_args] + ['0'])))",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r352273919",
            "id": 352273919,
            "in_reply_to_id": 341467309,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MjI3MzkxOQ==",
            "original_commit_id": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "original_position": 13,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 324883118,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/352273919",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362733414"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362733414"
                }
            },
            "author_association": "MEMBER",
            "body": "Having these unrelated lines right in the middle of the string initialisation code seems badly placed.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T08:33:20Z",
            "diff_hunk": "@@ -1485,8 +1501,11 @@ def generate_string_constants(self):\n             self.use_utility_code(UtilityCode.load_cached(\"InitStrings\", \"StringTools.c\"))\n             py_strings.sort()\n             w = self.parts['pystring_table']\n+            init_globals = self.parts['init_globals']\n             w.putln(\"\")\n             w.putln(\"static __Pyx_StringTabEntry %s[] = {\" % Naming.stringtab_cname)\n+            init_globals.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+            decls_writer.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362733414",
            "id": 362733414,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMzQxNA==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 48,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362733414",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362734027"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362734027"
                }
            },
            "author_association": "MEMBER",
            "body": "At least the `filename_table` should go before the `module_state`. Maybe even the `utility_code_proto_before_types`, i.e. the really early utility code snippets.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T08:36:42Z",
            "diff_hunk": "@@ -1083,6 +1083,10 @@ class GlobalState(object):\n \n     code_layout = [\n         'h_code',\n+        'module_state',\n+        'module_state_clear',\n+        'module_state_traverse',\n+        'module_state_defines',\n         'filename_table',",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362734027",
            "id": 362734027,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczNDAyNw==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 8,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362734027",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362734146"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362734146"
                }
            },
            "author_association": "MEMBER",
            "body": "Indentation is done automatically, so no additional indentation here.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T08:37:26Z",
            "diff_hunk": "@@ -1158,6 +1162,9 @@ def initialize_main_c_code(self):\n         w.enter_cfunc_scope()\n         w.putln(\"\")\n         w.putln(\"static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {\")\n+        w.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        w.putln(\"  Py_ssize_t i = 0;\")",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362734146",
            "id": 362734146,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczNDE0Ng==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 16,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362734146",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362734208"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362734208"
                }
            },
            "author_association": "MEMBER",
            "body": "No C code indentation here.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T08:37:46Z",
            "diff_hunk": "@@ -1425,9 +1432,18 @@ def generate_object_constant_decls(self):\n                   for c in self.py_constants]\n         consts.sort()\n         decls_writer = self.parts['decls']\n+        decls_writer.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         for _, cname, c in consts:\n+            self.parts['module_state'].putln(\"%s;\" % c.type.declaration_code(cname))\n+            self.parts['module_state_defines'].putln(\n+                \"#define %s %s->%s\" % (cname, Naming.modulestateglobal_cname, cname))\n+            self.parts['module_state_clear'].putln(\n+                \"  Py_CLEAR(%s(m)->%s);\" % (Naming.modulestate_cname, cname))",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362734208",
            "id": 362734208,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczNDIwOA==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 31,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362734208",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362734227"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362734227"
                }
            },
            "author_association": "MEMBER",
            "body": "No C code indentation here.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T08:37:52Z",
            "diff_hunk": "@@ -1425,9 +1432,18 @@ def generate_object_constant_decls(self):\n                   for c in self.py_constants]\n         consts.sort()\n         decls_writer = self.parts['decls']\n+        decls_writer.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         for _, cname, c in consts:\n+            self.parts['module_state'].putln(\"%s;\" % c.type.declaration_code(cname))\n+            self.parts['module_state_defines'].putln(\n+                \"#define %s %s->%s\" % (cname, Naming.modulestateglobal_cname, cname))\n+            self.parts['module_state_clear'].putln(\n+                \"  Py_CLEAR(%s(m)->%s);\" % (Naming.modulestate_cname, cname))\n+            self.parts['module_state_traverse'].putln(\n+                \"  Py_VISIT(%s(m)->%s);\" % (Naming.modulestate_cname, cname))",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362734227",
            "id": 362734227,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczNDIyNw==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 33,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362734227",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362734416"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362734416"
                }
            },
            "author_association": "MEMBER",
            "body": "No C code indentation here.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T08:38:46Z",
            "diff_hunk": "@@ -1495,6 +1514,17 @@ def generate_string_constants(self):\n                 else:\n                     encoding = '\"%s\"' % py_string.encoding.lower()\n \n+                self.parts['module_state'].putln(\"PyObject *%s;\" % py_string.cname)\n+                self.parts['module_state_defines'].putln(\"#define %s %s->%s\" % (\n+                    py_string.cname,\n+                    Naming.modulestateglobal_cname,\n+                    py_string.cname))\n+                self.parts['module_state_clear'].putln(\"  Py_CLEAR(%s(m)->%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362734416",
            "id": 362734416,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczNDQxNg==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 61,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362734416",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362734432"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362734432"
                }
            },
            "author_association": "MEMBER",
            "body": "No C code indentation here.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T08:38:51Z",
            "diff_hunk": "@@ -1495,6 +1514,17 @@ def generate_string_constants(self):\n                 else:\n                     encoding = '\"%s\"' % py_string.encoding.lower()\n \n+                self.parts['module_state'].putln(\"PyObject *%s;\" % py_string.cname)\n+                self.parts['module_state_defines'].putln(\"#define %s %s->%s\" % (\n+                    py_string.cname,\n+                    Naming.modulestateglobal_cname,\n+                    py_string.cname))\n+                self.parts['module_state_clear'].putln(\"  Py_CLEAR(%s(m)->%s);\" % (\n+                    Naming.modulestate_cname,\n+                    py_string.cname))\n+                self.parts['module_state_traverse'].putln(\"  Py_VISIT(%s(m)->%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362734432",
            "id": 362734432,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczNDQzMg==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 64,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362734432",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362735698"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362735698"
                }
            },
            "author_association": "MEMBER",
            "body": "This is a very non-local reference to `i`, which suggests that the variable would benefit from a clearer, more specific name. Otherwise, trying to find out where `i` comes from will be quite difficult for a reader of this code.\r\n\r\n~Is there any reason why we couldn't iterate over the string table in a C loop here in order to initialise it? (And use a C scope to locally declare the loop variable?)~ (Ah, we don't have `py_string.cname` for a loop, too bad.)\r\n\r\nNote that we are inside of a loop in Python here, so `enumerate()` and C integer literals would solve this just fine. We don't need a runtime counter in C.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T08:45:02Z",
            "diff_hunk": "@@ -1516,25 +1557,41 @@ def generate_string_constants(self):\n                     py_string.is_str,\n                     py_string.intern\n                     ))\n+                w.putln(\"#endif\")\n+                init_globals.putln(\"if (__Pyx_InitString(%s[i], &%s) < 0) %s;\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362735698",
            "id": 362735698,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczNTY5OA==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 93,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362735698",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362736911"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362736911"
                }
            },
            "author_association": "MEMBER",
            "body": "No C indentation.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T08:50:54Z",
            "diff_hunk": "@@ -1516,25 +1557,41 @@ def generate_string_constants(self):\n                     py_string.is_str,\n                     py_string.intern\n                     ))\n+                w.putln(\"#endif\")\n+                init_globals.putln(\"if (__Pyx_InitString(%s[i], &%s) < 0) %s;\" % (\n+                    Naming.stringtab_cname,\n+                    py_string.cname,\n+                    init_globals.error_goto(self.module_pos)))\n+                init_globals.putln(\"i++;\")\n                 if py_string.py3str_cstring:\n                     w.putln(\"#endif\")\n+            decls_writer.putln(\"#endif\")\n             w.putln(\"{0, 0, 0, 0, 0, 0, 0}\")\n             w.putln(\"};\")\n \n-            init_globals = self.parts['init_globals']\n+            init_globals.putln(\"#else\")\n             init_globals.putln(\n                 \"if (__Pyx_InitStrings(%s) < 0) %s;\" % (\n                     Naming.stringtab_cname,\n                     init_globals.error_goto(self.module_pos)))\n+            init_globals.putln(\"#endif\")\n \n     def generate_num_constants(self):\n         consts = [(c.py_type, c.value[0] == '-', len(c.value), c.value, c.value_code, c)\n                   for c in self.num_const_index.values()]\n         consts.sort()\n         decls_writer = self.parts['decls']\n+        decls_writer.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         init_globals = self.parts['init_globals']\n         for py_type, _, _, value, value_code, c in consts:\n             cname = c.cname\n+            self.parts['module_state'].putln(\"PyObject *%s;\" % cname)\n+            self.parts['module_state_defines'].putln(\"#define %s %s->%s\" % (\n+                cname, Naming.modulestateglobal_cname, cname))\n+            self.parts['module_state_clear'].putln(\"  Py_CLEAR(%s(m)->%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362736911",
            "id": 362736911,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczNjkxMQ==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 124,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362736911",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362736932"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362736932"
                }
            },
            "author_association": "MEMBER",
            "body": "No C indentation.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T08:50:59Z",
            "diff_hunk": "@@ -1516,25 +1557,41 @@ def generate_string_constants(self):\n                     py_string.is_str,\n                     py_string.intern\n                     ))\n+                w.putln(\"#endif\")\n+                init_globals.putln(\"if (__Pyx_InitString(%s[i], &%s) < 0) %s;\" % (\n+                    Naming.stringtab_cname,\n+                    py_string.cname,\n+                    init_globals.error_goto(self.module_pos)))\n+                init_globals.putln(\"i++;\")\n                 if py_string.py3str_cstring:\n                     w.putln(\"#endif\")\n+            decls_writer.putln(\"#endif\")\n             w.putln(\"{0, 0, 0, 0, 0, 0, 0}\")\n             w.putln(\"};\")\n \n-            init_globals = self.parts['init_globals']\n+            init_globals.putln(\"#else\")\n             init_globals.putln(\n                 \"if (__Pyx_InitStrings(%s) < 0) %s;\" % (\n                     Naming.stringtab_cname,\n                     init_globals.error_goto(self.module_pos)))\n+            init_globals.putln(\"#endif\")\n \n     def generate_num_constants(self):\n         consts = [(c.py_type, c.value[0] == '-', len(c.value), c.value, c.value_code, c)\n                   for c in self.num_const_index.values()]\n         consts.sort()\n         decls_writer = self.parts['decls']\n+        decls_writer.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         init_globals = self.parts['init_globals']\n         for py_type, _, _, value, value_code, c in consts:\n             cname = c.cname\n+            self.parts['module_state'].putln(\"PyObject *%s;\" % cname)\n+            self.parts['module_state_defines'].putln(\"#define %s %s->%s\" % (\n+                cname, Naming.modulestateglobal_cname, cname))\n+            self.parts['module_state_clear'].putln(\"  Py_CLEAR(%s(m)->%s);\" % (\n+                Naming.modulestate_cname, cname))\n+            self.parts['module_state_traverse'].putln(\"  Py_VISIT(%s(m)->%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362736932",
            "id": 362736932,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczNjkzMg==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 126,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362736932",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362737293"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362737293"
                }
            },
            "author_association": "MEMBER",
            "body": "Note that `PyDict_New()` may fail and return NULL, and on success, the reference probably needs to be `DECREF`ed afterwards.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T08:52:40Z",
            "diff_hunk": "@@ -9379,6 +9388,19 @@ def generate_cyfunction_code(self, code):\n         else:\n             flags = '0'\n \n+        code.putln('#if CYTHON_COMPILING_IN_LIMITED_API')\n+        code.putln(\n+            '%s = %s(&%s, %s, %s, %s, %s, PyDict_New(), %s); %s' % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362737293",
            "id": 362737293,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczNzI5Mw==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 29,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362737293",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362738278"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362738278"
                }
            },
            "author_association": "MEMBER",
            "body": "No C indentation.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T08:57:14Z",
            "diff_hunk": "@@ -1167,11 +1176,28 @@ def generate_objstruct_definition(self, type, code):\n             # Only for exposing public typedef name.\n             code.putln(\"typedef struct %s %s;\" % (type.objstruct_cname, type.objtypedef_cname))\n \n-    def generate_c_class_declarations(self, env, code, definition):\n+    def generate_c_class_declarations(self, env, code, definition, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        code.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         for entry in env.c_class_entries:\n             if definition or entry.defined_in_pxd:\n                 code.putln(\"static PyTypeObject *%s = 0;\" % (\n                     entry.type.typeptr_cname))\n+                module_state.putln(\"PyTypeObject *%s;\" % entry.type.typeptr_cname)\n+                module_state_defines.putln(\"#define %s %s->%s\" % (\n+                    entry.type.typeptr_cname,\n+                    Naming.modulestateglobal_cname,\n+                    entry.type.typeptr_cname))\n+                module_state_clear.putln(\"  Py_CLEAR(%s(m)->%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362738278",
            "id": 362738278,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczODI3OA==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 66,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362738278",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362738296"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362738296"
                }
            },
            "author_association": "MEMBER",
            "body": "No C indentation.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T08:57:20Z",
            "diff_hunk": "@@ -1167,11 +1176,28 @@ def generate_objstruct_definition(self, type, code):\n             # Only for exposing public typedef name.\n             code.putln(\"typedef struct %s %s;\" % (type.objstruct_cname, type.objtypedef_cname))\n \n-    def generate_c_class_declarations(self, env, code, definition):\n+    def generate_c_class_declarations(self, env, code, definition, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        code.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         for entry in env.c_class_entries:\n             if definition or entry.defined_in_pxd:\n                 code.putln(\"static PyTypeObject *%s = 0;\" % (\n                     entry.type.typeptr_cname))\n+                module_state.putln(\"PyTypeObject *%s;\" % entry.type.typeptr_cname)\n+                module_state_defines.putln(\"#define %s %s->%s\" % (\n+                    entry.type.typeptr_cname,\n+                    Naming.modulestateglobal_cname,\n+                    entry.type.typeptr_cname))\n+                module_state_clear.putln(\"  Py_CLEAR(%s(m)->%s);\" % (\n+                    Naming.modulestate_cname,\n+                    entry.type.typeptr_cname))\n+                module_state_traverse.putln(\"  Py_VISIT(%s(m)->%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362738296",
            "id": 362738296,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczODI5Ng==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 69,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362738296",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362743725"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362743725"
                }
            },
            "author_association": "MEMBER",
            "body": "No C indentation.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T09:19:16Z",
            "diff_hunk": "@@ -2336,6 +2432,149 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state_start(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_end(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\"#define %s %s->%s\" % (\n+                        entry.type.typeobj_cname,\n+                        Naming.modulestateglobal_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_clear.putln(\"  Py_CLEAR(%s(m)->%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362743725",
            "id": 362743725,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0MzcyNQ==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 244,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362743725",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362743769"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362743769"
                }
            },
            "author_association": "MEMBER",
            "body": "No C indentation.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T09:19:24Z",
            "diff_hunk": "@@ -2336,6 +2432,149 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state_start(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_end(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\"#define %s %s->%s\" % (\n+                        entry.type.typeobj_cname,\n+                        Naming.modulestateglobal_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_clear.putln(\"  Py_CLEAR(%s(m)->%s);\" % (\n+                        Naming.modulestate_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_traverse.putln(\"  Py_VISIT(%s(m)->%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362743769",
            "id": 362743769,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0Mzc2OQ==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 247,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362743769",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362744629"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362744629"
                }
            },
            "author_association": "MEMBER",
            "body": "Is it really guaranteed that this cannot fail? (Same for `PyState_FindModule()` below.)",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T09:22:28Z",
            "diff_hunk": "@@ -2336,6 +2432,149 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state_start(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_end(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\"#define %s %s->%s\" % (\n+                        entry.type.typeobj_cname,\n+                        Naming.modulestateglobal_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_clear.putln(\"  Py_CLEAR(%s(m)->%s);\" % (\n+                        Naming.modulestate_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_traverse.putln(\"  Py_VISIT(%s(m)->%s);\" % (\n+                        Naming.modulestate_cname,\n+                        entry.type.typeobj_cname))\n+        module_state.putln('} %s;' % Naming.modulestate_cname)\n+        module_state.putln('')\n+        module_state.putln('#ifdef __cplusplus')\n+        module_state.putln('namespace {')\n+        module_state.putln('extern struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('} /* anonymous namespace */')\n+        module_state.putln('#else')\n+        module_state.putln('static struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('#endif')\n+        module_state.putln('')\n+        module_state.putln('#define %s(o) ((%s *)PyModule_GetState(o))' % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362744629",
            "id": 362744629,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0NDYyOQ==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 260,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362744629",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362745886"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362745886"
                }
            },
            "author_association": "MEMBER",
            "body": "I doubt that it's really still faster to look up the reference from the module state here, than to just call the C-API function that returns a new reference to the constant objects (tuple, bytes, unicode). At least in CPython, that is. At least it avoids having to clean up reference counts, e.g. when the constant is only used in comparisons.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T09:26:55Z",
            "diff_hunk": "@@ -2336,6 +2432,149 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state_start(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_end(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\"#define %s %s->%s\" % (\n+                        entry.type.typeobj_cname,\n+                        Naming.modulestateglobal_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_clear.putln(\"  Py_CLEAR(%s(m)->%s);\" % (\n+                        Naming.modulestate_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_traverse.putln(\"  Py_VISIT(%s(m)->%s);\" % (\n+                        Naming.modulestate_cname,\n+                        entry.type.typeobj_cname))\n+        module_state.putln('} %s;' % Naming.modulestate_cname)\n+        module_state.putln('')\n+        module_state.putln('#ifdef __cplusplus')\n+        module_state.putln('namespace {')\n+        module_state.putln('extern struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('} /* anonymous namespace */')\n+        module_state.putln('#else')\n+        module_state.putln('static struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('#endif')\n+        module_state.putln('')\n+        module_state.putln('#define %s(o) ((%s *)PyModule_GetState(o))' % (\n+            Naming.modulestate_cname,\n+            Naming.modulestate_cname))\n+        module_state.putln('')\n+        module_state.putln('#define %s (%s(PyState_FindModule(&%s)))' % (\n+            Naming.modulestateglobal_cname,\n+            Naming.modulestate_cname,\n+            Naming.pymoduledef_cname))\n+        module_state.putln('')\n+        module_state.putln('#define %s (PyState_FindModule(&%s))' % (\n+            env.module_cname,\n+            Naming.pymoduledef_cname))\n+        module_state.putln(\"#endif\")\n+        module_state_defines.putln(\"#endif\")\n+        module_state_clear.putln(\"  return 0;\")\n+        module_state_clear.putln(\"};\")\n+        module_state_clear.putln(\"#endif\")\n+        module_state_traverse.putln(\"  return 0;\")\n+        module_state_traverse.putln(\"};\")\n+        module_state_traverse.putln(\"#endif\")\n+\n+    def generate_module_state_defines(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('#define %s %s->%s' % (\n+            Naming.builtins_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.builtins_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.cython_runtime_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.cython_runtime_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.empty_tuple,",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362745886",
            "id": 362745886,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0NTg4Ng==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 292,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 292,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362745886",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362747756"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362747756"
                }
            },
            "author_association": "MEMBER",
            "body": "`static` or not?",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T09:32:44Z",
            "diff_hunk": "@@ -2837,12 +3083,19 @@ def generate_pymoduledef_struct(self, env, code):\n         code.putln(\"#endif\")\n \n         code.putln(\"\")\n+        code.putln('#ifdef __cplusplus')\n+        code.putln('namespace {')\n+        code.putln(\"struct PyModuleDef %s = {\" % Naming.pymoduledef_cname)\n+        code.putln('#else')\n         code.putln(\"static struct PyModuleDef %s = {\" % Naming.pymoduledef_cname)",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362747756",
            "id": 362747756,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0Nzc1Ng==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 424,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 422,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362747756",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362747986"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362747986"
                }
            },
            "author_association": "MEMBER",
            "body": "`/* m_clear */`",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T09:33:30Z",
            "diff_hunk": "@@ -2852,10 +3105,19 @@ def generate_pymoduledef_struct(self, env, code):\n         code.putln(\"#else\")\n         code.putln(\"  NULL, /* m_reload */\")\n         code.putln(\"#endif\")\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"  %s_traverse, /* m_traverse */\" % Naming.module_cname)\n+        code.putln(\"  %s_clear, /* m_traverse */\" % Naming.module_cname)",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362747986",
            "id": 362747986,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0Nzk4Ng==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 442,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362747986",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362748354"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362748354"
                }
            },
            "author_association": "MEMBER",
            "body": "Can `PyState_AddModule()` handle the case that `PyModule_Create()` fails here? (And, should it really handle it?)",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T09:34:49Z",
            "diff_hunk": "@@ -2880,7 +3142,10 @@ def generate_module_creation_code(self, env, code):\n                 env.method_table_cname,\n                 doc,\n                 env.module_cname))\n-        code.putln(\"#else\")\n+        code.putln(\"#elif CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"PyState_AddModule(PyModule_Create(&%s), &%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362748354",
            "id": 362748354,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0ODM1NA==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 462,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362748354",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362751512"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362751512"
                }
            },
            "author_association": "MEMBER",
            "body": "This doesn't look like it still needs duplication. Just assign `moddict = module` for the limited API case.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T09:45:43Z",
            "diff_hunk": "@@ -1019,6 +1111,12 @@ static CYTHON_SMALL_CODE PyObject* ${pymodule_create_func_cname}(PyObject *spec,\n     Py_DECREF(modname);\n     if (unlikely(!module)) goto bad;\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+    if (unlikely(__Pyx_copy_spec_to_module(spec, module, \"loader\", \"__loader__\") < 0)) goto bad;",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362751512",
            "id": 362751512,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc1MTUxMg==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 169,
            "path": "Cython/Utility/ModuleSetupCode.c",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362751512",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362751972"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362751972"
                }
            },
            "author_association": "MEMBER",
            "body": "refleak, `result` already is a new reference.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T09:47:13Z",
            "diff_hunk": "@@ -1289,6 +1289,14 @@ static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)\n     } else if (unlikely(PyErr_Occurred())) {\n         return NULL;\n     }\n+#elif CYTHON_COMPILING_IN_LIMITED_API\n+    if (unlikely(!$module_cname)) {\n+        return NULL;\n+    }\n+    result = PyObject_GetItem($module_cname, name);\n+    if (likely(result)) {\n+        return __Pyx_NewRef(result);",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362751972",
            "id": 362751972,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc1MTk3Mg==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 10,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362751972",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r362752150"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/362752150"
                }
            },
            "author_association": "MEMBER",
            "body": "?",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-03T09:47:57Z",
            "diff_hunk": "@@ -628,7 +628,11 @@ static double __Pyx__PyObject_AsDouble(PyObject* obj) {\n     }\n #endif\n     if (likely(float_value)) {\n+#if CYTHON_COMPILING_IN_LIMITED_API\n         double value = PyFloat_AS_DOUBLE(float_value);\n+#else\n+        double value = PyFloat_AS_DOUBLE(float_value);\n+#endif",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r362752150",
            "id": 362752150,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc1MjE1MA==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 8,
            "path": "Cython/Utility/Optimize.c",
            "position": null,
            "pull_request_review_id": 337983588,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/362752150",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364905030"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364905030"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Agreed, let me refactor this a bit!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T18:52:23Z",
            "diff_hunk": "@@ -1485,8 +1501,11 @@ def generate_string_constants(self):\n             self.use_utility_code(UtilityCode.load_cached(\"InitStrings\", \"StringTools.c\"))\n             py_strings.sort()\n             w = self.parts['pystring_table']\n+            init_globals = self.parts['init_globals']\n             w.putln(\"\")\n             w.putln(\"static __Pyx_StringTabEntry %s[] = {\" % Naming.stringtab_cname)\n+            init_globals.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+            decls_writer.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364905030",
            "id": 364905030,
            "in_reply_to_id": 362733414,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDkwNTAzMA==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 48,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 340741175,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364905030",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364905534"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364905534"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "That could also work and it'll be much cleaner, let me fix it",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T18:53:30Z",
            "diff_hunk": "@@ -1516,25 +1557,41 @@ def generate_string_constants(self):\n                     py_string.is_str,\n                     py_string.intern\n                     ))\n+                w.putln(\"#endif\")\n+                init_globals.putln(\"if (__Pyx_InitString(%s[i], &%s) < 0) %s;\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364905534",
            "id": 364905534,
            "in_reply_to_id": 362735698,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDkwNTUzNA==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 93,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 340741821,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364905534",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364916466"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364916466"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "You are right, fixing!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T19:20:10Z",
            "diff_hunk": "@@ -9379,6 +9388,19 @@ def generate_cyfunction_code(self, code):\n         else:\n             flags = '0'\n \n+        code.putln('#if CYTHON_COMPILING_IN_LIMITED_API')\n+        code.putln(\n+            '%s = %s(&%s, %s, %s, %s, %s, PyDict_New(), %s); %s' % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364916466",
            "id": 364916466,
            "in_reply_to_id": 362737293,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDkxNjQ2Ng==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 29,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 340756810,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364916466",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364966603"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364966603"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Good point!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:24:35Z",
            "diff_hunk": "@@ -1019,6 +1111,12 @@ static CYTHON_SMALL_CODE PyObject* ${pymodule_create_func_cname}(PyObject *spec,\n     Py_DECREF(modname);\n     if (unlikely(!module)) goto bad;\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+    if (unlikely(__Pyx_copy_spec_to_module(spec, module, \"loader\", \"__loader__\") < 0)) goto bad;",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364966603",
            "id": 364966603,
            "in_reply_to_id": 362751512,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk2NjYwMw==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 169,
            "path": "Cython/Utility/ModuleSetupCode.c",
            "position": null,
            "pull_request_review_id": 340823680,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364966603",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364975093"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364975093"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Woops, probably a merge error from a previous change that I had here",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:45:37Z",
            "diff_hunk": "@@ -628,7 +628,11 @@ static double __Pyx__PyObject_AsDouble(PyObject* obj) {\n     }\n #endif\n     if (likely(float_value)) {\n+#if CYTHON_COMPILING_IN_LIMITED_API\n         double value = PyFloat_AS_DOUBLE(float_value);\n+#else\n+        double value = PyFloat_AS_DOUBLE(float_value);\n+#endif",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364975093",
            "id": 364975093,
            "in_reply_to_id": 362752150,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3NTA5Mw==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 8,
            "path": "Cython/Utility/Optimize.c",
            "position": null,
            "pull_request_review_id": 340834660,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364975093",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364977812"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364977812"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Good catch",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:52:39Z",
            "diff_hunk": "@@ -1289,6 +1289,14 @@ static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)\n     } else if (unlikely(PyErr_Occurred())) {\n         return NULL;\n     }\n+#elif CYTHON_COMPILING_IN_LIMITED_API\n+    if (unlikely(!$module_cname)) {\n+        return NULL;\n+    }\n+    result = PyObject_GetItem($module_cname, name);\n+    if (likely(result)) {\n+        return __Pyx_NewRef(result);",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364977812",
            "id": 364977812,
            "in_reply_to_id": 362751972,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3NzgxMg==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 10,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 340838285,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364977812",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364979093"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364979093"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:55:59Z",
            "diff_hunk": "@@ -1485,8 +1501,11 @@ def generate_string_constants(self):\n             self.use_utility_code(UtilityCode.load_cached(\"InitStrings\", \"StringTools.c\"))\n             py_strings.sort()\n             w = self.parts['pystring_table']\n+            init_globals = self.parts['init_globals']\n             w.putln(\"\")\n             w.putln(\"static __Pyx_StringTabEntry %s[] = {\" % Naming.stringtab_cname)\n+            init_globals.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+            decls_writer.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364979093",
            "id": 364979093,
            "in_reply_to_id": 362733414,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3OTA5Mw==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 48,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 340839942,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364979093",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364979407"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364979407"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:56:44Z",
            "diff_hunk": "@@ -1083,6 +1083,10 @@ class GlobalState(object):\n \n     code_layout = [\n         'h_code',\n+        'module_state',\n+        'module_state_clear',\n+        'module_state_traverse',\n+        'module_state_defines',\n         'filename_table',",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364979407",
            "id": 364979407,
            "in_reply_to_id": 362734027,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3OTQwNw==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 8,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 340840339,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364979407",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364979461"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364979461"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I ended up removing this variable",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:56:51Z",
            "diff_hunk": "@@ -1158,6 +1162,9 @@ def initialize_main_c_code(self):\n         w.enter_cfunc_scope()\n         w.putln(\"\")\n         w.putln(\"static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {\")\n+        w.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        w.putln(\"  Py_ssize_t i = 0;\")",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364979461",
            "id": 364979461,
            "in_reply_to_id": 362734146,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3OTQ2MQ==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 16,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 340840392,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364979461",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364979526"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364979526"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:56:59Z",
            "diff_hunk": "@@ -1425,9 +1432,18 @@ def generate_object_constant_decls(self):\n                   for c in self.py_constants]\n         consts.sort()\n         decls_writer = self.parts['decls']\n+        decls_writer.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         for _, cname, c in consts:\n+            self.parts['module_state'].putln(\"%s;\" % c.type.declaration_code(cname))\n+            self.parts['module_state_defines'].putln(\n+                \"#define %s %s->%s\" % (cname, Naming.modulestateglobal_cname, cname))\n+            self.parts['module_state_clear'].putln(\n+                \"  Py_CLEAR(%s(m)->%s);\" % (Naming.modulestate_cname, cname))",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364979526",
            "id": 364979526,
            "in_reply_to_id": 362734208,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3OTUyNg==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 31,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 340840469,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364979526",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364979695"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364979695"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:57:25Z",
            "diff_hunk": "@@ -1425,9 +1432,18 @@ def generate_object_constant_decls(self):\n                   for c in self.py_constants]\n         consts.sort()\n         decls_writer = self.parts['decls']\n+        decls_writer.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         for _, cname, c in consts:\n+            self.parts['module_state'].putln(\"%s;\" % c.type.declaration_code(cname))\n+            self.parts['module_state_defines'].putln(\n+                \"#define %s %s->%s\" % (cname, Naming.modulestateglobal_cname, cname))\n+            self.parts['module_state_clear'].putln(\n+                \"  Py_CLEAR(%s(m)->%s);\" % (Naming.modulestate_cname, cname))\n+            self.parts['module_state_traverse'].putln(\n+                \"  Py_VISIT(%s(m)->%s);\" % (Naming.modulestate_cname, cname))",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364979695",
            "id": 364979695,
            "in_reply_to_id": 362734227,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3OTY5NQ==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 33,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 340840696,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364979695",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364979729"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364979729"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:57:30Z",
            "diff_hunk": "@@ -2852,10 +3105,19 @@ def generate_pymoduledef_struct(self, env, code):\n         code.putln(\"#else\")\n         code.putln(\"  NULL, /* m_reload */\")\n         code.putln(\"#endif\")\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"  %s_traverse, /* m_traverse */\" % Naming.module_cname)\n+        code.putln(\"  %s_clear, /* m_traverse */\" % Naming.module_cname)",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364979729",
            "id": 364979729,
            "in_reply_to_id": 362747986,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3OTcyOQ==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 442,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 340840733,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364979729",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364979794"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364979794"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:57:39Z",
            "diff_hunk": "@@ -1495,6 +1514,17 @@ def generate_string_constants(self):\n                 else:\n                     encoding = '\"%s\"' % py_string.encoding.lower()\n \n+                self.parts['module_state'].putln(\"PyObject *%s;\" % py_string.cname)\n+                self.parts['module_state_defines'].putln(\"#define %s %s->%s\" % (\n+                    py_string.cname,\n+                    Naming.modulestateglobal_cname,\n+                    py_string.cname))\n+                self.parts['module_state_clear'].putln(\"  Py_CLEAR(%s(m)->%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364979794",
            "id": 364979794,
            "in_reply_to_id": 362734416,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3OTc5NA==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 61,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 340840814,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364979794",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364979836"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364979836"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:57:46Z",
            "diff_hunk": "@@ -1495,6 +1514,17 @@ def generate_string_constants(self):\n                 else:\n                     encoding = '\"%s\"' % py_string.encoding.lower()\n \n+                self.parts['module_state'].putln(\"PyObject *%s;\" % py_string.cname)\n+                self.parts['module_state_defines'].putln(\"#define %s %s->%s\" % (\n+                    py_string.cname,\n+                    Naming.modulestateglobal_cname,\n+                    py_string.cname))\n+                self.parts['module_state_clear'].putln(\"  Py_CLEAR(%s(m)->%s);\" % (\n+                    Naming.modulestate_cname,\n+                    py_string.cname))\n+                self.parts['module_state_traverse'].putln(\"  Py_VISIT(%s(m)->%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364979836",
            "id": 364979836,
            "in_reply_to_id": 362734432,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3OTgzNg==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 64,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 340840880,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364979836",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364979983"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364979983"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Fixed using enumerate and the idx value",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:58:07Z",
            "diff_hunk": "@@ -1516,25 +1557,41 @@ def generate_string_constants(self):\n                     py_string.is_str,\n                     py_string.intern\n                     ))\n+                w.putln(\"#endif\")\n+                init_globals.putln(\"if (__Pyx_InitString(%s[i], &%s) < 0) %s;\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364979983",
            "id": 364979983,
            "in_reply_to_id": 362735698,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3OTk4Mw==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 93,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 340841040,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364979983",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364980050"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364980050"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:58:17Z",
            "diff_hunk": "@@ -1516,25 +1557,41 @@ def generate_string_constants(self):\n                     py_string.is_str,\n                     py_string.intern\n                     ))\n+                w.putln(\"#endif\")\n+                init_globals.putln(\"if (__Pyx_InitString(%s[i], &%s) < 0) %s;\" % (\n+                    Naming.stringtab_cname,\n+                    py_string.cname,\n+                    init_globals.error_goto(self.module_pos)))\n+                init_globals.putln(\"i++;\")\n                 if py_string.py3str_cstring:\n                     w.putln(\"#endif\")\n+            decls_writer.putln(\"#endif\")\n             w.putln(\"{0, 0, 0, 0, 0, 0, 0}\")\n             w.putln(\"};\")\n \n-            init_globals = self.parts['init_globals']\n+            init_globals.putln(\"#else\")\n             init_globals.putln(\n                 \"if (__Pyx_InitStrings(%s) < 0) %s;\" % (\n                     Naming.stringtab_cname,\n                     init_globals.error_goto(self.module_pos)))\n+            init_globals.putln(\"#endif\")\n \n     def generate_num_constants(self):\n         consts = [(c.py_type, c.value[0] == '-', len(c.value), c.value, c.value_code, c)\n                   for c in self.num_const_index.values()]\n         consts.sort()\n         decls_writer = self.parts['decls']\n+        decls_writer.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         init_globals = self.parts['init_globals']\n         for py_type, _, _, value, value_code, c in consts:\n             cname = c.cname\n+            self.parts['module_state'].putln(\"PyObject *%s;\" % cname)\n+            self.parts['module_state_defines'].putln(\"#define %s %s->%s\" % (\n+                cname, Naming.modulestateglobal_cname, cname))\n+            self.parts['module_state_clear'].putln(\"  Py_CLEAR(%s(m)->%s);\" % (\n+                Naming.modulestate_cname, cname))\n+            self.parts['module_state_traverse'].putln(\"  Py_VISIT(%s(m)->%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364980050",
            "id": 364980050,
            "in_reply_to_id": 362736932,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk4MDA1MA==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 126,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 340841123,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364980050",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364980255"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364980255"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Fixed using a temporary dict with all the null check and decref",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:58:47Z",
            "diff_hunk": "@@ -9379,6 +9388,19 @@ def generate_cyfunction_code(self, code):\n         else:\n             flags = '0'\n \n+        code.putln('#if CYTHON_COMPILING_IN_LIMITED_API')\n+        code.putln(\n+            '%s = %s(&%s, %s, %s, %s, %s, PyDict_New(), %s); %s' % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364980255",
            "id": 364980255,
            "in_reply_to_id": 362737293,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk4MDI1NQ==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 29,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 340841389,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364980255",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364980307"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364980307"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:58:54Z",
            "diff_hunk": "@@ -1167,11 +1176,28 @@ def generate_objstruct_definition(self, type, code):\n             # Only for exposing public typedef name.\n             code.putln(\"typedef struct %s %s;\" % (type.objstruct_cname, type.objtypedef_cname))\n \n-    def generate_c_class_declarations(self, env, code, definition):\n+    def generate_c_class_declarations(self, env, code, definition, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        code.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         for entry in env.c_class_entries:\n             if definition or entry.defined_in_pxd:\n                 code.putln(\"static PyTypeObject *%s = 0;\" % (\n                     entry.type.typeptr_cname))\n+                module_state.putln(\"PyTypeObject *%s;\" % entry.type.typeptr_cname)\n+                module_state_defines.putln(\"#define %s %s->%s\" % (\n+                    entry.type.typeptr_cname,\n+                    Naming.modulestateglobal_cname,\n+                    entry.type.typeptr_cname))\n+                module_state_clear.putln(\"  Py_CLEAR(%s(m)->%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364980307",
            "id": 364980307,
            "in_reply_to_id": 362738278,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk4MDMwNw==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 66,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 340841449,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364980307",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364980362"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364980362"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:59:02Z",
            "diff_hunk": "@@ -1167,11 +1176,28 @@ def generate_objstruct_definition(self, type, code):\n             # Only for exposing public typedef name.\n             code.putln(\"typedef struct %s %s;\" % (type.objstruct_cname, type.objtypedef_cname))\n \n-    def generate_c_class_declarations(self, env, code, definition):\n+    def generate_c_class_declarations(self, env, code, definition, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        code.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         for entry in env.c_class_entries:\n             if definition or entry.defined_in_pxd:\n                 code.putln(\"static PyTypeObject *%s = 0;\" % (\n                     entry.type.typeptr_cname))\n+                module_state.putln(\"PyTypeObject *%s;\" % entry.type.typeptr_cname)\n+                module_state_defines.putln(\"#define %s %s->%s\" % (\n+                    entry.type.typeptr_cname,\n+                    Naming.modulestateglobal_cname,\n+                    entry.type.typeptr_cname))\n+                module_state_clear.putln(\"  Py_CLEAR(%s(m)->%s);\" % (\n+                    Naming.modulestate_cname,\n+                    entry.type.typeptr_cname))\n+                module_state_traverse.putln(\"  Py_VISIT(%s(m)->%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364980362",
            "id": 364980362,
            "in_reply_to_id": 362738296,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk4MDM2Mg==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 69,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 340841518,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364980362",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364980392"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364980392"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:59:07Z",
            "diff_hunk": "@@ -1516,25 +1557,41 @@ def generate_string_constants(self):\n                     py_string.is_str,\n                     py_string.intern\n                     ))\n+                w.putln(\"#endif\")\n+                init_globals.putln(\"if (__Pyx_InitString(%s[i], &%s) < 0) %s;\" % (\n+                    Naming.stringtab_cname,\n+                    py_string.cname,\n+                    init_globals.error_goto(self.module_pos)))\n+                init_globals.putln(\"i++;\")\n                 if py_string.py3str_cstring:\n                     w.putln(\"#endif\")\n+            decls_writer.putln(\"#endif\")\n             w.putln(\"{0, 0, 0, 0, 0, 0, 0}\")\n             w.putln(\"};\")\n \n-            init_globals = self.parts['init_globals']\n+            init_globals.putln(\"#else\")\n             init_globals.putln(\n                 \"if (__Pyx_InitStrings(%s) < 0) %s;\" % (\n                     Naming.stringtab_cname,\n                     init_globals.error_goto(self.module_pos)))\n+            init_globals.putln(\"#endif\")\n \n     def generate_num_constants(self):\n         consts = [(c.py_type, c.value[0] == '-', len(c.value), c.value, c.value_code, c)\n                   for c in self.num_const_index.values()]\n         consts.sort()\n         decls_writer = self.parts['decls']\n+        decls_writer.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         init_globals = self.parts['init_globals']\n         for py_type, _, _, value, value_code, c in consts:\n             cname = c.cname\n+            self.parts['module_state'].putln(\"PyObject *%s;\" % cname)\n+            self.parts['module_state_defines'].putln(\"#define %s %s->%s\" % (\n+                cname, Naming.modulestateglobal_cname, cname))\n+            self.parts['module_state_clear'].putln(\"  Py_CLEAR(%s(m)->%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364980392",
            "id": 364980392,
            "in_reply_to_id": 362736911,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk4MDM5Mg==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 124,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 340841555,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:24Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364980392",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364980429"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364980429"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:59:14Z",
            "diff_hunk": "@@ -2336,6 +2432,149 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state_start(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_end(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\"#define %s %s->%s\" % (\n+                        entry.type.typeobj_cname,\n+                        Naming.modulestateglobal_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_clear.putln(\"  Py_CLEAR(%s(m)->%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364980429",
            "id": 364980429,
            "in_reply_to_id": 362743725,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk4MDQyOQ==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 244,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 340841602,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364980429",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364980455"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364980455"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T21:59:21Z",
            "diff_hunk": "@@ -2336,6 +2432,149 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state_start(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_end(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\"#define %s %s->%s\" % (\n+                        entry.type.typeobj_cname,\n+                        Naming.modulestateglobal_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_clear.putln(\"  Py_CLEAR(%s(m)->%s);\" % (\n+                        Naming.modulestate_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_traverse.putln(\"  Py_VISIT(%s(m)->%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364980455",
            "id": 364980455,
            "in_reply_to_id": 362743769,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk4MDQ1NQ==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 247,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 340841645,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364980455",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364980751"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364980751"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Fixed",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T22:00:07Z",
            "diff_hunk": "@@ -1289,6 +1289,14 @@ static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)\n     } else if (unlikely(PyErr_Occurred())) {\n         return NULL;\n     }\n+#elif CYTHON_COMPILING_IN_LIMITED_API\n+    if (unlikely(!$module_cname)) {\n+        return NULL;\n+    }\n+    result = PyObject_GetItem($module_cname, name);\n+    if (likely(result)) {\n+        return __Pyx_NewRef(result);",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364980751",
            "id": 364980751,
            "in_reply_to_id": 362751972,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk4MDc1MQ==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 10,
            "path": "Cython/Utility/ObjectHandling.c",
            "position": null,
            "pull_request_review_id": 340842042,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364980751",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364980796"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364980796"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Fixed",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T22:00:14Z",
            "diff_hunk": "@@ -628,7 +628,11 @@ static double __Pyx__PyObject_AsDouble(PyObject* obj) {\n     }\n #endif\n     if (likely(float_value)) {\n+#if CYTHON_COMPILING_IN_LIMITED_API\n         double value = PyFloat_AS_DOUBLE(float_value);\n+#else\n+        double value = PyFloat_AS_DOUBLE(float_value);\n+#endif",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364980796",
            "id": 364980796,
            "in_reply_to_id": 362752150,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk4MDc5Ng==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 8,
            "path": "Cython/Utility/Optimize.c",
            "position": null,
            "pull_request_review_id": 340842110,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364980796",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364981000"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364981000"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Fixed using the moddict assignment",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T22:00:45Z",
            "diff_hunk": "@@ -1019,6 +1111,12 @@ static CYTHON_SMALL_CODE PyObject* ${pymodule_create_func_cname}(PyObject *spec,\n     Py_DECREF(modname);\n     if (unlikely(!module)) goto bad;\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+    if (unlikely(__Pyx_copy_spec_to_module(spec, module, \"loader\", \"__loader__\") < 0)) goto bad;",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364981000",
            "id": 364981000,
            "in_reply_to_id": 362751512,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk4MTAwMA==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 169,
            "path": "Cython/Utility/ModuleSetupCode.c",
            "position": null,
            "pull_request_review_id": 340842368,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364981000",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364986051"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364986051"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "C++ is not compatible with the C way of forward declaring a static struct. The C standard specifies that within a translation unit, the declaration of an identifier with internal linkage belongs to the same object. C++ does not specify that, therefore, causing a compile error. The correct way to model this in C++ is by forward declaring using the anonymous namespace and extern along with another declaration setting the memory.\r\n\r\nI will mark this as resolved but feel free to push back with more questions!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T22:14:04Z",
            "diff_hunk": "@@ -2837,12 +3083,19 @@ def generate_pymoduledef_struct(self, env, code):\n         code.putln(\"#endif\")\n \n         code.putln(\"\")\n+        code.putln('#ifdef __cplusplus')\n+        code.putln('namespace {')\n+        code.putln(\"struct PyModuleDef %s = {\" % Naming.pymoduledef_cname)\n+        code.putln('#else')\n         code.putln(\"static struct PyModuleDef %s = {\" % Naming.pymoduledef_cname)",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364986051",
            "id": 364986051,
            "in_reply_to_id": 362747756,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk4NjA1MQ==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 424,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 422,
            "pull_request_review_id": 340848808,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364986051",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364990718"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364990718"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This can indeed fail and return `NULL`. However, this should work just like a global being `NULL`, therefore I explicitly didn't add error handling here. The expectation is that wherever this is used, it will have error handling",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T22:27:04Z",
            "diff_hunk": "@@ -2336,6 +2432,149 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state_start(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_end(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\"#define %s %s->%s\" % (\n+                        entry.type.typeobj_cname,\n+                        Naming.modulestateglobal_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_clear.putln(\"  Py_CLEAR(%s(m)->%s);\" % (\n+                        Naming.modulestate_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_traverse.putln(\"  Py_VISIT(%s(m)->%s);\" % (\n+                        Naming.modulestate_cname,\n+                        entry.type.typeobj_cname))\n+        module_state.putln('} %s;' % Naming.modulestate_cname)\n+        module_state.putln('')\n+        module_state.putln('#ifdef __cplusplus')\n+        module_state.putln('namespace {')\n+        module_state.putln('extern struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('} /* anonymous namespace */')\n+        module_state.putln('#else')\n+        module_state.putln('static struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('#endif')\n+        module_state.putln('')\n+        module_state.putln('#define %s(o) ((%s *)PyModule_GetState(o))' % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364990718",
            "id": 364990718,
            "in_reply_to_id": 362744629,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk5MDcxOA==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 260,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 340854873,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364990718",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364992716"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364992716"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Currently yeah, it's probably much faster to just create the object. Although I believe that if we get rid of the TLS lookup (i.e: Petr's work), we should be able to get this to be just as fast.\r\n\r\nFor now yeah, the current approach that I have here avoid cleaning up the temporary variables that we would otherwise create all over the place. So let's leave this as is? :) ",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T22:32:47Z",
            "diff_hunk": "@@ -2336,6 +2432,149 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state_start(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_end(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\"#define %s %s->%s\" % (\n+                        entry.type.typeobj_cname,\n+                        Naming.modulestateglobal_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_clear.putln(\"  Py_CLEAR(%s(m)->%s);\" % (\n+                        Naming.modulestate_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_traverse.putln(\"  Py_VISIT(%s(m)->%s);\" % (\n+                        Naming.modulestate_cname,\n+                        entry.type.typeobj_cname))\n+        module_state.putln('} %s;' % Naming.modulestate_cname)\n+        module_state.putln('')\n+        module_state.putln('#ifdef __cplusplus')\n+        module_state.putln('namespace {')\n+        module_state.putln('extern struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('} /* anonymous namespace */')\n+        module_state.putln('#else')\n+        module_state.putln('static struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('#endif')\n+        module_state.putln('')\n+        module_state.putln('#define %s(o) ((%s *)PyModule_GetState(o))' % (\n+            Naming.modulestate_cname,\n+            Naming.modulestate_cname))\n+        module_state.putln('')\n+        module_state.putln('#define %s (%s(PyState_FindModule(&%s)))' % (\n+            Naming.modulestateglobal_cname,\n+            Naming.modulestate_cname,\n+            Naming.pymoduledef_cname))\n+        module_state.putln('')\n+        module_state.putln('#define %s (PyState_FindModule(&%s))' % (\n+            env.module_cname,\n+            Naming.pymoduledef_cname))\n+        module_state.putln(\"#endif\")\n+        module_state_defines.putln(\"#endif\")\n+        module_state_clear.putln(\"  return 0;\")\n+        module_state_clear.putln(\"};\")\n+        module_state_clear.putln(\"#endif\")\n+        module_state_traverse.putln(\"  return 0;\")\n+        module_state_traverse.putln(\"};\")\n+        module_state_traverse.putln(\"#endif\")\n+\n+    def generate_module_state_defines(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('#define %s %s->%s' % (\n+            Naming.builtins_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.builtins_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.cython_runtime_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.cython_runtime_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.empty_tuple,",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364992716",
            "id": 364992716,
            "in_reply_to_id": 362745886,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk5MjcxNg==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 292,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 292,
            "pull_request_review_id": 340857417,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364992716",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r364994383"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/364994383"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yup! I thought it would be better to let `PyState_AddModule` handle the `NULL` here rather than having our own error handling: https://github.com/python/cpython/blob/master/Python/pystate.c#L698-L701\r\n\r\nSince this exits I don't even need to check for the output of `PyState_AddModule`",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-09T22:37:21Z",
            "diff_hunk": "@@ -2880,7 +3142,10 @@ def generate_module_creation_code(self, env, code):\n                 env.method_table_cname,\n                 doc,\n                 env.module_cname))\n-        code.putln(\"#else\")\n+        code.putln(\"#elif CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"PyState_AddModule(PyModule_Create(&%s), &%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r364994383",
            "id": 364994383,
            "in_reply_to_id": 362748354,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk5NDM4Mw==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 462,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 340859419,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/364994383",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365142563"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365142563"
                }
            },
            "author_association": "MEMBER",
            "body": "This still leaks a reference to `temporary_dict` if the constructor call fails and exits here. You need to allocate a new (managed) temp variable for this. See, for example, [here](https://github.com/cython/cython/blob/3dc2b9dfc23638fbef2558d619709b5235d5df08/Cython/Compiler/ExprNodes.py#L7825-L7835).",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-10T09:31:09Z",
            "diff_hunk": "@@ -9400,6 +9402,7 @@ def generate_cyfunction_code(self, code):\n                 self.get_py_mod_name(code),\n                 code_object_result,\n                 code.error_goto_if_null(self.result(), self.pos)))",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365142563",
            "id": 365142563,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE0MjU2Mw==",
            "original_commit_id": "4e5806efd6f06e4296d6d6a0c99fddbc16a1760b",
            "original_position": 15,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 44,
            "pull_request_review_id": 341042786,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365142563",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365156273"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365156273"
                }
            },
            "author_association": "MEMBER",
            "body": "BTW, `Py_CLEAR()` is a macro that evaluates the argument twice. Is that an issue here?\r\nThe same applies to `Py_VISIT()`. `modulestate_cname` has a non-trivial implementation (which is probably also not a good idea, since it encourages misuse), but maybe we could have macros like `__Pyx_VISIT_GLOBAL()` and `__Pyx_CLEAR_GLOBAL()` that would do a locally scoped C assignment first?\r\n\r\nOr rather, we could assign the module state pointer to a local variable at the beginning of the module cleanup function that would be generally available to all its `Py_CLEAR()` calls, and the same for the traverse function. I think that's the best way to do it, since it avoids both code complexity and runtime overhead.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-10T10:00:47Z",
            "diff_hunk": "@@ -1400,9 +1404,18 @@ def generate_object_constant_decls(self):\n                   for c in self.py_constants]\n         consts.sort()\n         decls_writer = self.parts['decls']\n+        decls_writer.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         for _, cname, c in consts:\n+            self.parts['module_state'].putln(\"%s;\" % c.type.declaration_code(cname))\n+            self.parts['module_state_defines'].putln(\n+                \"#define %s %s->%s\" % (cname, Naming.modulestateglobal_cname, cname))\n+            self.parts['module_state_clear'].putln(\n+                \"Py_CLEAR(%s(m)->%s);\" % (Naming.modulestate_cname, cname))",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365156273",
            "id": 365156273,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE1NjI3Mw==",
            "original_commit_id": "1248d0c9b5b45499cb3e0bc44e89ae3650e2da65",
            "original_position": 21,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 341060418,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365156273",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365164020"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365164020"
                }
            },
            "author_association": "MEMBER",
            "body": "Then let me add that none of the usages that I see in your implementation (all the calls to `Py_CLEAR()`, `Py_VISIT()`, etc.) has such a NULL check nor error handling, and will thus lead to a crash if the call ever fails. I think we should avoid calling this too lightly and often, and also try to make it more visible that this macro is much less trivial than it looks.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-10T10:17:55Z",
            "diff_hunk": "@@ -2336,6 +2432,149 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state_start(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_end(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\"#define %s %s->%s\" % (\n+                        entry.type.typeobj_cname,\n+                        Naming.modulestateglobal_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_clear.putln(\"  Py_CLEAR(%s(m)->%s);\" % (\n+                        Naming.modulestate_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_traverse.putln(\"  Py_VISIT(%s(m)->%s);\" % (\n+                        Naming.modulestate_cname,\n+                        entry.type.typeobj_cname))\n+        module_state.putln('} %s;' % Naming.modulestate_cname)\n+        module_state.putln('')\n+        module_state.putln('#ifdef __cplusplus')\n+        module_state.putln('namespace {')\n+        module_state.putln('extern struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('} /* anonymous namespace */')\n+        module_state.putln('#else')\n+        module_state.putln('static struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('#endif')\n+        module_state.putln('')\n+        module_state.putln('#define %s(o) ((%s *)PyModule_GetState(o))' % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365164020",
            "id": 365164020,
            "in_reply_to_id": 362744629,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE2NDAyMA==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 260,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 341069832,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365164020",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365165931"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365165931"
                }
            },
            "author_association": "MEMBER",
            "body": "It doesn't seem to steal a reference, though, so this leaks a reference in the good case, right? Then I would suggest doing the usual create-test-use-decref dance. Much more obvious, much safer.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-10T10:22:39Z",
            "diff_hunk": "@@ -2880,7 +3142,10 @@ def generate_module_creation_code(self, env, code):\n                 env.method_table_cname,\n                 doc,\n                 env.module_cname))\n-        code.putln(\"#else\")\n+        code.putln(\"#elif CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"PyState_AddModule(PyModule_Create(&%s), &%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365165931",
            "id": 365165931,
            "in_reply_to_id": 362748354,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE2NTkzMQ==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 462,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 341072280,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365165931",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365457854"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365457854"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Sounds good!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-10T22:36:00Z",
            "diff_hunk": "@@ -2880,7 +3142,10 @@ def generate_module_creation_code(self, env, code):\n                 env.method_table_cname,\n                 doc,\n                 env.module_cname))\n-        code.putln(\"#else\")\n+        code.putln(\"#elif CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"PyState_AddModule(PyModule_Create(&%s), &%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365457854",
            "id": 365457854,
            "in_reply_to_id": 362748354,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1Nzg1NA==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 462,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 341458814,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365457854",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365462733"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365462733"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Or rather, we could assign the module state pointer to a local variable at the beginning of the module cleanup function\r\n\r\nThat sounds about right, let me add that!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-10T22:55:40Z",
            "diff_hunk": "@@ -1400,9 +1404,18 @@ def generate_object_constant_decls(self):\n                   for c in self.py_constants]\n         consts.sort()\n         decls_writer = self.parts['decls']\n+        decls_writer.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         for _, cname, c in consts:\n+            self.parts['module_state'].putln(\"%s;\" % c.type.declaration_code(cname))\n+            self.parts['module_state_defines'].putln(\n+                \"#define %s %s->%s\" % (cname, Naming.modulestateglobal_cname, cname))\n+            self.parts['module_state_clear'].putln(\n+                \"Py_CLEAR(%s(m)->%s);\" % (Naming.modulestate_cname, cname))",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365462733",
            "id": 365462733,
            "in_reply_to_id": 365156273,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ2MjczMw==",
            "original_commit_id": "1248d0c9b5b45499cb3e0bc44e89ae3650e2da65",
            "original_position": 21,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 341464893,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365462733",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365466462"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365466462"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I didn't know that existed! This worked out great.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-10T23:11:52Z",
            "diff_hunk": "@@ -9400,6 +9402,7 @@ def generate_cyfunction_code(self, code):\n                 self.get_py_mod_name(code),\n                 code_object_result,\n                 code.error_goto_if_null(self.result(), self.pos)))",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365466462",
            "id": 365466462,
            "in_reply_to_id": 365142563,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ2NjQ2Mg==",
            "original_commit_id": "4e5806efd6f06e4296d6d6a0c99fddbc16a1760b",
            "original_position": 15,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 44,
            "pull_request_review_id": 341469334,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365466462",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365468605"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365468605"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> and will thus lead to a crash if the call ever fails\r\n\r\n~~Both `Py_CLEAR` and `Py_VISIT` are able to handle NULL values, it's a no-op in that case. Did I miss any other cases? If so, I could surely add error handling to those! The last thing I want is to have crashes from using the LIMITED_API 🙂~~\r\n\r\nOh, this refers to the search for the module state returning `NULL` and then accessing a member from a `NULL`. \r\n\r\nI'm assuming that if `PyState_AddModule` passes in the init function, then this will always return a non-null value.\r\n\r\nBut you have a good point, we can add the following:\r\n\r\n```\r\nstatic inline PyObject* __Pyx_PyModule_GetState(PyObject *op)\r\n{\r\n    PyObject *res;\r\n    res = PyModule_GetState(op);\r\n    if (res)\r\n        return res;\r\n    Py_FatalError(\"Couldn't find the module state\");\r\n}\r\n\r\n#define __pyx_mstate(o) ((__pyx_mstate *))__Pyx_PyModule_GetState(o))\r\n```\r\n\r\nHow does that sound?\r\n\r\n> I think we should avoid calling this too lightly and often, and also try to make it more visible that this macro is much less trivial than it looks.\r\n\r\nAny suggestions? What about getting rid of the `Naming.modulestate_cname` macro and using the function directly?",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-10T23:22:24Z",
            "diff_hunk": "@@ -2336,6 +2432,149 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state_start(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_end(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\"#define %s %s->%s\" % (\n+                        entry.type.typeobj_cname,\n+                        Naming.modulestateglobal_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_clear.putln(\"  Py_CLEAR(%s(m)->%s);\" % (\n+                        Naming.modulestate_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_traverse.putln(\"  Py_VISIT(%s(m)->%s);\" % (\n+                        Naming.modulestate_cname,\n+                        entry.type.typeobj_cname))\n+        module_state.putln('} %s;' % Naming.modulestate_cname)\n+        module_state.putln('')\n+        module_state.putln('#ifdef __cplusplus')\n+        module_state.putln('namespace {')\n+        module_state.putln('extern struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('} /* anonymous namespace */')\n+        module_state.putln('#else')\n+        module_state.putln('static struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('#endif')\n+        module_state.putln('')\n+        module_state.putln('#define %s(o) ((%s *)PyModule_GetState(o))' % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365468605",
            "id": 365468605,
            "in_reply_to_id": 362744629,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ2ODYwNQ==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 260,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 341471967,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365468605",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365487270"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365487270"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-11T01:23:28Z",
            "diff_hunk": "@@ -1400,9 +1404,18 @@ def generate_object_constant_decls(self):\n                   for c in self.py_constants]\n         consts.sort()\n         decls_writer = self.parts['decls']\n+        decls_writer.putln(\"#if !CYTHON_COMPILING_IN_LIMITED_API\")\n         for _, cname, c in consts:\n+            self.parts['module_state'].putln(\"%s;\" % c.type.declaration_code(cname))\n+            self.parts['module_state_defines'].putln(\n+                \"#define %s %s->%s\" % (cname, Naming.modulestateglobal_cname, cname))\n+            self.parts['module_state_clear'].putln(\n+                \"Py_CLEAR(%s(m)->%s);\" % (Naming.modulestate_cname, cname))",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365487270",
            "id": 365487270,
            "in_reply_to_id": 365156273,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ4NzI3MA==",
            "original_commit_id": "1248d0c9b5b45499cb3e0bc44e89ae3650e2da65",
            "original_position": 21,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 341493227,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365487270",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365487386"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365487386"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done! This should now be correct (unless I misused any of the temporary apis)",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-11T01:24:34Z",
            "diff_hunk": "@@ -9400,6 +9402,7 @@ def generate_cyfunction_code(self, code):\n                 self.get_py_mod_name(code),\n                 code_object_result,\n                 code.error_goto_if_null(self.result(), self.pos)))",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365487386",
            "id": 365487386,
            "in_reply_to_id": 365142563,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ4NzM4Ng==",
            "original_commit_id": "4e5806efd6f06e4296d6d6a0c99fddbc16a1760b",
            "original_position": 15,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 44,
            "pull_request_review_id": 341493338,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365487386",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365487421"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365487421"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done! This should now be correct (unless I misused any of the temporary apis)",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-11T01:24:53Z",
            "diff_hunk": "@@ -2880,7 +3142,10 @@ def generate_module_creation_code(self, env, code):\n                 env.method_table_cname,\n                 doc,\n                 env.module_cname))\n-        code.putln(\"#else\")\n+        code.putln(\"#elif CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"PyState_AddModule(PyModule_Create(&%s), &%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365487421",
            "id": 365487421,
            "in_reply_to_id": 362748354,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ4NzQyMQ==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 462,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 341493382,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365487421",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365487620"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365487620"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I added my suggestion of using a `__Pyx_PyModule_GetState` to check the module state before returning. Although I wonder if we can handle this more gracefully than just a Py_FatalError, let me know what you think.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-11T01:27:10Z",
            "diff_hunk": "@@ -2336,6 +2432,149 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state_start(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_end(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\"#define %s %s->%s\" % (\n+                        entry.type.typeobj_cname,\n+                        Naming.modulestateglobal_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_clear.putln(\"  Py_CLEAR(%s(m)->%s);\" % (\n+                        Naming.modulestate_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_traverse.putln(\"  Py_VISIT(%s(m)->%s);\" % (\n+                        Naming.modulestate_cname,\n+                        entry.type.typeobj_cname))\n+        module_state.putln('} %s;' % Naming.modulestate_cname)\n+        module_state.putln('')\n+        module_state.putln('#ifdef __cplusplus')\n+        module_state.putln('namespace {')\n+        module_state.putln('extern struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('} /* anonymous namespace */')\n+        module_state.putln('#else')\n+        module_state.putln('static struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('#endif')\n+        module_state.putln('')\n+        module_state.putln('#define %s(o) ((%s *)PyModule_GetState(o))' % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365487620",
            "id": 365487620,
            "in_reply_to_id": 362744629,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ4NzYyMA==",
            "original_commit_id": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "original_position": 260,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 341493596,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365487620",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365506277"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365506277"
                }
            },
            "author_association": "MEMBER",
            "body": "There is a `code.put_incref()` for this purpose.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-11T07:35:55Z",
            "diff_hunk": "@@ -2301,13 +2301,22 @@ def generate_assignment_code(self, rhs, code, overloaded_assignment=False,\n                 setter = '__Pyx_' + n\n             else:\n                 assert False, repr(entry)\n+            code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+            code.putln(\"__Pyx_INCREF(%s);\" % rhs.py_result())",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365506277",
            "id": 365506277,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUwNjI3Nw==",
            "original_commit_id": "014d085d51cf80cce5563644931d6ad67a4afe98",
            "original_position": 5,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 341509965,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365506277",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365507615"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365507615"
                }
            },
            "author_association": "MEMBER",
            "body": "I still think it's not correct (at least, `TypeSlots.ConstructorSlot` should be involved in this), but let's leave it at this for now. We'll see into which problems we run later.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-11T08:05:57Z",
            "diff_hunk": "@@ -2165,6 +2202,52 @@ def generate_property_set_function(self, property_entry, code):\n         code.putln(\n             \"}\")\n \n+    def generate_typeobj_spec(self, modname, entry, code):\n+        type = entry.type\n+        scope = type.scope\n+        if type.typedef_flag:\n+            objstruct = type.objstruct_cname\n+        else:\n+            objstruct = \"struct %s\" % type.objstruct_cname\n+        classname = scope.class_name.as_c_string_literal()\n+        code.putln(\"static PyType_Slot %s_slots[] = {\" % type.typeobj_cname)\n+        has_tp_getattro = False\n+        for slot in TypeSlots.slot_table:\n+            if slot.slot_name == \"tp_flags\":\n+                continue\n+            if slot.slot_name == \"tp_new\" and scope.lookup_here(\"__cinit__\") is None:",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365507615",
            "id": 365507615,
            "in_reply_to_id": 343805213,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUwNzYxNQ==",
            "original_commit_id": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "original_position": 178,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 176,
            "pull_request_review_id": 341509965,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365507615",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365507777"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365507777"
                }
            },
            "author_association": "MEMBER",
            "body": "This should later be refactored to bring the generation of the L'API struct declarations closer to the non-L'API C global declarations again. Keeping both apart is annoying from a maintenance perspective.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-11T08:10:04Z",
            "diff_hunk": "@@ -2336,6 +2432,144 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state_start(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365507777",
            "id": 365507777,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUwNzc3Nw==",
            "original_commit_id": "014d085d51cf80cce5563644931d6ad67a4afe98",
            "original_position": 219,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 220,
            "pull_request_review_id": 341509965,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365507777",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365507817"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365507817"
                }
            },
            "author_association": "MEMBER",
            "body": "Error handling right here?",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-11T08:10:56Z",
            "diff_hunk": "@@ -2336,6 +2432,144 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state_start(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_end(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\"#define %s %s->%s\" % (\n+                        entry.type.typeobj_cname,\n+                        Naming.modulestateglobal_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_clear.putln(\"Py_CLEAR(clear_module_state->%s);\" %\n+                        entry.type.typeobj_cname)\n+                    module_state_traverse.putln(\n+                        \"Py_VISIT(traverse_module_state->%s);\" %\n+                        entry.type.typeobj_cname)\n+        module_state.putln('} %s;' % Naming.modulestate_cname)\n+        module_state.putln('')\n+        module_state.putln('#ifdef __cplusplus')\n+        module_state.putln('namespace {')\n+        module_state.putln('extern struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('} /* anonymous namespace */')\n+        module_state.putln('#else')\n+        module_state.putln('static struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('#endif')\n+        module_state.putln('')\n+        module_state.putln('#define %s(o) ((%s *)__Pyx_PyModule_GetState(o))' % (\n+            Naming.modulestate_cname,\n+            Naming.modulestate_cname))\n+        module_state.putln('')\n+        module_state.putln('#define %s (%s(PyState_FindModule(&%s)))' % (\n+            Naming.modulestateglobal_cname,\n+            Naming.modulestate_cname,\n+            Naming.pymoduledef_cname))\n+        module_state.putln('')\n+        module_state.putln('#define %s (PyState_FindModule(&%s))' % (\n+            env.module_cname,\n+            Naming.pymoduledef_cname))\n+        module_state.putln(\"#endif\")\n+        module_state_defines.putln(\"#endif\")\n+        module_state_clear.putln(\"return 0;\")\n+        module_state_clear.putln(\"};\")\n+        module_state_clear.putln(\"#endif\")\n+        module_state_traverse.putln(\"return 0;\")\n+        module_state_traverse.putln(\"};\")\n+        module_state_traverse.putln(\"#endif\")\n+\n+    def generate_module_state_defines(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('#define %s %s->%s' % (\n+            Naming.builtins_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.builtins_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.cython_runtime_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.cython_runtime_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.empty_tuple,\n+            Naming.modulestateglobal_cname,\n+            Naming.empty_tuple))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.empty_bytes,\n+            Naming.modulestateglobal_cname,\n+            Naming.empty_bytes))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.empty_unicode,\n+            Naming.modulestateglobal_cname,\n+            Naming.empty_unicode))\n+        if Options.pre_import is not None:\n+            code.putln('#define %s %s->%s' % (\n+                Naming.preimport_cname,\n+                Naming.modulestateglobal_cname,\n+                Naming.preimport_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.lineno_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.lineno_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.clineno_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.clineno_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.filename_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.filename_cname))\n+\n+    def generate_module_state_clear(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"static int %s_clear(PyObject *m) {\" % Naming.module_cname)\n+        code.putln(\"%s *clear_module_state = %s(m);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365507817",
            "id": 365507817,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUwNzgxNw==",
            "original_commit_id": "014d085d51cf80cce5563644931d6ad67a4afe98",
            "original_position": 323,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 324,
            "pull_request_review_id": 341509965,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365507817",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365507825"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365507825"
                }
            },
            "author_association": "MEMBER",
            "body": "Error handling?",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-11T08:11:09Z",
            "diff_hunk": "@@ -2336,6 +2432,144 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state_start(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_end(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\"#define %s %s->%s\" % (\n+                        entry.type.typeobj_cname,\n+                        Naming.modulestateglobal_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_clear.putln(\"Py_CLEAR(clear_module_state->%s);\" %\n+                        entry.type.typeobj_cname)\n+                    module_state_traverse.putln(\n+                        \"Py_VISIT(traverse_module_state->%s);\" %\n+                        entry.type.typeobj_cname)\n+        module_state.putln('} %s;' % Naming.modulestate_cname)\n+        module_state.putln('')\n+        module_state.putln('#ifdef __cplusplus')\n+        module_state.putln('namespace {')\n+        module_state.putln('extern struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('} /* anonymous namespace */')\n+        module_state.putln('#else')\n+        module_state.putln('static struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('#endif')\n+        module_state.putln('')\n+        module_state.putln('#define %s(o) ((%s *)__Pyx_PyModule_GetState(o))' % (\n+            Naming.modulestate_cname,\n+            Naming.modulestate_cname))\n+        module_state.putln('')\n+        module_state.putln('#define %s (%s(PyState_FindModule(&%s)))' % (\n+            Naming.modulestateglobal_cname,\n+            Naming.modulestate_cname,\n+            Naming.pymoduledef_cname))\n+        module_state.putln('')\n+        module_state.putln('#define %s (PyState_FindModule(&%s))' % (\n+            env.module_cname,\n+            Naming.pymoduledef_cname))\n+        module_state.putln(\"#endif\")\n+        module_state_defines.putln(\"#endif\")\n+        module_state_clear.putln(\"return 0;\")\n+        module_state_clear.putln(\"};\")\n+        module_state_clear.putln(\"#endif\")\n+        module_state_traverse.putln(\"return 0;\")\n+        module_state_traverse.putln(\"};\")\n+        module_state_traverse.putln(\"#endif\")\n+\n+    def generate_module_state_defines(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('#define %s %s->%s' % (\n+            Naming.builtins_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.builtins_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.cython_runtime_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.cython_runtime_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.empty_tuple,\n+            Naming.modulestateglobal_cname,\n+            Naming.empty_tuple))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.empty_bytes,\n+            Naming.modulestateglobal_cname,\n+            Naming.empty_bytes))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.empty_unicode,\n+            Naming.modulestateglobal_cname,\n+            Naming.empty_unicode))\n+        if Options.pre_import is not None:\n+            code.putln('#define %s %s->%s' % (\n+                Naming.preimport_cname,\n+                Naming.modulestateglobal_cname,\n+                Naming.preimport_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.lineno_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.lineno_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.clineno_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.clineno_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.filename_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.filename_cname))\n+\n+    def generate_module_state_clear(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"static int %s_clear(PyObject *m) {\" % Naming.module_cname)\n+        code.putln(\"%s *clear_module_state = %s(m);\" % (\n+            Naming.modulestate_cname,\n+            Naming.modulestate_cname))\n+        code.putln('Py_CLEAR(clear_module_state->%s);' %\n+            Naming.builtins_cname)\n+        code.putln('Py_CLEAR(clear_module_state->%s);' %\n+            Naming.cython_runtime_cname)\n+        code.putln('Py_CLEAR(clear_module_state->%s);' %\n+            Naming.empty_tuple)\n+        code.putln('Py_CLEAR(clear_module_state->%s);' %\n+            Naming.empty_bytes)\n+        code.putln('Py_CLEAR(clear_module_state->%s);' %\n+            Naming.empty_unicode)\n+\n+    def generate_module_state_traverse(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"static int %s_traverse(PyObject *m, visitproc visit, void *arg) {\" % Naming.module_cname)\n+        code.putln(\"%s *traverse_module_state = %s(m);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365507825",
            "id": 365507825,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUwNzgyNQ==",
            "original_commit_id": "014d085d51cf80cce5563644931d6ad67a4afe98",
            "original_position": 340,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 342,
            "pull_request_review_id": 341509965,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365507825",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365507971"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365507971"
                }
            },
            "author_association": "MEMBER",
            "body": "`code.error_goto_if_neg(…)`",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-11T08:14:50Z",
            "diff_hunk": "@@ -2880,7 +3137,19 @@ def generate_module_creation_code(self, env, code):\n                 env.method_table_cname,\n                 doc,\n                 env.module_cname))\n-        code.putln(\"#else\")\n+        code.putln(\"#elif CYTHON_COMPILING_IN_LIMITED_API\")\n+        module_temp = code.funcstate.allocate_temp(py_object_type, manage_ref=True)\n+        code.putln(\n+            \"%s = PyModule_Create(&%s); %s\" % (\n+                module_temp,\n+                Naming.pymoduledef_cname,\n+                code.error_goto_if_null(module_temp, self.pos)))\n+        code.put_gotref(module_temp)\n+        code.putln(\"PyState_AddModule(%s, &%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365507971",
            "id": 365507971,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUwNzk3MQ==",
            "original_commit_id": "014d085d51cf80cce5563644931d6ad67a4afe98",
            "original_position": 464,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 341509965,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365507971",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365508244"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365508244"
                }
            },
            "author_association": "MEMBER",
            "body": "This is good enough for now, I think.",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-11T08:20:50Z",
            "diff_hunk": "@@ -512,6 +562,18 @@ class __Pyx_FakeReference {\n   #define __Pyx_PyThreadState_Current _PyThreadState_Current\n #endif\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static inline void *__Pyx_PyModule_GetState(PyObject *op)\n+{\n+    void *result;\n+\n+    result = PyModule_GetState(op);\n+    if (!result)\n+        Py_FatalError(\"Couldn't find the module state\");",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365508244",
            "id": 365508244,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUwODI0NA==",
            "original_commit_id": "014d085d51cf80cce5563644931d6ad67a4afe98",
            "original_position": 100,
            "path": "Cython/Utility/ModuleSetupCode.c",
            "position": 100,
            "pull_request_review_id": 341509965,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365508244",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365552469"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365552469"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Cool!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-12T01:59:08Z",
            "diff_hunk": "@@ -512,6 +562,18 @@ class __Pyx_FakeReference {\n   #define __Pyx_PyThreadState_Current _PyThreadState_Current\n #endif\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static inline void *__Pyx_PyModule_GetState(PyObject *op)\n+{\n+    void *result;\n+\n+    result = PyModule_GetState(op);\n+    if (!result)\n+        Py_FatalError(\"Couldn't find the module state\");",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365552469",
            "id": 365552469,
            "in_reply_to_id": 365508244,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1MjQ2OQ==",
            "original_commit_id": "014d085d51cf80cce5563644931d6ad67a4afe98",
            "original_position": 100,
            "path": "Cython/Utility/ModuleSetupCode.c",
            "position": 100,
            "pull_request_review_id": 341549804,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365552469",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365552880"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365552880"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Fixed!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-12T02:14:57Z",
            "diff_hunk": "@@ -2301,13 +2301,22 @@ def generate_assignment_code(self, rhs, code, overloaded_assignment=False,\n                 setter = '__Pyx_' + n\n             else:\n                 assert False, repr(entry)\n+            code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+            code.putln(\"__Pyx_INCREF(%s);\" % rhs.py_result())",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365552880",
            "id": 365552880,
            "in_reply_to_id": 365506277,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1Mjg4MA==",
            "original_commit_id": "014d085d51cf80cce5563644931d6ad67a4afe98",
            "original_position": 5,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 341550251,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365552880",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365552896"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365552896"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Agreed, I've added a TODO here, I should be able to get to this on later changes",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-12T02:15:29Z",
            "diff_hunk": "@@ -2336,6 +2432,144 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state_start(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365552896",
            "id": 365552896,
            "in_reply_to_id": 365507777,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1Mjg5Ng==",
            "original_commit_id": "014d085d51cf80cce5563644931d6ad67a4afe98",
            "original_position": 219,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 220,
            "pull_request_review_id": 341550277,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365552896",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365553577"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365553577"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "My bad, this was not merged. Fixed now!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-12T02:36:36Z",
            "diff_hunk": "@@ -2336,6 +2432,144 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state_start(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_end(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\"#define %s %s->%s\" % (\n+                        entry.type.typeobj_cname,\n+                        Naming.modulestateglobal_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_clear.putln(\"Py_CLEAR(clear_module_state->%s);\" %\n+                        entry.type.typeobj_cname)\n+                    module_state_traverse.putln(\n+                        \"Py_VISIT(traverse_module_state->%s);\" %\n+                        entry.type.typeobj_cname)\n+        module_state.putln('} %s;' % Naming.modulestate_cname)\n+        module_state.putln('')\n+        module_state.putln('#ifdef __cplusplus')\n+        module_state.putln('namespace {')\n+        module_state.putln('extern struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('} /* anonymous namespace */')\n+        module_state.putln('#else')\n+        module_state.putln('static struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('#endif')\n+        module_state.putln('')\n+        module_state.putln('#define %s(o) ((%s *)__Pyx_PyModule_GetState(o))' % (\n+            Naming.modulestate_cname,\n+            Naming.modulestate_cname))\n+        module_state.putln('')\n+        module_state.putln('#define %s (%s(PyState_FindModule(&%s)))' % (\n+            Naming.modulestateglobal_cname,\n+            Naming.modulestate_cname,\n+            Naming.pymoduledef_cname))\n+        module_state.putln('')\n+        module_state.putln('#define %s (PyState_FindModule(&%s))' % (\n+            env.module_cname,\n+            Naming.pymoduledef_cname))\n+        module_state.putln(\"#endif\")\n+        module_state_defines.putln(\"#endif\")\n+        module_state_clear.putln(\"return 0;\")\n+        module_state_clear.putln(\"};\")\n+        module_state_clear.putln(\"#endif\")\n+        module_state_traverse.putln(\"return 0;\")\n+        module_state_traverse.putln(\"};\")\n+        module_state_traverse.putln(\"#endif\")\n+\n+    def generate_module_state_defines(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('#define %s %s->%s' % (\n+            Naming.builtins_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.builtins_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.cython_runtime_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.cython_runtime_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.empty_tuple,\n+            Naming.modulestateglobal_cname,\n+            Naming.empty_tuple))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.empty_bytes,\n+            Naming.modulestateglobal_cname,\n+            Naming.empty_bytes))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.empty_unicode,\n+            Naming.modulestateglobal_cname,\n+            Naming.empty_unicode))\n+        if Options.pre_import is not None:\n+            code.putln('#define %s %s->%s' % (\n+                Naming.preimport_cname,\n+                Naming.modulestateglobal_cname,\n+                Naming.preimport_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.lineno_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.lineno_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.clineno_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.clineno_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.filename_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.filename_cname))\n+\n+    def generate_module_state_clear(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"static int %s_clear(PyObject *m) {\" % Naming.module_cname)\n+        code.putln(\"%s *clear_module_state = %s(m);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365553577",
            "id": 365553577,
            "in_reply_to_id": 365507817,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1MzU3Nw==",
            "original_commit_id": "014d085d51cf80cce5563644931d6ad67a4afe98",
            "original_position": 323,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 324,
            "pull_request_review_id": 341550946,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365553577",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365553579"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365553579"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "My bad, this was not merged. Fixed now!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-12T02:36:39Z",
            "diff_hunk": "@@ -2336,6 +2432,144 @@ def generate_import_star(self, env, code):\n         code.putln(UtilityCode.load_as_string(\"ImportStar\", \"ImportExport.c\")[1])\n         code.exit_cfunc_scope()  # done with labels\n \n+    def generate_module_state_start(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('typedef struct {')\n+        code.putln('PyObject *%s;' % Naming.builtins_cname)\n+        code.putln('PyObject *%s;' % Naming.cython_runtime_cname)\n+        code.putln('PyObject *%s;' % Naming.empty_tuple)\n+        code.putln('PyObject *%s;' % Naming.empty_bytes)\n+        code.putln('PyObject *%s;' % Naming.empty_unicode)\n+        if Options.pre_import is not None:\n+            code.putln('PyObject *%s;' % Naming.preimport_cname)\n+        code.putln('int %s;' % Naming.lineno_cname)\n+        code.putln('int %s;' % Naming.clineno_cname)\n+        code.putln('const char *%s;' % Naming.filename_cname)\n+\n+    def generate_module_state_end(self, env, modules, globalstate):\n+        module_state = globalstate['module_state']\n+        module_state_defines = globalstate['module_state_defines']\n+        module_state_clear = globalstate['module_state_clear']\n+        module_state_traverse = globalstate['module_state_traverse']\n+        for module in modules:\n+            definition = module is env\n+            for entry in env.c_class_entries:\n+                if definition or entry.defined_in_pxd:\n+                    module_state.putln(\"PyObject *%s;\" % entry.type.typeobj_cname)\n+                    module_state_defines.putln(\"#define %s %s->%s\" % (\n+                        entry.type.typeobj_cname,\n+                        Naming.modulestateglobal_cname,\n+                        entry.type.typeobj_cname))\n+                    module_state_clear.putln(\"Py_CLEAR(clear_module_state->%s);\" %\n+                        entry.type.typeobj_cname)\n+                    module_state_traverse.putln(\n+                        \"Py_VISIT(traverse_module_state->%s);\" %\n+                        entry.type.typeobj_cname)\n+        module_state.putln('} %s;' % Naming.modulestate_cname)\n+        module_state.putln('')\n+        module_state.putln('#ifdef __cplusplus')\n+        module_state.putln('namespace {')\n+        module_state.putln('extern struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('} /* anonymous namespace */')\n+        module_state.putln('#else')\n+        module_state.putln('static struct PyModuleDef %s;' % Naming.pymoduledef_cname)\n+        module_state.putln('#endif')\n+        module_state.putln('')\n+        module_state.putln('#define %s(o) ((%s *)__Pyx_PyModule_GetState(o))' % (\n+            Naming.modulestate_cname,\n+            Naming.modulestate_cname))\n+        module_state.putln('')\n+        module_state.putln('#define %s (%s(PyState_FindModule(&%s)))' % (\n+            Naming.modulestateglobal_cname,\n+            Naming.modulestate_cname,\n+            Naming.pymoduledef_cname))\n+        module_state.putln('')\n+        module_state.putln('#define %s (PyState_FindModule(&%s))' % (\n+            env.module_cname,\n+            Naming.pymoduledef_cname))\n+        module_state.putln(\"#endif\")\n+        module_state_defines.putln(\"#endif\")\n+        module_state_clear.putln(\"return 0;\")\n+        module_state_clear.putln(\"};\")\n+        module_state_clear.putln(\"#endif\")\n+        module_state_traverse.putln(\"return 0;\")\n+        module_state_traverse.putln(\"};\")\n+        module_state_traverse.putln(\"#endif\")\n+\n+    def generate_module_state_defines(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln('#define %s %s->%s' % (\n+            Naming.builtins_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.builtins_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.cython_runtime_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.cython_runtime_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.empty_tuple,\n+            Naming.modulestateglobal_cname,\n+            Naming.empty_tuple))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.empty_bytes,\n+            Naming.modulestateglobal_cname,\n+            Naming.empty_bytes))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.empty_unicode,\n+            Naming.modulestateglobal_cname,\n+            Naming.empty_unicode))\n+        if Options.pre_import is not None:\n+            code.putln('#define %s %s->%s' % (\n+                Naming.preimport_cname,\n+                Naming.modulestateglobal_cname,\n+                Naming.preimport_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.lineno_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.lineno_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.clineno_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.clineno_cname))\n+        code.putln('#define %s %s->%s' % (\n+            Naming.filename_cname,\n+            Naming.modulestateglobal_cname,\n+            Naming.filename_cname))\n+\n+    def generate_module_state_clear(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"static int %s_clear(PyObject *m) {\" % Naming.module_cname)\n+        code.putln(\"%s *clear_module_state = %s(m);\" % (\n+            Naming.modulestate_cname,\n+            Naming.modulestate_cname))\n+        code.putln('Py_CLEAR(clear_module_state->%s);' %\n+            Naming.builtins_cname)\n+        code.putln('Py_CLEAR(clear_module_state->%s);' %\n+            Naming.cython_runtime_cname)\n+        code.putln('Py_CLEAR(clear_module_state->%s);' %\n+            Naming.empty_tuple)\n+        code.putln('Py_CLEAR(clear_module_state->%s);' %\n+            Naming.empty_bytes)\n+        code.putln('Py_CLEAR(clear_module_state->%s);' %\n+            Naming.empty_unicode)\n+\n+    def generate_module_state_traverse(self, env, code):\n+        code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+        code.putln(\"static int %s_traverse(PyObject *m, visitproc visit, void *arg) {\" % Naming.module_cname)\n+        code.putln(\"%s *traverse_module_state = %s(m);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365553579",
            "id": 365553579,
            "in_reply_to_id": 365507825,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1MzU3OQ==",
            "original_commit_id": "014d085d51cf80cce5563644931d6ad67a4afe98",
            "original_position": 340,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": 342,
            "pull_request_review_id": 341550948,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365553579",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3223#discussion_r365553655"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3223"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/365553655"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Fixed!",
            "commit_id": "52efea741900142335da78bb14cdd69dcb5c700d",
            "created_at": "2020-01-12T02:39:53Z",
            "diff_hunk": "@@ -2880,7 +3137,19 @@ def generate_module_creation_code(self, env, code):\n                 env.method_table_cname,\n                 doc,\n                 env.module_cname))\n-        code.putln(\"#else\")\n+        code.putln(\"#elif CYTHON_COMPILING_IN_LIMITED_API\")\n+        module_temp = code.funcstate.allocate_temp(py_object_type, manage_ref=True)\n+        code.putln(\n+            \"%s = PyModule_Create(&%s); %s\" % (\n+                module_temp,\n+                Naming.pymoduledef_cname,\n+                code.error_goto_if_null(module_temp, self.pos)))\n+        code.put_gotref(module_temp)\n+        code.putln(\"PyState_AddModule(%s, &%s);\" % (",
            "html_url": "https://github.com/cython/cython/pull/3223#discussion_r365553655",
            "id": 365553655,
            "in_reply_to_id": 365507971,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1MzY1NQ==",
            "original_commit_id": "014d085d51cf80cce5563644931d6ad67a4afe98",
            "original_position": 464,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 341551025,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3223",
            "updated_at": "2020-01-12T02:42:25Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/365553655",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3223/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f6e28370f44b4accd13b48d2ec063a1590753aee/comments",
            "commit": {
                "author": {
                    "date": "2019-11-01T00:38:48Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-01T00:38:48Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Add LIMITED_API support",
                "tree": {
                    "sha": "daf842b0b7a6bc034a97989739f101b6194011bc",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/daf842b0b7a6bc034a97989739f101b6194011bc"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f6e28370f44b4accd13b48d2ec063a1590753aee",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/f6e28370f44b4accd13b48d2ec063a1590753aee",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOmY2ZTI4MzcwZjQ0YjRhY2NkMTNiNDhkMmVjMDYzYTE1OTA3NTNhZWU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4d437f24a469fef2424f3fb5bfae58f68eafac1f",
                    "sha": "4d437f24a469fef2424f3fb5bfae58f68eafac1f",
                    "url": "https://api.github.com/repos/cython/cython/commits/4d437f24a469fef2424f3fb5bfae58f68eafac1f"
                }
            ],
            "sha": "f6e28370f44b4accd13b48d2ec063a1590753aee",
            "url": "https://api.github.com/repos/cython/cython/commits/f6e28370f44b4accd13b48d2ec063a1590753aee"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e7717049bf759173f5dcb9883c79e787a6ff302f/comments",
            "commit": {
                "author": {
                    "date": "2019-11-04T00:58:18Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-04T00:58:18Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Fixes for current tests",
                "tree": {
                    "sha": "58f2493b171ebbdc53ec0b404b7bd61339ead99b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/58f2493b171ebbdc53ec0b404b7bd61339ead99b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e7717049bf759173f5dcb9883c79e787a6ff302f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/e7717049bf759173f5dcb9883c79e787a6ff302f",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOmU3NzE3MDQ5YmY3NTkxNzNmNWRjYjk4ODNjNzllNzg3YTZmZjMwMmY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f6e28370f44b4accd13b48d2ec063a1590753aee",
                    "sha": "f6e28370f44b4accd13b48d2ec063a1590753aee",
                    "url": "https://api.github.com/repos/cython/cython/commits/f6e28370f44b4accd13b48d2ec063a1590753aee"
                }
            ],
            "sha": "e7717049bf759173f5dcb9883c79e787a6ff302f",
            "url": "https://api.github.com/repos/cython/cython/commits/e7717049bf759173f5dcb9883c79e787a6ff302f"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8d5c3d6fd5eed60cdb67c618b183e3472613822b/comments",
            "commit": {
                "author": {
                    "date": "2019-11-04T01:23:54Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-04T01:23:54Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Cleanup moddict decl",
                "tree": {
                    "sha": "a1740a6304f96cd33e23072d0b6fe8d62eb5d6d0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a1740a6304f96cd33e23072d0b6fe8d62eb5d6d0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8d5c3d6fd5eed60cdb67c618b183e3472613822b",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/8d5c3d6fd5eed60cdb67c618b183e3472613822b",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjhkNWMzZDZmZDVlZWQ2MGNkYjY3YzYxOGIxODNlMzQ3MjYxMzgyMmI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e7717049bf759173f5dcb9883c79e787a6ff302f",
                    "sha": "e7717049bf759173f5dcb9883c79e787a6ff302f",
                    "url": "https://api.github.com/repos/cython/cython/commits/e7717049bf759173f5dcb9883c79e787a6ff302f"
                }
            ],
            "sha": "8d5c3d6fd5eed60cdb67c618b183e3472613822b",
            "url": "https://api.github.com/repos/cython/cython/commits/8d5c3d6fd5eed60cdb67c618b183e3472613822b"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/329995ebd27011449c4eeb6f145d112a58711b6b/comments",
            "commit": {
                "author": {
                    "date": "2019-11-04T01:29:48Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-04T01:29:48Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Merge remote-tracking branch 'origin/master' into limited-api",
                "tree": {
                    "sha": "34f7fdc73c03f7f81435043d66aab53a2f91915f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/34f7fdc73c03f7f81435043d66aab53a2f91915f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/329995ebd27011449c4eeb6f145d112a58711b6b",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/329995ebd27011449c4eeb6f145d112a58711b6b",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjMyOTk5NWViZDI3MDExNDQ5YzRlZWI2ZjE0NWQxMTJhNTg3MTFiNmI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8d5c3d6fd5eed60cdb67c618b183e3472613822b",
                    "sha": "8d5c3d6fd5eed60cdb67c618b183e3472613822b",
                    "url": "https://api.github.com/repos/cython/cython/commits/8d5c3d6fd5eed60cdb67c618b183e3472613822b"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/e59e51e330b756b42d781a9f2d4d816cf40d46cf",
                    "sha": "e59e51e330b756b42d781a9f2d4d816cf40d46cf",
                    "url": "https://api.github.com/repos/cython/cython/commits/e59e51e330b756b42d781a9f2d4d816cf40d46cf"
                }
            ],
            "sha": "329995ebd27011449c4eeb6f145d112a58711b6b",
            "url": "https://api.github.com/repos/cython/cython/commits/329995ebd27011449c4eeb6f145d112a58711b6b"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f9dd6487cf4f397d3d374dae480c2e434f606c4e/comments",
            "commit": {
                "author": {
                    "date": "2019-11-04T07:29:46Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-04T07:29:46Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Move module state back to c file",
                "tree": {
                    "sha": "1b2f46753367ee2320d7eb74f3bae333f6a0f2ef",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1b2f46753367ee2320d7eb74f3bae333f6a0f2ef"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f9dd6487cf4f397d3d374dae480c2e434f606c4e",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/f9dd6487cf4f397d3d374dae480c2e434f606c4e",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOmY5ZGQ2NDg3Y2Y0ZjM5N2QzZDM3NGRhZTQ4MGMyZTQzNGY2MDZjNGU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/329995ebd27011449c4eeb6f145d112a58711b6b",
                    "sha": "329995ebd27011449c4eeb6f145d112a58711b6b",
                    "url": "https://api.github.com/repos/cython/cython/commits/329995ebd27011449c4eeb6f145d112a58711b6b"
                }
            ],
            "sha": "f9dd6487cf4f397d3d374dae480c2e434f606c4e",
            "url": "https://api.github.com/repos/cython/cython/commits/f9dd6487cf4f397d3d374dae480c2e434f606c4e"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/75449788d29d350a7aa0811fb66a0440bffb7046/comments",
            "commit": {
                "author": {
                    "date": "2019-11-04T07:35:45Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-04T07:35:45Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Nits",
                "tree": {
                    "sha": "d505c71ea3df5b107e0de0e66becea4b734dc553",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d505c71ea3df5b107e0de0e66becea4b734dc553"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/75449788d29d350a7aa0811fb66a0440bffb7046",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/75449788d29d350a7aa0811fb66a0440bffb7046",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjc1NDQ5Nzg4ZDI5ZDM1MGE3YWEwODExZmI2NmEwNDQwYmZmYjcwNDY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f9dd6487cf4f397d3d374dae480c2e434f606c4e",
                    "sha": "f9dd6487cf4f397d3d374dae480c2e434f606c4e",
                    "url": "https://api.github.com/repos/cython/cython/commits/f9dd6487cf4f397d3d374dae480c2e434f606c4e"
                }
            ],
            "sha": "75449788d29d350a7aa0811fb66a0440bffb7046",
            "url": "https://api.github.com/repos/cython/cython/commits/75449788d29d350a7aa0811fb66a0440bffb7046"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/da410e75b81d73b024039375b1280b8a689ea46b/comments",
            "commit": {
                "author": {
                    "date": "2019-11-04T16:07:11Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-04T16:07:11Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Remove impl header",
                "tree": {
                    "sha": "906707945d25d9334e74ac18531a561076d905d1",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/906707945d25d9334e74ac18531a561076d905d1"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/da410e75b81d73b024039375b1280b8a689ea46b",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/da410e75b81d73b024039375b1280b8a689ea46b",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOmRhNDEwZTc1YjgxZDczYjAyNDAzOTM3NWIxMjgwYjhhNjg5ZWE0NmI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/75449788d29d350a7aa0811fb66a0440bffb7046",
                    "sha": "75449788d29d350a7aa0811fb66a0440bffb7046",
                    "url": "https://api.github.com/repos/cython/cython/commits/75449788d29d350a7aa0811fb66a0440bffb7046"
                }
            ],
            "sha": "da410e75b81d73b024039375b1280b8a689ea46b",
            "url": "https://api.github.com/repos/cython/cython/commits/da410e75b81d73b024039375b1280b8a689ea46b"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/3cbdfde6f407bb322df89eabf86ef5455737a760/comments",
            "commit": {
                "author": {
                    "date": "2019-11-04T18:17:05Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-04T18:17:05Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Style and wchar fix",
                "tree": {
                    "sha": "a340bd3eec7dbf9c30ac99aff57a39e0298cbb85",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a340bd3eec7dbf9c30ac99aff57a39e0298cbb85"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/3cbdfde6f407bb322df89eabf86ef5455737a760",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/3cbdfde6f407bb322df89eabf86ef5455737a760",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjNjYmRmZGU2ZjQwN2JiMzIyZGY4OWVhYmY4NmVmNTQ1NTczN2E3NjA=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/da410e75b81d73b024039375b1280b8a689ea46b",
                    "sha": "da410e75b81d73b024039375b1280b8a689ea46b",
                    "url": "https://api.github.com/repos/cython/cython/commits/da410e75b81d73b024039375b1280b8a689ea46b"
                }
            ],
            "sha": "3cbdfde6f407bb322df89eabf86ef5455737a760",
            "url": "https://api.github.com/repos/cython/cython/commits/3cbdfde6f407bb322df89eabf86ef5455737a760"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/364ce4384cb7a307e23b314c4f0cf87e08bbf1e9/comments",
            "commit": {
                "author": {
                    "date": "2019-11-05T01:06:53Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-05T01:06:53Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Fixes to limited api generated code",
                "tree": {
                    "sha": "d06185732ecea66af8fadfee61dafe85cabf34c6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d06185732ecea66af8fadfee61dafe85cabf34c6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/364ce4384cb7a307e23b314c4f0cf87e08bbf1e9",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/364ce4384cb7a307e23b314c4f0cf87e08bbf1e9",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjM2NGNlNDM4NGNiN2EzMDdlMjNiMzE0YzRmMGNmODdlMDhiYmYxZTk=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/3cbdfde6f407bb322df89eabf86ef5455737a760",
                    "sha": "3cbdfde6f407bb322df89eabf86ef5455737a760",
                    "url": "https://api.github.com/repos/cython/cython/commits/3cbdfde6f407bb322df89eabf86ef5455737a760"
                }
            ],
            "sha": "364ce4384cb7a307e23b314c4f0cf87e08bbf1e9",
            "url": "https://api.github.com/repos/cython/cython/commits/364ce4384cb7a307e23b314c4f0cf87e08bbf1e9"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c50af52417a2c35a1fcbfb7a8819d89016efc97a/comments",
            "commit": {
                "author": {
                    "date": "2019-11-05T01:51:37Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-05T01:51:37Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Fix spec slot generation",
                "tree": {
                    "sha": "fb46b9446f580c431af3879e497a1dcbbed0151c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/fb46b9446f580c431af3879e497a1dcbbed0151c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c50af52417a2c35a1fcbfb7a8819d89016efc97a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOmM1MGFmNTI0MTdhMmMzNWExZmNiZmI3YTg4MTlkODkwMTZlZmM5N2E=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/364ce4384cb7a307e23b314c4f0cf87e08bbf1e9",
                    "sha": "364ce4384cb7a307e23b314c4f0cf87e08bbf1e9",
                    "url": "https://api.github.com/repos/cython/cython/commits/364ce4384cb7a307e23b314c4f0cf87e08bbf1e9"
                }
            ],
            "sha": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
            "url": "https://api.github.com/repos/cython/cython/commits/c50af52417a2c35a1fcbfb7a8819d89016efc97a"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/250ba411fcfac3e98650de5fb1422c18dd17e226/comments",
            "commit": {
                "author": {
                    "date": "2019-11-25T06:56:30Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-25T06:56:30Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Clean up accidental merges and limited api to CI",
                "tree": {
                    "sha": "180913172b8605b8f1bfd57d70bab9d922b1510e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/180913172b8605b8f1bfd57d70bab9d922b1510e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/250ba411fcfac3e98650de5fb1422c18dd17e226",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/250ba411fcfac3e98650de5fb1422c18dd17e226",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjI1MGJhNDExZmNmYWMzZTk4NjUwZGU1ZmIxNDIyYzE4ZGQxN2UyMjY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c50af52417a2c35a1fcbfb7a8819d89016efc97a",
                    "sha": "c50af52417a2c35a1fcbfb7a8819d89016efc97a",
                    "url": "https://api.github.com/repos/cython/cython/commits/c50af52417a2c35a1fcbfb7a8819d89016efc97a"
                }
            ],
            "sha": "250ba411fcfac3e98650de5fb1422c18dd17e226",
            "url": "https://api.github.com/repos/cython/cython/commits/250ba411fcfac3e98650de5fb1422c18dd17e226"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/390e6f896dac6b201d72122c40b0e407457e37c0/comments",
            "commit": {
                "author": {
                    "date": "2019-11-25T07:52:26Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-25T07:52:26Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "More fixes to generated code",
                "tree": {
                    "sha": "49d5667116d34fac679c9b8ef869ab28cd268edf",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/49d5667116d34fac679c9b8ef869ab28cd268edf"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/390e6f896dac6b201d72122c40b0e407457e37c0",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/390e6f896dac6b201d72122c40b0e407457e37c0",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjM5MGU2Zjg5NmRhYzZiMjAxZDcyMTIyYzQwYjBlNDA3NDU3ZTM3YzA=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/250ba411fcfac3e98650de5fb1422c18dd17e226",
                    "sha": "250ba411fcfac3e98650de5fb1422c18dd17e226",
                    "url": "https://api.github.com/repos/cython/cython/commits/250ba411fcfac3e98650de5fb1422c18dd17e226"
                }
            ],
            "sha": "390e6f896dac6b201d72122c40b0e407457e37c0",
            "url": "https://api.github.com/repos/cython/cython/commits/390e6f896dac6b201d72122c40b0e407457e37c0"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/db8ac6f3e95129df4627d38d4b8eb327a84251ac/comments",
            "commit": {
                "author": {
                    "date": "2019-11-25T08:29:21Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-25T08:29:21Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Fix Py_UNICODE_strlen",
                "tree": {
                    "sha": "68b9a495eca2aa9e5bb5ff6d7126cb13d3c82716",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/68b9a495eca2aa9e5bb5ff6d7126cb13d3c82716"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/db8ac6f3e95129df4627d38d4b8eb327a84251ac",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/db8ac6f3e95129df4627d38d4b8eb327a84251ac",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOmRiOGFjNmYzZTk1MTI5ZGY0NjI3ZDM4ZDRiOGViMzI3YTg0MjUxYWM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/390e6f896dac6b201d72122c40b0e407457e37c0",
                    "sha": "390e6f896dac6b201d72122c40b0e407457e37c0",
                    "url": "https://api.github.com/repos/cython/cython/commits/390e6f896dac6b201d72122c40b0e407457e37c0"
                }
            ],
            "sha": "db8ac6f3e95129df4627d38d4b8eb327a84251ac",
            "url": "https://api.github.com/repos/cython/cython/commits/db8ac6f3e95129df4627d38d4b8eb327a84251ac"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4ddb4f589bca603ccd93835f50cb3abdb366478e/comments",
            "commit": {
                "author": {
                    "date": "2019-11-29T23:31:37Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-29T23:31:37Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Enable running a subset of tests",
                "tree": {
                    "sha": "24827507a10ea277ecfa04f9076d3693c7f2d0da",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/24827507a10ea277ecfa04f9076d3693c7f2d0da"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4ddb4f589bca603ccd93835f50cb3abdb366478e",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/4ddb4f589bca603ccd93835f50cb3abdb366478e",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjRkZGI0ZjU4OWJjYTYwM2NjZDkzODM1ZjUwY2IzYWJkYjM2NjQ3OGU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/db8ac6f3e95129df4627d38d4b8eb327a84251ac",
                    "sha": "db8ac6f3e95129df4627d38d4b8eb327a84251ac",
                    "url": "https://api.github.com/repos/cython/cython/commits/db8ac6f3e95129df4627d38d4b8eb327a84251ac"
                }
            ],
            "sha": "4ddb4f589bca603ccd93835f50cb3abdb366478e",
            "url": "https://api.github.com/repos/cython/cython/commits/4ddb4f589bca603ccd93835f50cb3abdb366478e"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/e6cf97d386f5aa9acfb43c6723213553b4b5dc32/comments",
            "commit": {
                "author": {
                    "date": "2019-11-29T23:41:18Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-29T23:41:18Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Blacklist failing test",
                "tree": {
                    "sha": "19d001a067677776c99615a3f287a54a53e66e94",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/19d001a067677776c99615a3f287a54a53e66e94"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/e6cf97d386f5aa9acfb43c6723213553b4b5dc32",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/e6cf97d386f5aa9acfb43c6723213553b4b5dc32",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOmU2Y2Y5N2QzODZmNWFhOWFjZmI0M2M2NzIzMjEzNTUzYjRiNWRjMzI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4ddb4f589bca603ccd93835f50cb3abdb366478e",
                    "sha": "4ddb4f589bca603ccd93835f50cb3abdb366478e",
                    "url": "https://api.github.com/repos/cython/cython/commits/4ddb4f589bca603ccd93835f50cb3abdb366478e"
                }
            ],
            "sha": "e6cf97d386f5aa9acfb43c6723213553b4b5dc32",
            "url": "https://api.github.com/repos/cython/cython/commits/e6cf97d386f5aa9acfb43c6723213553b4b5dc32"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1ffb136d4fca9db0f8c5bc70b6e014dda046fbd7/comments",
            "commit": {
                "author": {
                    "date": "2019-11-30T00:27:40Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-30T00:27:40Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Lint fix",
                "tree": {
                    "sha": "c74d4bbc0388151afb5483298a062ceb326479f7",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/c74d4bbc0388151afb5483298a062ceb326479f7"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1ffb136d4fca9db0f8c5bc70b6e014dda046fbd7",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/1ffb136d4fca9db0f8c5bc70b6e014dda046fbd7",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjFmZmIxMzZkNGZjYTlkYjBmOGM1YmM3MGI2ZTAxNGRkYTA0NmZiZDc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/e6cf97d386f5aa9acfb43c6723213553b4b5dc32",
                    "sha": "e6cf97d386f5aa9acfb43c6723213553b4b5dc32",
                    "url": "https://api.github.com/repos/cython/cython/commits/e6cf97d386f5aa9acfb43c6723213553b4b5dc32"
                }
            ],
            "sha": "1ffb136d4fca9db0f8c5bc70b6e014dda046fbd7",
            "url": "https://api.github.com/repos/cython/cython/commits/1ffb136d4fca9db0f8c5bc70b6e014dda046fbd7"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6f3015c4d06ab1b5226a71f09d69f7db19413d2f/comments",
            "commit": {
                "author": {
                    "date": "2019-11-30T08:34:19Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-30T08:34:19Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Address Comments",
                "tree": {
                    "sha": "a2f1b4c895436361bce0f34a0821ca747a901d13",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a2f1b4c895436361bce0f34a0821ca747a901d13"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6f3015c4d06ab1b5226a71f09d69f7db19413d2f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/6f3015c4d06ab1b5226a71f09d69f7db19413d2f",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjZmMzAxNWM0ZDA2YWIxYjUyMjZhNzFmMDlkNjlmN2RiMTk0MTNkMmY=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1ffb136d4fca9db0f8c5bc70b6e014dda046fbd7",
                    "sha": "1ffb136d4fca9db0f8c5bc70b6e014dda046fbd7",
                    "url": "https://api.github.com/repos/cython/cython/commits/1ffb136d4fca9db0f8c5bc70b6e014dda046fbd7"
                }
            ],
            "sha": "6f3015c4d06ab1b5226a71f09d69f7db19413d2f",
            "url": "https://api.github.com/repos/cython/cython/commits/6f3015c4d06ab1b5226a71f09d69f7db19413d2f"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/481e44dddd0642d76fbaad45fd363aa83c94e4be/comments",
            "commit": {
                "author": {
                    "date": "2019-11-30T08:54:54Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-30T08:54:54Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Final Cleanups",
                "tree": {
                    "sha": "f99c263af6b6de9c782e6068c3befc84bb7992d6",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/f99c263af6b6de9c782e6068c3befc84bb7992d6"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/481e44dddd0642d76fbaad45fd363aa83c94e4be",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/481e44dddd0642d76fbaad45fd363aa83c94e4be",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjQ4MWU0NGRkZGQwNjQyZDc2ZmJhYWQ0NWZkMzYzYWE4M2M5NGU0YmU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6f3015c4d06ab1b5226a71f09d69f7db19413d2f",
                    "sha": "6f3015c4d06ab1b5226a71f09d69f7db19413d2f",
                    "url": "https://api.github.com/repos/cython/cython/commits/6f3015c4d06ab1b5226a71f09d69f7db19413d2f"
                }
            ],
            "sha": "481e44dddd0642d76fbaad45fd363aa83c94e4be",
            "url": "https://api.github.com/repos/cython/cython/commits/481e44dddd0642d76fbaad45fd363aa83c94e4be"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c97e91822cd331e1701f5c7d091f0c66db712171/comments",
            "commit": {
                "author": {
                    "date": "2019-11-30T09:32:24Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-30T09:32:24Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Enable 3.6 and 3.8 and C++ backend",
                "tree": {
                    "sha": "edae07434790fad06d252ed8c0cd3885434dffe7",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/edae07434790fad06d252ed8c0cd3885434dffe7"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c97e91822cd331e1701f5c7d091f0c66db712171",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/c97e91822cd331e1701f5c7d091f0c66db712171",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOmM5N2U5MTgyMmNkMzMxZTE3MDFmNWM3ZDA5MWYwYzY2ZGI3MTIxNzE=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/481e44dddd0642d76fbaad45fd363aa83c94e4be",
                    "sha": "481e44dddd0642d76fbaad45fd363aa83c94e4be",
                    "url": "https://api.github.com/repos/cython/cython/commits/481e44dddd0642d76fbaad45fd363aa83c94e4be"
                }
            ],
            "sha": "c97e91822cd331e1701f5c7d091f0c66db712171",
            "url": "https://api.github.com/repos/cython/cython/commits/c97e91822cd331e1701f5c7d091f0c66db712171"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/8fd7c71e55554c075e637d0dd4e07343df84e108/comments",
            "commit": {
                "author": {
                    "date": "2019-11-30T09:59:16Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-30T09:59:16Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Fix 2.7 issue",
                "tree": {
                    "sha": "6680a269cf7f3320cbc943007e30b1a2fbad6a34",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/6680a269cf7f3320cbc943007e30b1a2fbad6a34"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/8fd7c71e55554c075e637d0dd4e07343df84e108",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/8fd7c71e55554c075e637d0dd4e07343df84e108",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjhmZDdjNzFlNTU1NTRjMDc1ZTYzN2QwZGQ0ZTA3MzQzZGY4NGUxMDg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c97e91822cd331e1701f5c7d091f0c66db712171",
                    "sha": "c97e91822cd331e1701f5c7d091f0c66db712171",
                    "url": "https://api.github.com/repos/cython/cython/commits/c97e91822cd331e1701f5c7d091f0c66db712171"
                }
            ],
            "sha": "8fd7c71e55554c075e637d0dd4e07343df84e108",
            "url": "https://api.github.com/repos/cython/cython/commits/8fd7c71e55554c075e637d0dd4e07343df84e108"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f636364885436f8bf59fbd4c1fca7a17fb5f97ce/comments",
            "commit": {
                "author": {
                    "date": "2019-11-30T20:38:14Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2019-11-30T20:38:14Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Fix C++ forward declares",
                "tree": {
                    "sha": "049901e4f639407cbe423fae10f22d2153d11c4a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/049901e4f639407cbe423fae10f22d2153d11c4a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOmY2MzYzNjQ4ODU0MzZmOGJmNTlmYmQ0YzFmY2E3YTE3ZmI1Zjk3Y2U=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/8fd7c71e55554c075e637d0dd4e07343df84e108",
                    "sha": "8fd7c71e55554c075e637d0dd4e07343df84e108",
                    "url": "https://api.github.com/repos/cython/cython/commits/8fd7c71e55554c075e637d0dd4e07343df84e108"
                }
            ],
            "sha": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
            "url": "https://api.github.com/repos/cython/cython/commits/f636364885436f8bf59fbd4c1fca7a17fb5f97ce"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/4e5806efd6f06e4296d6d6a0c99fddbc16a1760b/comments",
            "commit": {
                "author": {
                    "date": "2020-01-09T21:54:50Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-09T21:54:50Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Fixed issues based on upstream comments",
                "tree": {
                    "sha": "eaf69cb1760625d7e6ac1772fcf11d0a7efd2428",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/eaf69cb1760625d7e6ac1772fcf11d0a7efd2428"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/4e5806efd6f06e4296d6d6a0c99fddbc16a1760b",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/4e5806efd6f06e4296d6d6a0c99fddbc16a1760b",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjRlNTgwNmVmZDZmMDZlNDI5NmQ2ZDZhMGM5OWZkZGJjMTZhMTc2MGI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
                    "sha": "f636364885436f8bf59fbd4c1fca7a17fb5f97ce",
                    "url": "https://api.github.com/repos/cython/cython/commits/f636364885436f8bf59fbd4c1fca7a17fb5f97ce"
                }
            ],
            "sha": "4e5806efd6f06e4296d6d6a0c99fddbc16a1760b",
            "url": "https://api.github.com/repos/cython/cython/commits/4e5806efd6f06e4296d6d6a0c99fddbc16a1760b"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d0c9b330118e5c42b9bfa7a300de8a998019bd77/comments",
            "commit": {
                "author": {
                    "date": "2020-01-09T22:39:48Z",
                    "email": "eduardo.elizondorueda@gmail.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-09T22:39:48Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Merge branch 'master' into limited-api",
                "tree": {
                    "sha": "2bef055928aefde84137668005e9d7f759063008",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2bef055928aefde84137668005e9d7f759063008"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d0c9b330118e5c42b9bfa7a300de8a998019bd77",
                "verification": {
                    "payload": "tree 2bef055928aefde84137668005e9d7f759063008\nparent 4e5806efd6f06e4296d6d6a0c99fddbc16a1760b\nparent 6e72d84f43fc8f8da4ddc7695ac9f5b434788ef5\nauthor Eddie Elizondo <eduardo.elizondorueda@gmail.com> 1578609588 -0500\ncommitter GitHub <noreply@github.com> 1578609588 -0500\n\nMerge branch 'master' into limited-api",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeF6u0CRBK7hj4Ov3rIwAAdHIIAFYa92aWrgIeJN7PJbOXdIbd\nwCAF6YsPELUfS9oXWpxZX6fnhYLVCndRrU0giEb2qYs5P0E+Mq4NWxbz5EqJo1cP\nhXZY9dTQHOUBYP+ry4iSwe09WbZ61cIXU3eipjT2VXY2kAOQglMkmxSNAZeYWz+9\no6uVFc5Sm50dRoNihIvbFW7qrnzJHjYSRYax+yVjM2j9weKkzd/uOlDL06YKzKAC\nyRue89KA7sI4k8CN/71DDikwPUTzKjhTKeM5H+S5rCcKnhm2r0gqLCLtm3blyTk7\n5KNcKbrNEvdxwO5LpYd84kjw8h7HIew6jGThx+FvRsLFCGK8g4CTkaKFYtcvlKk=\n=52ou\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/d0c9b330118e5c42b9bfa7a300de8a998019bd77",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOmQwYzliMzMwMTE4ZTVjNDJiOWJmYTdhMzAwZGU4YTk5ODAxOWJkNzc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/4e5806efd6f06e4296d6d6a0c99fddbc16a1760b",
                    "sha": "4e5806efd6f06e4296d6d6a0c99fddbc16a1760b",
                    "url": "https://api.github.com/repos/cython/cython/commits/4e5806efd6f06e4296d6d6a0c99fddbc16a1760b"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/6e72d84f43fc8f8da4ddc7695ac9f5b434788ef5",
                    "sha": "6e72d84f43fc8f8da4ddc7695ac9f5b434788ef5",
                    "url": "https://api.github.com/repos/cython/cython/commits/6e72d84f43fc8f8da4ddc7695ac9f5b434788ef5"
                }
            ],
            "sha": "d0c9b330118e5c42b9bfa7a300de8a998019bd77",
            "url": "https://api.github.com/repos/cython/cython/commits/d0c9b330118e5c42b9bfa7a300de8a998019bd77"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/67aff6cea0a0303c3fbd722a33841d4d4f92fc7a/comments",
            "commit": {
                "author": {
                    "date": "2020-01-09T23:00:34Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-09T23:00:34Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "scope dictionary and remove i++",
                "tree": {
                    "sha": "099d5128f4add71076a5d51966267d2992e88d53",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/099d5128f4add71076a5d51966267d2992e88d53"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/67aff6cea0a0303c3fbd722a33841d4d4f92fc7a",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/67aff6cea0a0303c3fbd722a33841d4d4f92fc7a",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjY3YWZmNmNlYTBhMDMwM2MzZmJkNzIyYTMzODQxZDRkNGY5MmZjN2E=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d0c9b330118e5c42b9bfa7a300de8a998019bd77",
                    "sha": "d0c9b330118e5c42b9bfa7a300de8a998019bd77",
                    "url": "https://api.github.com/repos/cython/cython/commits/d0c9b330118e5c42b9bfa7a300de8a998019bd77"
                }
            ],
            "sha": "67aff6cea0a0303c3fbd722a33841d4d4f92fc7a",
            "url": "https://api.github.com/repos/cython/cython/commits/67aff6cea0a0303c3fbd722a33841d4d4f92fc7a"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1248d0c9b5b45499cb3e0bc44e89ae3650e2da65/comments",
            "commit": {
                "author": {
                    "date": "2020-01-09T23:01:57Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-09T23:01:57Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "missed semi-colon",
                "tree": {
                    "sha": "4c03db8b792d316262f32340447168aaaab23f94",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/4c03db8b792d316262f32340447168aaaab23f94"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1248d0c9b5b45499cb3e0bc44e89ae3650e2da65",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/1248d0c9b5b45499cb3e0bc44e89ae3650e2da65",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjEyNDhkMGM5YjViNDU0OTljYjNlMGJjNDRlODlhZTM2NTBlMmRhNjU=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/67aff6cea0a0303c3fbd722a33841d4d4f92fc7a",
                    "sha": "67aff6cea0a0303c3fbd722a33841d4d4f92fc7a",
                    "url": "https://api.github.com/repos/cython/cython/commits/67aff6cea0a0303c3fbd722a33841d4d4f92fc7a"
                }
            ],
            "sha": "1248d0c9b5b45499cb3e0bc44e89ae3650e2da65",
            "url": "https://api.github.com/repos/cython/cython/commits/1248d0c9b5b45499cb3e0bc44e89ae3650e2da65"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/014d085d51cf80cce5563644931d6ad67a4afe98/comments",
            "commit": {
                "author": {
                    "date": "2020-01-11T01:20:35Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-11T01:20:35Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Addressed Upstream Comments",
                "tree": {
                    "sha": "3aa4dd41541e323e4e620535cd5879252e7f5fd5",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3aa4dd41541e323e4e620535cd5879252e7f5fd5"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/014d085d51cf80cce5563644931d6ad67a4afe98",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/014d085d51cf80cce5563644931d6ad67a4afe98",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjAxNGQwODVkNTFjZjgwY2NlNTU2MzY0NDkzMWQ2YWQ2N2E0YWZlOTg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1248d0c9b5b45499cb3e0bc44e89ae3650e2da65",
                    "sha": "1248d0c9b5b45499cb3e0bc44e89ae3650e2da65",
                    "url": "https://api.github.com/repos/cython/cython/commits/1248d0c9b5b45499cb3e0bc44e89ae3650e2da65"
                }
            ],
            "sha": "014d085d51cf80cce5563644931d6ad67a4afe98",
            "url": "https://api.github.com/repos/cython/cython/commits/014d085d51cf80cce5563644931d6ad67a4afe98"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/52efea741900142335da78bb14cdd69dcb5c700d/comments",
            "commit": {
                "author": {
                    "date": "2020-01-12T02:41:54Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-12T02:41:54Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Address Upstream Comments",
                "tree": {
                    "sha": "019ae392eb85b004e96307eba2990a5faf16c11b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/019ae392eb85b004e96307eba2990a5faf16c11b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/52efea741900142335da78bb14cdd69dcb5c700d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/52efea741900142335da78bb14cdd69dcb5c700d",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjUyZWZlYTc0MTkwMDE0MjMzNWRhNzhiYjE0Y2RkNjlkY2I1YzcwMGQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/014d085d51cf80cce5563644931d6ad67a4afe98",
                    "sha": "014d085d51cf80cce5563644931d6ad67a4afe98",
                    "url": "https://api.github.com/repos/cython/cython/commits/014d085d51cf80cce5563644931d6ad67a4afe98"
                }
            ],
            "sha": "52efea741900142335da78bb14cdd69dcb5c700d",
            "url": "https://api.github.com/repos/cython/cython/commits/52efea741900142335da78bb14cdd69dcb5c700d"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3223/commits",
    "created_at": "2019-11-01T00:48:08Z",
    "diff_url": "https://github.com/cython/cython/pull/3223.diff",
    "head": {
        "label": "eduardo-elizondo:limited-api",
        "ref": "limited-api",
        "repo": {
            "archive_url": "https://api.github.com/repos/eduardo-elizondo/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/eduardo-elizondo/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/eduardo-elizondo/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/eduardo-elizondo/cython/branches{/branch}",
            "clone_url": "https://github.com/eduardo-elizondo/cython.git",
            "collaborators_url": "https://api.github.com/repos/eduardo-elizondo/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/eduardo-elizondo/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/eduardo-elizondo/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/eduardo-elizondo/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/eduardo-elizondo/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/eduardo-elizondo/cython/contributors",
            "created_at": "2019-10-10T22:43:54Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/eduardo-elizondo/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/eduardo-elizondo/cython/downloads",
            "events_url": "https://api.github.com/repos/eduardo-elizondo/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/eduardo-elizondo/cython/forks",
            "full_name": "eduardo-elizondo/cython",
            "git_commits_url": "https://api.github.com/repos/eduardo-elizondo/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/eduardo-elizondo/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/eduardo-elizondo/cython/git/tags{/sha}",
            "git_url": "git://github.com/eduardo-elizondo/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/eduardo-elizondo/cython/hooks",
            "html_url": "https://github.com/eduardo-elizondo/cython",
            "id": 214298500,
            "issue_comment_url": "https://api.github.com/repos/eduardo-elizondo/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/eduardo-elizondo/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/eduardo-elizondo/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/eduardo-elizondo/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/eduardo-elizondo/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/eduardo-elizondo/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/eduardo-elizondo/cython/merges",
            "milestones_url": "https://api.github.com/repos/eduardo-elizondo/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkyMTQyOTg1MDA=",
            "notifications_url": "https://api.github.com/repos/eduardo-elizondo/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/eduardo-elizondo/cython/pulls{/number}",
            "pushed_at": "2020-01-22T00:02:58Z",
            "releases_url": "https://api.github.com/repos/eduardo-elizondo/cython/releases{/id}",
            "size": 56242,
            "ssh_url": "git@github.com:eduardo-elizondo/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/eduardo-elizondo/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/eduardo-elizondo/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/eduardo-elizondo/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/eduardo-elizondo/cython/subscription",
            "svn_url": "https://github.com/eduardo-elizondo/cython",
            "tags_url": "https://api.github.com/repos/eduardo-elizondo/cython/tags",
            "teams_url": "https://api.github.com/repos/eduardo-elizondo/cython/teams",
            "trees_url": "https://api.github.com/repos/eduardo-elizondo/cython/git/trees{/sha}",
            "updated_at": "2020-01-12T22:01:54Z",
            "url": "https://api.github.com/repos/eduardo-elizondo/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "52efea741900142335da78bb14cdd69dcb5c700d",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
            "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
            "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
            "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
            "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/eduardo-elizondo",
            "id": 5315899,
            "login": "eduardo-elizondo",
            "node_id": "MDQ6VXNlcjUzMTU4OTk=",
            "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
            "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
            "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/eduardo-elizondo"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3223",
    "id": 335235065,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3223",
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425556330,
            "name": "Code Generation",
            "node_id": "MDU6TGFiZWw0MjU1NTYzMzA=",
            "url": "https://api.github.com/repos/cython/cython/labels/Code%20Generation"
        },
        {
            "color": "c2e0c6",
            "default": false,
            "description": null,
            "id": 414805463,
            "name": "feature",
            "node_id": "MDU6TGFiZWw0MTQ4MDU0NjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/feature"
        }
    ],
    "locked": false,
    "merge_commit_sha": "84473513e5f709089cf201ac950350b359dc2453",
    "merged_at": "2020-01-12T08:51:41Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 132,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 24,
        "state": "open",
        "title": "3.0",
        "updated_at": "2020-01-30T10:14:09Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM1MjM1MDY1",
    "number": 3223,
    "patch_url": "https://github.com/cython/cython/pull/3223.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3223/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/52efea741900142335da78bb14cdd69dcb5c700d",
    "title": "Add LIMITED_API support and remove static state",
    "updated_at": "2020-02-03T13:11:01Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3223",
    "user": {
        "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
        "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
        "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
        "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
        "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/eduardo-elizondo",
        "id": 5315899,
        "login": "eduardo-elizondo",
        "node_id": "MDQ6VXNlcjUzMTU4OTk=",
        "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
        "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
        "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/eduardo-elizondo"
    }
}