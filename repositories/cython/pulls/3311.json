{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3311/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3311/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3311"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3311"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3311/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3311"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/5f266790487aabe3e0195a954c1f88a6137ba1d8"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 972,
            "forks_count": 972,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 785,
            "open_issues_count": 785,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2020-01-23T06:14:49Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 56041,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 4842,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2020-01-23T12:23:37Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 4842,
            "watchers_count": 4842
        },
        "sha": "d86aebefd33ecd232317e4becc15bb1d2f9f4bb7",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "Expands `LIMITED_API` support by adding fixes to previously unhandled cases. This now brings down the list of non-working tests in `limited_api_bugs.txt` down to 5. These are the fixes in this PR:\r\n\r\n**Heap types:**\r\nMade `CyFunctionType` and `FusedFunctionType` into heap types (through `FetchCommonTypeFromSpec`). Also, updated the type creation code to now support subclassing through `PyType_FromSpecWithBases`.\r\n\r\n**Cythonize multiple files:**\r\nThe code generator was creating duplicate types when more than one file was cythonized. (i.e. there was an incorrect `for module in modules:`). This has moved the code to `generate_c_class_declarations` where it now generates the types only once.\r\n\r\n**Fixes to cinit:**\r\nFixed some cases where `CYTHON_COMPILING_IN_LIMITED_API` was hiding the initialization code. To fix this, I reverted back to the original initialization code and updated the function to work with the appropriate type accessors (i.e: `PyType_GetSlot`).\r\n\r\n**Misc:**\r\n* Updated `Pyx_Globals` and `GetVtable` to now work with a module instead of a module dict.\r\n* Changed a `Py_LIMITED_API` flag to `CYTHON_COMPILING_IN_LIMITED_API`\r\n* Disabled `CYTHON_PROFILE` (just like pypy and pyston)\r\n* Fixed an incorrect use of `PyObject_GetItem` to the correct `PyObject_GetAttr `\r\n* Added `-Wno-unused-function` to reduce noise in `LIMITED_API` tests.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r367450299"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/367450299"
                }
            },
            "author_association": "MEMBER",
            "body": "`TypeSlots.get_slot_by_name(\"tp_base\")`",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-16T14:34:07Z",
            "diff_hunk": "@@ -5078,11 +5078,25 @@ def generate_type_ready_code(entry, code, heap_type_bases=False):\n             return\n         if entry.visibility != 'extern':\n             code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+            tuple_temp = code.funcstate.allocate_temp(py_object_type, manage_ref=True)\n+            base_type = scope.parent_type.base_type\n+            if base_type:\n+                for slot in TypeSlots.slot_table:\n+                    if slot.slot_name == \"tp_base\":",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r367450299",
            "id": 367450299,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ1MDI5OQ==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 8,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 343955390,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T00:02:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/367450299",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r367452422"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/367452422"
                }
            },
            "author_association": "MEMBER",
            "body": "If there is no `base_type`, I would prefer setting `tuple_temp` to `NULL` explicitly (and let the C compiler discard it if it can), and then using `put_xdecref_clear()` below to cover both cases.",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-16T14:37:50Z",
            "diff_hunk": "@@ -5078,11 +5078,25 @@ def generate_type_ready_code(entry, code, heap_type_bases=False):\n             return\n         if entry.visibility != 'extern':\n             code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+            tuple_temp = code.funcstate.allocate_temp(py_object_type, manage_ref=True)\n+            base_type = scope.parent_type.base_type\n+            if base_type:\n+                for slot in TypeSlots.slot_table:\n+                    if slot.slot_name == \"tp_base\":\n+                        code.putln(\n+                            \"%s = PyTuple_Pack(1, (PyObject *)%s); %s\" % (\n+                            tuple_temp,\n+                            base_type.typeptr_cname,\n+                            code.error_goto_if_null(tuple_temp, entry.pos)))\n+                        code.put_gotref(tuple_temp)\n             code.putln(\n-                \"%s = PyType_FromSpec(&%s_spec); %s\" % (\n+                \"%s = PyType_FromSpecWithBases(&%s_spec, %s); %s\" % (",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r367452422",
            "id": 367452422,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ1MjQyMg==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 17,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 343955390,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T00:02:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/367452422",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r367454938"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/367454938"
                }
            },
            "author_association": "MEMBER",
            "body": "This would prevent modifying `globals()`. Can't we read and use `(this_module).__dict__` instead?",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-16T14:42:06Z",
            "diff_hunk": "@@ -22,8 +22,13 @@ static PyObject* __Pyx_Globals(void); /*proto*/\n static PyObject* __Pyx_Globals(void) {\n     Py_ssize_t i;\n     PyObject *names;\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+    PyObject *globals = PyDict_New();",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r367454938",
            "id": 367454938,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ1NDkzOA==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 5,
            "path": "Cython/Utility/Builtins.c",
            "position": null,
            "pull_request_review_id": 343955390,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T00:02:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/367454938",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r367459458"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/367459458"
                }
            },
            "author_association": "MEMBER",
            "body": "There seems to be a huge overlap here with `__Pyx_FetchCommonType()`. If we continue to use both, their main algorithm should be extracted into a common function with a couple of arguments (`type_name`, `basicsize`), and possibly a couple of `if`s here and there.",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-16T14:49:37Z",
            "diff_hunk": "@@ -47,6 +50,58 @@ static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {\n     goto done;\n }\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static PyObject *__Pyx_FetchCommonTypeFromSpec(PyType_Spec *spec, PyObject *bases) {",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r367459458",
            "id": 367459458,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ1OTQ1OA==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 15,
            "path": "Cython/Utility/CommonStructures.c",
            "position": 91,
            "pull_request_review_id": 343955390,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T00:02:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/367459458",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r367460749"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/367460749"
                }
            },
            "author_association": "MEMBER",
            "body": "These look like good candidates for the `Naming` module now, which defines name constants that get reused across the code base. `Naming.cyfunction_type_cname` and `Naming.fusedfunction_type_cname` ?\r\n\r\nAlso, their declaration should depend on `#ifdef __Pyx_CyFunction_USED` and `__Pyx_FusedFunction_USED`, i.e. actual usage of these types in the module.",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-16T14:51:55Z",
            "diff_hunk": "@@ -2436,6 +2445,8 @@ def generate_module_state_start(self, env, code):\n         # TODO: Reactor LIMITED_API struct decl closer to the static decl\n         code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n         code.putln('typedef struct {')\n+        code.putln('PyObject *__pyx_CyFunctionType;')\n+        code.putln('PyObject *__pyx_FusedFunctionType;')",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r367460749",
            "id": 367460749,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ2MDc0OQ==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 94,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 343955390,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T00:02:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/367460749",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r367468794"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/367468794"
                }
            },
            "author_association": "MEMBER",
            "body": "How is this supported now? Wouldn't we need to define the function pointer offset somewhere?",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-16T15:05:18Z",
            "diff_hunk": "@@ -812,6 +822,34 @@ static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func,\n }\n #endif\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static PyType_Slot __pyx_CyFunctionType_slots[] = {\n+    {Py_tp_dealloc, (void *)__Pyx_CyFunction_dealloc},\n+    {Py_tp_repr, (void *)__Pyx_CyFunction_repr},\n+    {Py_tp_call, (void *)__Pyx_CyFunction_CallAsMethod},\n+    {Py_tp_traverse, (void *)__Pyx_CyFunction_traverse},\n+    {Py_tp_clear, (void *)__Pyx_CyFunction_clear},\n+    {Py_tp_methods, (void *)__pyx_CyFunction_methods},\n+    {Py_tp_members, (void *)__pyx_CyFunction_members},\n+    {Py_tp_getset, (void *)__pyx_CyFunction_getsets},\n+    {Py_tp_descr_get, (void *)__Pyx_PyMethod_New},\n+    {0, 0},\n+};\n+\n+static PyType_Spec __pyx_CyFunctionType_spec = {\n+    \"cython_function_or_method\",\n+    sizeof(__pyx_CyFunctionObject),\n+    0,\n+#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR\n+    Py_TPFLAGS_METHOD_DESCRIPTOR |\n+#endif\n+#ifdef _Py_TPFLAGS_HAVE_VECTORCALL\n+    _Py_TPFLAGS_HAVE_VECTORCALL |",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r367468794",
            "id": 367468794,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ2ODc5NA==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 57,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 343955390,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T00:02:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/367468794",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r367472768"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/367472768"
                }
            },
            "author_association": "MEMBER",
            "body": "It seems that all usage of `__Pyx_GetVtable()` pass `something->tp_dict` as argument. What about always passing this `something`, and, when not using the L'API, extract the `->tp_dict` inside of the function? I think that would avoid a second signature.",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-16T15:11:44Z",
            "diff_hunk": "@@ -720,13 +720,25 @@ static int __Pyx_SetVtable(PyObject *dict, void *vtable) {\n \n /////////////// GetVTable.proto ///////////////\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static void* __Pyx_GetVtable(PyTypeObject *type); /*proto*/\n+#else\n static void* __Pyx_GetVtable(PyObject *dict); /*proto*/\n+#endif",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r367472768",
            "id": 367472768,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ3Mjc2OA==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 26,
            "path": "Cython/Utility/ImportExport.c",
            "position": null,
            "pull_request_review_id": 343955390,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T00:02:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/367472768",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r368783843"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/368783843"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Let me leave this as unresolved. I'll get back to you on this",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-21T02:13:03Z",
            "diff_hunk": "@@ -22,8 +22,13 @@ static PyObject* __Pyx_Globals(void); /*proto*/\n static PyObject* __Pyx_Globals(void) {\n     Py_ssize_t i;\n     PyObject *names;\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+    PyObject *globals = PyDict_New();",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r368783843",
            "id": 368783843,
            "in_reply_to_id": 367454938,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc4Mzg0Mw==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 5,
            "path": "Cython/Utility/Builtins.c",
            "position": null,
            "pull_request_review_id": 345602279,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T00:02:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/368783843",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r368784616"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/368784616"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`tuple_temp` is already set to `NULL` explicitly. The `allocate_temp` initializes it to `NULL`. That being said, you are right, this should be a `XDECREF`. Let me fix that.",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-21T02:17:01Z",
            "diff_hunk": "@@ -5078,11 +5078,25 @@ def generate_type_ready_code(entry, code, heap_type_bases=False):\n             return\n         if entry.visibility != 'extern':\n             code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+            tuple_temp = code.funcstate.allocate_temp(py_object_type, manage_ref=True)\n+            base_type = scope.parent_type.base_type\n+            if base_type:\n+                for slot in TypeSlots.slot_table:\n+                    if slot.slot_name == \"tp_base\":\n+                        code.putln(\n+                            \"%s = PyTuple_Pack(1, (PyObject *)%s); %s\" % (\n+                            tuple_temp,\n+                            base_type.typeptr_cname,\n+                            code.error_goto_if_null(tuple_temp, entry.pos)))\n+                        code.put_gotref(tuple_temp)\n             code.putln(\n-                \"%s = PyType_FromSpec(&%s_spec); %s\" % (\n+                \"%s = PyType_FromSpecWithBases(&%s_spec, %s); %s\" % (",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r368784616",
            "id": 368784616,
            "in_reply_to_id": 367452422,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc4NDYxNg==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 17,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 345603137,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T00:02:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/368784616",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r368989465"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/368989465"
                }
            },
            "author_association": "MEMBER",
            "body": "It's automatically set to `NULL` at the beginning of the C function, yes. But the code section that is generated here \"creates\" the temp variable and then reads it without first assigning anything to it. Regardless of it being initialised to `NULL`, the code generation function should say that it didn't just forget to assign something, but really meant it to be `NULL`. That will help readers of this code. In the end, we are writing code for people to read and modify. It does not matter if the C compiler needs a femtosecond longer to discard redundant C code.\r\n\r\nThat being said, why use the temp variable at all if there is no `base_type`? You could just pass `NULL` directly instead, and do the allocate/release dance only at need.",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-21T13:08:49Z",
            "diff_hunk": "@@ -5078,11 +5078,25 @@ def generate_type_ready_code(entry, code, heap_type_bases=False):\n             return\n         if entry.visibility != 'extern':\n             code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+            tuple_temp = code.funcstate.allocate_temp(py_object_type, manage_ref=True)\n+            base_type = scope.parent_type.base_type\n+            if base_type:\n+                for slot in TypeSlots.slot_table:\n+                    if slot.slot_name == \"tp_base\":\n+                        code.putln(\n+                            \"%s = PyTuple_Pack(1, (PyObject *)%s); %s\" % (\n+                            tuple_temp,\n+                            base_type.typeptr_cname,\n+                            code.error_goto_if_null(tuple_temp, entry.pos)))\n+                        code.put_gotref(tuple_temp)\n             code.putln(\n-                \"%s = PyType_FromSpec(&%s_spec); %s\" % (\n+                \"%s = PyType_FromSpecWithBases(&%s_spec, %s); %s\" % (",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r368989465",
            "id": 368989465,
            "in_reply_to_id": 367452422,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk4OTQ2NQ==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 17,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 345862138,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T00:02:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/368989465",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r368989666"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/368989666"
                }
            },
            "author_association": "MEMBER",
            "body": "ok",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-21T13:09:17Z",
            "diff_hunk": "@@ -22,8 +22,13 @@ static PyObject* __Pyx_Globals(void); /*proto*/\n static PyObject* __Pyx_Globals(void) {\n     Py_ssize_t i;\n     PyObject *names;\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+    PyObject *globals = PyDict_New();",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r368989666",
            "id": 368989666,
            "in_reply_to_id": 367454938,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk4OTY2Ng==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 5,
            "path": "Cython/Utility/Builtins.c",
            "position": null,
            "pull_request_review_id": 345862418,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T00:02:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/368989666",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r369262588"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369262588"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "TL;DR: Yeah you are right, currently these won't work, I will remove them for now until we add support for them in CPython. I'll just leave a TODO here\r\n\r\nLonger explanation:\r\n\r\nFor static types, CPython uses the `*offset` fields on the type. Up until recently C Extension heap types were not able to handle these fields (since the type is opaque).\r\n\r\nHowever, I built a way to handle these offsets using the existing CPython type system infrastructure. This is the PR if you are interested: https://github.com/python/cpython/pull/16076\r\n\r\nUnfortunately, I only added support for `__dictoffset__ ` and `__weaklistoffset__`. But `__vectorcall_offset__` should be a corollary of that change.",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-21T21:52:00Z",
            "diff_hunk": "@@ -812,6 +822,34 @@ static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func,\n }\n #endif\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static PyType_Slot __pyx_CyFunctionType_slots[] = {\n+    {Py_tp_dealloc, (void *)__Pyx_CyFunction_dealloc},\n+    {Py_tp_repr, (void *)__Pyx_CyFunction_repr},\n+    {Py_tp_call, (void *)__Pyx_CyFunction_CallAsMethod},\n+    {Py_tp_traverse, (void *)__Pyx_CyFunction_traverse},\n+    {Py_tp_clear, (void *)__Pyx_CyFunction_clear},\n+    {Py_tp_methods, (void *)__pyx_CyFunction_methods},\n+    {Py_tp_members, (void *)__pyx_CyFunction_members},\n+    {Py_tp_getset, (void *)__pyx_CyFunction_getsets},\n+    {Py_tp_descr_get, (void *)__Pyx_PyMethod_New},\n+    {0, 0},\n+};\n+\n+static PyType_Spec __pyx_CyFunctionType_spec = {\n+    \"cython_function_or_method\",\n+    sizeof(__pyx_CyFunctionObject),\n+    0,\n+#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR\n+    Py_TPFLAGS_METHOD_DESCRIPTOR |\n+#endif\n+#ifdef _Py_TPFLAGS_HAVE_VECTORCALL\n+    _Py_TPFLAGS_HAVE_VECTORCALL |",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r369262588",
            "id": 369262588,
            "in_reply_to_id": 367468794,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2MjU4OA==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 57,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 346217221,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T00:02:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369262588",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r369282289"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369282289"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Added the Naming change.\r\n\r\nOn the ifdefs, I tried adding both of the `*_USED` ifdefs originally but these are generated after the module state. I've tried for a while to move the utility code (i.e: `CythonFunction.proto`) to a point before the module state is printed out but I couldn't figure it out. I'll have to lean on you on this one",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-21T22:39:34Z",
            "diff_hunk": "@@ -2436,6 +2445,8 @@ def generate_module_state_start(self, env, code):\n         # TODO: Reactor LIMITED_API struct decl closer to the static decl\n         code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n         code.putln('typedef struct {')\n+        code.putln('PyObject *__pyx_CyFunctionType;')\n+        code.putln('PyObject *__pyx_FusedFunctionType;')",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r369282289",
            "id": 369282289,
            "in_reply_to_id": 367460749,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI4MjI4OQ==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 94,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 346241754,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T06:01:53Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369282289",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r369283746"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369283746"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I moved this into an `if base_type else`. If there is no base type, then it will just use: `PyType_FromSpec` which calls `PyType_FromSpecWithBases` with a `NULL` bases. Marking this as resolved",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-21T22:43:17Z",
            "diff_hunk": "@@ -5078,11 +5078,25 @@ def generate_type_ready_code(entry, code, heap_type_bases=False):\n             return\n         if entry.visibility != 'extern':\n             code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+            tuple_temp = code.funcstate.allocate_temp(py_object_type, manage_ref=True)\n+            base_type = scope.parent_type.base_type\n+            if base_type:\n+                for slot in TypeSlots.slot_table:\n+                    if slot.slot_name == \"tp_base\":\n+                        code.putln(\n+                            \"%s = PyTuple_Pack(1, (PyObject *)%s); %s\" % (\n+                            tuple_temp,\n+                            base_type.typeptr_cname,\n+                            code.error_goto_if_null(tuple_temp, entry.pos)))\n+                        code.put_gotref(tuple_temp)\n             code.putln(\n-                \"%s = PyType_FromSpec(&%s_spec); %s\" % (\n+                \"%s = PyType_FromSpecWithBases(&%s_spec, %s); %s\" % (",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r369283746",
            "id": 369283746,
            "in_reply_to_id": 367452422,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI4Mzc0Ng==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 17,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 346243463,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T00:02:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369283746",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r369285091"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369285091"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-21T22:46:58Z",
            "diff_hunk": "@@ -720,13 +720,25 @@ static int __Pyx_SetVtable(PyObject *dict, void *vtable) {\n \n /////////////// GetVTable.proto ///////////////\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static void* __Pyx_GetVtable(PyTypeObject *type); /*proto*/\n+#else\n static void* __Pyx_GetVtable(PyObject *dict); /*proto*/\n+#endif",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r369285091",
            "id": 369285091,
            "in_reply_to_id": 367472768,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI4NTA5MQ==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 26,
            "path": "Cython/Utility/ImportExport.c",
            "position": null,
            "pull_request_review_id": 346245175,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T00:02:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369285091",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r369285373"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369285373"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'll mark this as resolved but it is not indeed resolved. I just left a TODO since this would require changes to CPython as well. Still, let me know if you have more questions!",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-21T22:47:41Z",
            "diff_hunk": "@@ -812,6 +822,34 @@ static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func,\n }\n #endif\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static PyType_Slot __pyx_CyFunctionType_slots[] = {\n+    {Py_tp_dealloc, (void *)__Pyx_CyFunction_dealloc},\n+    {Py_tp_repr, (void *)__Pyx_CyFunction_repr},\n+    {Py_tp_call, (void *)__Pyx_CyFunction_CallAsMethod},\n+    {Py_tp_traverse, (void *)__Pyx_CyFunction_traverse},\n+    {Py_tp_clear, (void *)__Pyx_CyFunction_clear},\n+    {Py_tp_methods, (void *)__pyx_CyFunction_methods},\n+    {Py_tp_members, (void *)__pyx_CyFunction_members},\n+    {Py_tp_getset, (void *)__pyx_CyFunction_getsets},\n+    {Py_tp_descr_get, (void *)__Pyx_PyMethod_New},\n+    {0, 0},\n+};\n+\n+static PyType_Spec __pyx_CyFunctionType_spec = {\n+    \"cython_function_or_method\",\n+    sizeof(__pyx_CyFunctionObject),\n+    0,\n+#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR\n+    Py_TPFLAGS_METHOD_DESCRIPTOR |\n+#endif\n+#ifdef _Py_TPFLAGS_HAVE_VECTORCALL\n+    _Py_TPFLAGS_HAVE_VECTORCALL |",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r369285373",
            "id": 369285373,
            "in_reply_to_id": 367468794,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI4NTM3Mw==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 57,
            "path": "Cython/Utility/CythonFunction.c",
            "position": null,
            "pull_request_review_id": 346245519,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T00:02:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369285373",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r369285620"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369285620"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I tried to combine both of these as much as possible. I'll mark this as resolved but still feel free to add more comments on the refactoring.",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-21T22:48:20Z",
            "diff_hunk": "@@ -47,6 +50,58 @@ static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {\n     goto done;\n }\n \n+#if CYTHON_COMPILING_IN_LIMITED_API\n+static PyObject *__Pyx_FetchCommonTypeFromSpec(PyType_Spec *spec, PyObject *bases) {",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r369285620",
            "id": 369285620,
            "in_reply_to_id": 367459458,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI4NTYyMA==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 15,
            "path": "Cython/Utility/CommonStructures.c",
            "position": 91,
            "pull_request_review_id": 346245814,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T00:02:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369285620",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r369285762"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369285762"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done, much cleaner.",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-21T22:48:48Z",
            "diff_hunk": "@@ -5078,11 +5078,25 @@ def generate_type_ready_code(entry, code, heap_type_bases=False):\n             return\n         if entry.visibility != 'extern':\n             code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n+            tuple_temp = code.funcstate.allocate_temp(py_object_type, manage_ref=True)\n+            base_type = scope.parent_type.base_type\n+            if base_type:\n+                for slot in TypeSlots.slot_table:\n+                    if slot.slot_name == \"tp_base\":",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r369285762",
            "id": 369285762,
            "in_reply_to_id": 367450299,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI4NTc2Mg==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 8,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 346246001,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T00:02:59Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369285762",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r369307839"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369307839"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "After looking at this for a while, I think this can be greatly simplified.\r\n\r\nFirst a quick question, do we need the call to `PyObject_Dir` if we already have the module dictionary? Internally `PyObject_Dir` will call `moduleobject.c:module_dir` which ends up calling `PyDict_Keys` of the internal module dictionary. This will exactly match the keys from the module dict that we already have. At least this is what happens in CPython master (and 3.8, 3.7, and 3.6). Maybe some older version did not do the same?\r\n\r\nThus, what about changing this to:\r\n```\r\nstatic PyObject* __Pyx_Globals(void) {\r\n    PyObject *globals;\r\n#if CYTHON_COMPILING_IN_LIMITED_API\r\n    globals = PyModule_GetDict($module_cname);\r\n    if (unlikely(!globals)) return NULL;\r\n#else\r\n    globals = $moddict_cname;\r\n#endif\r\n    Py_INCREF(globals);\r\n    return globals;\r\n}\r\n```\r\n\r\nI could even add a separate PR to simplify this `__Pyx_Globals` first and then this PR can add the `LIMITED_API` change.\r\n\r\nThoughts? All tests are passing with the proposed change",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-21T23:58:26Z",
            "diff_hunk": "@@ -22,8 +22,13 @@ static PyObject* __Pyx_Globals(void); /*proto*/\n static PyObject* __Pyx_Globals(void) {\n     Py_ssize_t i;\n     PyObject *names;\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+    PyObject *globals = PyDict_New();",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r369307839",
            "id": 369307839,
            "in_reply_to_id": 367454938,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMwNzgzOQ==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 5,
            "path": "Cython/Utility/Builtins.c",
            "position": null,
            "pull_request_review_id": 346272317,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-22T06:00:39Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369307839",
            "user": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r369950390"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369950390"
                }
            },
            "author_association": "MEMBER",
            "body": "Remember the list of code sections where I asked you to move your additions a little down? That's where you can fix this. Split up the four sections that you added and move the one that declares these fields (and what depends on it) further down, maybe close to other, similar sections. If you can move it below `utility_code_proto`, then the `*_USED` macros will be defined.",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-23T06:32:39Z",
            "diff_hunk": "@@ -2436,6 +2445,8 @@ def generate_module_state_start(self, env, code):\n         # TODO: Reactor LIMITED_API struct decl closer to the static decl\n         code.putln(\"#if CYTHON_COMPILING_IN_LIMITED_API\")\n         code.putln('typedef struct {')\n+        code.putln('PyObject *__pyx_CyFunctionType;')\n+        code.putln('PyObject *__pyx_FusedFunctionType;')",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r369950390",
            "id": 369950390,
            "in_reply_to_id": 367460749,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk1MDM5MA==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 94,
            "path": "Cython/Compiler/ModuleNode.py",
            "position": null,
            "pull_request_review_id": 347082142,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-23T06:32:40Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369950390",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r369956610"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/369956610"
                }
            },
            "author_association": "MEMBER",
            "body": "`PyObject_Dir()` used to do a lot of different things in Py2, but looking at the implementation in Py2.7 now, there's a dedicated path for modules, which just returns the keys of the module dict, as you say. I think the proposed simplification is ok.\r\n\r\nAlso, the comment above the implementation is outdated, but gives a hint why the implementation might have ended up like this. Since supporting `cdef` globals is not implemented currently, I think it's safe to simplify the whole thing and remove the comment along the way. Seems worth a separate little PR.\r\n\r\n(Careful with comments like \"All tests are passing with the proposed change\", BTW. Many things simply weren't worth testing in the past, and would have let the test suite explode if we had exhaustively tested the Python-compatible behaviour. Also, behavioural tests for Python language features that we (re-)implemented were not always available in the test suite of CPython itself, so we couldn't just have copied them over or so. That's only slowly changing over there in recent years, also triggered by the PyPy project and other implementations.)",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-23T07:00:55Z",
            "diff_hunk": "@@ -22,8 +22,13 @@ static PyObject* __Pyx_Globals(void); /*proto*/\n static PyObject* __Pyx_Globals(void) {\n     Py_ssize_t i;\n     PyObject *names;\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+    PyObject *globals = PyDict_New();",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r369956610",
            "id": 369956610,
            "in_reply_to_id": 367454938,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk1NjYxMA==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 5,
            "path": "Cython/Utility/Builtins.c",
            "position": null,
            "pull_request_review_id": 347089925,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-23T07:00:55Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/369956610",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r370008104"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/370008104"
                }
            },
            "author_association": "MEMBER",
            "body": "(Ah, I hadn't seen that you already changed this – don't need a new PR then.)",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-23T09:26:21Z",
            "diff_hunk": "@@ -22,8 +22,13 @@ static PyObject* __Pyx_Globals(void); /*proto*/\n static PyObject* __Pyx_Globals(void) {\n     Py_ssize_t i;\n     PyObject *names;\n+#if CYTHON_COMPILING_IN_LIMITED_API\n+    PyObject *globals = PyDict_New();",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r370008104",
            "id": 370008104,
            "in_reply_to_id": 367454938,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAwODEwNA==",
            "original_commit_id": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "original_position": 5,
            "path": "Cython/Utility/Builtins.c",
            "position": null,
            "pull_request_review_id": 347155114,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-23T09:26:21Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/370008104",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r370009785"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/370009785"
                }
            },
            "author_association": "MEMBER",
            "body": "Erm … where is this used now?",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-23T09:29:45Z",
            "diff_hunk": "@@ -5081,22 +5081,27 @@ def generate_type_ready_code(entry, code, heap_type_bases=False):\n             tuple_temp = code.funcstate.allocate_temp(py_object_type, manage_ref=True)\n             base_type = scope.parent_type.base_type\n             if base_type:\n-                for slot in TypeSlots.slot_table:\n-                    if slot.slot_name == \"tp_base\":\n-                        code.putln(\n-                            \"%s = PyTuple_Pack(1, (PyObject *)%s); %s\" % (\n-                            tuple_temp,\n-                            base_type.typeptr_cname,\n-                            code.error_goto_if_null(tuple_temp, entry.pos)))\n-                        code.put_gotref(tuple_temp)\n-            code.putln(\n-                \"%s = PyType_FromSpecWithBases(&%s_spec, %s); %s\" % (\n-                    typeobj_cname,\n-                    typeobj_cname,\n+                slot = TypeSlots.get_slot_by_name(\"tp_base\")",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r370009785",
            "id": 370009785,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAwOTc4NQ==",
            "original_commit_id": "1d51fdad5ac5f33c274ad4ea6b568a026556b543",
            "original_position": 16,
            "path": "Cython/Compiler/Nodes.py",
            "position": 12,
            "pull_request_review_id": 347157192,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-23T09:49:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/370009785",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r370010908"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/370010908"
                }
            },
            "author_association": "MEMBER",
            "body": "Or, rather: `__Pyx_FetchSharedCythonABIModule()`. It's not fake at all, it even serves a purpose. :)",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-23T09:31:52Z",
            "diff_hunk": "@@ -7,98 +7,90 @@ static PyObject* __Pyx_FetchCommonTypeFromSpec(PyType_Spec *spec, PyObject *base\n \n /////////////// FetchCommonType ///////////////\n \n-static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {\n-    PyObject* fake_module;\n-    PyTypeObject* cached_type = NULL;\n-\n-    fake_module = PyImport_AddModule((char*) \"_cython_\" CYTHON_ABI);\n+static PyObject *fetch_fake_module(void) {",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r370010908",
            "id": 370010908,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAxMDkwOA==",
            "original_commit_id": "1d51fdad5ac5f33c274ad4ea6b568a026556b543",
            "original_position": 9,
            "path": "Cython/Utility/CommonStructures.c",
            "position": 15,
            "pull_request_review_id": 347157192,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-23T09:49:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/370010908",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r370011604"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/370011604"
                }
            },
            "author_association": "MEMBER",
            "body": "Global C names must always be `__[Pp]yx_…` escaped to prevent naming collisions with user code.",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-23T09:33:21Z",
            "diff_hunk": "@@ -7,98 +7,90 @@ static PyObject* __Pyx_FetchCommonTypeFromSpec(PyType_Spec *spec, PyObject *base\n \n /////////////// FetchCommonType ///////////////\n \n-static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {\n-    PyObject* fake_module;\n-    PyTypeObject* cached_type = NULL;\n-\n-    fake_module = PyImport_AddModule((char*) \"_cython_\" CYTHON_ABI);\n+static PyObject *fetch_fake_module(void) {\n+    PyObject *fake_module = PyImport_AddModule((char*) \"_cython_\" CYTHON_ABI);\n     if (!fake_module) return NULL;\n     Py_INCREF(fake_module);\n+    return fake_module;\n+}\n+\n+static void verify_cached_type(PyObject *cached_type,",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r370011604",
            "id": 370011604,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAxMTYwNA==",
            "original_commit_id": "1d51fdad5ac5f33c274ad4ea6b568a026556b543",
            "original_position": 16,
            "path": "Cython/Utility/CommonStructures.c",
            "position": 22,
            "pull_request_review_id": 347157192,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-23T09:49:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/370011604",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r370014023"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/370014023"
                }
            },
            "author_association": "MEMBER",
            "body": "Since this can fail, it must return an error code that the caller can handle.",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-23T09:38:14Z",
            "diff_hunk": "@@ -7,98 +7,90 @@ static PyObject* __Pyx_FetchCommonTypeFromSpec(PyType_Spec *spec, PyObject *base\n \n /////////////// FetchCommonType ///////////////\n \n-static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {\n-    PyObject* fake_module;\n-    PyTypeObject* cached_type = NULL;\n-\n-    fake_module = PyImport_AddModule((char*) \"_cython_\" CYTHON_ABI);\n+static PyObject *fetch_fake_module(void) {\n+    PyObject *fake_module = PyImport_AddModule((char*) \"_cython_\" CYTHON_ABI);\n     if (!fake_module) return NULL;\n     Py_INCREF(fake_module);\n+    return fake_module;\n+}\n+\n+static void verify_cached_type(PyObject *cached_type,",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r370014023",
            "id": 370014023,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAxNDAyMw==",
            "original_commit_id": "1d51fdad5ac5f33c274ad4ea6b568a026556b543",
            "original_position": 16,
            "path": "Cython/Utility/CommonStructures.c",
            "position": 22,
            "pull_request_review_id": 347157192,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-23T09:49:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/370014023",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r370015708"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/370015708"
                }
            },
            "author_association": "MEMBER",
            "body": "The common pattern in the code base is to `goto bad` on failures, so that error cleanup can happen. It's often even used if the error case is no different from the normal function exit, because it's such a future proof and nicely declarative pattern. However, since `cached_type` can be set to non-NULL also in error cases in this function, it also seems necessary here.",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-23T09:41:44Z",
            "diff_hunk": "@@ -7,98 +7,90 @@ static PyObject* __Pyx_FetchCommonTypeFromSpec(PyType_Spec *spec, PyObject *base\n \n /////////////// FetchCommonType ///////////////\n \n-static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {\n-    PyObject* fake_module;\n-    PyTypeObject* cached_type = NULL;\n-\n-    fake_module = PyImport_AddModule((char*) \"_cython_\" CYTHON_ABI);\n+static PyObject *fetch_fake_module(void) {\n+    PyObject *fake_module = PyImport_AddModule((char*) \"_cython_\" CYTHON_ABI);\n     if (!fake_module) return NULL;\n     Py_INCREF(fake_module);\n+    return fake_module;\n+}\n+\n+static void verify_cached_type(PyObject *cached_type,\n+                               const char *name,\n+                               Py_ssize_t basicsize,\n+                               Py_ssize_t expected_basicsize) {\n+    if (!PyType_Check(cached_type)) {\n+        PyErr_Format(PyExc_TypeError,\n+            \"Shared Cython type %.200s is not a type object\", name);\n+    }\n+    if (basicsize != expected_basicsize) {\n+        PyErr_Format(PyExc_TypeError,\n+            \"Shared Cython type %.200s has the wrong size, try recompiling\",\n+            name);\n+    }\n+}\n+\n+static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {\n+    PyObject* fake_module;\n+    PyTypeObject *cached_type = NULL;\n \n+    fake_module = fetch_fake_module();\n+    if (!fake_module) goto done;",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r370015708",
            "id": 370015708,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAxNTcwOA==",
            "original_commit_id": "1d51fdad5ac5f33c274ad4ea6b568a026556b543",
            "original_position": 36,
            "path": "Cython/Utility/CommonStructures.c",
            "position": 42,
            "pull_request_review_id": 347157192,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-23T09:49:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/370015708",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3311#discussion_r370016606"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3311"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/370016606"
                }
            },
            "author_association": "MEMBER",
            "body": "`XDECREF(x); return x;` ? That combination should never occur in any (readable) code.",
            "commit_id": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "created_at": "2020-01-23T09:43:35Z",
            "diff_hunk": "@@ -7,98 +7,90 @@ static PyObject* __Pyx_FetchCommonTypeFromSpec(PyType_Spec *spec, PyObject *base\n \n /////////////// FetchCommonType ///////////////\n \n-static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {\n-    PyObject* fake_module;\n-    PyTypeObject* cached_type = NULL;\n-\n-    fake_module = PyImport_AddModule((char*) \"_cython_\" CYTHON_ABI);\n+static PyObject *fetch_fake_module(void) {\n+    PyObject *fake_module = PyImport_AddModule((char*) \"_cython_\" CYTHON_ABI);\n     if (!fake_module) return NULL;\n     Py_INCREF(fake_module);\n+    return fake_module;\n+}\n+\n+static void verify_cached_type(PyObject *cached_type,\n+                               const char *name,\n+                               Py_ssize_t basicsize,\n+                               Py_ssize_t expected_basicsize) {\n+    if (!PyType_Check(cached_type)) {\n+        PyErr_Format(PyExc_TypeError,\n+            \"Shared Cython type %.200s is not a type object\", name);\n+    }\n+    if (basicsize != expected_basicsize) {\n+        PyErr_Format(PyExc_TypeError,\n+            \"Shared Cython type %.200s has the wrong size, try recompiling\",\n+            name);\n+    }\n+}\n+\n+static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {\n+    PyObject* fake_module;\n+    PyTypeObject *cached_type = NULL;\n \n+    fake_module = fetch_fake_module();\n+    if (!fake_module) goto done;\n     cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);\n     if (cached_type) {\n-        if (!PyType_Check((PyObject*)cached_type)) {\n-            PyErr_Format(PyExc_TypeError,\n-                \"Shared Cython type %.200s is not a type object\",\n-                type->tp_name);\n-            goto bad;\n-        }\n-        if (cached_type->tp_basicsize != type->tp_basicsize) {\n-            PyErr_Format(PyExc_TypeError,\n-                \"Shared Cython type %.200s has the wrong size, try recompiling\",\n-                type->tp_name);\n-            goto bad;\n-        }\n-    } else {\n-        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;\n-        PyErr_Clear();\n-        if (PyType_Ready(type) < 0) goto bad;\n-        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)\n-            goto bad;\n-        Py_INCREF(type);\n-        cached_type = type;\n+        verify_cached_type(\n+            (PyObject *)cached_type,\n+            type->tp_name,\n+            cached_type->tp_basicsize,\n+            type->tp_basicsize);\n+        goto done;\n     }\n \n+    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto done;\n+    PyErr_Clear();\n+    if (PyType_Ready(type) < 0) goto done;\n+    if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject *)type) < 0)\n+        goto done;\n+    Py_INCREF(type);\n+    cached_type = type;\n+\n done:\n-    Py_DECREF(fake_module);\n     // NOTE: always returns owned reference, or NULL on error\n-    return cached_type;\n-\n-bad:\n+    Py_XDECREF(fake_module);\n     Py_XDECREF(cached_type);\n-    cached_type = NULL;\n-    goto done;\n+    return cached_type;",
            "html_url": "https://github.com/cython/cython/pull/3311#discussion_r370016606",
            "id": 370016606,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAxNjYwNg==",
            "original_commit_id": "1d51fdad5ac5f33c274ad4ea6b568a026556b543",
            "original_position": 85,
            "path": "Cython/Utility/CommonStructures.c",
            "position": null,
            "pull_request_review_id": 347157192,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3311",
            "updated_at": "2020-01-23T09:49:12Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/370016606",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3311/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6fdbf7d8edc6970283987b3077574afc6e3beded/comments",
            "commit": {
                "author": {
                    "date": "2020-01-12T22:32:17Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-12T22:32:17Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Add more limited api support",
                "tree": {
                    "sha": "861cb9c2c0c0919eb202779bdc704e9a95f3fb9d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/861cb9c2c0c0919eb202779bdc704e9a95f3fb9d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6fdbf7d8edc6970283987b3077574afc6e3beded",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/6fdbf7d8edc6970283987b3077574afc6e3beded",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjZmZGJmN2Q4ZWRjNjk3MDI4Mzk4N2IzMDc3NTc0YWZjNmUzYmVkZWQ=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/84473513e5f709089cf201ac950350b359dc2453",
                    "sha": "84473513e5f709089cf201ac950350b359dc2453",
                    "url": "https://api.github.com/repos/cython/cython/commits/84473513e5f709089cf201ac950350b359dc2453"
                }
            ],
            "sha": "6fdbf7d8edc6970283987b3077574afc6e3beded",
            "url": "https://api.github.com/repos/cython/cython/commits/6fdbf7d8edc6970283987b3077574afc6e3beded"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/0ed35bf19875fc9d9a3489f83ea8a822979049a2/comments",
            "commit": {
                "author": {
                    "date": "2020-01-13T02:36:14Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-13T02:36:14Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Fix Fused Functions",
                "tree": {
                    "sha": "a6eefbde837a7ac12763f3846f7a5ee4fe18883e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a6eefbde837a7ac12763f3846f7a5ee4fe18883e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/0ed35bf19875fc9d9a3489f83ea8a822979049a2",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/0ed35bf19875fc9d9a3489f83ea8a822979049a2",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjBlZDM1YmYxOTg3NWZjOWQ5YTM0ODlmODNlYThhODIyOTc5MDQ5YTI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6fdbf7d8edc6970283987b3077574afc6e3beded",
                    "sha": "6fdbf7d8edc6970283987b3077574afc6e3beded",
                    "url": "https://api.github.com/repos/cython/cython/commits/6fdbf7d8edc6970283987b3077574afc6e3beded"
                }
            ],
            "sha": "0ed35bf19875fc9d9a3489f83ea8a822979049a2",
            "url": "https://api.github.com/repos/cython/cython/commits/0ed35bf19875fc9d9a3489f83ea8a822979049a2"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/0b2d263320bb41e0eedcf6f574d9465c0d7b981b/comments",
            "commit": {
                "author": {
                    "date": "2020-01-13T02:57:59Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-13T02:57:59Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Fixed profile",
                "tree": {
                    "sha": "4651caabc13e921cd09aafc6c1d63231b6eae62a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/4651caabc13e921cd09aafc6c1d63231b6eae62a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/0b2d263320bb41e0eedcf6f574d9465c0d7b981b",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/0b2d263320bb41e0eedcf6f574d9465c0d7b981b",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjBiMmQyNjMzMjBiYjQxZTBlZWRjZjZmNTc0ZDk0NjVjMGQ3Yjk4MWI=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/0ed35bf19875fc9d9a3489f83ea8a822979049a2",
                    "sha": "0ed35bf19875fc9d9a3489f83ea8a822979049a2",
                    "url": "https://api.github.com/repos/cython/cython/commits/0ed35bf19875fc9d9a3489f83ea8a822979049a2"
                }
            ],
            "sha": "0b2d263320bb41e0eedcf6f574d9465c0d7b981b",
            "url": "https://api.github.com/repos/cython/cython/commits/0b2d263320bb41e0eedcf6f574d9465c0d7b981b"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/39829b7047bc1dc26bd2de387ddd4e99a97571b3/comments",
            "commit": {
                "author": {
                    "date": "2020-01-13T23:49:44Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-13T23:49:44Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Error handling",
                "tree": {
                    "sha": "8a1a16f6c940bb5b233a5bcdee585101dea9269f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8a1a16f6c940bb5b233a5bcdee585101dea9269f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/39829b7047bc1dc26bd2de387ddd4e99a97571b3",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/39829b7047bc1dc26bd2de387ddd4e99a97571b3",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjM5ODI5YjcwNDdiYzFkYzI2YmQyZGUzODdkZGQ0ZTk5YTk3NTcxYjM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/0b2d263320bb41e0eedcf6f574d9465c0d7b981b",
                    "sha": "0b2d263320bb41e0eedcf6f574d9465c0d7b981b",
                    "url": "https://api.github.com/repos/cython/cython/commits/0b2d263320bb41e0eedcf6f574d9465c0d7b981b"
                }
            ],
            "sha": "39829b7047bc1dc26bd2de387ddd4e99a97571b3",
            "url": "https://api.github.com/repos/cython/cython/commits/39829b7047bc1dc26bd2de387ddd4e99a97571b3"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1ede59cfa3700fd547c5b343c266819b962464f7/comments",
            "commit": {
                "author": {
                    "date": "2020-01-15T07:18:54Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-15T07:18:54Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Fix build errors",
                "tree": {
                    "sha": "1c159d0d03bc2e904026aa24f57deb37ffb279b9",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1c159d0d03bc2e904026aa24f57deb37ffb279b9"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1ede59cfa3700fd547c5b343c266819b962464f7",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/1ede59cfa3700fd547c5b343c266819b962464f7",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjFlZGU1OWNmYTM3MDBmZDU0N2M1YjM0M2MyNjY4MTliOTYyNDY0Zjc=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/39829b7047bc1dc26bd2de387ddd4e99a97571b3",
                    "sha": "39829b7047bc1dc26bd2de387ddd4e99a97571b3",
                    "url": "https://api.github.com/repos/cython/cython/commits/39829b7047bc1dc26bd2de387ddd4e99a97571b3"
                }
            ],
            "sha": "1ede59cfa3700fd547c5b343c266819b962464f7",
            "url": "https://api.github.com/repos/cython/cython/commits/1ede59cfa3700fd547c5b343c266819b962464f7"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1d51fdad5ac5f33c274ad4ea6b568a026556b543/comments",
            "commit": {
                "author": {
                    "date": "2020-01-21T22:44:17Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-21T22:44:17Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Addressed Comments",
                "tree": {
                    "sha": "3297f658c9d88e41335d28e9ba39aa658b61c6f4",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/3297f658c9d88e41335d28e9ba39aa658b61c6f4"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1d51fdad5ac5f33c274ad4ea6b568a026556b543",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/1d51fdad5ac5f33c274ad4ea6b568a026556b543",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjFkNTFmZGFkNWFjNWYzM2MyNzRhZDRlYTZiNTY4YTAyNjU1NmI1NDM=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1ede59cfa3700fd547c5b343c266819b962464f7",
                    "sha": "1ede59cfa3700fd547c5b343c266819b962464f7",
                    "url": "https://api.github.com/repos/cython/cython/commits/1ede59cfa3700fd547c5b343c266819b962464f7"
                }
            ],
            "sha": "1d51fdad5ac5f33c274ad4ea6b568a026556b543",
            "url": "https://api.github.com/repos/cython/cython/commits/1d51fdad5ac5f33c274ad4ea6b568a026556b543"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/607ef0947e11d16d378074dbbcf25d4c22825a50/comments",
            "commit": {
                "author": {
                    "date": "2020-01-21T23:41:25Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-21T23:41:25Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Use PyModule_GetDict",
                "tree": {
                    "sha": "071658dab3547533c6691d20bbbbbd33621652b7",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/071658dab3547533c6691d20bbbbbd33621652b7"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/607ef0947e11d16d378074dbbcf25d4c22825a50",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/607ef0947e11d16d378074dbbcf25d4c22825a50",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjYwN2VmMDk0N2UxMWQxNmQzNzgwNzRkYmJjZjI1ZDRjMjI4MjVhNTA=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1d51fdad5ac5f33c274ad4ea6b568a026556b543",
                    "sha": "1d51fdad5ac5f33c274ad4ea6b568a026556b543",
                    "url": "https://api.github.com/repos/cython/cython/commits/1d51fdad5ac5f33c274ad4ea6b568a026556b543"
                }
            ],
            "sha": "607ef0947e11d16d378074dbbcf25d4c22825a50",
            "url": "https://api.github.com/repos/cython/cython/commits/607ef0947e11d16d378074dbbcf25d4c22825a50"
        },
        {
            "author": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5f266790487aabe3e0195a954c1f88a6137ba1d8/comments",
            "commit": {
                "author": {
                    "date": "2020-01-22T00:02:46Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-01-22T00:02:46Z",
                    "email": "eelizondo@fb.com",
                    "name": "Eddie Elizondo"
                },
                "message": "Simplify __Pyx_Globals",
                "tree": {
                    "sha": "5d31b12b4f225e17ad18de40f3c68c0ea83aa1f0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/5d31b12b4f225e17ad18de40f3c68c0ea83aa1f0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5f266790487aabe3e0195a954c1f88a6137ba1d8",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "html_url": "https://github.com/cython/cython/commit/5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "node_id": "MDY6Q29tbWl0MjE0Mjk4NTAwOjVmMjY2NzkwNDg3YWFiZTNlMDE5NWE5NTRjMWY4OGE2MTM3YmExZDg=",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/607ef0947e11d16d378074dbbcf25d4c22825a50",
                    "sha": "607ef0947e11d16d378074dbbcf25d4c22825a50",
                    "url": "https://api.github.com/repos/cython/cython/commits/607ef0947e11d16d378074dbbcf25d4c22825a50"
                }
            ],
            "sha": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
            "url": "https://api.github.com/repos/cython/cython/commits/5f266790487aabe3e0195a954c1f88a6137ba1d8"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3311/commits",
    "created_at": "2020-01-14T00:01:33Z",
    "diff_url": "https://github.com/cython/cython/pull/3311.diff",
    "head": {
        "label": "eduardo-elizondo:limited-api2",
        "ref": "limited-api2",
        "repo": {
            "archive_url": "https://api.github.com/repos/eduardo-elizondo/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/eduardo-elizondo/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/eduardo-elizondo/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/eduardo-elizondo/cython/branches{/branch}",
            "clone_url": "https://github.com/eduardo-elizondo/cython.git",
            "collaborators_url": "https://api.github.com/repos/eduardo-elizondo/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/eduardo-elizondo/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/eduardo-elizondo/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/eduardo-elizondo/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/eduardo-elizondo/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/eduardo-elizondo/cython/contributors",
            "created_at": "2019-10-10T22:43:54Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/eduardo-elizondo/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/eduardo-elizondo/cython/downloads",
            "events_url": "https://api.github.com/repos/eduardo-elizondo/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/eduardo-elizondo/cython/forks",
            "full_name": "eduardo-elizondo/cython",
            "git_commits_url": "https://api.github.com/repos/eduardo-elizondo/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/eduardo-elizondo/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/eduardo-elizondo/cython/git/tags{/sha}",
            "git_url": "git://github.com/eduardo-elizondo/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/eduardo-elizondo/cython/hooks",
            "html_url": "https://github.com/eduardo-elizondo/cython",
            "id": 214298500,
            "issue_comment_url": "https://api.github.com/repos/eduardo-elizondo/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/eduardo-elizondo/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/eduardo-elizondo/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/eduardo-elizondo/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/eduardo-elizondo/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/eduardo-elizondo/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/eduardo-elizondo/cython/merges",
            "milestones_url": "https://api.github.com/repos/eduardo-elizondo/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkyMTQyOTg1MDA=",
            "notifications_url": "https://api.github.com/repos/eduardo-elizondo/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
                "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
                "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
                "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
                "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eduardo-elizondo",
                "id": 5315899,
                "login": "eduardo-elizondo",
                "node_id": "MDQ6VXNlcjUzMTU4OTk=",
                "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
                "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
                "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eduardo-elizondo"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/eduardo-elizondo/cython/pulls{/number}",
            "pushed_at": "2020-01-22T00:02:58Z",
            "releases_url": "https://api.github.com/repos/eduardo-elizondo/cython/releases{/id}",
            "size": 56242,
            "ssh_url": "git@github.com:eduardo-elizondo/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/eduardo-elizondo/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/eduardo-elizondo/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/eduardo-elizondo/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/eduardo-elizondo/cython/subscription",
            "svn_url": "https://github.com/eduardo-elizondo/cython",
            "tags_url": "https://api.github.com/repos/eduardo-elizondo/cython/tags",
            "teams_url": "https://api.github.com/repos/eduardo-elizondo/cython/teams",
            "trees_url": "https://api.github.com/repos/eduardo-elizondo/cython/git/trees{/sha}",
            "updated_at": "2020-01-12T22:01:54Z",
            "url": "https://api.github.com/repos/eduardo-elizondo/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "5f266790487aabe3e0195a954c1f88a6137ba1d8",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
            "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
            "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
            "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
            "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/eduardo-elizondo",
            "id": 5315899,
            "login": "eduardo-elizondo",
            "node_id": "MDQ6VXNlcjUzMTU4OTk=",
            "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
            "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
            "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/eduardo-elizondo"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3311",
    "id": 362380597,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3311",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "41a7ca03c9a07eb0e8ba885c79972c3011b77d8e",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYyMzgwNTk3",
    "number": 3311,
    "patch_url": "https://github.com/cython/cython/pull/3311.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3311/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/5f266790487aabe3e0195a954c1f88a6137ba1d8",
    "title": "Expand LIMITED_API support",
    "updated_at": "2020-01-23T09:49:12Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3311",
    "user": {
        "avatar_url": "https://avatars3.githubusercontent.com/u/5315899?v=4",
        "events_url": "https://api.github.com/users/eduardo-elizondo/events{/privacy}",
        "followers_url": "https://api.github.com/users/eduardo-elizondo/followers",
        "following_url": "https://api.github.com/users/eduardo-elizondo/following{/other_user}",
        "gists_url": "https://api.github.com/users/eduardo-elizondo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/eduardo-elizondo",
        "id": 5315899,
        "login": "eduardo-elizondo",
        "node_id": "MDQ6VXNlcjUzMTU4OTk=",
        "organizations_url": "https://api.github.com/users/eduardo-elizondo/orgs",
        "received_events_url": "https://api.github.com/users/eduardo-elizondo/received_events",
        "repos_url": "https://api.github.com/users/eduardo-elizondo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/eduardo-elizondo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eduardo-elizondo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/eduardo-elizondo"
    }
}