{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/3377/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3377/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/3377"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/3377"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3377/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/3377"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/26b673610717fb5dba159fe54c56013d1c624dba"
        }
    },
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "base": {
        "label": "cython:master",
        "ref": "master",
        "repo": {
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 991,
            "forks_count": 991,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 810,
            "open_issues_count": 810,
            "owner": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2020-03-04T15:25:11Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 56394,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 4934,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2020-03-04T14:19:58Z",
            "url": "https://api.github.com/repos/cython/cython",
            "watchers": 4934,
            "watchers_count": 4934
        },
        "sha": "61d606ace1bfad42a55586de57f96ab4f1ede5b2",
        "user": {
            "avatar_url": "https://avatars3.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "This PR allows types to define their own `generate_incref` (etc) type functions, with `put_incref` (etc) deferring to those functions. The idea being that mixed C struct/Python types can be created more easily and make use of the existing code for generating reference counting.\r\n\r\nRight now this PR defines the such functions for `PyObject` and `MemoryviewSlice`. It's really designed to support https://github.com/cython/cython/pull/3346, so should probably be reviewed before that PR.\r\n\r\nThis PR does shouldn't change anything user-visible (hopefully) - it's just a change in structure to make other changes easier.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385028801"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385028801"
                }
            },
            "author_association": "MEMBER",
            "body": "`True`? Shouldn't this depend on `self.type.is_memoryviewslice`?\r\n\r\nAnd, in fact, is this flag really needed? Shouldn't `make_owned_reference()` etc. just know what to do from the type that they are asked to operate on?",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T10:10:25Z",
            "diff_hunk": "@@ -791,13 +788,9 @@ def generate_disposal_code(self, code):\n                 self.generate_subexpr_disposal_code(code)\n                 self.free_subexpr_temps(code)\n             if self.result():\n-                if self.type.is_pyobject:\n-                    code.put_decref_clear(self.result(), self.ctype())\n-                elif self.type.is_memoryviewslice:\n-                    code.put_xdecref_memoryviewslice(\n-                            self.result(), have_gil=not self.in_nogil_context)\n-                    code.putln(\"%s.memview = NULL;\" % self.result())\n-                    code.putln(\"%s.data = NULL;\" % self.result())\n+                code.put_decref_clear(self.result(), self.ctype(),\n+                                        do_for_memoryviewslice=True,",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385028801",
            "id": 385028801,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAyODgwMQ==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 41,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385028801",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385029576"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385029576"
                }
            },
            "author_association": "MEMBER",
            "body": "The duplication here smells like there should be a function/method/property for this.",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T10:11:48Z",
            "diff_hunk": "@@ -849,6 +842,41 @@ def free_subexpr_temps(self, code):\n     def generate_function_definitions(self, env, code):\n         pass\n \n+    # ----Generation of small bits of reference counting --\n+\n+    def generate_gotref(self, code):\n+        type = self.type\n+        if self.is_temp and self.type.is_pyobject:\n+            # temp py_objects are always just py_object_type\n+            # not an special type\n+            type = PyrexTypes.py_object_type",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385029576",
            "id": 385029576,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAyOTU3Ng==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 57,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385029576",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385031784"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385031784"
                }
            },
            "author_association": "MEMBER",
            "body": "Could you avoid passing around `**kwargs` here? These methods are so exposed and widely used that it's better to have it visible what keyword arguments they accept, and to have them well selected by method. Most of these methods accept just one (if at all).",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T10:16:04Z",
            "diff_hunk": "@@ -2060,131 +2062,94 @@ def entry_as_pyobject(self, entry):\n         type = entry.type\n         if (not entry.is_self_arg and not entry.type.is_complete()\n             or entry.type.is_extension_type):\n-            return \"(PyObject *)\" + entry.cname\n+            return \"(PyObject *)\" + entry.cname # FIXME need to implement this\n         else:\n             return entry.cname\n \n     def as_pyobject(self, cname, type):\n         from .PyrexTypes import py_object_type, typecast\n         return typecast(py_object_type, type, cname)\n \n-    def put_gotref(self, cname):\n-        self.putln(\"__Pyx_GOTREF(%s);\" % cname)\n+    def put_gotref(self, cname, type):\n+        self.putln(type.generate_gotref(cname))\n \n-    def put_giveref(self, cname):\n-        self.putln(\"__Pyx_GIVEREF(%s);\" % cname)\n+    def put_giveref(self, cname, type):\n+        self.putln(type.generate_giveref(cname))\n \n-    def put_xgiveref(self, cname):\n-        self.putln(\"__Pyx_XGIVEREF(%s);\" % cname)\n+    def put_xgiveref(self, cname, type):\n+        self.putln(type.generate_xgiveref(cname))\n \n-    def put_xgotref(self, cname):\n-        self.putln(\"__Pyx_XGOTREF(%s);\" % cname)\n+    def put_xgotref(self, cname, type):\n+        self.putln(type.generate_xgotref(cname))\n \n-    def put_incref(self, cname, type, nanny=True):\n-        if nanny:\n-            self.putln(\"__Pyx_INCREF(%s);\" % self.as_pyobject(cname, type))\n-        else:\n-            self.putln(\"Py_INCREF(%s);\" % self.as_pyobject(cname, type))\n+    def put_incref(self, cname, type, **kwds):",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385031784",
            "id": 385031784,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAzMTc4NA==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 47,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385031784",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385032210"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385032210"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T10:16:52Z",
            "diff_hunk": "@@ -849,6 +842,41 @@ def free_subexpr_temps(self, code):\n     def generate_function_definitions(self, env, code):\n         pass\n \n+    # ----Generation of small bits of reference counting --\n+\n+    def generate_gotref(self, code):\n+        type = self.type\n+        if self.is_temp and self.type.is_pyobject:\n+            # temp py_objects are always just py_object_type\n+            # not an special type\n+            type = PyrexTypes.py_object_type\n+        code.put_gotref(self.result(), type)\n+\n+    def generate_xgotref(self, code):\n+        type = self.type\n+        if self.is_temp and self.type.is_pyobject:\n+            # temp py_objects are always just py_object_type\n+            # not an special type\n+            type = PyrexTypes.py_object_type\n+        code.put_xgotref(self.result(), type)\n+\n+    def generate_giveref(self, code):\n+        type = self.type\n+        if self.is_temp and self.type.is_pyobject:\n+            # temp py_objects are always just py_object_type\n+            # not an special type\n+            type = PyrexTypes.py_object_type\n+        code.put_giveref(self.result(), type)\n+\n+    def generate_xgiveref(self, code):\n+        type = self.type\n+        if self.is_temp and self.type.is_pyobject:\n+            # temp py_objects are always just py_object_type\n+            # not an special type\n+            type = PyrexTypes.py_object_type\n+        code.put_xgiveref(self.result(), type)\n+\n+",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385032210",
            "id": 385032210,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAzMjIxMA==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 84,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": 91,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385032210",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385033443"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385033443"
                }
            },
            "author_association": "MEMBER",
            "body": "This can't always be `True`, can it?",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T10:19:13Z",
            "diff_hunk": "@@ -2472,21 +2500,20 @@ def generate_deletion_code(self, code, ignore_nonexisting=False):\n                 if self.cf_maybe_null and not ignore_nonexisting:\n                     code.put_error_if_unbound(self.pos, self.entry)\n \n-                if self.entry.type.is_pyobject:\n-                    if self.entry.in_closure:\n-                        # generator\n-                        if ignore_nonexisting and self.cf_maybe_null:\n-                            code.put_xgotref(self.result())\n-                        else:\n-                            code.put_gotref(self.result())\n+                if self.entry.in_closure:\n+                    # generator\n                     if ignore_nonexisting and self.cf_maybe_null:\n-                        code.put_xdecref(self.result(), self.ctype())\n+                        self.generate_xgotref(code)\n                     else:\n-                        code.put_decref(self.result(), self.ctype())\n-                    code.putln('%s = NULL;' % self.result())\n+                        self.generate_gotref(code)\n+                if ignore_nonexisting and self.cf_maybe_null:\n+                    code.put_xdecref_clear(self.result(), self.ctype(),\n+                                        do_for_memoryviewslice=True,",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385033443",
            "id": 385033443,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAzMzQ0Mw==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 178,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385033443",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385038379"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385038379"
                }
            },
            "author_association": "MEMBER",
            "body": "This kind of code doesn't seem to appear anywhere else, but should there be a `put_var_decref_set()`, just for consistency?",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T10:28:05Z",
            "diff_hunk": "@@ -8241,7 +8268,7 @@ def _generate_vars_cleanup(self, code, py_entries):\n         for entry in py_entries:\n             if entry.is_cglobal:\n                 code.put_var_gotref(entry)\n-                code.put_decref_set(entry.cname, \"Py_None\")\n+                code.put_decref_set(entry.cname, entry.type, \"Py_None\")",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385038379",
            "id": 385038379,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAzODM3OQ==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 633,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385038379",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385039104"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385039104"
                }
            },
            "author_association": "MEMBER",
            "body": "`self.generate_decref_set()` seems useful in a couple of places.",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T10:29:17Z",
            "diff_hunk": "@@ -8888,11 +8915,11 @@ def generate_result_code(self, code):\n             code.putln('%s = __Pyx_PyObject_CallMethod0(%s, %s); %s' % (\n                 self.result(), dict_result, keys_cname,\n                 code.error_goto_if_null(self.result(), self.pos)))\n-            code.put_gotref(self.py_result())\n+            self.generate_gotref(code)\n             code.putln(\"if (unlikely(!PyList_Check(%s))) {\" % self.result())\n-            code.put_decref_set(self.result(), \"PySequence_List(%s)\" % self.result())\n+            code.put_decref_set(self.result(), self.type, \"PySequence_List(%s)\" % self.result())",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385039104",
            "id": 385039104,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAzOTEwNA==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 708,
            "path": "Cython/Compiler/ExprNodes.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385039104",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385045784"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385045784"
                }
            },
            "author_association": "MEMBER",
            "body": "Well, but it was distinguished before, so it used to work. We shouldn't degrade the generated code just for this.",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T10:41:33Z",
            "diff_hunk": "@@ -2072,26 +2072,33 @@ def generate_function_definitions(self, env, code):\n             if not entry.used or entry.in_closure:\n                 continue\n \n-            if entry.type.is_memoryviewslice:\n-                code.put_xdecref_memoryviewslice(entry.cname, have_gil=not lenv.nogil)\n-            elif entry.type.is_pyobject:\n-                if not entry.is_arg or len(entry.cf_assignments) > 1:\n-                    if entry.xdecref_cleanup:\n-                        code.put_var_xdecref(entry)\n-                    else:\n-                        code.put_var_decref(entry)\n+            if entry.type.is_pyobject:\n+                #if not (not entry.is_arg or len(entry.cf_assignments) > 1):\n+                if entry.is_arg and len(entry.cf_assignments) <= 1:\n+                    continue\n+            code.put_var_xdecref(entry,\n+                                 do_for_memoryviewslice=True,\n+                                 have_gil=not lenv.nogil)\n+                        # TODO ideally should pick based on\n+                        # entry.xdecref_cleanup but this doesn't seem to be set reliably\n+                        # for regular variables",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385045784",
            "id": 385045784,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA0NTc4NA==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 68,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385045784",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385046470"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385046470"
                }
            },
            "author_association": "MEMBER",
            "body": "A historical comment is worse than none.",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T10:42:49Z",
            "diff_hunk": "@@ -2072,26 +2072,33 @@ def generate_function_definitions(self, env, code):\n             if not entry.used or entry.in_closure:\n                 continue\n \n-            if entry.type.is_memoryviewslice:\n-                code.put_xdecref_memoryviewslice(entry.cname, have_gil=not lenv.nogil)\n-            elif entry.type.is_pyobject:\n-                if not entry.is_arg or len(entry.cf_assignments) > 1:\n-                    if entry.xdecref_cleanup:\n-                        code.put_var_xdecref(entry)\n-                    else:\n-                        code.put_var_decref(entry)\n+            if entry.type.is_pyobject:\n+                #if not (not entry.is_arg or len(entry.cf_assignments) > 1):",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385046470",
            "id": 385046470,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA0NjQ3MA==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 60,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385046470",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385050673"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385050673"
                }
            },
            "author_association": "MEMBER",
            "body": "I think a property on `Entry` for this `len() > 1` check would be cool: `entry.cf_is_reassigned`",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T10:50:26Z",
            "diff_hunk": "@@ -2072,26 +2072,33 @@ def generate_function_definitions(self, env, code):\n             if not entry.used or entry.in_closure:\n                 continue\n \n-            if entry.type.is_memoryviewslice:\n-                code.put_xdecref_memoryviewslice(entry.cname, have_gil=not lenv.nogil)\n-            elif entry.type.is_pyobject:\n-                if not entry.is_arg or len(entry.cf_assignments) > 1:\n-                    if entry.xdecref_cleanup:\n-                        code.put_var_xdecref(entry)\n-                    else:\n-                        code.put_var_decref(entry)\n+            if entry.type.is_pyobject:\n+                #if not (not entry.is_arg or len(entry.cf_assignments) > 1):\n+                if entry.is_arg and len(entry.cf_assignments) <= 1:\n+                    continue\n+            code.put_var_xdecref(entry,\n+                                 do_for_memoryviewslice=True,\n+                                 have_gil=not lenv.nogil)\n+                        # TODO ideally should pick based on\n+                        # entry.xdecref_cleanup but this doesn't seem to be set reliably\n+                        # for regular variables\n \n         # Decref any increfed args\n         for entry in lenv.arg_entries:\n-            if entry.type.is_pyobject:\n-                if (acquire_gil or len(entry.cf_assignments) > 1) and not entry.in_closure:\n-                    code.put_var_decref(entry)\n-            elif (entry.type.is_memoryviewslice and\n-                  (not is_cdef or len(entry.cf_assignments) > 1)):\n+            if entry.type.is_memoryviewslice:\n                 # decref slices of def functions and acquired slices from cdef\n                 # functions, but not borrowed slices from cdef functions.\n-                code.put_xdecref_memoryviewslice(entry.cname,\n-                                                 have_gil=not lenv.nogil)\n+                if is_cdef and len(entry.cf_assignments) <= 1:",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385050673",
            "id": 385050673,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA1MDY3Mw==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 82,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385050673",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385055399"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385055399"
                }
            },
            "author_association": "MEMBER",
            "body": "?",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T10:59:20Z",
            "diff_hunk": "@@ -3409,7 +3415,7 @@ def generate_function_definitions(self, env, code):\n         code.put_label(code.return_label)\n         for entry in lenv.var_entries:\n             if entry.is_arg and entry.type.is_pyobject:\n-                code.put_var_decref(entry)\n+                code.put_var_xdecref(entry)",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385055399",
            "id": 385055399,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA1NTM5OQ==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 138,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385055399",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385057546"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385057546"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think we use `get_…` elsewhere. It's just `error_goto_if()`, for example.",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T11:03:54Z",
            "diff_hunk": "@@ -2060,131 +2062,94 @@ def entry_as_pyobject(self, entry):\n         type = entry.type\n         if (not entry.is_self_arg and not entry.type.is_complete()\n             or entry.type.is_extension_type):\n-            return \"(PyObject *)\" + entry.cname\n+            return \"(PyObject *)\" + entry.cname # FIXME need to implement this\n         else:\n             return entry.cname\n \n     def as_pyobject(self, cname, type):\n         from .PyrexTypes import py_object_type, typecast\n         return typecast(py_object_type, type, cname)\n \n-    def put_gotref(self, cname):\n-        self.putln(\"__Pyx_GOTREF(%s);\" % cname)\n+    def put_gotref(self, cname, type):\n+        self.putln(type.generate_gotref(cname))\n \n-    def put_giveref(self, cname):\n-        self.putln(\"__Pyx_GIVEREF(%s);\" % cname)\n+    def put_giveref(self, cname, type):\n+        self.putln(type.generate_giveref(cname))\n \n-    def put_xgiveref(self, cname):\n-        self.putln(\"__Pyx_XGIVEREF(%s);\" % cname)\n+    def put_xgiveref(self, cname, type):\n+        self.putln(type.generate_xgiveref(cname))\n \n-    def put_xgotref(self, cname):\n-        self.putln(\"__Pyx_XGOTREF(%s);\" % cname)\n+    def put_xgotref(self, cname, type):\n+        self.putln(type.generate_xgotref(cname))\n \n-    def put_incref(self, cname, type, nanny=True):\n-        if nanny:\n-            self.putln(\"__Pyx_INCREF(%s);\" % self.as_pyobject(cname, type))\n-        else:\n-            self.putln(\"Py_INCREF(%s);\" % self.as_pyobject(cname, type))\n+    def put_incref(self, cname, type, **kwds):\n+        # Note: original put_Memslice_Incref/Decref also added in some utility code\n+        # this is unnecessary since the relevant utility code is loaded anyway if a memoryview is used\n+        # and so has been removed. However, it's potentially a feature that might be useful here\n+        self.putln(type.generate_incref(cname, **kwds))\n \n-    def put_decref(self, cname, type, nanny=True):\n-        self._put_decref(cname, type, nanny, null_check=False, clear=False)\n+    def put_xincref(self, cname, type, **kwds):\n+        self.putln(type.generate_xincref(cname, **kwds))\n \n-    def put_var_gotref(self, entry):\n-        if entry.type.is_pyobject:\n-            self.putln(\"__Pyx_GOTREF(%s);\" % self.entry_as_pyobject(entry))\n+    def put_decref(self, cname, type, **kwds):\n+        self.putln(type.generate_decref(cname, **kwds))\n \n-    def put_var_giveref(self, entry):\n-        if entry.type.is_pyobject:\n-            self.putln(\"__Pyx_GIVEREF(%s);\" % self.entry_as_pyobject(entry))\n+    def put_decref_clear(self, cname, type, **kwds):\n+        self.putln(type.generate_decref_clear(cname, **kwds))\n \n-    def put_var_xgotref(self, entry):\n-        if entry.type.is_pyobject:\n-            self.putln(\"__Pyx_XGOTREF(%s);\" % self.entry_as_pyobject(entry))\n+    def put_xdecref(self, cname, type, **kwds):\n+        self.putln(type.generate_xdecref(cname, **kwds))\n \n-    def put_var_xgiveref(self, entry):\n-        if entry.type.is_pyobject:\n-            self.putln(\"__Pyx_XGIVEREF(%s);\" % self.entry_as_pyobject(entry))\n+    def put_xdecref_clear(self, cname, type, **kwds):\n+        self.putln(type.generate_xdecref_clear(cname, **kwds))\n \n-    def put_var_incref(self, entry, nanny=True):\n-        if entry.type.is_pyobject:\n-            if nanny:\n-                self.putln(\"__Pyx_INCREF(%s);\" % self.entry_as_pyobject(entry))\n-            else:\n-                self.putln(\"Py_INCREF(%s);\" % self.entry_as_pyobject(entry))\n+    def put_decref_set(self, cname, type, rhs_cname):\n+        self.putln(type.generate_decref_set(cname, rhs_cname))\n+\n+    def put_xdecref_set(self, cname, type, rhs_cname):\n+        self.putln(type.generate_xdecref_set(cname, rhs_cname))\n+\n+    def put_var_gotref(self, entry):\n+        self.put_gotref(entry.cname, entry.type)\n \n-    def put_var_xincref(self, entry):\n-        if entry.type.is_pyobject:\n-            self.putln(\"__Pyx_XINCREF(%s);\" % self.entry_as_pyobject(entry))\n+    def put_var_giveref(self, entry):\n+        self.put_giveref(entry.cname, entry.type)\n \n-    def put_decref_clear(self, cname, type, nanny=True, clear_before_decref=False):\n-        self._put_decref(cname, type, nanny, null_check=False,\n-                         clear=True, clear_before_decref=clear_before_decref)\n+    def put_var_xgotref(self, entry):\n+        self.put_xgotref(entry.cname, entry.type)\n \n-    def put_xdecref(self, cname, type, nanny=True, have_gil=True):\n-        self._put_decref(cname, type, nanny, null_check=True,\n-                         have_gil=have_gil, clear=False)\n+    def put_var_xgiveref(self, entry):\n+        self.put_xgiveref(entry.cname, entry.type)\n \n-    def put_xdecref_clear(self, cname, type, nanny=True, clear_before_decref=False):\n-        self._put_decref(cname, type, nanny, null_check=True,\n-                         clear=True, clear_before_decref=clear_before_decref)\n+    def put_var_incref(self, entry, **kwds):\n+        self.put_incref(entry.cname, entry.type, **kwds)\n \n-    def _put_decref(self, cname, type, nanny=True, null_check=False,\n-                    have_gil=True, clear=False, clear_before_decref=False):\n-        if type.is_memoryviewslice:\n-            self.put_xdecref_memoryviewslice(cname, have_gil=have_gil)\n-            return\n+    def put_var_xincref(self, entry, **kwds):\n+        self.put_xincref(entry.cname, entry.type, **kwds)\n \n-        prefix = '__Pyx' if nanny else 'Py'\n-        X = 'X' if null_check else ''\n+    def put_var_decref(self, entry, **kwds):\n+        self.putln(entry.type.generate_decref(entry.cname, **kwds))\n \n-        if clear:\n-            if clear_before_decref:\n-                if not nanny:\n-                    X = ''  # CPython doesn't have a Py_XCLEAR()\n-                self.putln(\"%s_%sCLEAR(%s);\" % (prefix, X, cname))\n-            else:\n-                self.putln(\"%s_%sDECREF(%s); %s = 0;\" % (\n-                    prefix, X, self.as_pyobject(cname, type), cname))\n-        else:\n-            self.putln(\"%s_%sDECREF(%s);\" % (\n-                prefix, X, self.as_pyobject(cname, type)))\n+    def put_var_xdecref(self, entry, **kwds):\n+        self.putln(entry.type.generate_xdecref(entry.cname, **kwds))\n \n-    def put_decref_set(self, cname, rhs_cname):\n-        self.putln(\"__Pyx_DECREF_SET(%s, %s);\" % (cname, rhs_cname))\n+    def put_var_decref_clear(self, entry, **kwds):\n+        self._put_var_decref_clear(entry, null_check=False, **kwds)\n \n-    def put_xdecref_set(self, cname, rhs_cname):\n-        self.putln(\"__Pyx_XDECREF_SET(%s, %s);\" % (cname, rhs_cname))\n+    def put_var_xdecref_clear(self, entry, **kwds):\n+        self._put_var_decref_clear(entry, null_check=True, **kwds)\n \n-    def put_var_decref(self, entry):\n-        if entry.type.is_pyobject:\n-            self.putln(\"__Pyx_XDECREF(%s);\" % self.entry_as_pyobject(entry))\n+    def _put_var_decref_clear(self, entry, null_check, **kwds):\n+        f = getattr(entry.type, \"generate_%sdecref_clear\" %\n+                                (null_check and \"x\" or \"\"))\n+        self.putln(f(entry.cname,\n+                     clear_before_decref=entry.in_closure,\n+                     **kwds))\n \n-    def put_var_xdecref(self, entry, nanny=True):\n-        if entry.type.is_pyobject:\n-            if nanny:\n-                self.putln(\"__Pyx_XDECREF(%s);\" % self.entry_as_pyobject(entry))\n-            else:\n-                self.putln(\"Py_XDECREF(%s);\" % self.entry_as_pyobject(entry))\n-\n-    def put_var_decref_clear(self, entry):\n-        self._put_var_decref_clear(entry, null_check=False)\n-\n-    def put_var_xdecref_clear(self, entry):\n-        self._put_var_decref_clear(entry, null_check=True)\n-\n-    def _put_var_decref_clear(self, entry, null_check):\n-        if entry.type.is_pyobject:\n-            if entry.in_closure:\n-                # reset before DECREF to make sure closure state is\n-                # consistent during call to DECREF()\n-                self.putln(\"__Pyx_%sCLEAR(%s);\" % (\n-                    null_check and 'X' or '',\n-                    entry.cname))\n-            else:\n-                self.putln(\"__Pyx_%sDECREF(%s); %s = 0;\" % (\n-                    null_check and 'X' or '',\n-                    self.entry_as_pyobject(entry),\n-                    entry.cname))\n+    def get_var_nullcheck(self, entry):\n+        # we usually want to put this into an is statement so it's a get,\n+        # not a put",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385057546",
            "id": 385057546,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA1NzU0Ng==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 196,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385057546",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385060159"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385060159"
                }
            },
            "author_association": "MEMBER",
            "body": "`needs_refcounting`. `xxxref` is a very confusing and unclear name.",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T11:09:46Z",
            "diff_hunk": "@@ -193,6 +193,8 @@ class PyrexType(BaseType):\n     #  is_pythran_expr       boolean     Is Pythran expr\n     #  is_numpy_buffer       boolean     Is Numpy array buffer\n     #  has_attributes        boolean     Has C dot-selectable attributes\n+    #  needs_xxxref          boolean     Needs code to be generated similar to incref/gotref/decref.",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385060159",
            "id": 385060159,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2MDE1OQ==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 4,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385060159",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385063420"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385063420"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        code.put_gotref(temp_result, py_object_type)\r\n```",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T11:16:18Z",
            "diff_hunk": "@@ -6040,7 +6045,7 @@ def generate_execution_code(self, code):\n             arg.free_temps(code)\n         code.putln(\n             code.error_goto_if_null(temp_result, self.pos))\n-        code.put_gotref(temp_result)\n+        code.put_gotref(temp_result, PyrexTypes.py_object_type)",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385063420",
            "id": 385063420,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2MzQyMA==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 291,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385063420",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385066420"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385066420"
                }
            },
            "author_association": "MEMBER",
            "body": "There is a slight difference here. `put_xdecref_clear()` generates code to first clear the variable and then decref it. I think that should often be ok, since the C compiler should generally be able to optimise away the strict ordering for local variables. But it's something that has been bothering me for a while since this difference isn't always explicit in the generator code. Not to be solved right now, but to keep in mind.",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T11:23:08Z",
            "diff_hunk": "@@ -8729,11 +8734,7 @@ def cleanup_temps(self, code):\n         if self.is_parallel and not self.is_nested_prange:\n             code.putln(\"/* Clean up any temporaries */\")\n             for temp, type in sorted(self.temps):\n-                if type.is_memoryviewslice:\n-                    code.put_xdecref_memoryviewslice(temp, have_gil=False)\n-                elif type.is_pyobject:\n-                    code.put_xdecref(temp, type)\n-                    code.putln(\"%s = NULL;\" % temp)\n+                code.put_xdecref_clear(temp, type, do_for_memoryviewslice=True, have_gil=False)",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385066420",
            "id": 385066420,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2NjQyMA==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 418,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385066420",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385067085"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385067085"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        return \"%s = %s\" % (cname, rhs_cname)\r\n```",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T11:24:30Z",
            "diff_hunk": "@@ -334,6 +337,29 @@ def _assign_from_py_code(self, source_code, result_code, error_pos, code,\n             convert_call,\n             code.error_goto_if(error_condition or self.error_condition(result_code), error_pos))\n \n+    def _generate_xxxref_placeholder(self, *ignored_args, **ignored_kwds):\n+        if self.needs_xxxref:\n+            raise NotImplementedError(\"Ref-counting operation not yet implemented for type %s\" %\n+                                      self)\n+        else:\n+            return None\n+\n+    def _generate_xxxref_set_placeholder(self, cname, rhs_cname, *ignored_args, **ignored_kwds):\n+        if self.needs_xxxref:\n+            raise NotImplementedError(\"Ref-counting operation not yet implemented for type %s\" %\n+                                      self)\n+        else:\n+            return \"%s = %s\" % (cname, rhs_cname)",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385067085",
            "id": 385067085,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2NzA4NQ==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 33,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385067085",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385068929"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385068929"
                }
            },
            "author_association": "MEMBER",
            "body": "Erm, no. I don't want `None` to accidentally appear in the generated source code anywhere. Maybe an empty string instead?\r\n```suggestion\r\n        return ''\r\n```",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T11:28:49Z",
            "diff_hunk": "@@ -334,6 +337,29 @@ def _assign_from_py_code(self, source_code, result_code, error_pos, code,\n             convert_call,\n             code.error_goto_if(error_condition or self.error_condition(result_code), error_pos))\n \n+    def _generate_xxxref_placeholder(self, *ignored_args, **ignored_kwds):\n+        if self.needs_xxxref:\n+            raise NotImplementedError(\"Ref-counting operation not yet implemented for type %s\" %\n+                                      self)\n+        else:\n+            return None",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385068929",
            "id": 385068929,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA2ODkyOQ==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 26,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385068929",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385070546"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385070546"
                }
            },
            "author_association": "MEMBER",
            "body": "This feels unrelated and doesn't seem to be doing the right thing. I would expect it to be used in a condition, and then, what is the correct fallback there? A condition needs _something_ to check.\r\nI would just remove this method.",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T11:32:32Z",
            "diff_hunk": "@@ -334,6 +337,29 @@ def _assign_from_py_code(self, source_code, result_code, error_pos, code,\n             convert_call,\n             code.error_goto_if(error_condition or self.error_condition(result_code), error_pos))\n \n+    def _generate_xxxref_placeholder(self, *ignored_args, **ignored_kwds):\n+        if self.needs_xxxref:\n+            raise NotImplementedError(\"Ref-counting operation not yet implemented for type %s\" %\n+                                      self)\n+        else:\n+            return None\n+\n+    def _generate_xxxref_set_placeholder(self, cname, rhs_cname, *ignored_args, **ignored_kwds):\n+        if self.needs_xxxref:\n+            raise NotImplementedError(\"Ref-counting operation not yet implemented for type %s\" %\n+                                      self)\n+        else:\n+            return \"%s = %s\" % (cname, rhs_cname)\n+\n+    generate_incref = generate_xincref = generate_decref = generate_xdecref \\\n+        = generate_decref_clear = generate_xdecref_clear \\\n+        = generate_gotref = generate_xgotref = generate_giveref = generate_xgiveref \\\n+        = generate_nullcheck \\",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385070546",
            "id": 385070546,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3MDU0Ng==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 38,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385070546",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385071400"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385071400"
                }
            },
            "author_association": "MEMBER",
            "body": "Swallowing all `**kwargs` always has a code smell because it tends to hide bugs and typos.",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T11:34:24Z",
            "diff_hunk": "@@ -1039,6 +1069,34 @@ def specialize(self, values):\n     def cast_code(self, expr_code):\n         return expr_code\n \n+    # incref paths are often special-cased for memoryviews. Therefore pass an explicit\n+    # flag to make it clear that memoryviewslices should be included. This provides a path\n+    # to making the code more generic, without requiring it to be all done at once\n+    def generate_incref(self, cname, do_for_memoryviewslice=False, **kwds):\n+        if do_for_memoryviewslice:\n+            # FIXME use_utility_code\n+            return \"__PYX_INC_MEMVIEW(&%s, %d);\" % (cname, int(kwds['have_gil']))\n+\n+    # decref however did look to always apply for memoryview slices\n+    # with \"have_gil\" set to True by default\n+    def generate_xdecref(self, cname, have_gil=True, **kwds):\n+        # FIXME use_utility_code\n+        return \"__PYX_XDEC_MEMVIEW(&%s, %d);\" % (cname, int(have_gil))",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385071400",
            "id": 385071400,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3MTQwMA==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 74,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385071400",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385072088"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385072088"
                }
            },
            "author_association": "MEMBER",
            "body": "Again: `None` is dangerous here. Better use an empty string.\r\nAlso, not accepting `**kwargs` here is at least inconsistent. Why not use the existing dummy methods instead of a new lambda?",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T11:35:59Z",
            "diff_hunk": "@@ -1039,6 +1069,34 @@ def specialize(self, values):\n     def cast_code(self, expr_code):\n         return expr_code\n \n+    # incref paths are often special-cased for memoryviews. Therefore pass an explicit\n+    # flag to make it clear that memoryviewslices should be included. This provides a path\n+    # to making the code more generic, without requiring it to be all done at once\n+    def generate_incref(self, cname, do_for_memoryviewslice=False, **kwds):\n+        if do_for_memoryviewslice:\n+            # FIXME use_utility_code\n+            return \"__PYX_INC_MEMVIEW(&%s, %d);\" % (cname, int(kwds['have_gil']))\n+\n+    # decref however did look to always apply for memoryview slices\n+    # with \"have_gil\" set to True by default\n+    def generate_xdecref(self, cname, have_gil=True, **kwds):\n+        # FIXME use_utility_code\n+        return \"__PYX_XDEC_MEMVIEW(&%s, %d);\" % (cname, int(have_gil))\n+\n+    def generate_xdecref_clear(self, cname, clear_before_decref=False,\n+                                do_for_memoryviewslice=False, **kwds):\n+        return \"%s %s.memview = NULL; %s.data = NULL;\" % (\n+                self.generate_xdecref(cname, do_for_memoryviewslice=True, **kwds),\n+                cname, cname)\n+\n+    def generate_decref_clear(self, cname, **kwds):\n+        # memoryviews don't currently distinguish between xdecref and decref\n+        return self.generate_xdecref_clear(cname, **kwds)\n+\n+    # memoryviews don't participate in giveref/gotref\n+    generate_gotref = generate_xgotref = generate_xgiveref = generate_giveref = lambda *args: None",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385072088",
            "id": 385072088,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3MjA4OA==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 87,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": 87,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385072088",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385074348"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385074348"
                }
            },
            "author_association": "MEMBER",
            "body": "No need for parentheses around the whole expressions in both cases.",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T11:41:00Z",
            "diff_hunk": "@@ -1189,6 +1248,74 @@ def global_init_code(self, entry, code):\n     def check_for_null_code(self, cname):\n         return cname\n \n+    def generate_incref(self, cname, nanny=True, **ignored_kwds):\n+        if nanny:\n+            return \"__Pyx_INCREF(%s);\" % self.as_pyobject(cname)\n+        else:\n+            return \"Py_INCREF(%s);\" % self.as_pyobject(cname)\n+\n+    def generate_xincref(self, cname, nanny=True, **ignored_kwds):\n+        if nanny:\n+            return \"__Pyx_XINCREF(%s);\" % self.as_pyobject(cname)\n+        else:\n+            return \"Py_XINCREF(%s);\" % self.as_pyobject(cname)\n+\n+    def generate_decref(self, cname, nanny=True, **ignored_kwds):\n+        return self._generate_decref(cname, nanny, null_check=False, clear=False)\n+\n+    def generate_xdecref(self, cname, nanny=True, **ignored_kwds):\n+        # in this (and other) PyObjectType functions, have_gil is being\n+        # passed to provide a common interface with MemoryviewSlice. It is\n+        # treated as \"True\" and not checked\n+        return self._generate_decref(cname, nanny, null_check=True,\n+                         clear=False)\n+\n+    def generate_decref_clear(self, cname, clear_before_decref=False, nanny=True, **ignored_kwds):\n+        return self._generate_decref(cname, nanny, null_check=False,\n+                         clear=True, clear_before_decref=clear_before_decref)\n+\n+    def generate_xdecref_clear(self, cname, clear_before_decref=False, nanny=True, **ignored_kwds):\n+        return self._generate_decref(cname, nanny, null_check=True,\n+                         clear=True, clear_before_decref=clear_before_decref)\n+\n+    def generate_gotref(self, cname):\n+        return \"__Pyx_GOTREF(%s);\" % self.as_pyobject(cname)\n+\n+    def generate_xgotref(self, cname):\n+        return \"__Pyx_XGOTREF(%s);\" % self.as_pyobject(cname)\n+\n+    def generate_giveref(self, cname):\n+        return \"__Pyx_GIVEREF(%s);\" % self.as_pyobject(cname)\n+\n+    def generate_xgiveref(self, cname):\n+        return \"__Pyx_XGIVEREF(%s);\" % self.as_pyobject(cname)\n+\n+    def generate_decref_set(self, cname, rhs_cname):\n+        return \"__Pyx_DECREF_SET(%s, %s);\" % (cname, rhs_cname)\n+\n+    def generate_xdecref_set(self, cname, rhs_cname):\n+        return \"__Pyx_XDECREF_SET(%s, %s);\" % (cname, rhs_cname)\n+\n+    def _generate_decref(self, cname, nanny, null_check=False,\n+                    clear=False, clear_before_decref=False):\n+        prefix = '__Pyx' if nanny else 'Py'\n+        X = 'X' if null_check else ''\n+\n+        if clear:\n+            if clear_before_decref:\n+                if not nanny:\n+                    X = ''  # CPython doesn't have a Py_XCLEAR()\n+                return \"%s_%sCLEAR(%s);\" % (prefix, X, cname)\n+            else:\n+                return (\"%s_%sDECREF(%s); %s = 0;\" % (\n+                    prefix, X, self.as_pyobject(cname), cname))\n+        else:\n+            return (\"%s_%sDECREF(%s);\" % (\n+                prefix, X, self.as_pyobject(cname)))",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385074348",
            "id": 385074348,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3NDM0OA==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 168,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385074348",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385075587"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385075587"
                }
            },
            "author_association": "MEMBER",
            "body": "In all of these methods, the `putln()` call should be avoided if the type decides that there is nothing to write.",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T11:43:45Z",
            "diff_hunk": "@@ -2060,131 +2062,94 @@ def entry_as_pyobject(self, entry):\n         type = entry.type\n         if (not entry.is_self_arg and not entry.type.is_complete()\n             or entry.type.is_extension_type):\n-            return \"(PyObject *)\" + entry.cname\n+            return \"(PyObject *)\" + entry.cname # FIXME need to implement this\n         else:\n             return entry.cname\n \n     def as_pyobject(self, cname, type):\n         from .PyrexTypes import py_object_type, typecast\n         return typecast(py_object_type, type, cname)\n \n-    def put_gotref(self, cname):\n-        self.putln(\"__Pyx_GOTREF(%s);\" % cname)\n+    def put_gotref(self, cname, type):\n+        self.putln(type.generate_gotref(cname))",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385075587",
            "id": 385075587,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3NTU4Nw==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 25,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385075587",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385076428"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385076428"
                }
            },
            "author_association": "MEMBER",
            "body": "Please spell this out to allow code indexers to find the use of these two methods.",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T11:45:47Z",
            "diff_hunk": "@@ -2060,131 +2062,94 @@ def entry_as_pyobject(self, entry):\n         type = entry.type\n         if (not entry.is_self_arg and not entry.type.is_complete()\n             or entry.type.is_extension_type):\n-            return \"(PyObject *)\" + entry.cname\n+            return \"(PyObject *)\" + entry.cname # FIXME need to implement this\n         else:\n             return entry.cname\n \n     def as_pyobject(self, cname, type):\n         from .PyrexTypes import py_object_type, typecast\n         return typecast(py_object_type, type, cname)\n \n-    def put_gotref(self, cname):\n-        self.putln(\"__Pyx_GOTREF(%s);\" % cname)\n+    def put_gotref(self, cname, type):\n+        self.putln(type.generate_gotref(cname))\n \n-    def put_giveref(self, cname):\n-        self.putln(\"__Pyx_GIVEREF(%s);\" % cname)\n+    def put_giveref(self, cname, type):\n+        self.putln(type.generate_giveref(cname))\n \n-    def put_xgiveref(self, cname):\n-        self.putln(\"__Pyx_XGIVEREF(%s);\" % cname)\n+    def put_xgiveref(self, cname, type):\n+        self.putln(type.generate_xgiveref(cname))\n \n-    def put_xgotref(self, cname):\n-        self.putln(\"__Pyx_XGOTREF(%s);\" % cname)\n+    def put_xgotref(self, cname, type):\n+        self.putln(type.generate_xgotref(cname))\n \n-    def put_incref(self, cname, type, nanny=True):\n-        if nanny:\n-            self.putln(\"__Pyx_INCREF(%s);\" % self.as_pyobject(cname, type))\n-        else:\n-            self.putln(\"Py_INCREF(%s);\" % self.as_pyobject(cname, type))\n+    def put_incref(self, cname, type, **kwds):\n+        # Note: original put_Memslice_Incref/Decref also added in some utility code\n+        # this is unnecessary since the relevant utility code is loaded anyway if a memoryview is used\n+        # and so has been removed. However, it's potentially a feature that might be useful here\n+        self.putln(type.generate_incref(cname, **kwds))\n \n-    def put_decref(self, cname, type, nanny=True):\n-        self._put_decref(cname, type, nanny, null_check=False, clear=False)\n+    def put_xincref(self, cname, type, **kwds):\n+        self.putln(type.generate_xincref(cname, **kwds))\n \n-    def put_var_gotref(self, entry):\n-        if entry.type.is_pyobject:\n-            self.putln(\"__Pyx_GOTREF(%s);\" % self.entry_as_pyobject(entry))\n+    def put_decref(self, cname, type, **kwds):\n+        self.putln(type.generate_decref(cname, **kwds))\n \n-    def put_var_giveref(self, entry):\n-        if entry.type.is_pyobject:\n-            self.putln(\"__Pyx_GIVEREF(%s);\" % self.entry_as_pyobject(entry))\n+    def put_decref_clear(self, cname, type, **kwds):\n+        self.putln(type.generate_decref_clear(cname, **kwds))\n \n-    def put_var_xgotref(self, entry):\n-        if entry.type.is_pyobject:\n-            self.putln(\"__Pyx_XGOTREF(%s);\" % self.entry_as_pyobject(entry))\n+    def put_xdecref(self, cname, type, **kwds):\n+        self.putln(type.generate_xdecref(cname, **kwds))\n \n-    def put_var_xgiveref(self, entry):\n-        if entry.type.is_pyobject:\n-            self.putln(\"__Pyx_XGIVEREF(%s);\" % self.entry_as_pyobject(entry))\n+    def put_xdecref_clear(self, cname, type, **kwds):\n+        self.putln(type.generate_xdecref_clear(cname, **kwds))\n \n-    def put_var_incref(self, entry, nanny=True):\n-        if entry.type.is_pyobject:\n-            if nanny:\n-                self.putln(\"__Pyx_INCREF(%s);\" % self.entry_as_pyobject(entry))\n-            else:\n-                self.putln(\"Py_INCREF(%s);\" % self.entry_as_pyobject(entry))\n+    def put_decref_set(self, cname, type, rhs_cname):\n+        self.putln(type.generate_decref_set(cname, rhs_cname))\n+\n+    def put_xdecref_set(self, cname, type, rhs_cname):\n+        self.putln(type.generate_xdecref_set(cname, rhs_cname))\n+\n+    def put_var_gotref(self, entry):\n+        self.put_gotref(entry.cname, entry.type)\n \n-    def put_var_xincref(self, entry):\n-        if entry.type.is_pyobject:\n-            self.putln(\"__Pyx_XINCREF(%s);\" % self.entry_as_pyobject(entry))\n+    def put_var_giveref(self, entry):\n+        self.put_giveref(entry.cname, entry.type)\n \n-    def put_decref_clear(self, cname, type, nanny=True, clear_before_decref=False):\n-        self._put_decref(cname, type, nanny, null_check=False,\n-                         clear=True, clear_before_decref=clear_before_decref)\n+    def put_var_xgotref(self, entry):\n+        self.put_xgotref(entry.cname, entry.type)\n \n-    def put_xdecref(self, cname, type, nanny=True, have_gil=True):\n-        self._put_decref(cname, type, nanny, null_check=True,\n-                         have_gil=have_gil, clear=False)\n+    def put_var_xgiveref(self, entry):\n+        self.put_xgiveref(entry.cname, entry.type)\n \n-    def put_xdecref_clear(self, cname, type, nanny=True, clear_before_decref=False):\n-        self._put_decref(cname, type, nanny, null_check=True,\n-                         clear=True, clear_before_decref=clear_before_decref)\n+    def put_var_incref(self, entry, **kwds):\n+        self.put_incref(entry.cname, entry.type, **kwds)\n \n-    def _put_decref(self, cname, type, nanny=True, null_check=False,\n-                    have_gil=True, clear=False, clear_before_decref=False):\n-        if type.is_memoryviewslice:\n-            self.put_xdecref_memoryviewslice(cname, have_gil=have_gil)\n-            return\n+    def put_var_xincref(self, entry, **kwds):\n+        self.put_xincref(entry.cname, entry.type, **kwds)\n \n-        prefix = '__Pyx' if nanny else 'Py'\n-        X = 'X' if null_check else ''\n+    def put_var_decref(self, entry, **kwds):\n+        self.putln(entry.type.generate_decref(entry.cname, **kwds))\n \n-        if clear:\n-            if clear_before_decref:\n-                if not nanny:\n-                    X = ''  # CPython doesn't have a Py_XCLEAR()\n-                self.putln(\"%s_%sCLEAR(%s);\" % (prefix, X, cname))\n-            else:\n-                self.putln(\"%s_%sDECREF(%s); %s = 0;\" % (\n-                    prefix, X, self.as_pyobject(cname, type), cname))\n-        else:\n-            self.putln(\"%s_%sDECREF(%s);\" % (\n-                prefix, X, self.as_pyobject(cname, type)))\n+    def put_var_xdecref(self, entry, **kwds):\n+        self.putln(entry.type.generate_xdecref(entry.cname, **kwds))\n \n-    def put_decref_set(self, cname, rhs_cname):\n-        self.putln(\"__Pyx_DECREF_SET(%s, %s);\" % (cname, rhs_cname))\n+    def put_var_decref_clear(self, entry, **kwds):\n+        self._put_var_decref_clear(entry, null_check=False, **kwds)\n \n-    def put_xdecref_set(self, cname, rhs_cname):\n-        self.putln(\"__Pyx_XDECREF_SET(%s, %s);\" % (cname, rhs_cname))\n+    def put_var_xdecref_clear(self, entry, **kwds):\n+        self._put_var_decref_clear(entry, null_check=True, **kwds)\n \n-    def put_var_decref(self, entry):\n-        if entry.type.is_pyobject:\n-            self.putln(\"__Pyx_XDECREF(%s);\" % self.entry_as_pyobject(entry))\n+    def _put_var_decref_clear(self, entry, null_check, **kwds):\n+        f = getattr(entry.type, \"generate_%sdecref_clear\" %\n+                                (null_check and \"x\" or \"\"))",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385076428",
            "id": 385076428,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3NjQyOA==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 163,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 365556508,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385076428",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385083983"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385083983"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I did add an `if None` right at the start of `putln` to try to account for this because otherwise all these functions ended up with duplicated boilerplate (which we're definitely trying to avoid in other place).\r\n\r\nMaybe it'd be better to leave `putln` as it was, but add `putln_if_not_none` and then use that instead?",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T12:02:45Z",
            "diff_hunk": "@@ -2060,131 +2062,94 @@ def entry_as_pyobject(self, entry):\n         type = entry.type\n         if (not entry.is_self_arg and not entry.type.is_complete()\n             or entry.type.is_extension_type):\n-            return \"(PyObject *)\" + entry.cname\n+            return \"(PyObject *)\" + entry.cname # FIXME need to implement this\n         else:\n             return entry.cname\n \n     def as_pyobject(self, cname, type):\n         from .PyrexTypes import py_object_type, typecast\n         return typecast(py_object_type, type, cname)\n \n-    def put_gotref(self, cname):\n-        self.putln(\"__Pyx_GOTREF(%s);\" % cname)\n+    def put_gotref(self, cname, type):\n+        self.putln(type.generate_gotref(cname))",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385083983",
            "id": 385083983,
            "in_reply_to_id": 385075587,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA4Mzk4Mw==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 25,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 365625875,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385083983",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385104600"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385104600"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "https://github.com/cython/cython/blob/0d272a51338467a5918911bed068d96bd28ad425/Cython/Compiler/Code.py#L2176-L2179\r\n\r\nThe current `put_var_decref` - which has been there for 9 years - has generated `xdecref` whether you called `put_var_decref` or `put_var_xdecref`. So this change doesn't actually degrade the generated code. ~If definitely crashes sometimes if you try to use `xdecref_cleanup`.~ _Edit_ Fixed now\r\n\r\nI'll can try to probe a bit deeper and see if there's something obvious missed that'll get the desired behaviour though. But if I succeed it'll be an improvement, rather than restoring the status quo.",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T12:48:14Z",
            "diff_hunk": "@@ -2072,26 +2072,33 @@ def generate_function_definitions(self, env, code):\n             if not entry.used or entry.in_closure:\n                 continue\n \n-            if entry.type.is_memoryviewslice:\n-                code.put_xdecref_memoryviewslice(entry.cname, have_gil=not lenv.nogil)\n-            elif entry.type.is_pyobject:\n-                if not entry.is_arg or len(entry.cf_assignments) > 1:\n-                    if entry.xdecref_cleanup:\n-                        code.put_var_xdecref(entry)\n-                    else:\n-                        code.put_var_decref(entry)\n+            if entry.type.is_pyobject:\n+                #if not (not entry.is_arg or len(entry.cf_assignments) > 1):\n+                if entry.is_arg and len(entry.cf_assignments) <= 1:\n+                    continue\n+            code.put_var_xdecref(entry,\n+                                 do_for_memoryviewslice=True,\n+                                 have_gil=not lenv.nogil)\n+                        # TODO ideally should pick based on\n+                        # entry.xdecref_cleanup but this doesn't seem to be set reliably\n+                        # for regular variables",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385104600",
            "id": 385104600,
            "in_reply_to_id": 385045784,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEwNDYwMA==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 68,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 365652160,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385104600",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385107880"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385107880"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I think this is because `put_var_decref` historically always put `xdecref`. Again, I'll see if a bit more intelligence can be applied here, but this isn't a degradation.\r\n\r\n_Edit:_ Just needed an if.xdecref_cleanup check to work correctly....",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T12:55:11Z",
            "diff_hunk": "@@ -3409,7 +3415,7 @@ def generate_function_definitions(self, env, code):\n         code.put_label(code.return_label)\n         for entry in lenv.var_entries:\n             if entry.is_arg and entry.type.is_pyobject:\n-                code.put_var_decref(entry)\n+                code.put_var_xdecref(entry)",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385107880",
            "id": 385107880,
            "in_reply_to_id": 385055399,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEwNzg4MA==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 138,
            "path": "Cython/Compiler/Nodes.py",
            "position": null,
            "pull_request_review_id": 365656353,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385107880",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385109479"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385109479"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The existing dummy methods are designed to fail for types with `needs_refcounting` (since if they end up called then they really should exist). I've switched it to an empty string though.",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T12:58:31Z",
            "diff_hunk": "@@ -1039,6 +1069,34 @@ def specialize(self, values):\n     def cast_code(self, expr_code):\n         return expr_code\n \n+    # incref paths are often special-cased for memoryviews. Therefore pass an explicit\n+    # flag to make it clear that memoryviewslices should be included. This provides a path\n+    # to making the code more generic, without requiring it to be all done at once\n+    def generate_incref(self, cname, do_for_memoryviewslice=False, **kwds):\n+        if do_for_memoryviewslice:\n+            # FIXME use_utility_code\n+            return \"__PYX_INC_MEMVIEW(&%s, %d);\" % (cname, int(kwds['have_gil']))\n+\n+    # decref however did look to always apply for memoryview slices\n+    # with \"have_gil\" set to True by default\n+    def generate_xdecref(self, cname, have_gil=True, **kwds):\n+        # FIXME use_utility_code\n+        return \"__PYX_XDEC_MEMVIEW(&%s, %d);\" % (cname, int(have_gil))\n+\n+    def generate_xdecref_clear(self, cname, clear_before_decref=False,\n+                                do_for_memoryviewslice=False, **kwds):\n+        return \"%s %s.memview = NULL; %s.data = NULL;\" % (\n+                self.generate_xdecref(cname, do_for_memoryviewslice=True, **kwds),\n+                cname, cname)\n+\n+    def generate_decref_clear(self, cname, **kwds):\n+        # memoryviews don't currently distinguish between xdecref and decref\n+        return self.generate_xdecref_clear(cname, **kwds)\n+\n+    # memoryviews don't participate in giveref/gotref\n+    generate_gotref = generate_xgotref = generate_xgiveref = generate_giveref = lambda *args: None",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385109479",
            "id": 385109479,
            "in_reply_to_id": 385072088,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEwOTQ3OQ==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 87,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": 87,
            "pull_request_review_id": 365658433,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385109479",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385114670"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385114670"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This was added because it was useful for the fastcall args change - the types could fail to generate correctly and there was a way of testing it. The fallback should be `1` (i.e. basic types can never fail to generate) but right now it isn't.\r\n\r\nI think I'd like to keep something like this, but I'll see if I can make it clearer.",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T13:09:09Z",
            "diff_hunk": "@@ -334,6 +337,29 @@ def _assign_from_py_code(self, source_code, result_code, error_pos, code,\n             convert_call,\n             code.error_goto_if(error_condition or self.error_condition(result_code), error_pos))\n \n+    def _generate_xxxref_placeholder(self, *ignored_args, **ignored_kwds):\n+        if self.needs_xxxref:\n+            raise NotImplementedError(\"Ref-counting operation not yet implemented for type %s\" %\n+                                      self)\n+        else:\n+            return None\n+\n+    def _generate_xxxref_set_placeholder(self, cname, rhs_cname, *ignored_args, **ignored_kwds):\n+        if self.needs_xxxref:\n+            raise NotImplementedError(\"Ref-counting operation not yet implemented for type %s\" %\n+                                      self)\n+        else:\n+            return \"%s = %s\" % (cname, rhs_cname)\n+\n+    generate_incref = generate_xincref = generate_decref = generate_xdecref \\\n+        = generate_decref_clear = generate_xdecref_clear \\\n+        = generate_gotref = generate_xgotref = generate_giveref = generate_xgiveref \\\n+        = generate_nullcheck \\",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385114670",
            "id": 385114670,
            "in_reply_to_id": 385070546,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTExNDY3MA==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 38,
            "path": "Cython/Compiler/PyrexTypes.py",
            "position": null,
            "pull_request_review_id": 365665283,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385114670",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/cython/cython/pull/3377#discussion_r385128950"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/3377"
                },
                "self": {
                    "href": "https://api.github.com/repos/cython/cython/pulls/comments/385128950"
                }
            },
            "author_association": "MEMBER",
            "body": "There is a use case for `putln(\"\")` to write a blank line, and I wouldn't rely on the result of `type.generate_*()` to always end up directly in `putln()`. So `putln()` (or a similar method) is the wrong place to handle this.\r\n\r\nWhy not pass the `code` writer on into the type method, and let that decide completely (by calling `putln()` and returning nothing) about how and what to generate? That has the advantage that the actual code generation is more encapsulated between code writer and type, so that it can be moved around between the two without caring about other usages elsewhere. Currently, anyone could call `type.generate_*()` and mishandle the result by accident.",
            "commit_id": "26b673610717fb5dba159fe54c56013d1c624dba",
            "created_at": "2020-02-27T13:36:13Z",
            "diff_hunk": "@@ -2060,131 +2062,94 @@ def entry_as_pyobject(self, entry):\n         type = entry.type\n         if (not entry.is_self_arg and not entry.type.is_complete()\n             or entry.type.is_extension_type):\n-            return \"(PyObject *)\" + entry.cname\n+            return \"(PyObject *)\" + entry.cname # FIXME need to implement this\n         else:\n             return entry.cname\n \n     def as_pyobject(self, cname, type):\n         from .PyrexTypes import py_object_type, typecast\n         return typecast(py_object_type, type, cname)\n \n-    def put_gotref(self, cname):\n-        self.putln(\"__Pyx_GOTREF(%s);\" % cname)\n+    def put_gotref(self, cname, type):\n+        self.putln(type.generate_gotref(cname))",
            "html_url": "https://github.com/cython/cython/pull/3377#discussion_r385128950",
            "id": 385128950,
            "in_reply_to_id": 385075587,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEyODk1MA==",
            "original_commit_id": "a35d7b488841e861334f809d39f73362a5fa051f",
            "original_position": 25,
            "path": "Cython/Compiler/Code.py",
            "position": null,
            "pull_request_review_id": 365683680,
            "pull_request_url": "https://api.github.com/repos/cython/cython/pulls/3377",
            "updated_at": "2020-02-28T08:06:44Z",
            "url": "https://api.github.com/repos/cython/cython/pulls/comments/385128950",
            "user": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/491659?v=4",
                "events_url": "https://api.github.com/users/scoder/events{/privacy}",
                "followers_url": "https://api.github.com/users/scoder/followers",
                "following_url": "https://api.github.com/users/scoder/following{/other_user}",
                "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/scoder",
                "id": 491659,
                "login": "scoder",
                "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
                "organizations_url": "https://api.github.com/users/scoder/orgs",
                "received_events_url": "https://api.github.com/users/scoder/received_events",
                "repos_url": "https://api.github.com/users/scoder/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/scoder"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/3377/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/1a601c80ce0ef9d51514d411c24b7666d1e16554/comments",
            "commit": {
                "author": {
                    "date": "2020-02-11T16:09:00Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T13:34:47Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Moved generation of reference counting into PyrexTypes\n\nThe idea being that struct-types like memoryviews\ncan generate their own reference counting code\nusing a common interface with Python objects",
                "tree": {
                    "sha": "4b83669374985a2eda1b74c2809d8582e21b273c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/4b83669374985a2eda1b74c2809d8582e21b273c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/1a601c80ce0ef9d51514d411c24b7666d1e16554",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/1a601c80ce0ef9d51514d411c24b7666d1e16554",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MWE2MDFjODBjZTBlZjlkNTE1MTRkNDExYzI0Yjc2NjZkMWUxNjU1NA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f875f4c2a1b8e84fc3577a8dbe607d72cbd70131",
                    "sha": "f875f4c2a1b8e84fc3577a8dbe607d72cbd70131",
                    "url": "https://api.github.com/repos/cython/cython/commits/f875f4c2a1b8e84fc3577a8dbe607d72cbd70131"
                }
            ],
            "sha": "1a601c80ce0ef9d51514d411c24b7666d1e16554",
            "url": "https://api.github.com/repos/cython/cython/commits/1a601c80ce0ef9d51514d411c24b7666d1e16554"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/697ae3aef7e53e25ceec79884d10397985b73c78/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T14:06:24Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T14:06:24Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Removed no_pyobject_cast, cleaned up some putvars",
                "tree": {
                    "sha": "8c78e924733a398c6d305dc80e11ca2a5df5af9f",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8c78e924733a398c6d305dc80e11ca2a5df5af9f"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/697ae3aef7e53e25ceec79884d10397985b73c78",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/697ae3aef7e53e25ceec79884d10397985b73c78",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6Njk3YWUzYWVmN2U1M2UyNWNlZWM3OTg4NGQxMDM5Nzk4NWI3M2M3OA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/1a601c80ce0ef9d51514d411c24b7666d1e16554",
                    "sha": "1a601c80ce0ef9d51514d411c24b7666d1e16554",
                    "url": "https://api.github.com/repos/cython/cython/commits/1a601c80ce0ef9d51514d411c24b7666d1e16554"
                }
            ],
            "sha": "697ae3aef7e53e25ceec79884d10397985b73c78",
            "url": "https://api.github.com/repos/cython/cython/commits/697ae3aef7e53e25ceec79884d10397985b73c78"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/09713de3891daee10287f9bdec1cf006ed6085e3/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T14:43:23Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T14:43:23Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Added nullcheck attribute",
                "tree": {
                    "sha": "a4993ecc2c39102b5cdc83e55f2105503f7abbb0",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a4993ecc2c39102b5cdc83e55f2105503f7abbb0"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/09713de3891daee10287f9bdec1cf006ed6085e3",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/09713de3891daee10287f9bdec1cf006ed6085e3",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MDk3MTNkZTM4OTFkYWVlMTAyODdmOWJkZWMxY2YwMDZlZDYwODVlMw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/697ae3aef7e53e25ceec79884d10397985b73c78",
                    "sha": "697ae3aef7e53e25ceec79884d10397985b73c78",
                    "url": "https://api.github.com/repos/cython/cython/commits/697ae3aef7e53e25ceec79884d10397985b73c78"
                }
            ],
            "sha": "09713de3891daee10287f9bdec1cf006ed6085e3",
            "url": "https://api.github.com/repos/cython/cython/commits/09713de3891daee10287f9bdec1cf006ed6085e3"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/555a6064d8f60cc3bd72b7b437cd87e77871d2e3/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T15:16:35Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T18:12:18Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Added xincref",
                "tree": {
                    "sha": "95abac06f24408d9fb56eddb143caac6deca4378",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/95abac06f24408d9fb56eddb143caac6deca4378"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/555a6064d8f60cc3bd72b7b437cd87e77871d2e3",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/555a6064d8f60cc3bd72b7b437cd87e77871d2e3",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NTU1YTYwNjRkOGY2MGNjM2JkNzJiN2I0MzdjZDg3ZTc3ODcxZDJlMw==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/09713de3891daee10287f9bdec1cf006ed6085e3",
                    "sha": "09713de3891daee10287f9bdec1cf006ed6085e3",
                    "url": "https://api.github.com/repos/cython/cython/commits/09713de3891daee10287f9bdec1cf006ed6085e3"
                }
            ],
            "sha": "555a6064d8f60cc3bd72b7b437cd87e77871d2e3",
            "url": "https://api.github.com/repos/cython/cython/commits/555a6064d8f60cc3bd72b7b437cd87e77871d2e3"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/5a3569cda7945327b7aee397a1e3f288ab3bf00f/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T17:52:20Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T18:12:47Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Replace put_exprnode_xxxref with a function on Exprnode\n\nTo prevent Code.py having to know that nodes exist",
                "tree": {
                    "sha": "86bf9722d7b544a1fa380f950926fe5e9e0c5a9d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/86bf9722d7b544a1fa380f950926fe5e9e0c5a9d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/5a3569cda7945327b7aee397a1e3f288ab3bf00f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/5a3569cda7945327b7aee397a1e3f288ab3bf00f",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NWEzNTY5Y2RhNzk0NTMyN2I3YWVlMzk3YTFlM2YyODhhYjNiZjAwZg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/555a6064d8f60cc3bd72b7b437cd87e77871d2e3",
                    "sha": "555a6064d8f60cc3bd72b7b437cd87e77871d2e3",
                    "url": "https://api.github.com/repos/cython/cython/commits/555a6064d8f60cc3bd72b7b437cd87e77871d2e3"
                }
            ],
            "sha": "5a3569cda7945327b7aee397a1e3f288ab3bf00f",
            "url": "https://api.github.com/repos/cython/cython/commits/5a3569cda7945327b7aee397a1e3f288ab3bf00f"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/7e77740e75d5c0c565d9988487cac07e0131bbb5/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T18:13:01Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T18:13:01Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Merge branch 'master' into refcoutingreorg",
                "tree": {
                    "sha": "7702cb9d57c571779d57ca0e260fe1aac4f8630b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/7702cb9d57c571779d57ca0e260fe1aac4f8630b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/7e77740e75d5c0c565d9988487cac07e0131bbb5",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/7e77740e75d5c0c565d9988487cac07e0131bbb5",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6N2U3Nzc0MGU3NWQ1YzBjNTY1ZDk5ODg0ODdjYWMwN2UwMTMxYmJiNQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/5a3569cda7945327b7aee397a1e3f288ab3bf00f",
                    "sha": "5a3569cda7945327b7aee397a1e3f288ab3bf00f",
                    "url": "https://api.github.com/repos/cython/cython/commits/5a3569cda7945327b7aee397a1e3f288ab3bf00f"
                },
                {
                    "html_url": "https://github.com/cython/cython/commit/8e35f7e282f0ec7e5dab48d7c0d31595f2b2c237",
                    "sha": "8e35f7e282f0ec7e5dab48d7c0d31595f2b2c237",
                    "url": "https://api.github.com/repos/cython/cython/commits/8e35f7e282f0ec7e5dab48d7c0d31595f2b2c237"
                }
            ],
            "sha": "7e77740e75d5c0c565d9988487cac07e0131bbb5",
            "url": "https://api.github.com/repos/cython/cython/commits/7e77740e75d5c0c565d9988487cac07e0131bbb5"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/0b9e4117906807c9c7415f7a1bf0b520976c246d/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T18:43:12Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T18:43:12Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed change in master",
                "tree": {
                    "sha": "a802192e4ab9633de1d13edb5df5228abb14df8b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a802192e4ab9633de1d13edb5df5228abb14df8b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/0b9e4117906807c9c7415f7a1bf0b520976c246d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/0b9e4117906807c9c7415f7a1bf0b520976c246d",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MGI5ZTQxMTc5MDY4MDdjOWM3NDE1ZjdhMWJmMGI1MjA5NzZjMjQ2ZA==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/7e77740e75d5c0c565d9988487cac07e0131bbb5",
                    "sha": "7e77740e75d5c0c565d9988487cac07e0131bbb5",
                    "url": "https://api.github.com/repos/cython/cython/commits/7e77740e75d5c0c565d9988487cac07e0131bbb5"
                }
            ],
            "sha": "0b9e4117906807c9c7415f7a1bf0b520976c246d",
            "url": "https://api.github.com/repos/cython/cython/commits/0b9e4117906807c9c7415f7a1bf0b520976c246d"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/f10087e07ec31cb9fe93884c712472ec5c45a0e1/comments",
            "commit": {
                "author": {
                    "date": "2020-02-20T20:03:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-20T20:03:30Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed one refcounting typo",
                "tree": {
                    "sha": "8ca82c880c144de527977f8458db228ec8564527",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/8ca82c880c144de527977f8458db228ec8564527"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/f10087e07ec31cb9fe93884c712472ec5c45a0e1",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/f10087e07ec31cb9fe93884c712472ec5c45a0e1",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZjEwMDg3ZTA3ZWMzMWNiOWZlOTM4ODRjNzEyNDcyZWM1YzQ1YTBlMQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/0b9e4117906807c9c7415f7a1bf0b520976c246d",
                    "sha": "0b9e4117906807c9c7415f7a1bf0b520976c246d",
                    "url": "https://api.github.com/repos/cython/cython/commits/0b9e4117906807c9c7415f7a1bf0b520976c246d"
                }
            ],
            "sha": "f10087e07ec31cb9fe93884c712472ec5c45a0e1",
            "url": "https://api.github.com/repos/cython/cython/commits/f10087e07ec31cb9fe93884c712472ec5c45a0e1"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/9b55888ae3398b99e1468e5e24d6e28754cc3119/comments",
            "commit": {
                "author": {
                    "date": "2020-02-21T16:23:01Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-21T16:23:01Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Removed spurious memoryview giveref",
                "tree": {
                    "sha": "12e20a564f60f3e589dc253366b28cfff62a8e0a",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/12e20a564f60f3e589dc253366b28cfff62a8e0a"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/9b55888ae3398b99e1468e5e24d6e28754cc3119",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/9b55888ae3398b99e1468e5e24d6e28754cc3119",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6OWI1NTg4OGFlMzM5OGI5OWUxNDY4ZTVlMjRkNmUyODc1NGNjMzExOQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/f10087e07ec31cb9fe93884c712472ec5c45a0e1",
                    "sha": "f10087e07ec31cb9fe93884c712472ec5c45a0e1",
                    "url": "https://api.github.com/repos/cython/cython/commits/f10087e07ec31cb9fe93884c712472ec5c45a0e1"
                }
            ],
            "sha": "9b55888ae3398b99e1468e5e24d6e28754cc3119",
            "url": "https://api.github.com/repos/cython/cython/commits/9b55888ae3398b99e1468e5e24d6e28754cc3119"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/6fb285d5326e644a88c67ff35dbe9560f0a332bf/comments",
            "commit": {
                "author": {
                    "date": "2020-02-22T18:30:57Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-22T18:31:55Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Removed memoryview giveref\n\nIt was causing problems because no memoryviews were givereffed in\nthe old code",
                "tree": {
                    "sha": "ce901f164a0cba98ee6892ceb7c2374b2cc0a44c",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/ce901f164a0cba98ee6892ceb7c2374b2cc0a44c"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/6fb285d5326e644a88c67ff35dbe9560f0a332bf",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/6fb285d5326e644a88c67ff35dbe9560f0a332bf",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6NmZiMjg1ZDUzMjZlNjQ0YTg4YzY3ZmYzNWRiZTk1NjBmMGEzMzJiZg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/9b55888ae3398b99e1468e5e24d6e28754cc3119",
                    "sha": "9b55888ae3398b99e1468e5e24d6e28754cc3119",
                    "url": "https://api.github.com/repos/cython/cython/commits/9b55888ae3398b99e1468e5e24d6e28754cc3119"
                }
            ],
            "sha": "6fb285d5326e644a88c67ff35dbe9560f0a332bf",
            "url": "https://api.github.com/repos/cython/cython/commits/6fb285d5326e644a88c67ff35dbe9560f0a332bf"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/d1d1f17f5cb07eeeeb391356348abc90c6f76ac6/comments",
            "commit": {
                "author": {
                    "date": "2020-02-23T09:28:02Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-23T19:01:01Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Made memoryviews more separate\n\nSince they often don't want to be reference counted when\npyobjects do",
                "tree": {
                    "sha": "e99d06540e5b1b2033bb8938c5c86fe629ba02c5",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/e99d06540e5b1b2033bb8938c5c86fe629ba02c5"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/d1d1f17f5cb07eeeeb391356348abc90c6f76ac6",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/d1d1f17f5cb07eeeeb391356348abc90c6f76ac6",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZDFkMWYxN2Y1Y2IwN2VlZWViMzkxMzU2MzQ4YWJjOTBjNmY3NmFjNg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/6fb285d5326e644a88c67ff35dbe9560f0a332bf",
                    "sha": "6fb285d5326e644a88c67ff35dbe9560f0a332bf",
                    "url": "https://api.github.com/repos/cython/cython/commits/6fb285d5326e644a88c67ff35dbe9560f0a332bf"
                }
            ],
            "sha": "d1d1f17f5cb07eeeeb391356348abc90c6f76ac6",
            "url": "https://api.github.com/repos/cython/cython/commits/d1d1f17f5cb07eeeeb391356348abc90c6f76ac6"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/a35d7b488841e861334f809d39f73362a5fa051f/comments",
            "commit": {
                "author": {
                    "date": "2020-02-25T10:27:49Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-25T10:27:49Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Removed autoloading of utility code\n\nWasn't necessary and just seemed like extra work",
                "tree": {
                    "sha": "36d9a1b2f8e145156995e4ec65d5e891933dce9b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/36d9a1b2f8e145156995e4ec65d5e891933dce9b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/a35d7b488841e861334f809d39f73362a5fa051f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/a35d7b488841e861334f809d39f73362a5fa051f",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YTM1ZDdiNDg4ODQxZTg2MTMzNGY4MDlkMzlmNzMzNjJhNWZhMDUxZg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/d1d1f17f5cb07eeeeb391356348abc90c6f76ac6",
                    "sha": "d1d1f17f5cb07eeeeb391356348abc90c6f76ac6",
                    "url": "https://api.github.com/repos/cython/cython/commits/d1d1f17f5cb07eeeeb391356348abc90c6f76ac6"
                }
            ],
            "sha": "a35d7b488841e861334f809d39f73362a5fa051f",
            "url": "https://api.github.com/repos/cython/cython/commits/a35d7b488841e861334f809d39f73362a5fa051f"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/b0ff7907adf7dce73c95ca5b9e64681df4d68759/comments",
            "commit": {
                "author": {
                    "date": "2020-02-27T13:10:40Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-27T13:10:40Z",
                    "email": "noreply@github.com",
                    "name": "GitHub"
                },
                "message": "Apply suggestions from code review\n\nCo-Authored-By: Stefan Behnel <stefan_ml@behnel.de>",
                "tree": {
                    "sha": "d4056ae056753b09c7ed707ced332942e26a85ed",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/d4056ae056753b09c7ed707ced332942e26a85ed"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/b0ff7907adf7dce73c95ca5b9e64681df4d68759",
                "verification": {
                    "payload": "tree d4056ae056753b09c7ed707ced332942e26a85ed\nparent a35d7b488841e861334f809d39f73362a5fa051f\nauthor da-woods <dw-git@d-woods.co.uk> 1582809040 +0000\ncommitter GitHub <noreply@github.com> 1582809040 +0000\n\nApply suggestions from code review\n\nCo-Authored-By: Stefan Behnel <stefan_ml@behnel.de>",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeV7/QCRBK7hj4Ov3rIwAAdHIIAEuBdysiNGMZEihN6aSb4M5O\nw/W5dsWyHC/T1vSubUhG5oehLVIBlNFr/KRpCkacX0qt+P+4uRUvnDfE1YgR4bey\n5+WSWHakF+YZGDoIKlx14NBkBwEaJLNwF7OylhxYg3xfwXhtsSmpcgDME7pDKVLA\nH+iWnvKGuhOvVd/BHh5//6lfqyGzatpmrUtW/ZPhOzFDes1LYP8xfDvVr/VrRTRM\naPQ6X2Qfpc7GqI05kfu2ICLOvpGugOC2D4o0HQxsnQWzs8DB6E5Y4tEZcSn6uhF/\nQKmDw0FGqG9W856vTkgcf1XooV1ecJfAVKI2/mIQm5Bp+1moopPojfo7Dhk3yW4=\n=TvMZ\n-----END PGP SIGNATURE-----\n",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
                "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                "followers_url": "https://api.github.com/users/web-flow/followers",
                "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/web-flow",
                "id": 19864447,
                "login": "web-flow",
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "organizations_url": "https://api.github.com/users/web-flow/orgs",
                "received_events_url": "https://api.github.com/users/web-flow/received_events",
                "repos_url": "https://api.github.com/users/web-flow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/web-flow"
            },
            "html_url": "https://github.com/cython/cython/commit/b0ff7907adf7dce73c95ca5b9e64681df4d68759",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YjBmZjc5MDdhZGY3ZGNlNzNjOTVjYTViOWU2NDY4MWRmNGQ2ODc1OQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/a35d7b488841e861334f809d39f73362a5fa051f",
                    "sha": "a35d7b488841e861334f809d39f73362a5fa051f",
                    "url": "https://api.github.com/repos/cython/cython/commits/a35d7b488841e861334f809d39f73362a5fa051f"
                }
            ],
            "sha": "b0ff7907adf7dce73c95ca5b9e64681df4d68759",
            "url": "https://api.github.com/repos/cython/cython/commits/b0ff7907adf7dce73c95ca5b9e64681df4d68759"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/2935928304a9459d0732f5a42d3fd2b7ab293cd5/comments",
            "commit": {
                "author": {
                    "date": "2020-02-27T13:32:03Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-27T13:32:03Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Simple changes from code review (more to follow)",
                "tree": {
                    "sha": "59a1259fad0a4e71ba392f1381149239c2c5d63b",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/59a1259fad0a4e71ba392f1381149239c2c5d63b"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/2935928304a9459d0732f5a42d3fd2b7ab293cd5",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/2935928304a9459d0732f5a42d3fd2b7ab293cd5",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MjkzNTkyODMwNGE5NDU5ZDA3MzJmNWE0MmQzZmQyYjdhYjI5M2NkNQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/b0ff7907adf7dce73c95ca5b9e64681df4d68759",
                    "sha": "b0ff7907adf7dce73c95ca5b9e64681df4d68759",
                    "url": "https://api.github.com/repos/cython/cython/commits/b0ff7907adf7dce73c95ca5b9e64681df4d68759"
                }
            ],
            "sha": "2935928304a9459d0732f5a42d3fd2b7ab293cd5",
            "url": "https://api.github.com/repos/cython/cython/commits/2935928304a9459d0732f5a42d3fd2b7ab293cd5"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/fcbdf908fabfedc49107f7f478cf45a0ebcaf58f/comments",
            "commit": {
                "author": {
                    "date": "2020-02-27T16:02:58Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-27T16:02:58Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Decref in wrappers where possible",
                "tree": {
                    "sha": "2e0782c4393e9425a9ab3ad4a3eb61cd1876348d",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/2e0782c4393e9425a9ab3ad4a3eb61cd1876348d"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/fcbdf908fabfedc49107f7f478cf45a0ebcaf58f",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/fcbdf908fabfedc49107f7f478cf45a0ebcaf58f",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZmNiZGY5MDhmYWJmZWRjNDkxMDdmN2Y0NzhjZjQ1YTBlYmNhZjU4Zg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/2935928304a9459d0732f5a42d3fd2b7ab293cd5",
                    "sha": "2935928304a9459d0732f5a42d3fd2b7ab293cd5",
                    "url": "https://api.github.com/repos/cython/cython/commits/2935928304a9459d0732f5a42d3fd2b7ab293cd5"
                }
            ],
            "sha": "fcbdf908fabfedc49107f7f478cf45a0ebcaf58f",
            "url": "https://api.github.com/repos/cython/cython/commits/fcbdf908fabfedc49107f7f478cf45a0ebcaf58f"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/fbe6ce71f4da2c85287c11a470aec0cce7a214e1/comments",
            "commit": {
                "author": {
                    "date": "2020-02-27T18:46:44Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-27T18:46:44Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Cleaning up more from review\n\nKeywords defined at the Code.py put_xxxref level.\n\nRemoved do_for_memoryview. Instead memoryview incref is specialized",
                "tree": {
                    "sha": "1905556ebfbc2fb594c097ca39c45ae6b19fe48e",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/1905556ebfbc2fb594c097ca39c45ae6b19fe48e"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/fbe6ce71f4da2c85287c11a470aec0cce7a214e1",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/fbe6ce71f4da2c85287c11a470aec0cce7a214e1",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6ZmJlNmNlNzFmNGRhMmM4NTI4N2MxMWE0NzBhZWMwY2NlN2EyMTRlMQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/fcbdf908fabfedc49107f7f478cf45a0ebcaf58f",
                    "sha": "fcbdf908fabfedc49107f7f478cf45a0ebcaf58f",
                    "url": "https://api.github.com/repos/cython/cython/commits/fcbdf908fabfedc49107f7f478cf45a0ebcaf58f"
                }
            ],
            "sha": "fbe6ce71f4da2c85287c11a470aec0cce7a214e1",
            "url": "https://api.github.com/repos/cython/cython/commits/fbe6ce71f4da2c85287c11a470aec0cce7a214e1"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/c5bf57527b69b7a14dc224495fda3fbb629e4dd2/comments",
            "commit": {
                "author": {
                    "date": "2020-02-27T20:48:43Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-27T20:48:43Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "Fixed missing keywords",
                "tree": {
                    "sha": "a02e380cc4ef6f9abd901fe3a5ddc364c2efd740",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/a02e380cc4ef6f9abd901fe3a5ddc364c2efd740"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/c5bf57527b69b7a14dc224495fda3fbb629e4dd2",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/c5bf57527b69b7a14dc224495fda3fbb629e4dd2",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6YzViZjU3NTI3YjY5YjdhMTRkYzIyNDQ5NWZkYTNmYmI2MjllNGRkMg==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/fbe6ce71f4da2c85287c11a470aec0cce7a214e1",
                    "sha": "fbe6ce71f4da2c85287c11a470aec0cce7a214e1",
                    "url": "https://api.github.com/repos/cython/cython/commits/fbe6ce71f4da2c85287c11a470aec0cce7a214e1"
                }
            ],
            "sha": "c5bf57527b69b7a14dc224495fda3fbb629e4dd2",
            "url": "https://api.github.com/repos/cython/cython/commits/c5bf57527b69b7a14dc224495fda3fbb629e4dd2"
        },
        {
            "author": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/26b673610717fb5dba159fe54c56013d1c624dba/comments",
            "commit": {
                "author": {
                    "date": "2020-02-28T08:06:05Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-02-28T08:06:05Z",
                    "email": "dw-git@d-woods.co.uk",
                    "name": "da-woods"
                },
                "message": "One further stray correction",
                "tree": {
                    "sha": "370b339c1261baa3ccda5e8d10bce1f8cff74ddc",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/370b339c1261baa3ccda5e8d10bce1f8cff74ddc"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/26b673610717fb5dba159fe54c56013d1c624dba",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "html_url": "https://github.com/cython/cython/commit/26b673610717fb5dba159fe54c56013d1c624dba",
            "node_id": "MDY6Q29tbWl0MzUzMjE5Njc6MjZiNjczNjEwNzE3ZmI1ZGJhMTU5ZmU1NGM1NjAxM2QxYzYyNGRiYQ==",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c5bf57527b69b7a14dc224495fda3fbb629e4dd2",
                    "sha": "c5bf57527b69b7a14dc224495fda3fbb629e4dd2",
                    "url": "https://api.github.com/repos/cython/cython/commits/c5bf57527b69b7a14dc224495fda3fbb629e4dd2"
                }
            ],
            "sha": "26b673610717fb5dba159fe54c56013d1c624dba",
            "url": "https://api.github.com/repos/cython/cython/commits/26b673610717fb5dba159fe54c56013d1c624dba"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/3377/commits",
    "created_at": "2020-02-25T15:57:28Z",
    "diff_url": "https://github.com/cython/cython/pull/3377.diff",
    "head": {
        "label": "da-woods:refcoutingreorg",
        "ref": "refcoutingreorg",
        "repo": {
            "archive_url": "https://api.github.com/repos/da-woods/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/da-woods/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/da-woods/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/da-woods/cython/branches{/branch}",
            "clone_url": "https://github.com/da-woods/cython.git",
            "collaborators_url": "https://api.github.com/repos/da-woods/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/da-woods/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/da-woods/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/da-woods/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/da-woods/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/da-woods/cython/contributors",
            "created_at": "2015-05-09T08:55:00Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/da-woods/cython/deployments",
            "description": "A Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/da-woods/cython/downloads",
            "events_url": "https://api.github.com/repos/da-woods/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/da-woods/cython/forks",
            "full_name": "da-woods/cython",
            "git_commits_url": "https://api.github.com/repos/da-woods/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/da-woods/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/da-woods/cython/git/tags{/sha}",
            "git_url": "git://github.com/da-woods/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://cython.org",
            "hooks_url": "https://api.github.com/repos/da-woods/cython/hooks",
            "html_url": "https://github.com/da-woods/cython",
            "id": 35321967,
            "issue_comment_url": "https://api.github.com/repos/da-woods/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/da-woods/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/da-woods/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/da-woods/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/da-woods/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/da-woods/cython/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/da-woods/cython/merges",
            "milestones_url": "https://api.github.com/repos/da-woods/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNTMyMTk2Nw==",
            "notifications_url": "https://api.github.com/repos/da-woods/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
                "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
                "followers_url": "https://api.github.com/users/da-woods/followers",
                "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
                "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/da-woods",
                "id": 10536947,
                "login": "da-woods",
                "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
                "organizations_url": "https://api.github.com/users/da-woods/orgs",
                "received_events_url": "https://api.github.com/users/da-woods/received_events",
                "repos_url": "https://api.github.com/users/da-woods/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/da-woods"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/da-woods/cython/pulls{/number}",
            "pushed_at": "2020-03-03T16:44:23Z",
            "releases_url": "https://api.github.com/repos/da-woods/cython/releases{/id}",
            "size": 57405,
            "ssh_url": "git@github.com:da-woods/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/da-woods/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/da-woods/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/da-woods/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/da-woods/cython/subscription",
            "svn_url": "https://github.com/da-woods/cython",
            "tags_url": "https://api.github.com/repos/da-woods/cython/tags",
            "teams_url": "https://api.github.com/repos/da-woods/cython/teams",
            "trees_url": "https://api.github.com/repos/da-woods/cython/git/trees{/sha}",
            "updated_at": "2019-10-24T09:38:07Z",
            "url": "https://api.github.com/repos/da-woods/cython",
            "watchers": 0,
            "watchers_count": 0
        },
        "sha": "26b673610717fb5dba159fe54c56013d1c624dba",
        "user": {
            "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
            "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
            "followers_url": "https://api.github.com/users/da-woods/followers",
            "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
            "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/da-woods",
            "id": 10536947,
            "login": "da-woods",
            "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
            "organizations_url": "https://api.github.com/users/da-woods/orgs",
            "received_events_url": "https://api.github.com/users/da-woods/received_events",
            "repos_url": "https://api.github.com/users/da-woods/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/da-woods"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/3377",
    "id": 379668376,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/3377",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "184833428f04e0e57825299a69d32d6686f47033",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc5NjY4Mzc2",
    "number": 3377,
    "patch_url": "https://github.com/cython/cython/pull/3377.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/3377/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/26b673610717fb5dba159fe54c56013d1c624dba",
    "title": "Make reference counting more generic",
    "updated_at": "2020-03-03T13:25:42Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/3377",
    "user": {
        "avatar_url": "https://avatars0.githubusercontent.com/u/10536947?v=4",
        "events_url": "https://api.github.com/users/da-woods/events{/privacy}",
        "followers_url": "https://api.github.com/users/da-woods/followers",
        "following_url": "https://api.github.com/users/da-woods/following{/other_user}",
        "gists_url": "https://api.github.com/users/da-woods/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/da-woods",
        "id": 10536947,
        "login": "da-woods",
        "node_id": "MDQ6VXNlcjEwNTM2OTQ3",
        "organizations_url": "https://api.github.com/users/da-woods/orgs",
        "received_events_url": "https://api.github.com/users/da-woods/received_events",
        "repos_url": "https://api.github.com/users/da-woods/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/da-woods/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/da-woods/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/da-woods"
    }
}