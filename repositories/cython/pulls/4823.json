{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/cython/cython/issues/4823/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4823/commits"
        },
        "html": {
            "href": "https://github.com/cython/cython/pull/4823"
        },
        "issue": {
            "href": "https://api.github.com/repos/cython/cython/issues/4823"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/cython/cython/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4823/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/cython/cython/pulls/4823"
        },
        "statuses": {
            "href": "https://api.github.com/repos/cython/cython/statuses/944b614a14b08f724ad13f0b7edcb043d51d6f3d"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "cython:0.29.x",
        "ref": "0.29.x",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cython/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cython/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cython/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cython/cython/branches{/branch}",
            "clone_url": "https://github.com/cython/cython.git",
            "collaborators_url": "https://api.github.com/repos/cython/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cython/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/cython/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cython/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cython/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cython/cython/contributors",
            "created_at": "2010-11-21T07:44:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cython/cython/deployments",
            "description": "The most widely used Python to C compiler",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cython/cython/downloads",
            "events_url": "https://api.github.com/repos/cython/cython/events",
            "fork": false,
            "forks": 1308,
            "forks_count": 1308,
            "forks_url": "https://api.github.com/repos/cython/cython/forks",
            "full_name": "cython/cython",
            "git_commits_url": "https://api.github.com/repos/cython/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cython/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cython/cython/git/tags{/sha}",
            "git_url": "git://github.com/cython/cython.git",
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://cython.org",
            "hooks_url": "https://api.github.com/repos/cython/cython/hooks",
            "html_url": "https://github.com/cython/cython",
            "id": 1099265,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cython/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cython/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cython/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/cython/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cython/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/cython/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/cython/cython/merges",
            "milestones_url": "https://api.github.com/repos/cython/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDk5MjY1",
            "notifications_url": "https://api.github.com/repos/cython/cython/notifications{?since,all,participating}",
            "open_issues": 1102,
            "open_issues_count": 1102,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
                "events_url": "https://api.github.com/users/cython/events{/privacy}",
                "followers_url": "https://api.github.com/users/cython/followers",
                "following_url": "https://api.github.com/users/cython/following{/other_user}",
                "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cython",
                "id": 486082,
                "login": "cython",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
                "organizations_url": "https://api.github.com/users/cython/orgs",
                "received_events_url": "https://api.github.com/users/cython/received_events",
                "repos_url": "https://api.github.com/users/cython/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/cython"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cython/cython/pulls{/number}",
            "pushed_at": "2022-07-04T08:30:12Z",
            "releases_url": "https://api.github.com/repos/cython/cython/releases{/id}",
            "size": 64226,
            "ssh_url": "git@github.com:cython/cython.git",
            "stargazers_count": 7130,
            "stargazers_url": "https://api.github.com/repos/cython/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/cython/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cython/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/cython/cython/subscription",
            "svn_url": "https://github.com/cython/cython",
            "tags_url": "https://api.github.com/repos/cython/cython/tags",
            "teams_url": "https://api.github.com/repos/cython/cython/teams",
            "topics": [
                "big-data",
                "c",
                "cpp",
                "cpython",
                "cpython-extensions",
                "cython",
                "performance",
                "python"
            ],
            "trees_url": "https://api.github.com/repos/cython/cython/git/trees{/sha}",
            "updated_at": "2022-07-04T09:23:31Z",
            "url": "https://api.github.com/repos/cython/cython",
            "visibility": "public",
            "watchers": 7130,
            "watchers_count": 7130,
            "web_commit_signoff_required": false
        },
        "sha": "c0dfb9c2f592b7e0ece90ec83fbadcf6e6da3d47",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/486082?v=4",
            "events_url": "https://api.github.com/users/cython/events{/privacy}",
            "followers_url": "https://api.github.com/users/cython/followers",
            "following_url": "https://api.github.com/users/cython/following{/other_user}",
            "gists_url": "https://api.github.com/users/cython/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cython",
            "id": 486082,
            "login": "cython",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4NjA4Mg==",
            "organizations_url": "https://api.github.com/users/cython/orgs",
            "received_events_url": "https://api.github.com/users/cython/received_events",
            "repos_url": "https://api.github.com/users/cython/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cython/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/cython"
        }
    },
    "body": "object means the argument is always non-NULL valid Python object, while\r\nPyObject* argument can be generally NULL. If the argument is indeed\r\npassed as NULL, and we declare it as object, generated code will crash\r\nwhile trying to incref it.\r\n\r\nQuoting https://github.com/cython/cython/issues/4822:\r\n\r\n    object.pxd currently declares `newfunc` as follows:\r\n\r\n    ```pyx\r\n    ctypedef object (*newfunc)(cpython.type.type, object, object)  # (type, args, kwargs)\r\n    ```\r\n\r\n    which implies that `args` and `kwargs` are always live objects and cannot be NULL.\r\n\r\n    However Python can, and does, call tp_new with either args=NULL, or kwargs=NULL or both. And in such cases this leads to segfault in automatically-generated __Pyx_INCREF for args or kw.\r\n\r\n    The fix is to change `object` to `PyObject*` for both args and kwargs.\r\n\r\n    Please see below for details:\r\n\r\n    ```cython\r\n    # cython: language_level=3\r\n    from cpython cimport newfunc, type as cpytype, Py_TYPE\r\n\r\n    cdef class X:\r\n        cdef int i\r\n        def __init__(self, i):\r\n            self.i = i\r\n        def __repr__(self):\r\n            return 'X(%d)' % self.i\r\n\r\n    cdef newfunc _orig_tp_new = Py_TYPE(X(0)).tp_new\r\n\r\n    cdef object _trace_tp_new(cpytype cls, object args, object kw):\r\n        print('_trace_tp_new', cls, args, kw)\r\n        return _orig_tp_new(cls, args, kw)\r\n\r\n    Py_TYPE(X(0)).tp_new = _trace_tp_new\r\n\r\n    x = X(123)\r\n    print(x)\r\n    ```\r\n\r\n    ```console\r\n    (neo) (py3.venv) (g.env) kirr@deca:~/src/tools/go/pygolang$ cythonize -i x.pyx\r\n    Compiling /home/kirr/src/tools/go/pygolang/x.pyx because it changed.\r\n    [1/1] Cythonizing /home/kirr/src/tools/go/pygolang/x.pyx\r\n    running build_ext\r\n    building 'x' extension\r\n    ...\r\n    x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -ffile-prefix-map=/build/python3.9-RNBry6/python3.9-3.9.2=. -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -ffile-prefix-map=/build/python3.9-RNBry6/python3.9-3.9.2=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/home/kirr/src/wendelin/venv/py3.venv/include -I/usr/include/python3.9 -c /home/kirr/src/tools/go/pygolang/x.c -o /home/kirr/src/tools/go/pygolang/tmpqkz1r96s/home/kirr/src/tools/go/pygolang/x.o\r\n    x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -g -fwrapv -O2 -Wl,-z,relro -g -fwrapv -O2 -g -ffile-prefix-map=/build/python3.9-RNBry6/python3.9-3.9.2=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 /home/kirr/src/tools/go/pygolang/tmpqkz1r96s/home/kirr/src/tools/go/pygolang/x.o -o /home/kirr/src/tools/go/pygolang/x.cpython-39-x86_64-linux-gnu.so\r\n    ```\r\n\r\n    ```console\r\n    (neo) (py3.venv) (g.env) kirr@deca:~/src/tools/go/pygolang$ python -c 'import x'\r\n    Ошибка сегментирования (стек памяти сброшен на диск)\r\n    ```\r\n\r\n    ```console\r\n    (neo) (py3.venv) (g.env) kirr@deca:~/src/tools/go/pygolang$ gdb python core\r\n    ...\r\n    Reading symbols from python...\r\n    Reading symbols from /usr/lib/debug/.build-id/f9/02f8a561c3abdb9c8d8c859d4243bd8c3f928f.debug...\r\n    [New LWP 218557]\r\n    [Thread debugging using libthread_db enabled]\r\n    Using host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n    Core was generated by `python -c import x'.\r\n    Program terminated with signal SIGSEGV, Segmentation fault.\r\n    #0  _Py_INCREF (op=0x0) at /usr/include/python3.9/object.h:408\r\n    408         op->ob_refcnt++;\r\n\r\n    (gdb) bt 5\r\n    #0  _Py_INCREF (op=0x0) at /usr/include/python3.9/object.h:408\r\n    #1  __pyx_f_1x__trace_tp_new (__pyx_v_cls=0x7f5ce75e6880 <__pyx_type_1x_X>, __pyx_v_args=(123,), __pyx_v_kw=0x0) at /home/kirr/src/tools/go/pygolang/x.c:1986\r\n    #2  0x000000000051dd7e in type_call (type=type@entry=0x7f5ce75e6880 <__pyx_type_1x_X>, args=args@entry=(123,), kwds=kwds@entry=0x0)\r\n        at ../Objects/typeobject.c:1014\r\n    #3  0x00007f5ce75df8d4 in __Pyx_PyObject_Call (func=<type at remote 0x7f5ce75e6880>, arg=(123,), kw=0x0) at /home/kirr/src/tools/go/pygolang/x.c:3414\r\n    #4  0x00007f5ce75df276 in __pyx_pymod_exec_x (__pyx_pyinit_module=<optimized out>) at /home/kirr/src/tools/go/pygolang/x.c:3017\r\n    (More stack frames follow...)\r\n\r\n    (gdb) f 1\r\n    #1  __pyx_f_1x__trace_tp_new (__pyx_v_cls=0x7f5ce75e6880 <__pyx_type_1x_X>, __pyx_v_args=(123,), __pyx_v_kw=0x0) at /home/kirr/src/tools/go/pygolang/x.c:1986\r\n    1986      __Pyx_INCREF(__pyx_v_kw);\r\n    ```\r\n\r\n-> Change newfunc signature to use PyObject* instead of object to fix it.\r\n\r\nWith this fix, and test example updates to account for object -> PyObject* change as follows ...\r\n\r\n    --- a/x.pyx.kirr\r\n    +++ b/x.pyx\r\n    @@ -1,5 +1,5 @@\r\n     # cython: language_level=3\r\n    -from cpython cimport newfunc, type as cpytype, Py_TYPE\r\n    +from cpython cimport newfunc, type as cpytype, Py_TYPE, PyObject\r\n\r\n     cdef class X:\r\n         cdef int i\r\n    @@ -10,8 +10,12 @@ cdef class X:\r\n\r\n     cdef newfunc _orig_tp_new = Py_TYPE(X(0)).tp_new\r\n\r\n    -cdef object _trace_tp_new(cpytype cls, object args, object kw):\r\n    -    print('_trace_tp_new', cls, args, kw)\r\n    +cdef object xobject(PyObject* x):\r\n    +    return \"null\"  if x == NULL  else \\\r\n    +           <object>x\r\n    +\r\n    +cdef object _trace_tp_new(cpytype cls, PyObject* args, PyObject* kw):\r\n    +    print('_trace_tp_new', cls, xobject(args), xobject(kw))\r\n         return _orig_tp_new(cls, args, kw)\r\n\r\n     Py_TYPE(X(0)).tp_new = _trace_tp_new\r\n\r\n... it works as expected without crashing:\r\n\r\n    $ python -c 'import x'\r\n    _trace_tp_new <type 'x.X'> (123,) null\r\n    X(123)\r\n\r\nFixes: https://github.com/cython/cython/issues/4822",
    "closed_at": "2022-07-03T11:08:41Z",
    "comment_data": [],
    "comments_url": "https://api.github.com/repos/cython/cython/issues/4823/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1794248?v=4",
                "events_url": "https://api.github.com/users/navytux/events{/privacy}",
                "followers_url": "https://api.github.com/users/navytux/followers",
                "following_url": "https://api.github.com/users/navytux/following{/other_user}",
                "gists_url": "https://api.github.com/users/navytux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/navytux",
                "id": 1794248,
                "login": "navytux",
                "node_id": "MDQ6VXNlcjE3OTQyNDg=",
                "organizations_url": "https://api.github.com/users/navytux/orgs",
                "received_events_url": "https://api.github.com/users/navytux/received_events",
                "repos_url": "https://api.github.com/users/navytux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/navytux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/navytux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/navytux"
            },
            "comments_url": "https://api.github.com/repos/cython/cython/commits/944b614a14b08f724ad13f0b7edcb043d51d6f3d/comments",
            "commit": {
                "author": {
                    "date": "2022-06-05T12:48:41Z",
                    "email": "kirr@nexedi.com",
                    "name": "Kirill Smelkov"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-06-05T12:48:41Z",
                    "email": "kirr@nexedi.com",
                    "name": "Kirill Smelkov"
                },
                "message": "includes/cpython: Fix newfunc to use PyObject* for args/kwargs instead of object\n\nobject means the argument is always non-NULL valid Python object, while\nPyObject* argument can be generally NULL. If the argument is indeed\npassed as NULL, and we declare it as object, generated code will crash\nwhile trying to incref it.\n\nQuoting https://github.com/cython/cython/issues/4822:\n\n    object.pxd currently declares `newfunc` as follows:\n\n    ```pyx\n    ctypedef object (*newfunc)(cpython.type.type, object, object)  # (type, args, kwargs)\n    ```\n\n    which implies that `args` and `kwargs` are always live objects and cannot be NULL.\n\n    However Python can, and does, call tp_new with either args=NULL, or kwargs=NULL or both. And in such cases this leads to segfault in automatically-generated __Pyx_INCREF for args or kw.\n\n    The fix is to change `object` to `PyObject*` for both args and kwargs.\n\n    Please see below for details:\n\n    ```cython\n    # cython: language_level=3\n    from cpython cimport newfunc, type as cpytype, Py_TYPE\n\n    cdef class X:\n        cdef int i\n        def __init__(self, i):\n            self.i = i\n        def __repr__(self):\n            return 'X(%d)' % self.i\n\n    cdef newfunc _orig_tp_new = Py_TYPE(X(0)).tp_new\n\n    cdef object _trace_tp_new(cpytype cls, object args, object kw):\n        print('_trace_tp_new', cls, args, kw)\n        return _orig_tp_new(cls, args, kw)\n\n    Py_TYPE(X(0)).tp_new = _trace_tp_new\n\n    x = X(123)\n    print(x)\n    ```\n\n    ```console\n    (neo) (py3.venv) (g.env) kirr@deca:~/src/tools/go/pygolang$ cythonize -i x.pyx\n    Compiling /home/kirr/src/tools/go/pygolang/x.pyx because it changed.\n    [1/1] Cythonizing /home/kirr/src/tools/go/pygolang/x.pyx\n    running build_ext\n    building 'x' extension\n    ...\n    x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -ffile-prefix-map=/build/python3.9-RNBry6/python3.9-3.9.2=. -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -ffile-prefix-map=/build/python3.9-RNBry6/python3.9-3.9.2=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/home/kirr/src/wendelin/venv/py3.venv/include -I/usr/include/python3.9 -c /home/kirr/src/tools/go/pygolang/x.c -o /home/kirr/src/tools/go/pygolang/tmpqkz1r96s/home/kirr/src/tools/go/pygolang/x.o\n    x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -g -fwrapv -O2 -Wl,-z,relro -g -fwrapv -O2 -g -ffile-prefix-map=/build/python3.9-RNBry6/python3.9-3.9.2=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 /home/kirr/src/tools/go/pygolang/tmpqkz1r96s/home/kirr/src/tools/go/pygolang/x.o -o /home/kirr/src/tools/go/pygolang/x.cpython-39-x86_64-linux-gnu.so\n    ```\n\n    ```console\n    (neo) (py3.venv) (g.env) kirr@deca:~/src/tools/go/pygolang$ python -c 'import x'\n    Ошибка сегментирования (стек памяти сброшен на диск)\n    ```\n\n    ```console\n    (neo) (py3.venv) (g.env) kirr@deca:~/src/tools/go/pygolang$ gdb python core\n    ...\n    Reading symbols from python...\n    Reading symbols from /usr/lib/debug/.build-id/f9/02f8a561c3abdb9c8d8c859d4243bd8c3f928f.debug...\n    [New LWP 218557]\n    [Thread debugging using libthread_db enabled]\n    Using host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n    Core was generated by `python -c import x'.\n    Program terminated with signal SIGSEGV, Segmentation fault.\n    #0  _Py_INCREF (op=0x0) at /usr/include/python3.9/object.h:408\n    408         op->ob_refcnt++;\n\n    (gdb) bt 5\n    #0  _Py_INCREF (op=0x0) at /usr/include/python3.9/object.h:408\n    #1  __pyx_f_1x__trace_tp_new (__pyx_v_cls=0x7f5ce75e6880 <__pyx_type_1x_X>, __pyx_v_args=(123,), __pyx_v_kw=0x0) at /home/kirr/src/tools/go/pygolang/x.c:1986\n    #2  0x000000000051dd7e in type_call (type=type@entry=0x7f5ce75e6880 <__pyx_type_1x_X>, args=args@entry=(123,), kwds=kwds@entry=0x0)\n        at ../Objects/typeobject.c:1014\n    #3  0x00007f5ce75df8d4 in __Pyx_PyObject_Call (func=<type at remote 0x7f5ce75e6880>, arg=(123,), kw=0x0) at /home/kirr/src/tools/go/pygolang/x.c:3414\n    #4  0x00007f5ce75df276 in __pyx_pymod_exec_x (__pyx_pyinit_module=<optimized out>) at /home/kirr/src/tools/go/pygolang/x.c:3017\n    (More stack frames follow...)\n\n    (gdb) f 1\n    #1  __pyx_f_1x__trace_tp_new (__pyx_v_cls=0x7f5ce75e6880 <__pyx_type_1x_X>, __pyx_v_args=(123,), __pyx_v_kw=0x0) at /home/kirr/src/tools/go/pygolang/x.c:1986\n    1986      __Pyx_INCREF(__pyx_v_kw);\n    ```\n\n-> Change newfunc signature to use PyObject* instead of object to fix it.\n\nWith this fix, and test example updates to account for object -> PyObject* change as follows ...\n\n    --- a/x.pyx.kirr\n    +++ b/x.pyx\n    @@ -1,5 +1,5 @@\n     # cython: language_level=3\n    -from cpython cimport newfunc, type as cpytype, Py_TYPE\n    +from cpython cimport newfunc, type as cpytype, Py_TYPE, PyObject\n\n     cdef class X:\n         cdef int i\n    @@ -10,8 +10,12 @@ cdef class X:\n\n     cdef newfunc _orig_tp_new = Py_TYPE(X(0)).tp_new\n\n    -cdef object _trace_tp_new(cpytype cls, object args, object kw):\n    -    print('_trace_tp_new', cls, args, kw)\n    +cdef object xobject(PyObject* x):\n    +    return \"null\"  if x == NULL  else \\\n    +           <object>x\n    +\n    +cdef object _trace_tp_new(cpytype cls, PyObject* args, PyObject* kw):\n    +    print('_trace_tp_new', cls, xobject(args), xobject(kw))\n         return _orig_tp_new(cls, args, kw)\n\n     Py_TYPE(X(0)).tp_new = _trace_tp_new\n\n... it works as expected without crashing:\n\n    $ python -c 'import x'\n    _trace_tp_new <type 'x.X'> (123,) null\n    X(123)\n\nFixes: https://github.com/cython/cython/issues/4822",
                "tree": {
                    "sha": "fd328b6c81f7020aebf697fc47a0334c002426ac",
                    "url": "https://api.github.com/repos/cython/cython/git/trees/fd328b6c81f7020aebf697fc47a0334c002426ac"
                },
                "url": "https://api.github.com/repos/cython/cython/git/commits/944b614a14b08f724ad13f0b7edcb043d51d6f3d",
                "verification": {
                    "payload": null,
                    "reason": "unsigned",
                    "signature": null,
                    "verified": false
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1794248?v=4",
                "events_url": "https://api.github.com/users/navytux/events{/privacy}",
                "followers_url": "https://api.github.com/users/navytux/followers",
                "following_url": "https://api.github.com/users/navytux/following{/other_user}",
                "gists_url": "https://api.github.com/users/navytux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/navytux",
                "id": 1794248,
                "login": "navytux",
                "node_id": "MDQ6VXNlcjE3OTQyNDg=",
                "organizations_url": "https://api.github.com/users/navytux/orgs",
                "received_events_url": "https://api.github.com/users/navytux/received_events",
                "repos_url": "https://api.github.com/users/navytux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/navytux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/navytux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/navytux"
            },
            "html_url": "https://github.com/cython/cython/commit/944b614a14b08f724ad13f0b7edcb043d51d6f3d",
            "node_id": "C_kwDOCnh2w9oAKDk0NGI2MTRhMTRiMDhmNzI0YWQxM2YwYjdlZGNiMDQzZDUxZDZmM2Q",
            "parents": [
                {
                    "html_url": "https://github.com/cython/cython/commit/c0dfb9c2f592b7e0ece90ec83fbadcf6e6da3d47",
                    "sha": "c0dfb9c2f592b7e0ece90ec83fbadcf6e6da3d47",
                    "url": "https://api.github.com/repos/cython/cython/commits/c0dfb9c2f592b7e0ece90ec83fbadcf6e6da3d47"
                }
            ],
            "sha": "944b614a14b08f724ad13f0b7edcb043d51d6f3d",
            "url": "https://api.github.com/repos/cython/cython/commits/944b614a14b08f724ad13f0b7edcb043d51d6f3d"
        }
    ],
    "commits_url": "https://api.github.com/repos/cython/cython/pulls/4823/commits",
    "created_at": "2022-06-05T13:00:07Z",
    "diff_url": "https://github.com/cython/cython/pull/4823.diff",
    "draft": false,
    "head": {
        "label": "navytux:y/newfunc",
        "ref": "y/newfunc",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/navytux/cython/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/navytux/cython/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/navytux/cython/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/navytux/cython/branches{/branch}",
            "clone_url": "https://github.com/navytux/cython.git",
            "collaborators_url": "https://api.github.com/repos/navytux/cython/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/navytux/cython/comments{/number}",
            "commits_url": "https://api.github.com/repos/navytux/cython/commits{/sha}",
            "compare_url": "https://api.github.com/repos/navytux/cython/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/navytux/cython/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/navytux/cython/contributors",
            "created_at": "2019-03-14T17:14:14Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/navytux/cython/deployments",
            "description": "kirr's Cython tree",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/navytux/cython/downloads",
            "events_url": "https://api.github.com/repos/navytux/cython/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/navytux/cython/forks",
            "full_name": "navytux/cython",
            "git_commits_url": "https://api.github.com/repos/navytux/cython/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/navytux/cython/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/navytux/cython/git/tags{/sha}",
            "git_url": "git://github.com/navytux/cython.git",
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://lab.nexedi.com/kirr/cython",
            "hooks_url": "https://api.github.com/repos/navytux/cython/hooks",
            "html_url": "https://github.com/navytux/cython",
            "id": 175666883,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/navytux/cython/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/navytux/cython/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/navytux/cython/issues{/number}",
            "keys_url": "https://api.github.com/repos/navytux/cython/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/navytux/cython/labels{/name}",
            "language": "Python",
            "languages_url": "https://api.github.com/repos/navytux/cython/languages",
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "node_id": "MDc6TGljZW5zZTI=",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0"
            },
            "merges_url": "https://api.github.com/repos/navytux/cython/merges",
            "milestones_url": "https://api.github.com/repos/navytux/cython/milestones{/number}",
            "mirror_url": null,
            "name": "cython",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzU2NjY4ODM=",
            "notifications_url": "https://api.github.com/repos/navytux/cython/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1794248?v=4",
                "events_url": "https://api.github.com/users/navytux/events{/privacy}",
                "followers_url": "https://api.github.com/users/navytux/followers",
                "following_url": "https://api.github.com/users/navytux/following{/other_user}",
                "gists_url": "https://api.github.com/users/navytux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/navytux",
                "id": 1794248,
                "login": "navytux",
                "node_id": "MDQ6VXNlcjE3OTQyNDg=",
                "organizations_url": "https://api.github.com/users/navytux/orgs",
                "received_events_url": "https://api.github.com/users/navytux/received_events",
                "repos_url": "https://api.github.com/users/navytux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/navytux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/navytux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/navytux"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/navytux/cython/pulls{/number}",
            "pushed_at": "2022-07-03T13:57:43Z",
            "releases_url": "https://api.github.com/repos/navytux/cython/releases{/id}",
            "size": 60998,
            "ssh_url": "git@github.com:navytux/cython.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/navytux/cython/stargazers",
            "statuses_url": "https://api.github.com/repos/navytux/cython/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/navytux/cython/subscribers",
            "subscription_url": "https://api.github.com/repos/navytux/cython/subscription",
            "svn_url": "https://github.com/navytux/cython",
            "tags_url": "https://api.github.com/repos/navytux/cython/tags",
            "teams_url": "https://api.github.com/repos/navytux/cython/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/navytux/cython/git/trees{/sha}",
            "updated_at": "2022-04-21T11:15:47Z",
            "url": "https://api.github.com/repos/navytux/cython",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "944b614a14b08f724ad13f0b7edcb043d51d6f3d",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1794248?v=4",
            "events_url": "https://api.github.com/users/navytux/events{/privacy}",
            "followers_url": "https://api.github.com/users/navytux/followers",
            "following_url": "https://api.github.com/users/navytux/following{/other_user}",
            "gists_url": "https://api.github.com/users/navytux/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/navytux",
            "id": 1794248,
            "login": "navytux",
            "node_id": "MDQ6VXNlcjE3OTQyNDg=",
            "organizations_url": "https://api.github.com/users/navytux/orgs",
            "received_events_url": "https://api.github.com/users/navytux/received_events",
            "repos_url": "https://api.github.com/users/navytux/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/navytux/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/navytux/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/navytux"
        }
    },
    "html_url": "https://github.com/cython/cython/pull/4823",
    "id": 958409293,
    "issue_url": "https://api.github.com/repos/cython/cython/issues/4823",
    "labels": [
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425553654,
            "name": "defect",
            "node_id": "MDU6TGFiZWw0MjU1NTM2NTQ=",
            "url": "https://api.github.com/repos/cython/cython/labels/defect"
        },
        {
            "color": "444444",
            "default": false,
            "description": null,
            "id": 425561823,
            "name": "Library",
            "node_id": "MDU6TGFiZWw0MjU1NjE4MjM=",
            "url": "https://api.github.com/repos/cython/cython/labels/Library"
        }
    ],
    "locked": false,
    "merge_commit_sha": "7c7890348625871e6442b4b1bbd6e3e0e7c38e73",
    "merged_at": "2022-07-03T11:08:41Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 619,
        "created_at": "2018-08-18T06:33:08Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/491659?v=4",
            "events_url": "https://api.github.com/users/scoder/events{/privacy}",
            "followers_url": "https://api.github.com/users/scoder/followers",
            "following_url": "https://api.github.com/users/scoder/following{/other_user}",
            "gists_url": "https://api.github.com/users/scoder/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/scoder",
            "id": 491659,
            "login": "scoder",
            "node_id": "MDQ6VXNlcjQ5MTY1OQ==",
            "organizations_url": "https://api.github.com/users/scoder/orgs",
            "received_events_url": "https://api.github.com/users/scoder/received_events",
            "repos_url": "https://api.github.com/users/scoder/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/scoder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scoder/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/scoder"
        },
        "description": "Goals:\r\n– New version scheme: 3.x instead of 0.x.\r\n– Change default `language_level` from `2` to `3`.\r\n– Change default for `binding` directive from `False` to `True`.\r\n– Fix some Python compatibility issues (if possible, allowing for breaking changes).\r\n",
        "due_on": null,
        "html_url": "https://github.com/cython/cython/milestone/58",
        "id": 3580387,
        "labels_url": "https://api.github.com/repos/cython/cython/milestones/58/labels",
        "node_id": "MDk6TWlsZXN0b25lMzU4MDM4Nw==",
        "number": 58,
        "open_issues": 40,
        "state": "open",
        "title": "3.0",
        "updated_at": "2022-07-04T08:27:34Z",
        "url": "https://api.github.com/repos/cython/cython/milestones/58"
    },
    "node_id": "PR_kwDOABDGAc45ICpN",
    "number": 4823,
    "patch_url": "https://github.com/cython/cython/pull/4823.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/cython/cython/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/cython/cython/pulls/4823/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/cython/cython/statuses/944b614a14b08f724ad13f0b7edcb043d51d6f3d",
    "title": "includes/cpython: Fix newfunc to use PyObject* for args/kwargs instead of object",
    "updated_at": "2022-07-04T08:27:34Z",
    "url": "https://api.github.com/repos/cython/cython/pulls/4823",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1794248?v=4",
        "events_url": "https://api.github.com/users/navytux/events{/privacy}",
        "followers_url": "https://api.github.com/users/navytux/followers",
        "following_url": "https://api.github.com/users/navytux/following{/other_user}",
        "gists_url": "https://api.github.com/users/navytux/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/navytux",
        "id": 1794248,
        "login": "navytux",
        "node_id": "MDQ6VXNlcjE3OTQyNDg=",
        "organizations_url": "https://api.github.com/users/navytux/orgs",
        "received_events_url": "https://api.github.com/users/navytux/received_events",
        "repos_url": "https://api.github.com/users/navytux/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/navytux/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/navytux/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/navytux"
    }
}